/*
***REMOVED******REMOVED***@license
	Rollup.js***REMOVED***v3.29.4
	Sat,***REMOVED***21***REMOVED***Sep***REMOVED***2024***REMOVED***06:29:06***REMOVED***GMT***REMOVED***-***REMOVED***commit***REMOVED***2ef77c00ec2635d42697cff2c0567ccc8db34fb4

	https://github.com/rollup/rollup

	Released***REMOVED***under***REMOVED***the***REMOVED***MIT***REMOVED***License.
*/
'use***REMOVED***strict';

const***REMOVED***process$1***REMOVED***=***REMOVED***require('node:process');
const***REMOVED***tty***REMOVED***=***REMOVED***require('tty');
const***REMOVED***node_path***REMOVED***=***REMOVED***require('node:path');
const***REMOVED***require$$0$1***REMOVED***=***REMOVED***require('path');
const***REMOVED***node_perf_hooks***REMOVED***=***REMOVED***require('node:perf_hooks');
const***REMOVED***node_crypto***REMOVED***=***REMOVED***require('node:crypto');
const***REMOVED***promises***REMOVED***=***REMOVED***require('node:fs/promises');

function***REMOVED***_interopNamespaceDefault(e)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***Object.create(null,***REMOVED***{***REMOVED***[Symbol.toStringTag]:***REMOVED***{***REMOVED***value:***REMOVED***'Module'***REMOVED***}***REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***k***REMOVED***in***REMOVED***e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n[k]***REMOVED***=***REMOVED***e[k];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***n.default***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED***return***REMOVED***n;
}

const***REMOVED***tty__namespace***REMOVED***=***REMOVED***/*#__PURE__*/_interopNamespaceDefault(tty);

var***REMOVED***version$1***REMOVED***=***REMOVED***"3.29.4";

function***REMOVED***ensureArray$1(items)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(items))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***items.filter(Boolean);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(items)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[items];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
}

var***REMOVED***BuildPhase;
(function***REMOVED***(BuildPhase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***BuildPhase[BuildPhase["LOAD_AND_PARSE"]***REMOVED***=***REMOVED***0]***REMOVED***=***REMOVED***"LOAD_AND_PARSE";
***REMOVED******REMOVED******REMOVED******REMOVED***BuildPhase[BuildPhase["ANALYSE"]***REMOVED***=***REMOVED***1]***REMOVED***=***REMOVED***"ANALYSE";
***REMOVED******REMOVED******REMOVED******REMOVED***BuildPhase[BuildPhase["GENERATE"]***REMOVED***=***REMOVED***2]***REMOVED***=***REMOVED***"GENERATE";
})(BuildPhase***REMOVED***||***REMOVED***(BuildPhase***REMOVED***=***REMOVED***{}));

const***REMOVED***createHash***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***node_crypto.createHash('sha256');

function***REMOVED***getOrCreate(map,***REMOVED***key,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existing***REMOVED***=***REMOVED***map.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***existing;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***init();
***REMOVED******REMOVED******REMOVED******REMOVED***map.set(key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
}
function***REMOVED***getNewSet()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Set();
}
function***REMOVED***getNewArray()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
}

const***REMOVED***chars$1***REMOVED***=***REMOVED***'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';
const***REMOVED***base$1***REMOVED***=***REMOVED***64;
function***REMOVED***toBase64(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***outString***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentDigit***REMOVED***=***REMOVED***value***REMOVED***%***REMOVED***base$1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***(value***REMOVED***/***REMOVED***base$1)***REMOVED***|***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outString***REMOVED***=***REMOVED***chars$1[currentDigit]***REMOVED***+***REMOVED***outString;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(value***REMOVED***!==***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***outString;
}

/*****REMOVED***@typedef***REMOVED***{import('./types').Location}***REMOVED***Location***REMOVED****/

/**
***REMOVED*******REMOVED***@param***REMOVED***{import('./types').Range}***REMOVED***range
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***index
***REMOVED****/
function***REMOVED***rangeContains(range,***REMOVED***index)***REMOVED***{
	return***REMOVED***range.start***REMOVED***<=***REMOVED***index***REMOVED***&&***REMOVED***index***REMOVED***<***REMOVED***range.end;
}

/**
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***source
***REMOVED*******REMOVED***@param***REMOVED***{import('./types').Options}***REMOVED***[options]
***REMOVED****/
function***REMOVED***getLocator$1(source,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
	const***REMOVED***{***REMOVED***offsetLine***REMOVED***=***REMOVED***0,***REMOVED***offsetColumn***REMOVED***=***REMOVED***0***REMOVED***}***REMOVED***=***REMOVED***options;

	let***REMOVED***start***REMOVED***=***REMOVED***0;
	const***REMOVED***ranges***REMOVED***=***REMOVED***source.split('\n').map((line,***REMOVED***i)***REMOVED***=>***REMOVED***{
		const***REMOVED***end***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***line.length***REMOVED***+***REMOVED***1;

		/*****REMOVED***@type***REMOVED***{import('./types').Range}***REMOVED****/
		const***REMOVED***range***REMOVED***=***REMOVED***{***REMOVED***start,***REMOVED***end,***REMOVED***line:***REMOVED***i***REMOVED***};

		start***REMOVED***=***REMOVED***end;
		return***REMOVED***range;
	});

	let***REMOVED***i***REMOVED***=***REMOVED***0;

	/**
	***REMOVED*******REMOVED***@param***REMOVED***{string***REMOVED***|***REMOVED***number}***REMOVED***search
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[index]
	***REMOVED*******REMOVED***@returns***REMOVED***{Location***REMOVED***|***REMOVED***undefined}
	***REMOVED****/
	function***REMOVED***locator(search,***REMOVED***index)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***search***REMOVED***===***REMOVED***'string')***REMOVED***{
			search***REMOVED***=***REMOVED***source.indexOf(search,***REMOVED***index***REMOVED***??***REMOVED***0);
		}

		if***REMOVED***(search***REMOVED***===***REMOVED***-1)***REMOVED***return***REMOVED***undefined;

		let***REMOVED***range***REMOVED***=***REMOVED***ranges[i];

		const***REMOVED***d***REMOVED***=***REMOVED***search***REMOVED***>=***REMOVED***range.end***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***-1;

		while***REMOVED***(range)***REMOVED***{
			if***REMOVED***(rangeContains(range,***REMOVED***search))***REMOVED***{
				return***REMOVED***{
					line:***REMOVED***offsetLine***REMOVED***+***REMOVED***range.line,
					column:***REMOVED***offsetColumn***REMOVED***+***REMOVED***search***REMOVED***-***REMOVED***range.start,
					character:***REMOVED***search
				};
			}

			i***REMOVED***+=***REMOVED***d;
			range***REMOVED***=***REMOVED***ranges[i];
		}
	}

	return***REMOVED***locator;
}

/**
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***source
***REMOVED*******REMOVED***@param***REMOVED***{string***REMOVED***|***REMOVED***number}***REMOVED***search
***REMOVED*******REMOVED***@param***REMOVED***{import('./types').Options}***REMOVED***[options]
***REMOVED*******REMOVED***@returns***REMOVED***{Location***REMOVED***|***REMOVED***undefined}
***REMOVED****/
function***REMOVED***locate(source,***REMOVED***search,***REMOVED***options)***REMOVED***{
	return***REMOVED***getLocator$1(source,***REMOVED***options)(search,***REMOVED***options***REMOVED***&&***REMOVED***options.startIndex);
}

function***REMOVED***spaces(index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(index--)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***+=***REMOVED***'***REMOVED***';
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
}
function***REMOVED***tabsToSpaces(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.replace(/^\t+/,***REMOVED***match***REMOVED***=>***REMOVED***match.split('\t').join('***REMOVED******REMOVED***'));
}
const***REMOVED***LINE_TRUNCATE_LENGTH***REMOVED***=***REMOVED***120;
const***REMOVED***MIN_CHARACTERS_SHOWN_AFTER_LOCATION***REMOVED***=***REMOVED***10;
const***REMOVED***ELLIPSIS***REMOVED***=***REMOVED***'...';
function***REMOVED***getCodeFrame(source,***REMOVED***line,***REMOVED***column)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lines***REMOVED***=***REMOVED***source.split('\n');
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Needed***REMOVED***if***REMOVED***a***REMOVED***plugin***REMOVED***did***REMOVED***not***REMOVED***generate***REMOVED***correct***REMOVED***sourcemaps
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(line***REMOVED***>***REMOVED***lines.length)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxLineLength***REMOVED***=***REMOVED***Math.max(tabsToSpaces(lines[line***REMOVED***-***REMOVED***1].slice(0,***REMOVED***column)).length***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***MIN_CHARACTERS_SHOWN_AFTER_LOCATION***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ELLIPSIS.length,***REMOVED***LINE_TRUNCATE_LENGTH);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***frameStart***REMOVED***=***REMOVED***Math.max(0,***REMOVED***line***REMOVED***-***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***frameEnd***REMOVED***=***REMOVED***Math.min(line***REMOVED***+***REMOVED***2,***REMOVED***lines.length);
***REMOVED******REMOVED******REMOVED******REMOVED***lines***REMOVED***=***REMOVED***lines.slice(frameStart,***REMOVED***frameEnd);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!/\S/.test(lines[lines.length***REMOVED***-***REMOVED***1]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lines.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***frameEnd***REMOVED***-=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***digits***REMOVED***=***REMOVED***String(frameEnd).length;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lines
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((sourceLine,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isErrorLine***REMOVED***=***REMOVED***frameStart***REMOVED***+***REMOVED***index***REMOVED***+***REMOVED***1***REMOVED***===***REMOVED***line;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lineNumber***REMOVED***=***REMOVED***String(index***REMOVED***+***REMOVED***frameStart***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(lineNumber.length***REMOVED***<***REMOVED***digits)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineNumber***REMOVED***=***REMOVED***`***REMOVED***${lineNumber}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***displayedLine***REMOVED***=***REMOVED***tabsToSpaces(sourceLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(displayedLine.length***REMOVED***>***REMOVED***maxLineLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***displayedLine***REMOVED***=***REMOVED***`${displayedLine.slice(0,***REMOVED***maxLineLength***REMOVED***-***REMOVED***ELLIPSIS.length)}${ELLIPSIS}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isErrorLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***indicator***REMOVED***=***REMOVED***spaces(digits***REMOVED***+***REMOVED***2***REMOVED***+***REMOVED***tabsToSpaces(sourceLine.slice(0,***REMOVED***column)).length)***REMOVED***+***REMOVED***'^';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${lineNumber}:***REMOVED***${displayedLine}\n${indicator}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${lineNumber}:***REMOVED***${displayedLine}`;
***REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join('\n');
}

const***REMOVED***LOGLEVEL_SILENT***REMOVED***=***REMOVED***'silent';
const***REMOVED***LOGLEVEL_ERROR***REMOVED***=***REMOVED***'error';
const***REMOVED***LOGLEVEL_WARN***REMOVED***=***REMOVED***'warn';
const***REMOVED***LOGLEVEL_INFO***REMOVED***=***REMOVED***'info';
const***REMOVED***LOGLEVEL_DEBUG***REMOVED***=***REMOVED***'debug';
const***REMOVED***logLevelPriority***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[LOGLEVEL_DEBUG]:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***[LOGLEVEL_INFO]:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***[LOGLEVEL_SILENT]:***REMOVED***3,
***REMOVED******REMOVED******REMOVED******REMOVED***[LOGLEVEL_WARN]:***REMOVED***2
};

const***REMOVED***ABSOLUTE_PATH_REGEX***REMOVED***=***REMOVED***/^(?:\/|(?:[A-Za-z]:)?[/\\|])/;
const***REMOVED***RELATIVE_PATH_REGEX***REMOVED***=***REMOVED***/^\.?\.(\/|$)/;
function***REMOVED***isAbsolute(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ABSOLUTE_PATH_REGEX.test(path);
}
function***REMOVED***isRelative(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***RELATIVE_PATH_REGEX.test(path);
}
const***REMOVED***BACKSLASH_REGEX***REMOVED***=***REMOVED***/\\/g;
function***REMOVED***normalize(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.replace(BACKSLASH_REGEX,***REMOVED***'/');
}

function***REMOVED***printQuotedStringList(list,***REMOVED***verbs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSingleItem***REMOVED***=***REMOVED***list.length***REMOVED***<=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***quotedList***REMOVED***=***REMOVED***list.map(item***REMOVED***=>***REMOVED***`"${item}"`);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***isSingleItem
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***quotedList[0]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${quotedList.slice(0,***REMOVED***-1).join(',***REMOVED***')}***REMOVED***and***REMOVED***${quotedList.slice(-1)[0]}`;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(verbs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***+=***REMOVED***`***REMOVED***${isSingleItem***REMOVED***?***REMOVED***verbs[0]***REMOVED***:***REMOVED***verbs[1]}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***output;
}

const***REMOVED***ANY_SLASH_REGEX***REMOVED***=***REMOVED***/[/\\]/;
function***REMOVED***relative(from,***REMOVED***to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fromParts***REMOVED***=***REMOVED***from.split(ANY_SLASH_REGEX).filter(Boolean);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toParts***REMOVED***=***REMOVED***to.split(ANY_SLASH_REGEX).filter(Boolean);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fromParts[0]***REMOVED***===***REMOVED***'.')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromParts.shift();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(toParts[0]***REMOVED***===***REMOVED***'.')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toParts.shift();
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(fromParts[0]***REMOVED***&&***REMOVED***toParts[0]***REMOVED***&&***REMOVED***fromParts[0]***REMOVED***===***REMOVED***toParts[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromParts.shift();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toParts.shift();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(toParts[0]***REMOVED***===***REMOVED***'..'***REMOVED***&&***REMOVED***fromParts.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toParts.shift();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromParts.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(fromParts.pop())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toParts.unshift('..');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***toParts.join('/');
}

function***REMOVED***getAliasName(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***node_path.basename(id);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***base.slice(0,***REMOVED***Math.max(0,***REMOVED***base.length***REMOVED***-***REMOVED***node_path.extname(id).length));
}
function***REMOVED***relativeId(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isAbsolute(id))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***relative(node_path.resolve(),***REMOVED***id);
}
function***REMOVED***isPathFragment(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***starting***REMOVED***with***REMOVED***"/",***REMOVED***"./",***REMOVED***"../",***REMOVED***"C:/"
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(name[0]***REMOVED***===***REMOVED***'/'***REMOVED***||***REMOVED***(name[0]***REMOVED***===***REMOVED***'.'***REMOVED***&&***REMOVED***(name[1]***REMOVED***===***REMOVED***'/'***REMOVED***||***REMOVED***name[1]***REMOVED***===***REMOVED***'.'))***REMOVED***||***REMOVED***isAbsolute(name));
}
const***REMOVED***UPPER_DIR_REGEX***REMOVED***=***REMOVED***/^(\.\.\/)*\.\.$/;
function***REMOVED***getImportPath(importerId,***REMOVED***targetPath,***REMOVED***stripJsExtension,***REMOVED***ensureFileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(targetPath.startsWith('../'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***targetPath***REMOVED***=***REMOVED***targetPath.slice(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importerId***REMOVED***=***REMOVED***'_/'***REMOVED***+***REMOVED***importerId;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***relativePath***REMOVED***=***REMOVED***normalize(relative(node_path.dirname(importerId),***REMOVED***targetPath));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stripJsExtension***REMOVED***&&***REMOVED***relativePath.endsWith('.js'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relativePath***REMOVED***=***REMOVED***relativePath.slice(0,***REMOVED***-3);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ensureFileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(relativePath***REMOVED***===***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'../'***REMOVED***+***REMOVED***node_path.basename(targetPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(UPPER_DIR_REGEX.test(relativePath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...relativePath.split('/'),***REMOVED***'..',***REMOVED***node_path.basename(targetPath)].join('/');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***relativePath***REMOVED***?***REMOVED***(relativePath.startsWith('..')***REMOVED***?***REMOVED***relativePath***REMOVED***:***REMOVED***'./'***REMOVED***+***REMOVED***relativePath)***REMOVED***:***REMOVED***'.';
}

function***REMOVED***isValidUrl(url)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***URL(url);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***getRollupUrl(snippet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`https://rollupjs.org/${snippet}`;
}
function***REMOVED***addTrailingSlashIfMissed(url)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!url.endsWith('/'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***url***REMOVED***+***REMOVED***'/';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***url;
}

//***REMOVED***troubleshooting
const***REMOVED***URL_AVOIDING_EVAL***REMOVED***=***REMOVED***'troubleshooting/#avoiding-eval';
const***REMOVED***URL_NAME_IS_NOT_EXPORTED***REMOVED***=***REMOVED***'troubleshooting/#error-name-is-not-exported-by-module';
const***REMOVED***URL_THIS_IS_UNDEFINED***REMOVED***=***REMOVED***'troubleshooting/#error-this-is-undefined';
const***REMOVED***URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY***REMOVED***=***REMOVED***'troubleshooting/#warning-treating-module-as-external-dependency';
const***REMOVED***URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT***REMOVED***=***REMOVED***'troubleshooting/#warning-sourcemap-is-likely-to-be-incorrect';
//***REMOVED***configuration-options
const***REMOVED***URL_MAXPARALLELFILEOPS***REMOVED***=***REMOVED***'configuration-options/#maxparallelfileops';
const***REMOVED***URL_OUTPUT_AMD_ID***REMOVED***=***REMOVED***'configuration-options/#output-amd-id';
const***REMOVED***URL_OUTPUT_AMD_BASEPATH***REMOVED***=***REMOVED***'configuration-options/#output-amd-basepath';
const***REMOVED***URL_OUTPUT_DIR***REMOVED***=***REMOVED***'configuration-options/#output-dir';
const***REMOVED***URL_OUTPUT_DYNAMICIMPORTFUNCTION***REMOVED***=***REMOVED***'configuration-options/#output-dynamicimportfunction';
const***REMOVED***URL_OUTPUT_EXPORTS***REMOVED***=***REMOVED***'configuration-options/#output-exports';
const***REMOVED***URL_OUTPUT_EXTEND***REMOVED***=***REMOVED***'configuration-options/#output-extend';
const***REMOVED***URL_OUTPUT_FORMAT***REMOVED***=***REMOVED***'configuration-options/#output-format';
const***REMOVED***URL_OUTPUT_GENERATEDCODE***REMOVED***=***REMOVED***'configuration-options/#output-generatedcode';
const***REMOVED***URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION***REMOVED***=***REMOVED***'configuration-options/#output-experimentaldeepdynamicchunkoptimization';
const***REMOVED***URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS***REMOVED***=***REMOVED***'configuration-options/#output-generatedcode-constbindings';
const***REMOVED***URL_OUTPUT_GENERATEDCODE_SYMBOLS***REMOVED***=***REMOVED***'configuration-options/#output-generatedcode-symbols';
const***REMOVED***URL_OUTPUT_GLOBALS***REMOVED***=***REMOVED***'configuration-options/#output-globals';
const***REMOVED***URL_OUTPUT_INLINEDYNAMICIMPORTS***REMOVED***=***REMOVED***'configuration-options/#output-inlinedynamicimports';
const***REMOVED***URL_OUTPUT_INTEROP***REMOVED***=***REMOVED***'configuration-options/#output-interop';
const***REMOVED***URL_OUTPUT_MANUALCHUNKS***REMOVED***=***REMOVED***'configuration-options/#output-manualchunks';
const***REMOVED***URL_OUTPUT_NAME***REMOVED***=***REMOVED***'configuration-options/#output-name';
const***REMOVED***URL_OUTPUT_PRESERVEMODULES***REMOVED***=***REMOVED***'configuration-options/#output-preservemodules';
const***REMOVED***URL_OUTPUT_SOURCEMAPBASEURL***REMOVED***=***REMOVED***'configuration-options/#output-sourcemapbaseurl';
const***REMOVED***URL_OUTPUT_SOURCEMAPFILE***REMOVED***=***REMOVED***'configuration-options/#output-sourcemapfile';
const***REMOVED***URL_PRESERVEENTRYSIGNATURES***REMOVED***=***REMOVED***'configuration-options/#preserveentrysignatures';
const***REMOVED***URL_TREESHAKE***REMOVED***=***REMOVED***'configuration-options/#treeshake';
const***REMOVED***URL_TREESHAKE_MODULESIDEEFFECTS***REMOVED***=***REMOVED***'configuration-options/#treeshake-modulesideeffects';
const***REMOVED***URL_WATCH***REMOVED***=***REMOVED***'configuration-options/#watch';
//***REMOVED***command-line-interface
const***REMOVED***URL_BUNDLE_CONFIG_AS_CJS***REMOVED***=***REMOVED***'command-line-interface/#bundleconfigascjs';
const***REMOVED***URL_CONFIGURATION_FILES***REMOVED***=***REMOVED***'command-line-interface/#configuration-files';
const***REMOVED***URL_RENDERDYNAMICIMPORT***REMOVED***=***REMOVED***'plugin-development/#renderdynamicimport';
const***REMOVED***URL_THIS_GETMODULEIDS***REMOVED***=***REMOVED***'plugin-development/#this-getmoduleids';
const***REMOVED***URL_THIS_GETMODULEINFO***REMOVED***=***REMOVED***'plugin-development/#this-getmoduleinfo';

function***REMOVED***error(base)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(base***REMOVED***instanceof***REMOVED***Error))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***Object.assign(new***REMOVED***Error(base.message),***REMOVED***base);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(base,***REMOVED***'name',***REMOVED***{***REMOVED***value:***REMOVED***'RollupError'***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***base;
}
function***REMOVED***augmentCodeLocation(properties,***REMOVED***pos,***REMOVED***source,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***pos***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***line,***REMOVED***column***REMOVED***}***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.loc***REMOVED***=***REMOVED***{***REMOVED***column,***REMOVED***file:***REMOVED***id,***REMOVED***line***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.pos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***line,***REMOVED***column***REMOVED***}***REMOVED***=***REMOVED***locate(source,***REMOVED***pos,***REMOVED***{***REMOVED***offsetLine:***REMOVED***1***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.loc***REMOVED***=***REMOVED***{***REMOVED***column,***REMOVED***file:***REMOVED***id,***REMOVED***line***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties.frame***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***line,***REMOVED***column***REMOVED***}***REMOVED***=***REMOVED***properties.loc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.frame***REMOVED***=***REMOVED***getCodeFrame(source,***REMOVED***line,***REMOVED***column);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
//***REMOVED***Error***REMOVED***codes***REMOVED***should***REMOVED***be***REMOVED***sorted***REMOVED***alphabetically***REMOVED***while***REMOVED***errors***REMOVED***should***REMOVED***be***REMOVED***sorted***REMOVED***by
//***REMOVED***error***REMOVED***code***REMOVED***below
const***REMOVED***ADDON_ERROR***REMOVED***=***REMOVED***'ADDON_ERROR',***REMOVED***ALREADY_CLOSED***REMOVED***=***REMOVED***'ALREADY_CLOSED',***REMOVED***AMBIGUOUS_EXTERNAL_NAMESPACES***REMOVED***=***REMOVED***'AMBIGUOUS_EXTERNAL_NAMESPACES',***REMOVED***ANONYMOUS_PLUGIN_CACHE***REMOVED***=***REMOVED***'ANONYMOUS_PLUGIN_CACHE',***REMOVED***ASSET_NOT_FINALISED***REMOVED***=***REMOVED***'ASSET_NOT_FINALISED',***REMOVED***ASSET_NOT_FOUND***REMOVED***=***REMOVED***'ASSET_NOT_FOUND',***REMOVED***ASSET_SOURCE_ALREADY_SET***REMOVED***=***REMOVED***'ASSET_SOURCE_ALREADY_SET',***REMOVED***ASSET_SOURCE_MISSING***REMOVED***=***REMOVED***'ASSET_SOURCE_MISSING',***REMOVED***BAD_LOADER***REMOVED***=***REMOVED***'BAD_LOADER',***REMOVED***CANNOT_CALL_NAMESPACE***REMOVED***=***REMOVED***'CANNOT_CALL_NAMESPACE',***REMOVED***CANNOT_EMIT_FROM_OPTIONS_HOOK***REMOVED***=***REMOVED***'CANNOT_EMIT_FROM_OPTIONS_HOOK',***REMOVED***CHUNK_NOT_GENERATED***REMOVED***=***REMOVED***'CHUNK_NOT_GENERATED',***REMOVED***CHUNK_INVALID***REMOVED***=***REMOVED***'CHUNK_INVALID',***REMOVED***CIRCULAR_DEPENDENCY***REMOVED***=***REMOVED***'CIRCULAR_DEPENDENCY',***REMOVED***CIRCULAR_REEXPORT***REMOVED***=***REMOVED***'CIRCULAR_REEXPORT',***REMOVED***CYCLIC_CROSS_CHUNK_REEXPORT***REMOVED***=***REMOVED***'CYCLIC_CROSS_CHUNK_REEXPORT',***REMOVED***DEPRECATED_FEATURE***REMOVED***=***REMOVED***'DEPRECATED_FEATURE',***REMOVED***DUPLICATE_IMPORT_OPTIONS***REMOVED***=***REMOVED***'DUPLICATE_IMPORT_OPTIONS',***REMOVED***DUPLICATE_PLUGIN_NAME***REMOVED***=***REMOVED***'DUPLICATE_PLUGIN_NAME',***REMOVED***EMPTY_BUNDLE***REMOVED***=***REMOVED***'EMPTY_BUNDLE',***REMOVED***EVAL***REMOVED***=***REMOVED***'EVAL',***REMOVED***EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS***REMOVED***=***REMOVED***'EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS',***REMOVED***EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES***REMOVED***=***REMOVED***'EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES',***REMOVED***EXTERNAL_SYNTHETIC_EXPORTS***REMOVED***=***REMOVED***'EXTERNAL_SYNTHETIC_EXPORTS',***REMOVED***FAIL_AFTER_WARNINGS***REMOVED***=***REMOVED***'FAIL_AFTER_WARNINGS',***REMOVED***FILE_NAME_CONFLICT***REMOVED***=***REMOVED***'FILE_NAME_CONFLICT',***REMOVED***FILE_NOT_FOUND***REMOVED***=***REMOVED***'FILE_NOT_FOUND',***REMOVED***FIRST_SIDE_EFFECT***REMOVED***=***REMOVED***'FIRST_SIDE_EFFECT',***REMOVED***ILLEGAL_IDENTIFIER_AS_NAME***REMOVED***=***REMOVED***'ILLEGAL_IDENTIFIER_AS_NAME',***REMOVED***ILLEGAL_REASSIGNMENT***REMOVED***=***REMOVED***'ILLEGAL_REASSIGNMENT',***REMOVED***INCONSISTENT_IMPORT_ASSERTIONS***REMOVED***=***REMOVED***'INCONSISTENT_IMPORT_ASSERTIONS',***REMOVED***INPUT_HOOK_IN_OUTPUT_PLUGIN***REMOVED***=***REMOVED***'INPUT_HOOK_IN_OUTPUT_PLUGIN',***REMOVED***INVALID_CHUNK***REMOVED***=***REMOVED***'INVALID_CHUNK',***REMOVED***INVALID_CONFIG_MODULE_FORMAT***REMOVED***=***REMOVED***'INVALID_CONFIG_MODULE_FORMAT',***REMOVED***INVALID_EXPORT_OPTION***REMOVED***=***REMOVED***'INVALID_EXPORT_OPTION',***REMOVED***INVALID_EXTERNAL_ID***REMOVED***=***REMOVED***'INVALID_EXTERNAL_ID',***REMOVED***INVALID_LOG_POSITION***REMOVED***=***REMOVED***'INVALID_LOG_POSITION',***REMOVED***INVALID_OPTION***REMOVED***=***REMOVED***'INVALID_OPTION',***REMOVED***INVALID_PLUGIN_HOOK***REMOVED***=***REMOVED***'INVALID_PLUGIN_HOOK',***REMOVED***INVALID_ROLLUP_PHASE***REMOVED***=***REMOVED***'INVALID_ROLLUP_PHASE',***REMOVED***INVALID_SETASSETSOURCE***REMOVED***=***REMOVED***'INVALID_SETASSETSOURCE',***REMOVED***INVALID_TLA_FORMAT***REMOVED***=***REMOVED***'INVALID_TLA_FORMAT',***REMOVED***MISSING_CONFIG***REMOVED***=***REMOVED***'MISSING_CONFIG',***REMOVED***MISSING_EXPORT***REMOVED***=***REMOVED***'MISSING_EXPORT',***REMOVED***MISSING_EXTERNAL_CONFIG***REMOVED***=***REMOVED***'MISSING_EXTERNAL_CONFIG',***REMOVED***MISSING_GLOBAL_NAME***REMOVED***=***REMOVED***'MISSING_GLOBAL_NAME',***REMOVED***MISSING_IMPLICIT_DEPENDANT***REMOVED***=***REMOVED***'MISSING_IMPLICIT_DEPENDANT',***REMOVED***MISSING_NAME_OPTION_FOR_IIFE_EXPORT***REMOVED***=***REMOVED***'MISSING_NAME_OPTION_FOR_IIFE_EXPORT',***REMOVED***MISSING_NODE_BUILTINS***REMOVED***=***REMOVED***'MISSING_NODE_BUILTINS',***REMOVED***MISSING_OPTION***REMOVED***=***REMOVED***'MISSING_OPTION',***REMOVED***MIXED_EXPORTS***REMOVED***=***REMOVED***'MIXED_EXPORTS',***REMOVED***MODULE_LEVEL_DIRECTIVE***REMOVED***=***REMOVED***'MODULE_LEVEL_DIRECTIVE',***REMOVED***NAMESPACE_CONFLICT***REMOVED***=***REMOVED***'NAMESPACE_CONFLICT',***REMOVED***NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE***REMOVED***=***REMOVED***'NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE',***REMOVED***ONLY_INLINE_SOURCEMAPS***REMOVED***=***REMOVED***'ONLY_INLINE_SOURCEMAPS',***REMOVED***OPTIMIZE_CHUNK_STATUS***REMOVED***=***REMOVED***'OPTIMIZE_CHUNK_STATUS',***REMOVED***PARSE_ERROR***REMOVED***=***REMOVED***'PARSE_ERROR',***REMOVED***PLUGIN_ERROR***REMOVED***=***REMOVED***'PLUGIN_ERROR',***REMOVED***SHIMMED_EXPORT***REMOVED***=***REMOVED***'SHIMMED_EXPORT',***REMOVED***SOURCEMAP_BROKEN***REMOVED***=***REMOVED***'SOURCEMAP_BROKEN',***REMOVED***SOURCEMAP_ERROR***REMOVED***=***REMOVED***'SOURCEMAP_ERROR',***REMOVED***SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT***REMOVED***=***REMOVED***'SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT',***REMOVED***THIS_IS_UNDEFINED***REMOVED***=***REMOVED***'THIS_IS_UNDEFINED',***REMOVED***UNEXPECTED_NAMED_IMPORT***REMOVED***=***REMOVED***'UNEXPECTED_NAMED_IMPORT',***REMOVED***UNKNOWN_OPTION***REMOVED***=***REMOVED***'UNKNOWN_OPTION',***REMOVED***UNRESOLVED_ENTRY***REMOVED***=***REMOVED***'UNRESOLVED_ENTRY',***REMOVED***UNRESOLVED_IMPORT***REMOVED***=***REMOVED***'UNRESOLVED_IMPORT',***REMOVED***UNUSED_EXTERNAL_IMPORT***REMOVED***=***REMOVED***'UNUSED_EXTERNAL_IMPORT',***REMOVED***VALIDATION_ERROR***REMOVED***=***REMOVED***'VALIDATION_ERROR';
function***REMOVED***logAddonNotGenerated(message,***REMOVED***hook,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ADDON_ERROR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Could***REMOVED***not***REMOVED***retrieve***REMOVED***"${hook}".***REMOVED***Check***REMOVED***configuration***REMOVED***of***REMOVED***plugin***REMOVED***"${plugin}".
\tError***REMOVED***Message:***REMOVED***${message}`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logAlreadyClosed()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ALREADY_CLOSED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'Bundle***REMOVED***is***REMOVED***already***REMOVED***closed,***REMOVED***no***REMOVED***more***REMOVED***calls***REMOVED***to***REMOVED***"generate"***REMOVED***or***REMOVED***"write"***REMOVED***are***REMOVED***allowed.'
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logAmbiguousExternalNamespaces(binding,***REMOVED***reexportingModule,***REMOVED***usedModule,***REMOVED***sources)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binding,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***AMBIGUOUS_EXTERNAL_NAMESPACES,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids:***REMOVED***sources,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Ambiguous***REMOVED***external***REMOVED***namespace***REMOVED***resolution:***REMOVED***"${relativeId(reexportingModule)}"***REMOVED***re-exports***REMOVED***"${binding}"***REMOVED***from***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***external***REMOVED***modules***REMOVED***${printQuotedStringList(sources.map(module***REMOVED***=>***REMOVED***relativeId(module)))},***REMOVED***guessing***REMOVED***"${relativeId(usedModule)}".`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexporter:***REMOVED***reexportingModule
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logAnonymousPluginCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ANONYMOUS_PLUGIN_CACHE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'A***REMOVED***plugin***REMOVED***is***REMOVED***trying***REMOVED***to***REMOVED***use***REMOVED***the***REMOVED***Rollup***REMOVED***cache***REMOVED***but***REMOVED***is***REMOVED***not***REMOVED***declaring***REMOVED***a***REMOVED***plugin***REMOVED***name***REMOVED***or***REMOVED***cacheKey.'
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logAssetNotFinalisedForFileName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ASSET_NOT_FINALISED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Plugin***REMOVED***error***REMOVED***-***REMOVED***Unable***REMOVED***to***REMOVED***get***REMOVED***file***REMOVED***name***REMOVED***for***REMOVED***asset***REMOVED***"${name}".***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***source***REMOVED***is***REMOVED***set***REMOVED***and***REMOVED***that***REMOVED***generate***REMOVED***is***REMOVED***called***REMOVED***first.***REMOVED***If***REMOVED***you***REMOVED***reference***REMOVED***assets***REMOVED***via***REMOVED***import.meta.ROLLUP_FILE_URL_<referenceId>,***REMOVED***you***REMOVED***need***REMOVED***to***REMOVED***either***REMOVED***have***REMOVED***set***REMOVED***their***REMOVED***source***REMOVED***after***REMOVED***"renderStart"***REMOVED***or***REMOVED***need***REMOVED***to***REMOVED***provide***REMOVED***an***REMOVED***explicit***REMOVED***"fileName"***REMOVED***when***REMOVED***emitting***REMOVED***them.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logAssetReferenceIdNotFoundForSetSource(assetReferenceId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ASSET_NOT_FOUND,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Plugin***REMOVED***error***REMOVED***-***REMOVED***Unable***REMOVED***to***REMOVED***set***REMOVED***the***REMOVED***source***REMOVED***for***REMOVED***unknown***REMOVED***asset***REMOVED***"${assetReferenceId}".`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logAssetSourceAlreadySet(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ASSET_SOURCE_ALREADY_SET,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Unable***REMOVED***to***REMOVED***set***REMOVED***the***REMOVED***source***REMOVED***for***REMOVED***asset***REMOVED***"${name}",***REMOVED***source***REMOVED***already***REMOVED***set.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logNoAssetSourceSet(assetName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ASSET_SOURCE_MISSING,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Plugin***REMOVED***error***REMOVED***creating***REMOVED***asset***REMOVED***"${assetName}"***REMOVED***-***REMOVED***no***REMOVED***asset***REMOVED***source***REMOVED***set.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logBadLoader(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***BAD_LOADER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Error***REMOVED***loading***REMOVED***"${relativeId(id)}":***REMOVED***plugin***REMOVED***load***REMOVED***hook***REMOVED***should***REMOVED***return***REMOVED***a***REMOVED***string,***REMOVED***a***REMOVED***{***REMOVED***code,***REMOVED***map***REMOVED***}***REMOVED***object,***REMOVED***or***REMOVED***nothing/null.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCannotCallNamespace(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CANNOT_CALL_NAMESPACE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Cannot***REMOVED***call***REMOVED***a***REMOVED***namespace***REMOVED***("${name}").`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCannotEmitFromOptionsHook()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CANNOT_EMIT_FROM_OPTIONS_HOOK,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Cannot***REMOVED***emit***REMOVED***files***REMOVED***or***REMOVED***set***REMOVED***asset***REMOVED***sources***REMOVED***in***REMOVED***the***REMOVED***"outputOptions"***REMOVED***hook,***REMOVED***use***REMOVED***the***REMOVED***"renderStart"***REMOVED***hook***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logChunkNotGeneratedForFileName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CHUNK_NOT_GENERATED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Plugin***REMOVED***error***REMOVED***-***REMOVED***Unable***REMOVED***to***REMOVED***get***REMOVED***file***REMOVED***name***REMOVED***for***REMOVED***emitted***REMOVED***chunk***REMOVED***"${name}".***REMOVED***You***REMOVED***can***REMOVED***only***REMOVED***get***REMOVED***file***REMOVED***names***REMOVED***once***REMOVED***chunks***REMOVED***have***REMOVED***been***REMOVED***generated***REMOVED***after***REMOVED***the***REMOVED***"renderStart"***REMOVED***hook.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logChunkInvalid({***REMOVED***fileName,***REMOVED***code***REMOVED***},***REMOVED***exception)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***errorProperties***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CHUNK_INVALID,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Chunk***REMOVED***"${fileName}"***REMOVED***is***REMOVED***not***REMOVED***valid***REMOVED***JavaScript:***REMOVED***${exception.message}.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***augmentCodeLocation(errorProperties,***REMOVED***exception.loc,***REMOVED***code,***REMOVED***fileName);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***errorProperties;
}
function***REMOVED***logCircularDependency(cyclePath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CIRCULAR_DEPENDENCY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids:***REMOVED***cyclePath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Circular***REMOVED***dependency:***REMOVED***${cyclePath.map(relativeId).join('***REMOVED***->***REMOVED***')}`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCircularReexport(exportName,***REMOVED***exporter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CIRCULAR_REEXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"${exportName}"***REMOVED***cannot***REMOVED***be***REMOVED***exported***REMOVED***from***REMOVED***"${relativeId(exporter)}"***REMOVED***as***REMOVED***it***REMOVED***is***REMOVED***a***REMOVED***reexport***REMOVED***that***REMOVED***references***REMOVED***itself.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCyclicCrossChunkReexport(exportName,***REMOVED***exporter,***REMOVED***reexporter,***REMOVED***importer,***REMOVED***preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***CYCLIC_CROSS_CHUNK_REEXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***importer,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Export***REMOVED***"${exportName}"***REMOVED***of***REMOVED***module***REMOVED***"${relativeId(exporter)}"***REMOVED***was***REMOVED***reexported***REMOVED***through***REMOVED***module***REMOVED***"${relativeId(reexporter)}"***REMOVED***while***REMOVED***both***REMOVED***modules***REMOVED***are***REMOVED***dependencies***REMOVED***of***REMOVED***each***REMOVED***other***REMOVED***and***REMOVED***will***REMOVED***end***REMOVED***up***REMOVED***in***REMOVED***different***REMOVED***chunks***REMOVED***by***REMOVED***current***REMOVED***Rollup***REMOVED***settings.***REMOVED***This***REMOVED***scenario***REMOVED***is***REMOVED***not***REMOVED***well***REMOVED***supported***REMOVED***at***REMOVED***the***REMOVED***moment***REMOVED***as***REMOVED***it***REMOVED***will***REMOVED***produce***REMOVED***a***REMOVED***circular***REMOVED***dependency***REMOVED***between***REMOVED***chunks***REMOVED***and***REMOVED***will***REMOVED***likely***REMOVED***lead***REMOVED***to***REMOVED***broken***REMOVED***execution***REMOVED***order.\nEither***REMOVED***change***REMOVED***the***REMOVED***import***REMOVED***in***REMOVED***"${relativeId(importer)}"***REMOVED***to***REMOVED***point***REMOVED***directly***REMOVED***to***REMOVED***the***REMOVED***exporting***REMOVED***module***REMOVED***or***REMOVED***${preserveModules***REMOVED***?***REMOVED***'do***REMOVED***not***REMOVED***use***REMOVED***"output.preserveModules"'***REMOVED***:***REMOVED***'reconfigure***REMOVED***"output.manualChunks"'}***REMOVED***to***REMOVED***ensure***REMOVED***these***REMOVED***modules***REMOVED***end***REMOVED***up***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***chunk.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexporter
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logDeprecation(deprecation,***REMOVED***urlSnippet,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***DEPRECATED_FEATURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***deprecation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(urlSnippet),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(plugin***REMOVED***?***REMOVED***{***REMOVED***plugin***REMOVED***}***REMOVED***:***REMOVED***{})
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logDuplicateImportOptions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***DUPLICATE_IMPORT_OPTIONS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'Either***REMOVED***use***REMOVED***--input,***REMOVED***or***REMOVED***pass***REMOVED***input***REMOVED***path***REMOVED***as***REMOVED***argument'
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logDuplicatePluginName(plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***DUPLICATE_PLUGIN_NAME,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`The***REMOVED***plugin***REMOVED***name***REMOVED***${plugin}***REMOVED***is***REMOVED***being***REMOVED***used***REMOVED***twice***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***build.***REMOVED***Plugin***REMOVED***names***REMOVED***must***REMOVED***be***REMOVED***distinct***REMOVED***or***REMOVED***provide***REMOVED***a***REMOVED***cacheKey***REMOVED***(please***REMOVED***post***REMOVED***an***REMOVED***issue***REMOVED***to***REMOVED***the***REMOVED***plugin***REMOVED***if***REMOVED***you***REMOVED***are***REMOVED***a***REMOVED***plugin***REMOVED***user).`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logEmptyChunk(chunkName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***EMPTY_BUNDLE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Generated***REMOVED***an***REMOVED***empty***REMOVED***chunk:***REMOVED***"${chunkName}".`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***[chunkName]
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logEval(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***EVAL,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Use***REMOVED***of***REMOVED***eval***REMOVED***in***REMOVED***"${relativeId(id)}"***REMOVED***is***REMOVED***strongly***REMOVED***discouraged***REMOVED***as***REMOVED***it***REMOVED***poses***REMOVED***security***REMOVED***risks***REMOVED***and***REMOVED***may***REMOVED***cause***REMOVED***issues***REMOVED***with***REMOVED***minification.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_AVOIDING_EVAL)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logExternalSyntheticExports(id,***REMOVED***importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***EXTERNAL_SYNTHETIC_EXPORTS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`External***REMOVED***"${id}"***REMOVED***cannot***REMOVED***have***REMOVED***"syntheticNamedExports"***REMOVED***enabled***REMOVED***(imported***REMOVED***by***REMOVED***"${relativeId(importer)}").`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logFailAfterWarnings()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***FAIL_AFTER_WARNINGS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'Warnings***REMOVED***occurred***REMOVED***and***REMOVED***--failAfterWarnings***REMOVED***flag***REMOVED***present.'
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logFileNameConflict(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***FILE_NAME_CONFLICT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`The***REMOVED***emitted***REMOVED***file***REMOVED***"${fileName}"***REMOVED***overwrites***REMOVED***a***REMOVED***previously***REMOVED***emitted***REMOVED***file***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***name.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logFileReferenceIdNotFoundForFilename(assetReferenceId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***FILE_NOT_FOUND,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Plugin***REMOVED***error***REMOVED***-***REMOVED***Unable***REMOVED***to***REMOVED***get***REMOVED***file***REMOVED***name***REMOVED***for***REMOVED***unknown***REMOVED***file***REMOVED***"${assetReferenceId}".`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logFirstSideEffect(source,***REMOVED***id,***REMOVED***{***REMOVED***line,***REMOVED***column***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***FIRST_SIDE_EFFECT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`First***REMOVED***side***REMOVED***effect***REMOVED***in***REMOVED***${relativeId(id)}***REMOVED***is***REMOVED***at***REMOVED***(${line}:${column})\n${getCodeFrame(source,***REMOVED***line,***REMOVED***column)}`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logIllegalIdentifierAsName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ILLEGAL_IDENTIFIER_AS_NAME,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Given***REMOVED***name***REMOVED***"${name}"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***legal***REMOVED***JS***REMOVED***identifier.***REMOVED***If***REMOVED***you***REMOVED***need***REMOVED***this,***REMOVED***you***REMOVED***can***REMOVED***try***REMOVED***"output.extend:***REMOVED***true".`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_EXTEND)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logIllegalImportReassignment(name,***REMOVED***importingId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ILLEGAL_REASSIGNMENT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Illegal***REMOVED***reassignment***REMOVED***of***REMOVED***import***REMOVED***"${name}"***REMOVED***in***REMOVED***"${relativeId(importingId)}".`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInconsistentImportAssertions(existingAssertions,***REMOVED***newAssertions,***REMOVED***source,***REMOVED***importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INCONSISTENT_IMPORT_ASSERTIONS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***"${relativeId(importer)}"***REMOVED***tried***REMOVED***to***REMOVED***import***REMOVED***"${relativeId(source)}"***REMOVED***with***REMOVED***${formatAssertions$1(newAssertions)}***REMOVED***assertions,***REMOVED***but***REMOVED***it***REMOVED***was***REMOVED***already***REMOVED***imported***REMOVED***elsewhere***REMOVED***with***REMOVED***${formatAssertions$1(existingAssertions)}***REMOVED***assertions.***REMOVED***Please***REMOVED***ensure***REMOVED***that***REMOVED***import***REMOVED***assertions***REMOVED***for***REMOVED***the***REMOVED***same***REMOVED***module***REMOVED***are***REMOVED***always***REMOVED***consistent.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
const***REMOVED***formatAssertions$1***REMOVED***=***REMOVED***(assertions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entries***REMOVED***=***REMOVED***Object.entries(assertions);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(entries.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'no';
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entries.map(([key,***REMOVED***value])***REMOVED***=>***REMOVED***`"${key}":***REMOVED***"${value}"`).join(',***REMOVED***');
};
function***REMOVED***logInputHookInOutputPlugin(pluginName,***REMOVED***hookName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INPUT_HOOK_IN_OUTPUT_PLUGIN,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`The***REMOVED***"${hookName}"***REMOVED***hook***REMOVED***used***REMOVED***by***REMOVED***the***REMOVED***output***REMOVED***plugin***REMOVED***${pluginName}***REMOVED***is***REMOVED***a***REMOVED***build***REMOVED***time***REMOVED***hook***REMOVED***and***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***run***REMOVED***for***REMOVED***that***REMOVED***plugin.***REMOVED***Either***REMOVED***this***REMOVED***plugin***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***as***REMOVED***an***REMOVED***output***REMOVED***plugin,***REMOVED***or***REMOVED***it***REMOVED***should***REMOVED***have***REMOVED***an***REMOVED***option***REMOVED***to***REMOVED***configure***REMOVED***it***REMOVED***as***REMOVED***an***REMOVED***output***REMOVED***plugin.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCannotAssignModuleToChunk(moduleId,***REMOVED***assignToAlias,***REMOVED***currentAlias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_CHUNK,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Cannot***REMOVED***assign***REMOVED***"${relativeId(moduleId)}"***REMOVED***to***REMOVED***the***REMOVED***"${assignToAlias}"***REMOVED***chunk***REMOVED***as***REMOVED***it***REMOVED***is***REMOVED***already***REMOVED***in***REMOVED***the***REMOVED***"${currentAlias}"***REMOVED***chunk.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCannotBundleConfigAsEsm(originalError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cause:***REMOVED***originalError,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_CONFIG_MODULE_FORMAT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Rollup***REMOVED***transpiled***REMOVED***your***REMOVED***configuration***REMOVED***to***REMOVED***an***REMOVED******REMOVED***ES***REMOVED***module***REMOVED***even***REMOVED***though***REMOVED***it***REMOVED***appears***REMOVED***to***REMOVED***contain***REMOVED***CommonJS***REMOVED***elements.***REMOVED***To***REMOVED***resolve***REMOVED***this,***REMOVED***you***REMOVED***can***REMOVED***pass***REMOVED***the***REMOVED***"--bundleConfigAsCjs"***REMOVED***flag***REMOVED***to***REMOVED***Rollup***REMOVED***or***REMOVED***change***REMOVED***your***REMOVED***configuration***REMOVED***to***REMOVED***only***REMOVED***contain***REMOVED***valid***REMOVED***ESM***REMOVED***code.\n\nOriginal***REMOVED***error:***REMOVED***${originalError.message}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack:***REMOVED***originalError.stack,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_BUNDLE_CONFIG_AS_CJS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCannotLoadConfigAsCjs(originalError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cause:***REMOVED***originalError,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_CONFIG_MODULE_FORMAT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Node***REMOVED***tried***REMOVED***to***REMOVED***load***REMOVED***your***REMOVED***configuration***REMOVED***file***REMOVED***as***REMOVED***CommonJS***REMOVED***even***REMOVED***though***REMOVED***it***REMOVED***is***REMOVED***likely***REMOVED***an***REMOVED***ES***REMOVED***module.***REMOVED***To***REMOVED***resolve***REMOVED***this,***REMOVED***change***REMOVED***the***REMOVED***extension***REMOVED***of***REMOVED***your***REMOVED***configuration***REMOVED***to***REMOVED***".mjs",***REMOVED***set***REMOVED***"type":***REMOVED***"module"***REMOVED***in***REMOVED***your***REMOVED***package.json***REMOVED***file***REMOVED***or***REMOVED***pass***REMOVED***the***REMOVED***"--bundleConfigAsCjs"***REMOVED***flag.\n\nOriginal***REMOVED***error:***REMOVED***${originalError.message}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack:***REMOVED***originalError.stack,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_BUNDLE_CONFIG_AS_CJS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logCannotLoadConfigAsEsm(originalError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cause:***REMOVED***originalError,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_CONFIG_MODULE_FORMAT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Node***REMOVED***tried***REMOVED***to***REMOVED***load***REMOVED***your***REMOVED***configuration***REMOVED***as***REMOVED***an***REMOVED***ES***REMOVED***module***REMOVED***even***REMOVED***though***REMOVED***it***REMOVED***is***REMOVED***likely***REMOVED***CommonJS.***REMOVED***To***REMOVED***resolve***REMOVED***this,***REMOVED***change***REMOVED***the***REMOVED***extension***REMOVED***of***REMOVED***your***REMOVED***configuration***REMOVED***to***REMOVED***".cjs"***REMOVED***or***REMOVED***pass***REMOVED***the***REMOVED***"--bundleConfigAsCjs"***REMOVED***flag.\n\nOriginal***REMOVED***error:***REMOVED***${originalError.message}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack:***REMOVED***originalError.stack,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_BUNDLE_CONFIG_AS_CJS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidExportOptionValue(optionValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_EXPORT_OPTION,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"output.exports"***REMOVED***must***REMOVED***be***REMOVED***"default",***REMOVED***"named",***REMOVED***"none",***REMOVED***"auto",***REMOVED***or***REMOVED***left***REMOVED***unspecified***REMOVED***(defaults***REMOVED***to***REMOVED***"auto"),***REMOVED***received***REMOVED***"${optionValue}".`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_EXPORTS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logIncompatibleExportOptionValue(optionValue,***REMOVED***keys,***REMOVED***entryModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_EXPORT_OPTION,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"${optionValue}"***REMOVED***was***REMOVED***specified***REMOVED***for***REMOVED***"output.exports",***REMOVED***but***REMOVED***entry***REMOVED***module***REMOVED***"${relativeId(entryModule)}"***REMOVED***has***REMOVED***the***REMOVED***following***REMOVED***exports:***REMOVED***${printQuotedStringList(keys)}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_EXPORTS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInternalIdCannotBeExternal(source,***REMOVED***importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_EXTERNAL_ID,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"${source}"***REMOVED***is***REMOVED***imported***REMOVED***as***REMOVED***an***REMOVED***external***REMOVED***by***REMOVED***"${relativeId(importer)}",***REMOVED***but***REMOVED***is***REMOVED***already***REMOVED***an***REMOVED***existing***REMOVED***non-external***REMOVED***module***REMOVED***id.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidLogPosition(plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_LOG_POSITION,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Plugin***REMOVED***"${plugin}"***REMOVED***tried***REMOVED***to***REMOVED***add***REMOVED***a***REMOVED***file***REMOVED***position***REMOVED***to***REMOVED***a***REMOVED***log***REMOVED***or***REMOVED***warning.***REMOVED***This***REMOVED***is***REMOVED***only***REMOVED***supported***REMOVED***in***REMOVED***the***REMOVED***"transform"***REMOVED***hook***REMOVED***at***REMOVED***the***REMOVED***moment***REMOVED***and***REMOVED***will***REMOVED***be***REMOVED***ignored.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidOption(option,***REMOVED***urlSnippet,***REMOVED***explanation,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_OPTION,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Invalid***REMOVED***value***REMOVED***${value***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***`${JSON.stringify(value)}***REMOVED***`}for***REMOVED***option***REMOVED***"${option}"***REMOVED***-***REMOVED***${explanation}.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(urlSnippet)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidAddonPluginHook(hook,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_PLUGIN_HOOK,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hook,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Error***REMOVED***running***REMOVED***plugin***REMOVED***hook***REMOVED***"${hook}"***REMOVED***for***REMOVED***plugin***REMOVED***"${plugin}",***REMOVED***expected***REMOVED***a***REMOVED***string,***REMOVED***a***REMOVED***function***REMOVED***hook***REMOVED***or***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***a***REMOVED***"handler"***REMOVED***string***REMOVED***or***REMOVED***function.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidFunctionPluginHook(hook,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_PLUGIN_HOOK,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hook,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Error***REMOVED***running***REMOVED***plugin***REMOVED***hook***REMOVED***"${hook}"***REMOVED***for***REMOVED***plugin***REMOVED***"${plugin}",***REMOVED***expected***REMOVED***a***REMOVED***function***REMOVED***hook***REMOVED***or***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***a***REMOVED***"handler"***REMOVED***function.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidRollupPhaseForAddWatchFile()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_ROLLUP_PHASE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Cannot***REMOVED***call***REMOVED***"addWatchFile"***REMOVED***after***REMOVED***the***REMOVED***build***REMOVED***has***REMOVED***finished.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidRollupPhaseForChunkEmission()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_ROLLUP_PHASE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Cannot***REMOVED***emit***REMOVED***chunks***REMOVED***after***REMOVED***module***REMOVED***loading***REMOVED***has***REMOVED***finished.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidSetAssetSourceCall()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_SETASSETSOURCE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`setAssetSource***REMOVED***cannot***REMOVED***be***REMOVED***called***REMOVED***in***REMOVED***transform***REMOVED***for***REMOVED***caching***REMOVED***reasons.***REMOVED***Use***REMOVED***emitFile***REMOVED***with***REMOVED***a***REMOVED***source,***REMOVED***or***REMOVED***call***REMOVED***setAssetSource***REMOVED***in***REMOVED***another***REMOVED***hook.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidFormatForTopLevelAwait(id,***REMOVED***format)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***INVALID_TLA_FORMAT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***format***REMOVED***"${format}"***REMOVED***does***REMOVED***not***REMOVED***support***REMOVED***top-level***REMOVED***await.***REMOVED***Use***REMOVED***the***REMOVED***"es"***REMOVED***or***REMOVED***"system"***REMOVED***output***REMOVED***formats***REMOVED***rather.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingConfig()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_CONFIG,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'Config***REMOVED***file***REMOVED***must***REMOVED***export***REMOVED***an***REMOVED***options***REMOVED***object,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***options***REMOVED***objects',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_CONFIGURATION_FILES)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingExport(binding,***REMOVED***importingModule,***REMOVED***exporter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isJson***REMOVED***=***REMOVED***node_path.extname(exporter)***REMOVED***===***REMOVED***'.json';
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binding,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_EXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***importingModule,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"${binding}"***REMOVED***is***REMOVED***not***REMOVED***exported***REMOVED***by***REMOVED***"${relativeId(exporter)}",***REMOVED***imported***REMOVED***by***REMOVED***"${relativeId(importingModule)}".${isJson***REMOVED***?***REMOVED***'***REMOVED***(Note***REMOVED***that***REMOVED***you***REMOVED***need***REMOVED***@rollup/plugin-json***REMOVED***to***REMOVED***import***REMOVED***JSON***REMOVED***files)'***REMOVED***:***REMOVED***''}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_NAME_IS_NOT_EXPORTED)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingExternalConfig(file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_EXTERNAL_CONFIG,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Could***REMOVED***not***REMOVED***resolve***REMOVED***config***REMOVED***file***REMOVED***"${file}"`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingGlobalName(externalId,***REMOVED***guess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_GLOBAL_NAME,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***externalId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`No***REMOVED***name***REMOVED***was***REMOVED***provided***REMOVED***for***REMOVED***external***REMOVED***module***REMOVED***"${externalId}"***REMOVED***in***REMOVED***"output.globals"***REMOVED***–***REMOVED***guessing***REMOVED***"${guess}".`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***[guess],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_GLOBALS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logImplicitDependantCannotBeExternal(unresolvedId,***REMOVED***implicitlyLoadedBefore)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_IMPLICIT_DEPENDANT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***"${relativeId(unresolvedId)}"***REMOVED***that***REMOVED***should***REMOVED***be***REMOVED***implicitly***REMOVED***loaded***REMOVED***before***REMOVED***"${relativeId(implicitlyLoadedBefore)}"***REMOVED***cannot***REMOVED***be***REMOVED***external.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnresolvedImplicitDependant(unresolvedId,***REMOVED***implicitlyLoadedBefore)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_IMPLICIT_DEPENDANT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***"${relativeId(unresolvedId)}"***REMOVED***that***REMOVED***should***REMOVED***be***REMOVED***implicitly***REMOVED***loaded***REMOVED***before***REMOVED***"${relativeId(implicitlyLoadedBefore)}"***REMOVED***could***REMOVED***not***REMOVED***be***REMOVED***resolved.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logImplicitDependantIsNotIncluded(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***implicitDependencies***REMOVED***=***REMOVED***[...module.implicitlyLoadedBefore]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(dependency***REMOVED***=>***REMOVED***relativeId(dependency.id))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.sort();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_IMPLICIT_DEPENDANT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***"${relativeId(module.id)}"***REMOVED***that***REMOVED***should***REMOVED***be***REMOVED***implicitly***REMOVED***loaded***REMOVED***before***REMOVED***${printQuotedStringList(implicitDependencies)}***REMOVED***is***REMOVED***not***REMOVED***included***REMOVED***in***REMOVED***the***REMOVED***module***REMOVED***graph.***REMOVED***Either***REMOVED***it***REMOVED***was***REMOVED***not***REMOVED***imported***REMOVED***by***REMOVED***an***REMOVED***included***REMOVED***module***REMOVED***or***REMOVED***only***REMOVED***via***REMOVED***a***REMOVED***tree-shaken***REMOVED***dynamic***REMOVED***import,***REMOVED***or***REMOVED***no***REMOVED***imported***REMOVED***bindings***REMOVED***were***REMOVED***used***REMOVED***and***REMOVED***it***REMOVED***had***REMOVED***otherwise***REMOVED***no***REMOVED***side-effects.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingNameOptionForIifeExport()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_NAME_OPTION_FOR_IIFE_EXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`If***REMOVED***you***REMOVED***do***REMOVED***not***REMOVED***supply***REMOVED***"output.name",***REMOVED***you***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***able***REMOVED***to***REMOVED***access***REMOVED***the***REMOVED***exports***REMOVED***of***REMOVED***an***REMOVED***IIFE***REMOVED***bundle.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_NAME)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingNameOptionForUmdExport()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_NAME_OPTION_FOR_IIFE_EXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'You***REMOVED***must***REMOVED***supply***REMOVED***"output.name"***REMOVED***for***REMOVED***UMD***REMOVED***bundles***REMOVED***that***REMOVED***have***REMOVED***exports***REMOVED***so***REMOVED***that***REMOVED***the***REMOVED***exports***REMOVED***are***REMOVED***accessible***REMOVED***in***REMOVED***environments***REMOVED***without***REMOVED***a***REMOVED***module***REMOVED***loader.',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_NAME)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMissingNodeBuiltins(externalBuiltins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_NODE_BUILTINS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids:***REMOVED***externalBuiltins,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Creating***REMOVED***a***REMOVED***browser***REMOVED***bundle***REMOVED***that***REMOVED***depends***REMOVED***on***REMOVED***Node.js***REMOVED***built-in***REMOVED***modules***REMOVED***(${printQuotedStringList(externalBuiltins)}).***REMOVED***You***REMOVED***might***REMOVED***need***REMOVED***to***REMOVED***include***REMOVED***https://github.com/FredKSchott/rollup-plugin-polyfill-node`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prevent-abbreviations
function***REMOVED***logMissingFileOrDirOption()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MISSING_OPTION,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'You***REMOVED***must***REMOVED***specify***REMOVED***"output.file"***REMOVED***or***REMOVED***"output.dir"***REMOVED***for***REMOVED***the***REMOVED***build.',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_DIR)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logMixedExport(facadeModuleId,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MIXED_EXPORTS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***facadeModuleId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Entry***REMOVED***module***REMOVED***"${relativeId(facadeModuleId)}"***REMOVED***is***REMOVED***using***REMOVED***named***REMOVED***and***REMOVED***default***REMOVED***exports***REMOVED***together.***REMOVED***Consumers***REMOVED***of***REMOVED***your***REMOVED***bundle***REMOVED***will***REMOVED***have***REMOVED***to***REMOVED***use***REMOVED***\`${name***REMOVED***||***REMOVED***'chunk'}.default\`***REMOVED***to***REMOVED***access***REMOVED***the***REMOVED***default***REMOVED***export,***REMOVED***which***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***what***REMOVED***you***REMOVED***want.***REMOVED***Use***REMOVED***\`output.exports:***REMOVED***"named"\`***REMOVED***to***REMOVED***disable***REMOVED***this***REMOVED***warning.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_EXPORTS)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logModuleLevelDirective(directive,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***MODULE_LEVEL_DIRECTIVE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***level***REMOVED***directives***REMOVED***cause***REMOVED***errors***REMOVED***when***REMOVED***bundled,***REMOVED***"${directive}"***REMOVED***in***REMOVED***"${relativeId(id)}"***REMOVED***was***REMOVED***ignored.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logNamespaceConflict(binding,***REMOVED***reexportingModuleId,***REMOVED***sources)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binding,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***NAMESPACE_CONFLICT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids:***REMOVED***sources,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Conflicting***REMOVED***namespaces:***REMOVED***"${relativeId(reexportingModuleId)}"***REMOVED***re-exports***REMOVED***"${binding}"***REMOVED***from***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***modules***REMOVED***${printQuotedStringList(sources.map(moduleId***REMOVED***=>***REMOVED***relativeId(moduleId)))}***REMOVED***(will***REMOVED***be***REMOVED***ignored).`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexporter:***REMOVED***reexportingModuleId
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logNoTransformMapOrAstWithoutCode(pluginName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`The***REMOVED***plugin***REMOVED***"${pluginName}"***REMOVED***returned***REMOVED***a***REMOVED***"map"***REMOVED***or***REMOVED***"ast"***REMOVED***without***REMOVED***returning***REMOVED***`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'a***REMOVED***"code".***REMOVED***This***REMOVED***will***REMOVED***be***REMOVED***ignored.'
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logOnlyInlineSourcemapsForStdout()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ONLY_INLINE_SOURCEMAPS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***'Only***REMOVED***inline***REMOVED***sourcemaps***REMOVED***are***REMOVED***supported***REMOVED***when***REMOVED***bundling***REMOVED***to***REMOVED***stdout.'
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logOptimizeChunkStatus(chunks,***REMOVED***smallChunks,***REMOVED***pointInTime)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***OPTIMIZE_CHUNK_STATUS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`${pointInTime},***REMOVED***there***REMOVED***are\n`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${chunks}***REMOVED***chunks,***REMOVED***of***REMOVED***which\n`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${smallChunks}***REMOVED***are***REMOVED***below***REMOVED***minChunkSize.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logParseError(error,***REMOVED***moduleId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***message***REMOVED***=***REMOVED***error.message.replace(/***REMOVED***\(\d+:\d+\)$/,***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moduleId.endsWith('.json'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message***REMOVED***+=***REMOVED***'***REMOVED***(Note***REMOVED***that***REMOVED***you***REMOVED***need***REMOVED***@rollup/plugin-json***REMOVED***to***REMOVED***import***REMOVED***JSON***REMOVED***files)';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!moduleId.endsWith('.js'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message***REMOVED***+=***REMOVED***'***REMOVED***(Note***REMOVED***that***REMOVED***you***REMOVED***need***REMOVED***plugins***REMOVED***to***REMOVED***import***REMOVED***files***REMOVED***that***REMOVED***are***REMOVED***not***REMOVED***JavaScript)';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cause:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***PARSE_ERROR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***moduleId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logPluginError(error,***REMOVED***plugin,***REMOVED***{***REMOVED***hook,***REMOVED***id***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***code***REMOVED***=***REMOVED***error.code;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!error.pluginCode***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***!=***REMOVED***null***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(typeof***REMOVED***code***REMOVED***!==***REMOVED***'string'***REMOVED***||***REMOVED***(typeof***REMOVED***code***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***!code.startsWith('PLUGIN_'))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error.pluginCode***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***error.code***REMOVED***=***REMOVED***PLUGIN_ERROR;
***REMOVED******REMOVED******REMOVED******REMOVED***error.plugin***REMOVED***=***REMOVED***plugin;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error.hook***REMOVED***=***REMOVED***hook;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
}
function***REMOVED***logShimmedExport(id,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binding,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***SHIMMED_EXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Missing***REMOVED***export***REMOVED***"${binding}"***REMOVED***has***REMOVED***been***REMOVED***shimmed***REMOVED***in***REMOVED***module***REMOVED***"${relativeId(id)}".`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logSourcemapBroken(plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***SOURCEMAP_BROKEN,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Sourcemap***REMOVED***is***REMOVED***likely***REMOVED***to***REMOVED***be***REMOVED***incorrect:***REMOVED***a***REMOVED***plugin***REMOVED***(${plugin})***REMOVED***was***REMOVED***used***REMOVED***to***REMOVED***transform***REMOVED***files,***REMOVED***but***REMOVED***didn't***REMOVED***generate***REMOVED***a***REMOVED***sourcemap***REMOVED***for***REMOVED***the***REMOVED***transformation.***REMOVED***Consult***REMOVED***the***REMOVED***plugin***REMOVED***documentation***REMOVED***for***REMOVED***help`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logConflictingSourcemapSources(filename)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***SOURCEMAP_BROKEN,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Multiple***REMOVED***conflicting***REMOVED***contents***REMOVED***for***REMOVED***sourcemap***REMOVED***source***REMOVED***${filename}`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logInvalidSourcemapForError(error,***REMOVED***id,***REMOVED***column,***REMOVED***line,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cause:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***SOURCEMAP_ERROR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Error***REMOVED***when***REMOVED***using***REMOVED***sourcemap***REMOVED***for***REMOVED***reporting***REMOVED***an***REMOVED***error:***REMOVED***${error.message}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logSyntheticNamedExportsNeedNamespaceExport(id,***REMOVED***syntheticNamedExportsOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Module***REMOVED***"${relativeId(id)}"***REMOVED***that***REMOVED***is***REMOVED***marked***REMOVED***with***REMOVED***\`syntheticNamedExports:***REMOVED***${JSON.stringify(syntheticNamedExportsOption)}\`***REMOVED***needs***REMOVED***${typeof***REMOVED***syntheticNamedExportsOption***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***syntheticNamedExportsOption***REMOVED***!==***REMOVED***'default'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`an***REMOVED***explicit***REMOVED***export***REMOVED***named***REMOVED***"${syntheticNamedExportsOption}"`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'a***REMOVED***default***REMOVED***export'}***REMOVED***that***REMOVED***does***REMOVED***not***REMOVED***reexport***REMOVED***an***REMOVED***unresolved***REMOVED***named***REMOVED***export***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***module.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logThisIsUndefined()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***THIS_IS_UNDEFINED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`The***REMOVED***'this'***REMOVED***keyword***REMOVED***is***REMOVED***equivalent***REMOVED***to***REMOVED***'undefined'***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***of***REMOVED***an***REMOVED***ES***REMOVED***module,***REMOVED***and***REMOVED***has***REMOVED***been***REMOVED***rewritten`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_THIS_IS_UNDEFINED)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnexpectedNamedImport(id,***REMOVED***imported,***REMOVED***isReexport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importType***REMOVED***=***REMOVED***isReexport***REMOVED***?***REMOVED***'reexport'***REMOVED***:***REMOVED***'import';
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNEXPECTED_NAMED_IMPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`The***REMOVED***named***REMOVED***export***REMOVED***"${imported}"***REMOVED***was***REMOVED***${importType}ed***REMOVED***from***REMOVED***the***REMOVED***external***REMOVED***module***REMOVED***"${relativeId(id)}"***REMOVED***even***REMOVED***though***REMOVED***its***REMOVED***interop***REMOVED***type***REMOVED***is***REMOVED***"defaultOnly".***REMOVED***Either***REMOVED***remove***REMOVED***or***REMOVED***change***REMOVED***this***REMOVED***${importType}***REMOVED***or***REMOVED***change***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***"output.interop"***REMOVED***option.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_INTEROP)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnexpectedNamespaceReexport(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNEXPECTED_NAMED_IMPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`There***REMOVED***was***REMOVED***a***REMOVED***namespace***REMOVED***"*"***REMOVED***reexport***REMOVED***from***REMOVED***the***REMOVED***external***REMOVED***module***REMOVED***"${relativeId(id)}"***REMOVED***even***REMOVED***though***REMOVED***its***REMOVED***interop***REMOVED***type***REMOVED***is***REMOVED***"defaultOnly".***REMOVED***This***REMOVED***will***REMOVED***be***REMOVED***ignored***REMOVED***as***REMOVED***namespace***REMOVED***reexports***REMOVED***only***REMOVED***reexport***REMOVED***named***REMOVED***exports.***REMOVED***If***REMOVED***this***REMOVED***is***REMOVED***not***REMOVED***intended,***REMOVED***either***REMOVED***remove***REMOVED***or***REMOVED***change***REMOVED***this***REMOVED***reexport***REMOVED***or***REMOVED***change***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***"output.interop"***REMOVED***option.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_OUTPUT_INTEROP)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnknownOption(optionType,***REMOVED***unknownOptions,***REMOVED***validOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNKNOWN_OPTION,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Unknown***REMOVED***${optionType}:***REMOVED***${unknownOptions.join(',***REMOVED***')}.***REMOVED***Allowed***REMOVED***options:***REMOVED***${validOptions.join(',***REMOVED***')}`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logEntryCannotBeExternal(unresolvedId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNRESOLVED_ENTRY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Entry***REMOVED***module***REMOVED***"${relativeId(unresolvedId)}"***REMOVED***cannot***REMOVED***be***REMOVED***external.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logExternalModulesCannotBeIncludedInManualChunks(source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"${source}"***REMOVED***cannot***REMOVED***be***REMOVED***included***REMOVED***in***REMOVED***manualChunks***REMOVED***because***REMOVED***it***REMOVED***is***REMOVED***resolved***REMOVED***as***REMOVED***an***REMOVED***external***REMOVED***module***REMOVED***by***REMOVED***the***REMOVED***"external"***REMOVED***option***REMOVED***or***REMOVED***plugins.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logExternalModulesCannotBeTransformedToModules(source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`${source}***REMOVED***is***REMOVED***resolved***REMOVED***as***REMOVED***a***REMOVED***module***REMOVED***now,***REMOVED***but***REMOVED***it***REMOVED***was***REMOVED***an***REMOVED***external***REMOVED***module***REMOVED***before.***REMOVED***Please***REMOVED***check***REMOVED***whether***REMOVED***there***REMOVED***are***REMOVED***conflicts***REMOVED***in***REMOVED***your***REMOVED***Rollup***REMOVED***options***REMOVED***"external"***REMOVED***and***REMOVED***"manualChunks",***REMOVED***manualChunks***REMOVED***cannot***REMOVED***include***REMOVED***external***REMOVED***modules.`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnresolvedEntry(unresolvedId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNRESOLVED_ENTRY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Could***REMOVED***not***REMOVED***resolve***REMOVED***entry***REMOVED***module***REMOVED***"${relativeId(unresolvedId)}".`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnresolvedImport(source,***REMOVED***importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNRESOLVED_IMPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***importer,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`Could***REMOVED***not***REMOVED***resolve***REMOVED***"${source}"***REMOVED***from***REMOVED***"${relativeId(importer)}"`
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnresolvedImportTreatedAsExternal(source,***REMOVED***importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNRESOLVED_IMPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***importer,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`"${source}"***REMOVED***is***REMOVED***imported***REMOVED***by***REMOVED***"${relativeId(importer)}",***REMOVED***but***REMOVED***could***REMOVED***not***REMOVED***be***REMOVED***resolved***REMOVED***–***REMOVED***treating***REMOVED***it***REMOVED***as***REMOVED***an***REMOVED***external***REMOVED***dependency.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***getRollupUrl(URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logUnusedExternalImports(externalId,***REMOVED***names,***REMOVED***importers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***UNUSED_EXTERNAL_IMPORT,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exporter:***REMOVED***externalId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids:***REMOVED***importers,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`${printQuotedStringList(names,***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'is',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'are'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])}***REMOVED***imported***REMOVED***from***REMOVED***external***REMOVED***module***REMOVED***"${externalId}"***REMOVED***but***REMOVED***never***REMOVED***used***REMOVED***in***REMOVED***${printQuotedStringList(importers.map(importer***REMOVED***=>***REMOVED***relativeId(importer)))}.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***logFailedValidation(message)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***VALIDATION_ERROR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***warnDeprecation(deprecation,***REMOVED***urlSnippet,***REMOVED***activeDeprecation,***REMOVED***options,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecationWithOptions(deprecation,***REMOVED***urlSnippet,***REMOVED***activeDeprecation,***REMOVED***options.onLog,***REMOVED***options.strictDeprecations,***REMOVED***plugin);
}
function***REMOVED***warnDeprecationWithOptions(deprecation,***REMOVED***urlSnippet,***REMOVED***activeDeprecation,***REMOVED***log,***REMOVED***strictDeprecations,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeDeprecation***REMOVED***||***REMOVED***strictDeprecations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***warning***REMOVED***=***REMOVED***logDeprecation(deprecation,***REMOVED***urlSnippet,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(strictDeprecations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(warning);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***warning);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

//***REMOVED***Four***REMOVED***random***REMOVED***characters***REMOVED***from***REMOVED***the***REMOVED***private***REMOVED***use***REMOVED***area***REMOVED***to***REMOVED***minimize***REMOVED***risk***REMOVED***of
//***REMOVED***conflicts
const***REMOVED***hashPlaceholderLeft***REMOVED***=***REMOVED***'!~{';
const***REMOVED***hashPlaceholderRight***REMOVED***=***REMOVED***'}~';
const***REMOVED***hashPlaceholderOverhead***REMOVED***=***REMOVED***hashPlaceholderLeft.length***REMOVED***+***REMOVED***hashPlaceholderRight.length;
//***REMOVED***This***REMOVED***is***REMOVED***the***REMOVED***size***REMOVED***of***REMOVED***a***REMOVED***sha256
const***REMOVED***maxHashSize***REMOVED***=***REMOVED***64;
const***REMOVED***defaultHashSize***REMOVED***=***REMOVED***8;
const***REMOVED***getHashPlaceholderGenerator***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nextIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(optionName,***REMOVED***hashSize***REMOVED***=***REMOVED***defaultHashSize)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hashSize***REMOVED***>***REMOVED***maxHashSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Hashes***REMOVED***cannot***REMOVED***be***REMOVED***longer***REMOVED***than***REMOVED***${maxHashSize}***REMOVED***characters,***REMOVED***received***REMOVED***${hashSize}.***REMOVED***Check***REMOVED***the***REMOVED***"${optionName}"***REMOVED***option.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placeholder***REMOVED***=***REMOVED***`${hashPlaceholderLeft}${toBase64(++nextIndex).padStart(hashSize***REMOVED***-***REMOVED***hashPlaceholderOverhead,***REMOVED***'0')}${hashPlaceholderRight}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placeholder.length***REMOVED***>***REMOVED***hashSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`To***REMOVED***generate***REMOVED***hashes***REMOVED***for***REMOVED***this***REMOVED***number***REMOVED***of***REMOVED***chunks***REMOVED***(currently***REMOVED***${nextIndex}),***REMOVED***you***REMOVED***need***REMOVED***a***REMOVED***minimum***REMOVED***hash***REMOVED***size***REMOVED***of***REMOVED***${placeholder.length},***REMOVED***received***REMOVED***${hashSize}.***REMOVED***Check***REMOVED***the***REMOVED***"${optionName}"***REMOVED***option.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***placeholder;
***REMOVED******REMOVED******REMOVED******REMOVED***};
};
const***REMOVED***REPLACER_REGEX***REMOVED***=***REMOVED***new***REMOVED***RegExp(`${hashPlaceholderLeft}[0-9a-zA-Z_$]{1,${maxHashSize***REMOVED***-***REMOVED***hashPlaceholderOverhead}}${hashPlaceholderRight}`,***REMOVED***'g');
const***REMOVED***replacePlaceholders***REMOVED***=***REMOVED***(code,***REMOVED***hashesByPlaceholder)***REMOVED***=>***REMOVED***code.replace(REPLACER_REGEX,***REMOVED***placeholder***REMOVED***=>***REMOVED***hashesByPlaceholder.get(placeholder)***REMOVED***||***REMOVED***placeholder);
const***REMOVED***replaceSinglePlaceholder***REMOVED***=***REMOVED***(code,***REMOVED***placeholder,***REMOVED***value)***REMOVED***=>***REMOVED***code.replace(REPLACER_REGEX,***REMOVED***match***REMOVED***=>***REMOVED***(match***REMOVED***===***REMOVED***placeholder***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***match));
const***REMOVED***replacePlaceholdersWithDefaultAndGetContainedPlaceholders***REMOVED***=***REMOVED***(code,***REMOVED***placeholders)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***containedPlaceholders***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***transformedCode***REMOVED***=***REMOVED***code.replace(REPLACER_REGEX,***REMOVED***placeholder***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placeholders.has(placeholder))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***containedPlaceholders.add(placeholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${hashPlaceholderLeft}${'0'.repeat(placeholder.length***REMOVED***-***REMOVED***hashPlaceholderOverhead)}${hashPlaceholderRight}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***placeholder;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***containedPlaceholders,***REMOVED***transformedCode***REMOVED***};
};

const***REMOVED***lowercaseBundleKeys***REMOVED***=***REMOVED***Symbol('bundleKeys');
const***REMOVED***FILE_PLACEHOLDER***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'placeholder'
};
const***REMOVED***getOutputBundle***REMOVED***=***REMOVED***(outputBundleBase)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reservedLowercaseBundleKeys***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Proxy(outputBundleBase,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deleteProperty(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedLowercaseBundleKeys.delete(key.toLowerCase());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.deleteProperty(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***lowercaseBundleKeys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reservedLowercaseBundleKeys;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.get(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set(target,***REMOVED***key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedLowercaseBundleKeys.add(key.toLowerCase());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.set(target,***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
};
const***REMOVED***removeUnreferencedAssets***REMOVED***=***REMOVED***(outputBundle)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unreferencedAssets***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bundleEntries***REMOVED***=***REMOVED***Object.values(outputBundle);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***asset***REMOVED***of***REMOVED***bundleEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***asset.type***REMOVED***===***REMOVED***'asset'***REMOVED***&&***REMOVED***asset.needsCodeReference***REMOVED***&&***REMOVED***unreferencedAssets.add(asset.fileName);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***bundleEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk.type***REMOVED***===***REMOVED***'chunk')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***referencedFile***REMOVED***of***REMOVED***chunk.referencedFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unreferencedAssets.has(referencedFile)***REMOVED***&&***REMOVED***unreferencedAssets.delete(referencedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***file***REMOVED***of***REMOVED***unreferencedAssets)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***outputBundle[file];
***REMOVED******REMOVED******REMOVED******REMOVED***}
};

function***REMOVED***renderNamePattern(pattern,***REMOVED***patternName,***REMOVED***replacements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPathFragment(pattern))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Invalid***REMOVED***pattern***REMOVED***"${pattern}"***REMOVED***for***REMOVED***"${patternName}",***REMOVED***patterns***REMOVED***can***REMOVED***be***REMOVED***neither***REMOVED***absolute***REMOVED***nor***REMOVED***relative***REMOVED***paths.***REMOVED***If***REMOVED***you***REMOVED***want***REMOVED***your***REMOVED***files***REMOVED***to***REMOVED***be***REMOVED***stored***REMOVED***in***REMOVED***a***REMOVED***subdirectory,***REMOVED***write***REMOVED***its***REMOVED***name***REMOVED***without***REMOVED***a***REMOVED***leading***REMOVED***slash***REMOVED***like***REMOVED***this:***REMOVED***subdirectory/pattern.`));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pattern.replace(/\[(\w+)(:\d+)?]/g,***REMOVED***(_match,***REMOVED***type,***REMOVED***size)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!replacements.hasOwnProperty(type)***REMOVED***||***REMOVED***(size***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***'hash'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`"[${type}${size***REMOVED***||***REMOVED***''}]"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***placeholder***REMOVED***in***REMOVED***the***REMOVED***"${patternName}"***REMOVED***pattern.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replacement***REMOVED***=***REMOVED***replacements[type](size***REMOVED***&&***REMOVED***Number.parseInt(size.slice(1)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPathFragment(replacement))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Invalid***REMOVED***substitution***REMOVED***"${replacement}"***REMOVED***for***REMOVED***placeholder***REMOVED***"[${type}]"***REMOVED***in***REMOVED***"${patternName}"***REMOVED***pattern,***REMOVED***can***REMOVED***be***REMOVED***neither***REMOVED***absolute***REMOVED***nor***REMOVED***relative***REMOVED***path.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***replacement;
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
function***REMOVED***makeUnique(name,***REMOVED***{***REMOVED***[lowercaseBundleKeys]:***REMOVED***reservedLowercaseBundleKeys***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!reservedLowercaseBundleKeys.has(name.toLowerCase()))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extension***REMOVED***=***REMOVED***node_path.extname(name);
***REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***name.slice(0,***REMOVED***Math.max(0,***REMOVED***name.length***REMOVED***-***REMOVED***extension.length));
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***uniqueName,***REMOVED***uniqueIndex***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(reservedLowercaseBundleKeys.has((uniqueName***REMOVED***=***REMOVED***name***REMOVED***+***REMOVED***++uniqueIndex***REMOVED***+***REMOVED***extension).toLowerCase()))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***uniqueName;
}

function***REMOVED***getSourceHash(source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createHash().update(source).digest('hex');
}
function***REMOVED***generateAssetFileName(name,***REMOVED***source,***REMOVED***sourceHash,***REMOVED***outputOptions,***REMOVED***bundle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***emittedName***REMOVED***=***REMOVED***outputOptions.sanitizeFileName(name***REMOVED***||***REMOVED***'asset');
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***makeUnique(renderNamePattern(typeof***REMOVED***outputOptions.assetFileNames***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***outputOptions.assetFileNames({***REMOVED***name,***REMOVED***source,***REMOVED***type:***REMOVED***'asset'***REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***outputOptions.assetFileNames,***REMOVED***'output.assetFileNames',***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ext:***REMOVED***()***REMOVED***=>***REMOVED***node_path.extname(emittedName).slice(1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extname:***REMOVED***()***REMOVED***=>***REMOVED***node_path.extname(emittedName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***size***REMOVED***=>***REMOVED***sourceHash.slice(0,***REMOVED***Math.max(0,***REMOVED***size***REMOVED***||***REMOVED***defaultHashSize)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***()***REMOVED***=>***REMOVED***emittedName.slice(0,***REMOVED***Math.max(0,***REMOVED***emittedName.length***REMOVED***-***REMOVED***node_path.extname(emittedName).length))
***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***bundle);
}
function***REMOVED***reserveFileNameInBundle(fileName,***REMOVED***{***REMOVED***bundle***REMOVED***},***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bundle[lowercaseBundleKeys].has(fileName.toLowerCase()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logFileNameConflict(fileName));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle[fileName]***REMOVED***=***REMOVED***FILE_PLACEHOLDER;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***emittedFileTypes***REMOVED***=***REMOVED***new***REMOVED***Set(['chunk',***REMOVED***'asset',***REMOVED***'prebuilt-chunk']);
function***REMOVED***hasValidType(emittedFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Boolean(emittedFile***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emittedFileTypes.has(emittedFile.type));
}
function***REMOVED***hasValidName(emittedFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validatedName***REMOVED***=***REMOVED***emittedFile.fileName***REMOVED***||***REMOVED***emittedFile.name;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!validatedName***REMOVED***||***REMOVED***(typeof***REMOVED***validatedName***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***!isPathFragment(validatedName));
}
function***REMOVED***getValidSource(source,***REMOVED***emittedFile,***REMOVED***fileReferenceId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(typeof***REMOVED***source***REMOVED***===***REMOVED***'string'***REMOVED***||***REMOVED***source***REMOVED***instanceof***REMOVED***Uint8Array))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assetName***REMOVED***=***REMOVED***emittedFile.fileName***REMOVED***||***REMOVED***emittedFile.name***REMOVED***||***REMOVED***fileReferenceId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Could***REMOVED***not***REMOVED***set***REMOVED***source***REMOVED***for***REMOVED***${typeof***REMOVED***assetName***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***`asset***REMOVED***"${assetName}"`***REMOVED***:***REMOVED***'unnamed***REMOVED***asset'},***REMOVED***asset***REMOVED***source***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***string,***REMOVED***Uint8Array***REMOVED***or***REMOVED***Buffer.`));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source;
}
function***REMOVED***getAssetFileName(file,***REMOVED***referenceId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***file.fileName***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAssetNotFinalisedForFileName(file.name***REMOVED***||***REMOVED***referenceId));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***file.fileName;
}
function***REMOVED***getChunkFileName(file,***REMOVED***facadeChunkByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file.fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***file.fileName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(facadeChunkByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***facadeChunkByModule.get(file.module).getFileName();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logChunkNotGeneratedForFileName(file.fileName***REMOVED***||***REMOVED***file.name));
}
class***REMOVED***FileEmitter***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(graph,***REMOVED***options,***REMOVED***baseFileEmitter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph***REMOVED***=***REMOVED***graph;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeChunkByModule***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nextIdBase***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.output***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputFileEmitters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emitFile***REMOVED***=***REMOVED***(emittedFile)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasValidType(emittedFile))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Emitted***REMOVED***files***REMOVED***must***REMOVED***be***REMOVED***of***REMOVED***type***REMOVED***"asset",***REMOVED***"chunk"***REMOVED***or***REMOVED***"prebuilt-chunk",***REMOVED***received***REMOVED***"${emittedFile***REMOVED***&&***REMOVED***emittedFile.type}".`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emittedFile.type***REMOVED***===***REMOVED***'prebuilt-chunk')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.emitPrebuiltChunk(emittedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasValidName(emittedFile))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`The***REMOVED***"fileName"***REMOVED***or***REMOVED***"name"***REMOVED***properties***REMOVED***of***REMOVED***emitted***REMOVED***chunks***REMOVED***and***REMOVED***assets***REMOVED***must***REMOVED***be***REMOVED***strings***REMOVED***that***REMOVED***are***REMOVED***neither***REMOVED***absolute***REMOVED***nor***REMOVED***relative***REMOVED***paths,***REMOVED***received***REMOVED***"${emittedFile.fileName***REMOVED***||***REMOVED***emittedFile.name}".`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emittedFile.type***REMOVED***===***REMOVED***'chunk')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.emitChunk(emittedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.emitAsset(emittedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finaliseAssets***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[referenceId,***REMOVED***emittedFile]***REMOVED***of***REMOVED***this.filesByReferenceId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emittedFile.type***REMOVED***===***REMOVED***'asset'***REMOVED***&&***REMOVED***typeof***REMOVED***emittedFile.fileName***REMOVED***!==***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logNoAssetSourceSet(emittedFile.name***REMOVED***||***REMOVED***referenceId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getFileName***REMOVED***=***REMOVED***(fileReferenceId)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***emittedFile***REMOVED***=***REMOVED***this.filesByReferenceId.get(fileReferenceId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!emittedFile)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFileReferenceIdNotFoundForFilename(fileReferenceId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emittedFile.type***REMOVED***===***REMOVED***'chunk')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChunkFileName(emittedFile,***REMOVED***this.facadeChunkByModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emittedFile.type***REMOVED***===***REMOVED***'prebuilt-chunk')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***emittedFile.fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getAssetFileName(emittedFile,***REMOVED***fileReferenceId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setAssetSource***REMOVED***=***REMOVED***(referenceId,***REMOVED***requestedSource)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consumedFile***REMOVED***=***REMOVED***this.filesByReferenceId.get(referenceId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!consumedFile)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAssetReferenceIdNotFoundForSetSource(referenceId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(consumedFile.type***REMOVED***!==***REMOVED***'asset')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Asset***REMOVED***sources***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***set***REMOVED***for***REMOVED***emitted***REMOVED***assets***REMOVED***but***REMOVED***"${referenceId}"***REMOVED***is***REMOVED***an***REMOVED***emitted***REMOVED***chunk.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(consumedFile.source***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAssetSourceAlreadySet(consumedFile.name***REMOVED***||***REMOVED***referenceId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***getValidSource(requestedSource,***REMOVED***consumedFile,***REMOVED***referenceId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.output)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeAdditionalAsset(consumedFile,***REMOVED***source,***REMOVED***this.output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumedFile.source***REMOVED***=***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***emitter***REMOVED***of***REMOVED***this.outputFileEmitters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitter.finalizeAdditionalAsset(consumedFile,***REMOVED***source,***REMOVED***emitter.output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setChunkInformation***REMOVED***=***REMOVED***(facadeChunkByModule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeChunkByModule***REMOVED***=***REMOVED***facadeChunkByModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setOutputBundle***REMOVED***=***REMOVED***(bundle,***REMOVED***outputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***output***REMOVED***=***REMOVED***(this.output***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileNamesBySource:***REMOVED***new***REMOVED***Map(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***emittedFile***REMOVED***of***REMOVED***this.filesByReferenceId.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emittedFile.fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reserveFileNameInBundle(emittedFile.fileName,***REMOVED***output,***REMOVED***this.options.onLog);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consumedAssetsByHash***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***consumedFile***REMOVED***of***REMOVED***this.filesByReferenceId.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(consumedFile.type***REMOVED***===***REMOVED***'asset'***REMOVED***&&***REMOVED***consumedFile.source***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(consumedFile.fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeAdditionalAsset(consumedFile,***REMOVED***consumedFile.source,***REMOVED***output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceHash***REMOVED***=***REMOVED***getSourceHash(consumedFile.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(consumedAssetsByHash,***REMOVED***sourceHash,***REMOVED***()***REMOVED***=>***REMOVED***[]).push(consumedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(consumedFile.type***REMOVED***===***REMOVED***'prebuilt-chunk')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.output.bundle[consumedFile.fileName]***REMOVED***=***REMOVED***this.createPrebuiltChunk(consumedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[sourceHash,***REMOVED***consumedFiles]***REMOVED***of***REMOVED***consumedAssetsByHash)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeAssetsWithSameSource(consumedFiles,***REMOVED***sourceHash,***REMOVED***output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.filesByReferenceId***REMOVED***=***REMOVED***baseFileEmitter
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***new***REMOVED***Map(baseFileEmitter.filesByReferenceId)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseFileEmitter?.addOutputFileEmitter(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addOutputFileEmitter(outputFileEmitter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputFileEmitters.push(outputFileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***assignReferenceId(file,***REMOVED***idBase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***referenceId***REMOVED***=***REMOVED***idBase;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceId***REMOVED***=***REMOVED***createHash().update(referenceId).digest('hex').slice(0,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.filesByReferenceId.has(referenceId)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputFileEmitters.some(({***REMOVED***filesByReferenceId***REMOVED***})***REMOVED***=>***REMOVED***filesByReferenceId.has(referenceId)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file.referenceId***REMOVED***=***REMOVED***referenceId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.filesByReferenceId.set(referenceId,***REMOVED***file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***filesByReferenceId***REMOVED***}***REMOVED***of***REMOVED***this.outputFileEmitters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filesByReferenceId.set(referenceId,***REMOVED***file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***referenceId;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***createPrebuiltChunk(prebuiltChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***prebuiltChunk.code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImports:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***prebuiltChunk.exports***REMOVED***||***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadeModuleId:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***prebuiltChunk.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedBefore:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedBindings:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isDynamicEntry:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEntry:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isImplicitEntry:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***prebuiltChunk.map***REMOVED***||***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleIds:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***prebuiltChunk.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preliminaryFileName:***REMOVED***prebuiltChunk.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referencedFiles:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileName:***REMOVED***prebuiltChunk.sourcemapFileName***REMOVED***||***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'chunk'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***emitAsset(emittedAsset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***emittedAsset.source***REMOVED***===***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***getValidSource(emittedAsset.source,***REMOVED***emittedAsset,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consumedAsset***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***emittedAsset.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***emittedAsset.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsCodeReference:***REMOVED***!!emittedAsset.needsCodeReference,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceId:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'asset'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***referenceId***REMOVED***=***REMOVED***this.assignReferenceId(consumedAsset,***REMOVED***emittedAsset.fileName***REMOVED***||***REMOVED***emittedAsset.name***REMOVED***||***REMOVED***String(this.nextIdBase++));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.output)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emitAssetWithReferenceId(consumedAsset,***REMOVED***this.output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***fileEmitter***REMOVED***of***REMOVED***this.outputFileEmitters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileEmitter.emitAssetWithReferenceId(consumedAsset,***REMOVED***fileEmitter.output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***referenceId;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***emitAssetWithReferenceId(consumedAsset,***REMOVED***output)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***fileName,***REMOVED***source***REMOVED***}***REMOVED***=***REMOVED***consumedAsset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reserveFileNameInBundle(fileName,***REMOVED***output,***REMOVED***this.options.onLog);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeAdditionalAsset(consumedAsset,***REMOVED***source,***REMOVED***output);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***emitChunk(emittedChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.graph.phase***REMOVED***>***REMOVED***BuildPhase.LOAD_AND_PARSE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidRollupPhaseForChunkEmission());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***emittedChunk.id***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Emitted***REMOVED***chunks***REMOVED***need***REMOVED***to***REMOVED***have***REMOVED***a***REMOVED***valid***REMOVED***string***REMOVED***id,***REMOVED***received***REMOVED***"${emittedChunk.id}"`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consumedChunk***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***emittedChunk.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***emittedChunk.name***REMOVED***||***REMOVED***emittedChunk.id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceId:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'chunk'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.moduleLoader
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.emitChunk(emittedChunk)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.then(module***REMOVED***=>***REMOVED***(consumedChunk.module***REMOVED***=***REMOVED***module))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.catch(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Avoid***REMOVED***unhandled***REMOVED***Promise***REMOVED***rejection***REMOVED***as***REMOVED***the***REMOVED***error***REMOVED***will***REMOVED***be***REMOVED***thrown***REMOVED***later
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***once***REMOVED***module***REMOVED***loading***REMOVED***has***REMOVED***finished
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.assignReferenceId(consumedChunk,***REMOVED***emittedChunk.id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***emitPrebuiltChunk(emitPrebuiltChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***emitPrebuiltChunk.code***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`Emitted***REMOVED***prebuilt***REMOVED***chunks***REMOVED***need***REMOVED***to***REMOVED***have***REMOVED***a***REMOVED***valid***REMOVED***string***REMOVED***code,***REMOVED***received***REMOVED***"${emitPrebuiltChunk.code}".`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***emitPrebuiltChunk.fileName***REMOVED***!==***REMOVED***'string'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isPathFragment(emitPrebuiltChunk.fileName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logFailedValidation(`The***REMOVED***"fileName"***REMOVED***property***REMOVED***of***REMOVED***emitted***REMOVED***prebuilt***REMOVED***chunks***REMOVED***must***REMOVED***be***REMOVED***strings***REMOVED***that***REMOVED***are***REMOVED***neither***REMOVED***absolute***REMOVED***nor***REMOVED***relative***REMOVED***paths,***REMOVED***received***REMOVED***"${emitPrebuiltChunk.fileName}".`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consumedPrebuiltChunk***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***emitPrebuiltChunk.code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***emitPrebuiltChunk.exports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***emitPrebuiltChunk.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***emitPrebuiltChunk.map,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceId:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'prebuilt-chunk'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***referenceId***REMOVED***=***REMOVED***this.assignReferenceId(consumedPrebuiltChunk,***REMOVED***consumedPrebuiltChunk.fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.output)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.output.bundle[consumedPrebuiltChunk.fileName]***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.createPrebuiltChunk(consumedPrebuiltChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***referenceId;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finalizeAdditionalAsset(consumedFile,***REMOVED***source,***REMOVED***{***REMOVED***bundle,***REMOVED***fileNamesBySource,***REMOVED***outputOptions***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***fileName,***REMOVED***needsCodeReference,***REMOVED***referenceId***REMOVED***}***REMOVED***=***REMOVED***consumedFile;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Deduplicate***REMOVED***assets***REMOVED***if***REMOVED***an***REMOVED***explicit***REMOVED***fileName***REMOVED***is***REMOVED***not***REMOVED***provided
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceHash***REMOVED***=***REMOVED***getSourceHash(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***fileNamesBySource.get(sourceHash);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***generateAssetFileName(consumedFile.name,***REMOVED***source,***REMOVED***sourceHash,***REMOVED***outputOptions,***REMOVED***bundle);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileNamesBySource.set(sourceHash,***REMOVED***fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***must***REMOVED***not***REMOVED***modify***REMOVED***the***REMOVED***original***REMOVED***assets***REMOVED***to***REMOVED***avoid***REMOVED***interaction***REMOVED***between***REMOVED***outputs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assetWithFileName***REMOVED***=***REMOVED***{***REMOVED***...consumedFile,***REMOVED***fileName,***REMOVED***source***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.filesByReferenceId.set(referenceId,***REMOVED***assetWithFileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingAsset***REMOVED***=***REMOVED***bundle[fileName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingAsset?.type***REMOVED***===***REMOVED***'asset')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingAsset.needsCodeReference***REMOVED***&&***REMOVED***(existingAsset.needsCodeReference***REMOVED***=***REMOVED***needsCodeReference);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle[fileName]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***consumedFile.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsCodeReference,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'asset'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finalizeAssetsWithSameSource(consumedFiles,***REMOVED***sourceHash,***REMOVED***{***REMOVED***bundle,***REMOVED***fileNamesBySource,***REMOVED***outputOptions***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fileName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***usedConsumedFile;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***needsCodeReference***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***consumedFile***REMOVED***of***REMOVED***consumedFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsCodeReference***REMOVED***&&***REMOVED***(needsCodeReference***REMOVED***=***REMOVED***consumedFile.needsCodeReference);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assetFileName***REMOVED***=***REMOVED***generateAssetFileName(consumedFile.name,***REMOVED***consumedFile.source,***REMOVED***sourceHash,***REMOVED***outputOptions,***REMOVED***bundle);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!fileName***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assetFileName.length***REMOVED***<***REMOVED***fileName.length***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(assetFileName.length***REMOVED***===***REMOVED***fileName.length***REMOVED***&&***REMOVED***assetFileName***REMOVED***<***REMOVED***fileName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***assetFileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedConsumedFile***REMOVED***=***REMOVED***consumedFile;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileNamesBySource.set(sourceHash,***REMOVED***fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***consumedFile***REMOVED***of***REMOVED***consumedFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***must***REMOVED***not***REMOVED***modify***REMOVED***the***REMOVED***original***REMOVED***assets***REMOVED***to***REMOVED***avoid***REMOVED***interaction***REMOVED***between***REMOVED***outputs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assetWithFileName***REMOVED***=***REMOVED***{***REMOVED***...consumedFile,***REMOVED***fileName***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.filesByReferenceId.set(consumedFile.referenceId,***REMOVED***assetWithFileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle[fileName]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***usedConsumedFile.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsCodeReference,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***usedConsumedFile.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'asset'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***ANONYMOUS_PLUGIN_PREFIX***REMOVED***=***REMOVED***'at***REMOVED***position***REMOVED***';
const***REMOVED***ANONYMOUS_OUTPUT_PLUGIN_PREFIX***REMOVED***=***REMOVED***'at***REMOVED***output***REMOVED***position***REMOVED***';

function***REMOVED***createPluginCache(cache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***delete***REMOVED***cache[id];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***item***REMOVED***=***REMOVED***cache[id];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!item)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***item[0]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***item[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***has(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***item***REMOVED***=***REMOVED***cache[id];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!item)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***item[0]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set(id,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache[id]***REMOVED***=***REMOVED***[0,***REMOVED***value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***getTrackedPluginCache(pluginCache,***REMOVED***onUse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onUse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginCache.delete(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onUse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginCache.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***has(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onUse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginCache.has(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set(id,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onUse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginCache.set(id,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
const***REMOVED***NO_CACHE***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***delete()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***get()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***has()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***set()***REMOVED***{***REMOVED***}
};
function***REMOVED***uncacheablePluginError(pluginName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginName.startsWith(ANONYMOUS_PLUGIN_PREFIX)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginName.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAnonymousPluginCache());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logDuplicatePluginName(pluginName));
}
function***REMOVED***getCacheForUncacheablePlugin(pluginName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***uncacheablePluginError(pluginName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***uncacheablePluginError(pluginName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***has()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***uncacheablePluginError(pluginName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***uncacheablePluginError(pluginName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

const***REMOVED***BLANK***REMOVED***=***REMOVED***Object.freeze(Object.create(null));
const***REMOVED***EMPTY_OBJECT***REMOVED***=***REMOVED***Object.freeze({});
const***REMOVED***EMPTY_ARRAY***REMOVED***=***REMOVED***Object.freeze([]);
const***REMOVED***EMPTY_SET***REMOVED***=***REMOVED***Object.freeze(new***REMOVED***(class***REMOVED***extends***REMOVED***Set***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***add()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Cannot***REMOVED***add***REMOVED***to***REMOVED***empty***REMOVED***set');
***REMOVED******REMOVED******REMOVED******REMOVED***}
})());

const***REMOVED***doNothing***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***};

async***REMOVED***function***REMOVED***asyncFlatten(array)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array***REMOVED***=***REMOVED***(await***REMOVED***Promise.all(array)).flat(Infinity);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(array.some((v)***REMOVED***=>***REMOVED***v?.then));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***array;
}

const***REMOVED***getOnLog***REMOVED***=***REMOVED***(config,***REMOVED***logLevel,***REMOVED***printLog***REMOVED***=***REMOVED***defaultPrintLog)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***onwarn,***REMOVED***onLog***REMOVED***}***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultOnLog***REMOVED***=***REMOVED***getDefaultOnLog(printLog,***REMOVED***onwarn);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(onLog)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minimalPriority***REMOVED***=***REMOVED***logLevelPriority[logLevel];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(level,***REMOVED***log)***REMOVED***=>***REMOVED***onLog(level,***REMOVED***addLogToString(log),***REMOVED***(level,***REMOVED***handledLog)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(level***REMOVED***===***REMOVED***LOGLEVEL_ERROR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(normalizeLog(handledLog));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(logLevelPriority[level]***REMOVED***>=***REMOVED***minimalPriority)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultOnLog(level,***REMOVED***normalizeLog(handledLog));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultOnLog;
};
const***REMOVED***getDefaultOnLog***REMOVED***=***REMOVED***(printLog,***REMOVED***onwarn)***REMOVED***=>***REMOVED***onwarn
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(level,***REMOVED***log)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(level***REMOVED***===***REMOVED***LOGLEVEL_WARN)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onwarn(addLogToString(log),***REMOVED***warning***REMOVED***=>***REMOVED***printLog(LOGLEVEL_WARN,***REMOVED***normalizeLog(warning)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***printLog(level,***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***printLog;
const***REMOVED***addLogToString***REMOVED***=***REMOVED***(log)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(log,***REMOVED***'toString',***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***()***REMOVED***=>***REMOVED***getExtendedLogMessage(log),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***log;
};
const***REMOVED***normalizeLog***REMOVED***=***REMOVED***(log)***REMOVED***=>***REMOVED***typeof***REMOVED***log***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{***REMOVED***message:***REMOVED***log***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***typeof***REMOVED***log***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***normalizeLog(log())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***log;
const***REMOVED***getExtendedLogMessage***REMOVED***=***REMOVED***(log)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***prefix***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(log.plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prefix***REMOVED***+=***REMOVED***`(${log.plugin}***REMOVED***plugin)***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(log.loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prefix***REMOVED***+=***REMOVED***`${relativeId(log.loc.file)}***REMOVED***(${log.loc.line}:${log.loc.column})***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***prefix***REMOVED***+***REMOVED***log.message;
};
const***REMOVED***defaultPrintLog***REMOVED***=***REMOVED***(level,***REMOVED***log)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***message***REMOVED***=***REMOVED***getExtendedLogMessage(log);
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(level)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***LOGLEVEL_WARN:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***console.warn(message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***LOGLEVEL_DEBUG:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***console.debug(message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***console.info(message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
function***REMOVED***warnUnknownOptions(passedOptions,***REMOVED***validOptions,***REMOVED***optionType,***REMOVED***log,***REMOVED***ignoredKeys***REMOVED***=***REMOVED***/$./)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validOptionSet***REMOVED***=***REMOVED***new***REMOVED***Set(validOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unknownOptions***REMOVED***=***REMOVED***Object.keys(passedOptions).filter(key***REMOVED***=>***REMOVED***!(validOptionSet.has(key)***REMOVED***||***REMOVED***ignoredKeys.test(key)));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unknownOptions.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logUnknownOption(optionType,***REMOVED***unknownOptions,***REMOVED***[...validOptionSet].sort()));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***treeshakePresets***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***recommended:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotations:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***correctVarValueBeforeDeclaration:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualPureFunctions:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***()***REMOVED***=>***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tryCatchDeoptimization:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unknownGlobalSideEffects:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***safest:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotations:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***correctVarValueBeforeDeclaration:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualPureFunctions:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***()***REMOVED***=>***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tryCatchDeoptimization:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unknownGlobalSideEffects:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***smallest:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotations:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***correctVarValueBeforeDeclaration:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualPureFunctions:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***()***REMOVED***=>***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tryCatchDeoptimization:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unknownGlobalSideEffects:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***generatedCodePresets***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***es2015:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrowFunctions:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constBindings:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***objectShorthand:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedNamesAsProps:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***symbols:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***es5:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrowFunctions:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constBindings:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***objectShorthand:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedNamesAsProps:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***symbols:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***objectifyOption***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***value***REMOVED***&&***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'object'***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***{};
const***REMOVED***objectifyOptionWithPresets***REMOVED***=***REMOVED***(presets,***REMOVED***optionName,***REMOVED***urlSnippet,***REMOVED***additionalValues)***REMOVED***=>***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preset***REMOVED***=***REMOVED***presets[value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***preset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logInvalidOption(optionName,***REMOVED***urlSnippet,***REMOVED***`valid***REMOVED***values***REMOVED***are***REMOVED***${additionalValues}${printQuotedStringList(Object.keys(presets))}.***REMOVED***You***REMOVED***can***REMOVED***also***REMOVED***supply***REMOVED***an***REMOVED***object***REMOVED***for***REMOVED***more***REMOVED***fine-grained***REMOVED***control`,***REMOVED***value));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***objectifyOption(value);
};
const***REMOVED***getOptionWithPreset***REMOVED***=***REMOVED***(value,***REMOVED***presets,***REMOVED***optionName,***REMOVED***urlSnippet,***REMOVED***additionalValues)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***presetName***REMOVED***=***REMOVED***value?.preset;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(presetName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preset***REMOVED***=***REMOVED***presets[presetName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***...preset,***REMOVED***...value***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logInvalidOption(`${optionName}.preset`,***REMOVED***urlSnippet,***REMOVED***`valid***REMOVED***values***REMOVED***are***REMOVED***${printQuotedStringList(Object.keys(presets))}`,***REMOVED***presetName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***objectifyOptionWithPresets(presets,***REMOVED***optionName,***REMOVED***urlSnippet,***REMOVED***additionalValues)(value);
};
const***REMOVED***normalizePluginOption***REMOVED***=***REMOVED***async***REMOVED***(plugins)***REMOVED***=>***REMOVED***(await***REMOVED***asyncFlatten([plugins])).filter(Boolean);

function***REMOVED***getLogHandler(level,***REMOVED***code,***REMOVED***logger,***REMOVED***pluginName,***REMOVED***logLevel)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(logLevelPriority[level]***REMOVED***<***REMOVED***logLevelPriority[logLevel])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***doNothing;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(log,***REMOVED***pos)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logger(LOGLEVEL_WARN,***REMOVED***logInvalidLogPosition(pluginName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log***REMOVED***=***REMOVED***normalizeLog(log);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(log.code***REMOVED***&&***REMOVED***!log.pluginCode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log.pluginCode***REMOVED***=***REMOVED***log.code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log.code***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log.plugin***REMOVED***=***REMOVED***pluginName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logger(level,***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

function***REMOVED***getPluginContext(plugin,***REMOVED***pluginCache,***REMOVED***graph,***REMOVED***options,***REMOVED***fileEmitter,***REMOVED***existingPluginNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***logLevel,***REMOVED***onLog***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cacheable***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***plugin.cacheKey***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(plugin.name.startsWith(ANONYMOUS_PLUGIN_PREFIX)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin.name.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingPluginNames.has(plugin.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingPluginNames.add(plugin.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cacheInstance;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!pluginCache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheInstance***REMOVED***=***REMOVED***NO_CACHE;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(cacheable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cacheKey***REMOVED***=***REMOVED***plugin.cacheKey***REMOVED***||***REMOVED***plugin.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheInstance***REMOVED***=***REMOVED***createPluginCache(pluginCache[cacheKey]***REMOVED***||***REMOVED***(pluginCache[cacheKey]***REMOVED***=***REMOVED***Object.create(null)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheInstance***REMOVED***=***REMOVED***getCacheForUncacheablePlugin(plugin.name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addWatchFile(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(graph.phase***REMOVED***>=***REMOVED***BuildPhase.GENERATE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error(logInvalidRollupPhaseForAddWatchFile());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***graph.watchFiles[id]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache:***REMOVED***cacheInstance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debug:***REMOVED***getLogHandler(LOGLEVEL_DEBUG,***REMOVED***'PLUGIN_LOG',***REMOVED***onLog,***REMOVED***plugin.name,***REMOVED***logLevel),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitFile:***REMOVED***fileEmitter.emitFile.bind(fileEmitter),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logPluginError(normalizeLog(error_),***REMOVED***plugin.name));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getFileName:***REMOVED***fileEmitter.getFileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getModuleIds:***REMOVED***()***REMOVED***=>***REMOVED***graph.modulesById.keys(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getModuleInfo:***REMOVED***graph.getModuleInfo,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getWatchFiles:***REMOVED***()***REMOVED***=>***REMOVED***Object.keys(graph.watchFiles),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***info:***REMOVED***getLogHandler(LOGLEVEL_INFO,***REMOVED***'PLUGIN_LOG',***REMOVED***onLog,***REMOVED***plugin.name,***REMOVED***logLevel),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***load(resolvedId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***graph.moduleLoader.preloadModule(resolvedId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollupVersion:***REMOVED***version$1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchMode:***REMOVED***graph.watchMode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***moduleIds()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function****REMOVED***wrappedModuleIds()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***are***REMOVED***wrapping***REMOVED***this***REMOVED***in***REMOVED***a***REMOVED***generator***REMOVED***to***REMOVED***only***REMOVED***show***REMOVED***the***REMOVED***message***REMOVED***once***REMOVED***we***REMOVED***are***REMOVED***actually***REMOVED***iterating
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation(`Accessing***REMOVED***"this.moduleIds"***REMOVED***on***REMOVED***the***REMOVED***plugin***REMOVED***context***REMOVED***by***REMOVED***plugin***REMOVED***${plugin.name}***REMOVED***is***REMOVED***deprecated.***REMOVED***The***REMOVED***"this.getModuleIds"***REMOVED***plugin***REMOVED***context***REMOVED***function***REMOVED***should***REMOVED***be***REMOVED***used***REMOVED***instead.`,***REMOVED***URL_THIS_GETMODULEIDS,***REMOVED***true,***REMOVED***options,***REMOVED***plugin.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield****REMOVED***moduleIds;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleIds***REMOVED***=***REMOVED***graph.modulesById.keys();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrappedModuleIds();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parse:***REMOVED***graph.contextParse.bind(graph),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve(source,***REMOVED***importer,***REMOVED***{***REMOVED***assertions,***REMOVED***custom,***REMOVED***isEntry,***REMOVED***skipSelf***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***graph.moduleLoader.resolveId(source,***REMOVED***importer,***REMOVED***custom,***REMOVED***isEntry,***REMOVED***assertions***REMOVED***||***REMOVED***EMPTY_OBJECT,***REMOVED***skipSelf***REMOVED***?***REMOVED***[{***REMOVED***importer,***REMOVED***plugin,***REMOVED***source***REMOVED***}]***REMOVED***:***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setAssetSource:***REMOVED***fileEmitter.setAssetSource,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn:***REMOVED***getLogHandler(LOGLEVEL_WARN,***REMOVED***'PLUGIN_WARNING',***REMOVED***onLog,***REMOVED***plugin.name,***REMOVED***logLevel)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

//***REMOVED***This***REMOVED***will***REMOVED***make***REMOVED***sure***REMOVED***no***REMOVED***input***REMOVED***hook***REMOVED***is***REMOVED***omitted
const***REMOVED***inputHookNames***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***buildEnd:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***buildStart:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***closeBundle:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***closeWatcher:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***load:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***moduleParsed:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***onLog:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***resolveDynamicImport:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***resolveId:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***shouldTransformCachedModule:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***watchChange:***REMOVED***1
};
const***REMOVED***inputHooks***REMOVED***=***REMOVED***Object.keys(inputHookNames);
class***REMOVED***PluginDriver***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(graph,***REMOVED***options,***REMOVED***userPlugins,***REMOVED***pluginCache,***REMOVED***basePluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph***REMOVED***=***REMOVED***graph;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginCache***REMOVED***=***REMOVED***pluginCache;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sortedPlugins***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unfulfilledActions***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fileEmitter***REMOVED***=***REMOVED***new***REMOVED***FileEmitter(graph,***REMOVED***options,***REMOVED***basePluginDriver***REMOVED***&&***REMOVED***basePluginDriver.fileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emitFile***REMOVED***=***REMOVED***this.fileEmitter.emitFile.bind(this.fileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getFileName***REMOVED***=***REMOVED***this.fileEmitter.getFileName.bind(this.fileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finaliseAssets***REMOVED***=***REMOVED***this.fileEmitter.finaliseAssets.bind(this.fileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setChunkInformation***REMOVED***=***REMOVED***this.fileEmitter.setChunkInformation.bind(this.fileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setOutputBundle***REMOVED***=***REMOVED***this.fileEmitter.setOutputBundle.bind(this.fileEmitter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.plugins***REMOVED***=***REMOVED***[...(basePluginDriver***REMOVED***?***REMOVED***basePluginDriver.plugins***REMOVED***:***REMOVED***[]),***REMOVED***...userPlugins];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingPluginNames***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginContexts***REMOVED***=***REMOVED***new***REMOVED***Map(this.plugins.map(plugin***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getPluginContext(plugin,***REMOVED***pluginCache,***REMOVED***graph,***REMOVED***options,***REMOVED***this.fileEmitter,***REMOVED***existingPluginNames)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(basePluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***userPlugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***hook***REMOVED***of***REMOVED***inputHooks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook***REMOVED***in***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.onLog(LOGLEVEL_WARN,***REMOVED***logInputHookInOutputPlugin(plugin.name,***REMOVED***hook));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***createOutputPluginDriver(plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***PluginDriver(this.graph,***REMOVED***this.options,***REMOVED***plugins,***REMOVED***this.pluginCache,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getUnfulfilledHookActions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.unfulfilledActions;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains,***REMOVED***first***REMOVED***non-null***REMOVED***result***REMOVED***stops***REMOVED***and***REMOVED***returns
***REMOVED******REMOVED******REMOVED******REMOVED***hookFirst(hookName,***REMOVED***parameters,***REMOVED***replaceContext,***REMOVED***skipped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hookFirstAndGetPlugin(hookName,***REMOVED***parameters,***REMOVED***replaceContext,***REMOVED***skipped).then(result***REMOVED***=>***REMOVED***result***REMOVED***&&***REMOVED***result[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains,***REMOVED***first***REMOVED***non-null***REMOVED***result***REMOVED***stops***REMOVED***and***REMOVED***returns***REMOVED***result***REMOVED***and***REMOVED***last***REMOVED***plugin
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***hookFirstAndGetPlugin(hookName,***REMOVED***parameters,***REMOVED***replaceContext,***REMOVED***skipped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(skipped?.has(plugin))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***await***REMOVED***this.runHook(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!=***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[result,***REMOVED***plugin];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains***REMOVED***synchronously,***REMOVED***first***REMOVED***non-null***REMOVED***result***REMOVED***stops***REMOVED***and***REMOVED***returns
***REMOVED******REMOVED******REMOVED******REMOVED***hookFirstSync(hookName,***REMOVED***parameters,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.runHookSync(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!=***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***parallel,***REMOVED***ignores***REMOVED***returns
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***hookParallel(hookName,***REMOVED***parameters,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parallelPromises***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(plugin[hookName].sequential)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(parallelPromises);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parallelPromises.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.runHook(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parallelPromises.push(this.runHook(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(parallelPromises);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains,***REMOVED***reduces***REMOVED***returned***REMOVED***value,***REMOVED***handling***REMOVED***the***REMOVED***reduced***REMOVED***value***REMOVED***as***REMOVED***the***REMOVED***first***REMOVED***hook***REMOVED***argument
***REMOVED******REMOVED******REMOVED******REMOVED***hookReduceArg0(hookName,***REMOVED***[argument0,***REMOVED***...rest],***REMOVED***reduce,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***promise***REMOVED***=***REMOVED***Promise.resolve(argument0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promise***REMOVED***=***REMOVED***promise.then(argument0***REMOVED***=>***REMOVED***this.runHook(hookName,***REMOVED***[argument0,***REMOVED***...rest],***REMOVED***plugin,***REMOVED***replaceContext).then(result***REMOVED***=>***REMOVED***reduce.call(this.pluginContexts.get(plugin),***REMOVED***argument0,***REMOVED***result,***REMOVED***plugin)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promise;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains***REMOVED***synchronously,***REMOVED***reduces***REMOVED***returned***REMOVED***value,***REMOVED***handling***REMOVED***the***REMOVED***reduced***REMOVED***value***REMOVED***as***REMOVED***the***REMOVED***first***REMOVED***hook***REMOVED***argument
***REMOVED******REMOVED******REMOVED******REMOVED***hookReduceArg0Sync(hookName,***REMOVED***[argument0,***REMOVED***...rest],***REMOVED***reduce,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parameters***REMOVED***=***REMOVED***[argument0,***REMOVED***...rest];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.runHookSync(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument0***REMOVED***=***REMOVED***reduce.call(this.pluginContexts.get(plugin),***REMOVED***argument0,***REMOVED***result,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***argument0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains,***REMOVED***reduces***REMOVED***returned***REMOVED***value***REMOVED***to***REMOVED***type***REMOVED***string,***REMOVED***handling***REMOVED***the***REMOVED***reduced***REMOVED***value***REMOVED***separately.***REMOVED***permits***REMOVED***hooks***REMOVED***as***REMOVED***values.
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***hookReduceValue(hookName,***REMOVED***initialValue,***REMOVED***parameters,***REMOVED***reducer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***results***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parallelResults***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName,***REMOVED***validateAddonPluginHandler))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(plugin[hookName].sequential)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***results.push(...(await***REMOVED***Promise.all(parallelResults)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parallelResults.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***results.push(await***REMOVED***this.runHook(hookName,***REMOVED***parameters,***REMOVED***plugin));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parallelResults.push(this.runHook(hookName,***REMOVED***parameters,***REMOVED***plugin));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***results.push(...(await***REMOVED***Promise.all(parallelResults)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***results.reduce(reducer,***REMOVED***await***REMOVED***initialValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains***REMOVED***synchronously,***REMOVED***reduces***REMOVED***returned***REMOVED***value***REMOVED***to***REMOVED***type***REMOVED***T,***REMOVED***handling***REMOVED***the***REMOVED***reduced***REMOVED***value***REMOVED***separately.***REMOVED***permits***REMOVED***hooks***REMOVED***as***REMOVED***values.
***REMOVED******REMOVED******REMOVED******REMOVED***hookReduceValueSync(hookName,***REMOVED***initialValue,***REMOVED***parameters,***REMOVED***reduce,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***accumulator***REMOVED***=***REMOVED***initialValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.runHookSync(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accumulator***REMOVED***=***REMOVED***reduce.call(this.pluginContexts.get(plugin),***REMOVED***accumulator,***REMOVED***result,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***accumulator;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chains,***REMOVED***ignores***REMOVED***returns
***REMOVED******REMOVED******REMOVED******REMOVED***hookSeq(hookName,***REMOVED***parameters,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***promise***REMOVED***=***REMOVED***Promise.resolve();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***this.getSortedPlugins(hookName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promise***REMOVED***=***REMOVED***promise.then(()***REMOVED***=>***REMOVED***this.runHook(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promise.then(noReturn);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getSortedPlugins(hookName,***REMOVED***validateHandler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getOrCreate(this.sortedPlugins,***REMOVED***hookName,***REMOVED***()***REMOVED***=>***REMOVED***getSortedValidatedPlugins(hookName,***REMOVED***this.plugins,***REMOVED***validateHandler));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Implementation***REMOVED***signature
***REMOVED******REMOVED******REMOVED******REMOVED***runHook(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***always***REMOVED***filter***REMOVED***for***REMOVED***plugins***REMOVED***that***REMOVED***support***REMOVED***the***REMOVED***hook***REMOVED***before***REMOVED***running***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hook***REMOVED***=***REMOVED***plugin[hookName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***typeof***REMOVED***hook***REMOVED***===***REMOVED***'object'***REMOVED***?***REMOVED***hook.handler***REMOVED***:***REMOVED***hook;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***context***REMOVED***=***REMOVED***this.pluginContexts.get(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context***REMOVED***=***REMOVED***replaceContext(context,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***action***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.resolve()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***handler***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handler;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/ban-types
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hookResult***REMOVED***=***REMOVED***handler.apply(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hookResult?.then)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***short***REMOVED***circuit***REMOVED***for***REMOVED***non-thenables***REMOVED***and***REMOVED***non-Promises
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hookResult;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Track***REMOVED***pending***REMOVED***hook***REMOVED***actions***REMOVED***to***REMOVED***properly***REMOVED***error***REMOVED***out***REMOVED***when
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***unfulfilled***REMOVED***promises***REMOVED***cause***REMOVED***rollup***REMOVED***to***REMOVED***abruptly***REMOVED***and***REMOVED***confusingly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***exit***REMOVED***with***REMOVED***a***REMOVED***successful***REMOVED***0***REMOVED***return***REMOVED***code***REMOVED***but***REMOVED***without***REMOVED***producing***REMOVED***any
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***output,***REMOVED***errors***REMOVED***or***REMOVED***warnings.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***action***REMOVED***=***REMOVED***[plugin.name,***REMOVED***hookName,***REMOVED***parameters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unfulfilledActions.add(action);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Although***REMOVED***it***REMOVED***would***REMOVED***be***REMOVED***more***REMOVED***elegant***REMOVED***to***REMOVED***just***REMOVED***return***REMOVED***hookResult***REMOVED***here
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***put***REMOVED***the***REMOVED***.then()***REMOVED***handler***REMOVED***just***REMOVED***above***REMOVED***the***REMOVED***.catch()***REMOVED***handler***REMOVED***below,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***doing***REMOVED***so***REMOVED***would***REMOVED***subtly***REMOVED***change***REMOVED***the***REMOVED***defacto***REMOVED***async***REMOVED***event***REMOVED***dispatch***REMOVED***order
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***which***REMOVED***at***REMOVED***least***REMOVED***one***REMOVED***test***REMOVED***and***REMOVED***some***REMOVED***plugins***REMOVED***in***REMOVED***the***REMOVED***wild***REMOVED***may***REMOVED***depend***REMOVED***on.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.resolve(hookResult).then(result***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***action***REMOVED***was***REMOVED***fulfilled
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unfulfilledActions.delete(action);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.catch(error_***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(action***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***action***REMOVED***considered***REMOVED***to***REMOVED***be***REMOVED***fulfilled***REMOVED***since***REMOVED***error***REMOVED***being***REMOVED***handled
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unfulfilledActions.delete(action);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logPluginError(error_,***REMOVED***plugin.name,***REMOVED***{***REMOVED***hook:***REMOVED***hookName***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Run***REMOVED***a***REMOVED***sync***REMOVED***plugin***REMOVED***hook***REMOVED***and***REMOVED***return***REMOVED***the***REMOVED***result.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***hookName***REMOVED***Name***REMOVED***of***REMOVED***the***REMOVED***plugin***REMOVED***hook.***REMOVED***Must***REMOVED***be***REMOVED***in***REMOVED***`PluginHooks`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***args***REMOVED***Arguments***REMOVED***passed***REMOVED***to***REMOVED***the***REMOVED***plugin***REMOVED***hook.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***plugin***REMOVED***The***REMOVED***acutal***REMOVED***plugin
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***replaceContext***REMOVED***When***REMOVED***passed,***REMOVED***the***REMOVED***plugin***REMOVED***context***REMOVED***can***REMOVED***be***REMOVED***overridden.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***runHookSync(hookName,***REMOVED***parameters,***REMOVED***plugin,***REMOVED***replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hook***REMOVED***=***REMOVED***plugin[hookName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***typeof***REMOVED***hook***REMOVED***===***REMOVED***'object'***REMOVED***?***REMOVED***hook.handler***REMOVED***:***REMOVED***hook;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***context***REMOVED***=***REMOVED***this.pluginContexts.get(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(replaceContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context***REMOVED***=***REMOVED***replaceContext(context,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/ban-types
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handler.apply(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logPluginError(error_,***REMOVED***plugin.name,***REMOVED***{***REMOVED***hook:***REMOVED***hookName***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getSortedValidatedPlugins(hookName,***REMOVED***plugins,***REMOVED***validateHandler***REMOVED***=***REMOVED***validateFunctionPluginHandler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pre***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***post***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hook***REMOVED***=***REMOVED***plugin[hookName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***hook***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateHandler(hook.handler,***REMOVED***hookName,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook.order***REMOVED***===***REMOVED***'pre')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pre.push(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook.order***REMOVED***===***REMOVED***'post')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***post.push(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateHandler(hook,***REMOVED***hookName,***REMOVED***plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normal.push(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...pre,***REMOVED***...normal,***REMOVED***...post];
}
function***REMOVED***validateFunctionPluginHandler(handler,***REMOVED***hookName,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***handler***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logInvalidFunctionPluginHook(hookName,***REMOVED***plugin.name));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***validateAddonPluginHandler(handler,***REMOVED***hookName,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***handler***REMOVED***!==***REMOVED***'string'***REMOVED***&&***REMOVED***typeof***REMOVED***handler***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidAddonPluginHook(hookName,***REMOVED***plugin.name));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***noReturn()***REMOVED***{***REMOVED***}

function***REMOVED***getLogger(plugins,***REMOVED***onLog,***REMOVED***watchMode,***REMOVED***logLevel)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins***REMOVED***=***REMOVED***getSortedValidatedPlugins('onLog',***REMOVED***plugins);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minimalPriority***REMOVED***=***REMOVED***logLevelPriority[logLevel];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logger***REMOVED***=***REMOVED***(level,***REMOVED***log,***REMOVED***skipped***REMOVED***=***REMOVED***EMPTY_SET)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logPriority***REMOVED***=***REMOVED***logLevelPriority[level];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(logPriority***REMOVED***<***REMOVED***minimalPriority)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(skipped.has(plugin))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***onLog:***REMOVED***pluginOnLog***REMOVED***}***REMOVED***=***REMOVED***plugin;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getLogHandler***REMOVED***=***REMOVED***(level)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(logLevelPriority[level]***REMOVED***<***REMOVED***minimalPriority)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***doNothing;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***log***REMOVED***=>***REMOVED***logger(level,***REMOVED***normalizeLog(log),***REMOVED***new***REMOVED***Set(skipped).add(plugin));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***'handler'***REMOVED***in***REMOVED***pluginOnLog***REMOVED***?***REMOVED***pluginOnLog.handler***REMOVED***:***REMOVED***pluginOnLog;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(handler.call({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debug:***REMOVED***getLogHandler(LOGLEVEL_DEBUG),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***(log)***REMOVED***=>***REMOVED***error(normalizeLog(log)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***info:***REMOVED***getLogHandler(LOGLEVEL_INFO),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{***REMOVED***rollupVersion:***REMOVED***version$1,***REMOVED***watchMode***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn:***REMOVED***getLogHandler(LOGLEVEL_WARN)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***level,***REMOVED***log)***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onLog(level,***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***logger;
}

const***REMOVED***commandAliases***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***c:***REMOVED***'config',
***REMOVED******REMOVED******REMOVED******REMOVED***d:***REMOVED***'dir',
***REMOVED******REMOVED******REMOVED******REMOVED***e:***REMOVED***'external',
***REMOVED******REMOVED******REMOVED******REMOVED***f:***REMOVED***'format',
***REMOVED******REMOVED******REMOVED******REMOVED***g:***REMOVED***'globals',
***REMOVED******REMOVED******REMOVED******REMOVED***h:***REMOVED***'help',
***REMOVED******REMOVED******REMOVED******REMOVED***i:***REMOVED***'input',
***REMOVED******REMOVED******REMOVED******REMOVED***m:***REMOVED***'sourcemap',
***REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***'name',
***REMOVED******REMOVED******REMOVED******REMOVED***o:***REMOVED***'file',
***REMOVED******REMOVED******REMOVED******REMOVED***p:***REMOVED***'plugin',
***REMOVED******REMOVED******REMOVED******REMOVED***v:***REMOVED***'version',
***REMOVED******REMOVED******REMOVED******REMOVED***w:***REMOVED***'watch'
};
const***REMOVED***EMPTY_COMMAND_OPTIONS***REMOVED***=***REMOVED***{***REMOVED***external:***REMOVED***[],***REMOVED***globals:***REMOVED***undefined***REMOVED***};
async***REMOVED***function***REMOVED***mergeOptions(config,***REMOVED***watchMode,***REMOVED***rawCommandOptions***REMOVED***=***REMOVED***EMPTY_COMMAND_OPTIONS,***REMOVED***printLog)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***command***REMOVED***=***REMOVED***getCommandOptions(rawCommandOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***await***REMOVED***normalizePluginOption(config.plugins);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logLevel***REMOVED***=***REMOVED***config.logLevel***REMOVED***||***REMOVED***LOGLEVEL_INFO;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onLog***REMOVED***=***REMOVED***getOnLog(config,***REMOVED***logLevel,***REMOVED***printLog);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***log***REMOVED***=***REMOVED***getLogger(plugins,***REMOVED***onLog,***REMOVED***watchMode,***REMOVED***logLevel);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inputOptions***REMOVED***=***REMOVED***await***REMOVED***mergeInputOptions(config,***REMOVED***command,***REMOVED***plugins,***REMOVED***log,***REMOVED***onLog);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(command.output)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(command,***REMOVED***command.output);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputOptionsArray***REMOVED***=***REMOVED***ensureArray$1(config.output);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(outputOptionsArray.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputOptionsArray.push({});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputOptions***REMOVED***=***REMOVED***await***REMOVED***Promise.all(outputOptionsArray.map(singleOutputOptions***REMOVED***=>***REMOVED***mergeOutputOptions(singleOutputOptions,***REMOVED***command,***REMOVED***log)));
***REMOVED******REMOVED******REMOVED******REMOVED***warnUnknownOptions(command,***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...Object.keys(inputOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...Object.keys(outputOptions[0]).filter(option***REMOVED***=>***REMOVED***option***REMOVED***!==***REMOVED***'sourcemapIgnoreList'***REMOVED***&&***REMOVED***option***REMOVED***!==***REMOVED***'sourcemapPathTransform'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...Object.keys(commandAliases),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'bundleConfigAsCjs',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'config',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'environment',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'filterLogs',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'plugin',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'silent',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'failAfterWarnings',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'stdin',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'waitForBundleInput',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'configPlugin'
***REMOVED******REMOVED******REMOVED******REMOVED***],***REMOVED***'CLI***REMOVED***flags',***REMOVED***log,***REMOVED***/^_$|output$|config/);
***REMOVED******REMOVED******REMOVED******REMOVED***inputOptions.output***REMOVED***=***REMOVED***outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inputOptions;
}
function***REMOVED***getCommandOptions(rawCommandOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***external***REMOVED***=***REMOVED***rawCommandOptions.external***REMOVED***&&***REMOVED***typeof***REMOVED***rawCommandOptions.external***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***rawCommandOptions.external.split(',')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...rawCommandOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globals:***REMOVED***typeof***REMOVED***rawCommandOptions.globals***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***rawCommandOptions.globals.split(',').reduce((globals,***REMOVED***globalDefinition)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[id,***REMOVED***variableName]***REMOVED***=***REMOVED***globalDefinition.split(':');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globals[id]***REMOVED***=***REMOVED***variableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!external.includes(id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external.push(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globals;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***Object.create(null))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***mergeInputOptions(config,***REMOVED***overrides,***REMOVED***plugins,***REMOVED***log,***REMOVED***onLog)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getOption***REMOVED***=***REMOVED***(name)***REMOVED***=>***REMOVED***overrides[name]***REMOVED***??***REMOVED***config[name];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inputOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acorn:***REMOVED***getOption('acorn'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acornInjectPlugins:***REMOVED***config.acornInjectPlugins,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache:***REMOVED***config.cache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context:***REMOVED***getOption('context'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalCacheExpiry:***REMOVED***getOption('experimentalCacheExpiry'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalLogSideEffects:***REMOVED***getOption('experimentalLogSideEffects'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***getExternal(config,***REMOVED***overrides),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inlineDynamicImports:***REMOVED***getOption('inlineDynamicImports'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***input:***REMOVED***getOption('input')***REMOVED***||***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logLevel:***REMOVED***getOption('logLevel'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***makeAbsoluteExternalsRelative:***REMOVED***getOption('makeAbsoluteExternalsRelative'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunks:***REMOVED***getOption('manualChunks'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxParallelFileOps:***REMOVED***getOption('maxParallelFileOps'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxParallelFileReads:***REMOVED***getOption('maxParallelFileReads'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleContext:***REMOVED***getOption('moduleContext'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onLog,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onwarn:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***perf:***REMOVED***getOption('perf'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveEntrySignatures:***REMOVED***getOption('preserveEntrySignatures'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveModules:***REMOVED***getOption('preserveModules'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveSymlinks:***REMOVED***getOption('preserveSymlinks'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shimMissingExports:***REMOVED***getOption('shimMissingExports'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictDeprecations:***REMOVED***getOption('strictDeprecations'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeshake:***REMOVED***getObjectOption(config,***REMOVED***overrides,***REMOVED***'treeshake',***REMOVED***objectifyOptionWithPresets(treeshakePresets,***REMOVED***'treeshake',***REMOVED***URL_TREESHAKE,***REMOVED***'false,***REMOVED***true,***REMOVED***')),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watch:***REMOVED***getWatch(config,***REMOVED***overrides)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***warnUnknownOptions(config,***REMOVED***Object.keys(inputOptions),***REMOVED***'input***REMOVED***options',***REMOVED***log,***REMOVED***/^output$/);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inputOptions;
}
const***REMOVED***getExternal***REMOVED***=***REMOVED***(config,***REMOVED***overrides)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configExternal***REMOVED***=***REMOVED***config.external;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***configExternal***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(source,***REMOVED***importer,***REMOVED***isResolved)***REMOVED***=>***REMOVED***configExternal(source,***REMOVED***importer,***REMOVED***isResolved)***REMOVED***||***REMOVED***overrides.external.includes(source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[...ensureArray$1(configExternal),***REMOVED***...overrides.external];
};
const***REMOVED***getObjectOption***REMOVED***=***REMOVED***(config,***REMOVED***overrides,***REMOVED***name,***REMOVED***objectifyValue***REMOVED***=***REMOVED***objectifyOption)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commandOption***REMOVED***=***REMOVED***normalizeObjectOptionValue(overrides[name],***REMOVED***objectifyValue);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configOption***REMOVED***=***REMOVED***normalizeObjectOptionValue(config[name],***REMOVED***objectifyValue);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commandOption***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***commandOption***REMOVED***&&***REMOVED***{***REMOVED***...configOption,***REMOVED***...commandOption***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configOption;
};
const***REMOVED***getWatch***REMOVED***=***REMOVED***(config,***REMOVED***overrides)***REMOVED***=>***REMOVED***config.watch***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***getObjectOption(config,***REMOVED***overrides,***REMOVED***'watch');
const***REMOVED***isWatchEnabled***REMOVED***=***REMOVED***(optionValue)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(optionValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***optionValue.reduce((result,***REMOVED***value)***REMOVED***=>***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***'boolean'***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***result),***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***optionValue***REMOVED***===***REMOVED***true;
};
const***REMOVED***normalizeObjectOptionValue***REMOVED***=***REMOVED***(optionValue,***REMOVED***objectifyValue)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!optionValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***optionValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(optionValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***optionValue.reduce((result,***REMOVED***value)***REMOVED***=>***REMOVED***value***REMOVED***&&***REMOVED***result***REMOVED***&&***REMOVED***{***REMOVED***...result,***REMOVED***...objectifyValue(value)***REMOVED***},***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***objectifyValue(optionValue);
};
async***REMOVED***function***REMOVED***mergeOutputOptions(config,***REMOVED***overrides,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getOption***REMOVED***=***REMOVED***(name)***REMOVED***=>***REMOVED***overrides[name]***REMOVED***??***REMOVED***config[name];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***getObjectOption(config,***REMOVED***overrides,***REMOVED***'amd'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assetFileNames:***REMOVED***getOption('assetFileNames'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***banner:***REMOVED***getOption('banner'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkFileNames:***REMOVED***getOption('chunkFileNames'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compact:***REMOVED***getOption('compact'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dir:***REMOVED***getOption('dir'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportFunction:***REMOVED***getOption('dynamicImportFunction'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportInCjs:***REMOVED***getOption('dynamicImportInCjs'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryFileNames:***REMOVED***getOption('entryFileNames'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***esModule:***REMOVED***getOption('esModule'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalDeepDynamicChunkOptimization:***REMOVED***getOption('experimentalDeepDynamicChunkOptimization'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalMinChunkSize:***REMOVED***getOption('experimentalMinChunkSize'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***getOption('exports'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend:***REMOVED***getOption('extend'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalImportAssertions:***REMOVED***getOption('externalImportAssertions'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalLiveBindings:***REMOVED***getOption('externalLiveBindings'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***getOption('file'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***footer:***REMOVED***getOption('footer'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format:***REMOVED***getOption('format'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***freeze:***REMOVED***getOption('freeze'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedCode:***REMOVED***getObjectOption(config,***REMOVED***overrides,***REMOVED***'generatedCode',***REMOVED***objectifyOptionWithPresets(generatedCodePresets,***REMOVED***'output.generatedCode',***REMOVED***URL_OUTPUT_GENERATEDCODE,***REMOVED***'')),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globals:***REMOVED***getOption('globals'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistTransitiveImports:***REMOVED***getOption('hoistTransitiveImports'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indent:***REMOVED***getOption('indent'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inlineDynamicImports:***REMOVED***getOption('inlineDynamicImports'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***interop:***REMOVED***getOption('interop'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***intro:***REMOVED***getOption('intro'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunks:***REMOVED***getOption('manualChunks'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***minifyInternalExports:***REMOVED***getOption('minifyInternalExports'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***getOption('name'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceToStringTag:***REMOVED***getOption('namespaceToStringTag'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noConflict:***REMOVED***getOption('noConflict'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outro:***REMOVED***getOption('outro'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paths:***REMOVED***getOption('paths'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***await***REMOVED***normalizePluginOption(config.plugins),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preferConst:***REMOVED***getOption('preferConst'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveModules:***REMOVED***getOption('preserveModules'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveModulesRoot:***REMOVED***getOption('preserveModulesRoot'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sanitizeFileName:***REMOVED***getOption('sanitizeFileName'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemap:***REMOVED***getOption('sourcemap'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapBaseUrl:***REMOVED***getOption('sourcemapBaseUrl'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapExcludeSources:***REMOVED***getOption('sourcemapExcludeSources'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFile:***REMOVED***getOption('sourcemapFile'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileNames:***REMOVED***getOption('sourcemapFileNames'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapIgnoreList:***REMOVED***getOption('sourcemapIgnoreList'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapPathTransform:***REMOVED***getOption('sourcemapPathTransform'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strict:***REMOVED***getOption('strict'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***systemNullSetters:***REMOVED***getOption('systemNullSetters'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***getOption('validate')
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***warnUnknownOptions(config,***REMOVED***Object.keys(outputOptions),***REMOVED***'output***REMOVED***options',***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***outputOptions;
}

const***REMOVED***{
***REMOVED******REMOVED***env***REMOVED***=***REMOVED***{},
***REMOVED******REMOVED***argv***REMOVED***=***REMOVED***[],
***REMOVED******REMOVED***platform***REMOVED***=***REMOVED***"",
}***REMOVED***=***REMOVED***typeof***REMOVED***process***REMOVED***===***REMOVED***"undefined"***REMOVED***?***REMOVED***{}***REMOVED***:***REMOVED***process;

const***REMOVED***isDisabled***REMOVED***=***REMOVED***"NO_COLOR"***REMOVED***in***REMOVED***env***REMOVED***||***REMOVED***argv.includes("--no-color");
const***REMOVED***isForced***REMOVED***=***REMOVED***"FORCE_COLOR"***REMOVED***in***REMOVED***env***REMOVED***||***REMOVED***argv.includes("--color");
const***REMOVED***isWindows***REMOVED***=***REMOVED***platform***REMOVED***===***REMOVED***"win32";
const***REMOVED***isDumbTerminal***REMOVED***=***REMOVED***env.TERM***REMOVED***===***REMOVED***"dumb";

const***REMOVED***isCompatibleTerminal***REMOVED***=
***REMOVED******REMOVED***tty__namespace***REMOVED***&&***REMOVED***tty__namespace.isatty***REMOVED***&&***REMOVED***tty__namespace.isatty(1)***REMOVED***&&***REMOVED***env.TERM***REMOVED***&&***REMOVED***!isDumbTerminal;

const***REMOVED***isCI***REMOVED***=
***REMOVED******REMOVED***"CI"***REMOVED***in***REMOVED***env***REMOVED***&&
***REMOVED******REMOVED***("GITHUB_ACTIONS"***REMOVED***in***REMOVED***env***REMOVED***||***REMOVED***"GITLAB_CI"***REMOVED***in***REMOVED***env***REMOVED***||***REMOVED***"CIRCLECI"***REMOVED***in***REMOVED***env);

const***REMOVED***isColorSupported***REMOVED***=
***REMOVED******REMOVED***!isDisabled***REMOVED***&&
***REMOVED******REMOVED***(isForced***REMOVED***||***REMOVED***(isWindows***REMOVED***&&***REMOVED***!isDumbTerminal)***REMOVED***||***REMOVED***isCompatibleTerminal***REMOVED***||***REMOVED***isCI);

const***REMOVED***replaceClose***REMOVED***=***REMOVED***(
***REMOVED******REMOVED***index,
***REMOVED******REMOVED***string,
***REMOVED******REMOVED***close,
***REMOVED******REMOVED***replace,
***REMOVED******REMOVED***head***REMOVED***=***REMOVED***string.substring(0,***REMOVED***index)***REMOVED***+***REMOVED***replace,
***REMOVED******REMOVED***tail***REMOVED***=***REMOVED***string.substring(index***REMOVED***+***REMOVED***close.length),
***REMOVED******REMOVED***next***REMOVED***=***REMOVED***tail.indexOf(close)
)***REMOVED***=>***REMOVED***head***REMOVED***+***REMOVED***(next***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***tail***REMOVED***:***REMOVED***replaceClose(next,***REMOVED***tail,***REMOVED***close,***REMOVED***replace));

const***REMOVED***clearBleed***REMOVED***=***REMOVED***(index,***REMOVED***string,***REMOVED***open,***REMOVED***close,***REMOVED***replace)***REMOVED***=>
***REMOVED******REMOVED***index***REMOVED***<***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***open***REMOVED***+***REMOVED***string***REMOVED***+***REMOVED***close
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***open***REMOVED***+***REMOVED***replaceClose(index,***REMOVED***string,***REMOVED***close,***REMOVED***replace)***REMOVED***+***REMOVED***close;

const***REMOVED***filterEmpty***REMOVED***=
***REMOVED******REMOVED***(open,***REMOVED***close,***REMOVED***replace***REMOVED***=***REMOVED***open,***REMOVED***at***REMOVED***=***REMOVED***open.length***REMOVED***+***REMOVED***1)***REMOVED***=>
***REMOVED******REMOVED***(string)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***||***REMOVED***!(string***REMOVED***===***REMOVED***""***REMOVED***||***REMOVED***string***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***clearBleed(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(""***REMOVED***+***REMOVED***string).indexOf(close,***REMOVED***at),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***open,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***close,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***"";

const***REMOVED***init***REMOVED***=***REMOVED***(open,***REMOVED***close,***REMOVED***replace)***REMOVED***=>
***REMOVED******REMOVED***filterEmpty(`\x1b[${open}m`,***REMOVED***`\x1b[${close}m`,***REMOVED***replace);

const***REMOVED***colors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***reset:***REMOVED***init(0,***REMOVED***0),
***REMOVED******REMOVED***bold:***REMOVED***init(1,***REMOVED***22,***REMOVED***"\x1b[22m\x1b[1m"),
***REMOVED******REMOVED***dim:***REMOVED***init(2,***REMOVED***22,***REMOVED***"\x1b[22m\x1b[2m"),
***REMOVED******REMOVED***italic:***REMOVED***init(3,***REMOVED***23),
***REMOVED******REMOVED***underline:***REMOVED***init(4,***REMOVED***24),
***REMOVED******REMOVED***inverse:***REMOVED***init(7,***REMOVED***27),
***REMOVED******REMOVED***hidden:***REMOVED***init(8,***REMOVED***28),
***REMOVED******REMOVED***strikethrough:***REMOVED***init(9,***REMOVED***29),
***REMOVED******REMOVED***black:***REMOVED***init(30,***REMOVED***39),
***REMOVED******REMOVED***red:***REMOVED***init(31,***REMOVED***39),
***REMOVED******REMOVED***green:***REMOVED***init(32,***REMOVED***39),
***REMOVED******REMOVED***yellow:***REMOVED***init(33,***REMOVED***39),
***REMOVED******REMOVED***blue:***REMOVED***init(34,***REMOVED***39),
***REMOVED******REMOVED***magenta:***REMOVED***init(35,***REMOVED***39),
***REMOVED******REMOVED***cyan:***REMOVED***init(36,***REMOVED***39),
***REMOVED******REMOVED***white:***REMOVED***init(37,***REMOVED***39),
***REMOVED******REMOVED***gray:***REMOVED***init(90,***REMOVED***39),
***REMOVED******REMOVED***bgBlack:***REMOVED***init(40,***REMOVED***49),
***REMOVED******REMOVED***bgRed:***REMOVED***init(41,***REMOVED***49),
***REMOVED******REMOVED***bgGreen:***REMOVED***init(42,***REMOVED***49),
***REMOVED******REMOVED***bgYellow:***REMOVED***init(43,***REMOVED***49),
***REMOVED******REMOVED***bgBlue:***REMOVED***init(44,***REMOVED***49),
***REMOVED******REMOVED***bgMagenta:***REMOVED***init(45,***REMOVED***49),
***REMOVED******REMOVED***bgCyan:***REMOVED***init(46,***REMOVED***49),
***REMOVED******REMOVED***bgWhite:***REMOVED***init(47,***REMOVED***49),
***REMOVED******REMOVED***blackBright:***REMOVED***init(90,***REMOVED***39),
***REMOVED******REMOVED***redBright:***REMOVED***init(91,***REMOVED***39),
***REMOVED******REMOVED***greenBright:***REMOVED***init(92,***REMOVED***39),
***REMOVED******REMOVED***yellowBright:***REMOVED***init(93,***REMOVED***39),
***REMOVED******REMOVED***blueBright:***REMOVED***init(94,***REMOVED***39),
***REMOVED******REMOVED***magentaBright:***REMOVED***init(95,***REMOVED***39),
***REMOVED******REMOVED***cyanBright:***REMOVED***init(96,***REMOVED***39),
***REMOVED******REMOVED***whiteBright:***REMOVED***init(97,***REMOVED***39),
***REMOVED******REMOVED***bgBlackBright:***REMOVED***init(100,***REMOVED***49),
***REMOVED******REMOVED***bgRedBright:***REMOVED***init(101,***REMOVED***49),
***REMOVED******REMOVED***bgGreenBright:***REMOVED***init(102,***REMOVED***49),
***REMOVED******REMOVED***bgYellowBright:***REMOVED***init(103,***REMOVED***49),
***REMOVED******REMOVED***bgBlueBright:***REMOVED***init(104,***REMOVED***49),
***REMOVED******REMOVED***bgMagentaBright:***REMOVED***init(105,***REMOVED***49),
***REMOVED******REMOVED***bgCyanBright:***REMOVED***init(106,***REMOVED***49),
***REMOVED******REMOVED***bgWhiteBright:***REMOVED***init(107,***REMOVED***49),
};

const***REMOVED***createColors***REMOVED***=***REMOVED***({***REMOVED***useColor***REMOVED***=***REMOVED***isColorSupported***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***=>
***REMOVED******REMOVED***useColor
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***colors
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***Object.keys(colors).reduce(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(colors,***REMOVED***key)***REMOVED***=>***REMOVED***({***REMOVED***...colors,***REMOVED***[key]:***REMOVED***String***REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

const***REMOVED***{
***REMOVED******REMOVED***reset,
***REMOVED******REMOVED***bold:***REMOVED***bold$1,
***REMOVED******REMOVED***dim:***REMOVED***dim$1,
***REMOVED******REMOVED***italic,
***REMOVED******REMOVED***underline:***REMOVED***underline$1,
***REMOVED******REMOVED***inverse,
***REMOVED******REMOVED***hidden,
***REMOVED******REMOVED***strikethrough,
***REMOVED******REMOVED***black,
***REMOVED******REMOVED***red:***REMOVED***red$1,
***REMOVED******REMOVED***green:***REMOVED***green$1,
***REMOVED******REMOVED***yellow:***REMOVED***yellow$1,
***REMOVED******REMOVED***blue,
***REMOVED******REMOVED***magenta,
***REMOVED******REMOVED***cyan:***REMOVED***cyan$1,
***REMOVED******REMOVED***white,
***REMOVED******REMOVED***gray:***REMOVED***gray$1,
***REMOVED******REMOVED***bgBlack,
***REMOVED******REMOVED***bgRed,
***REMOVED******REMOVED***bgGreen,
***REMOVED******REMOVED***bgYellow,
***REMOVED******REMOVED***bgBlue,
***REMOVED******REMOVED***bgMagenta,
***REMOVED******REMOVED***bgCyan,
***REMOVED******REMOVED***bgWhite,
***REMOVED******REMOVED***blackBright,
***REMOVED******REMOVED***redBright,
***REMOVED******REMOVED***greenBright,
***REMOVED******REMOVED***yellowBright,
***REMOVED******REMOVED***blueBright,
***REMOVED******REMOVED***magentaBright,
***REMOVED******REMOVED***cyanBright,
***REMOVED******REMOVED***whiteBright,
***REMOVED******REMOVED***bgBlackBright,
***REMOVED******REMOVED***bgRedBright,
***REMOVED******REMOVED***bgGreenBright,
***REMOVED******REMOVED***bgYellowBright,
***REMOVED******REMOVED***bgBlueBright,
***REMOVED******REMOVED***bgMagentaBright,
***REMOVED******REMOVED***bgCyanBright,
***REMOVED******REMOVED***bgWhiteBright,
}***REMOVED***=***REMOVED***createColors();

//***REMOVED***@see***REMOVED***https://no-color.org
//***REMOVED***@see***REMOVED***https://www.npmjs.com/package/chalk
const***REMOVED***{***REMOVED***bold,***REMOVED***cyan,***REMOVED***dim,***REMOVED***gray,***REMOVED***green,***REMOVED***red,***REMOVED***underline,***REMOVED***yellow***REMOVED***}***REMOVED***=***REMOVED***createColors({
***REMOVED******REMOVED******REMOVED******REMOVED***useColor:***REMOVED***process$1.env.FORCE_COLOR***REMOVED***!==***REMOVED***'0'***REMOVED***&&***REMOVED***!process$1.env.NO_COLOR
});

//***REMOVED***log***REMOVED***to***REMOVED***stderr***REMOVED***to***REMOVED***keep***REMOVED***`rollup***REMOVED***main.js***REMOVED***>***REMOVED***bundle.js`***REMOVED***from***REMOVED***breaking
const***REMOVED***stderr***REMOVED***=***REMOVED***(...parameters)***REMOVED***=>***REMOVED***process$1.stderr.write(`${parameters.join('')}\n`);
function***REMOVED***handleError(error,***REMOVED***recover***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***error.name***REMOVED***||***REMOVED***error.cause?.name;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nameSection***REMOVED***=***REMOVED***name***REMOVED***?***REMOVED***`${name}:***REMOVED***`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pluginSection***REMOVED***=***REMOVED***error.plugin***REMOVED***?***REMOVED***`(plugin***REMOVED***${error.plugin})***REMOVED***`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***message***REMOVED***=***REMOVED***`${pluginSection}${nameSection}${error.message}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputLines***REMOVED***=***REMOVED***[bold(red(`[!]***REMOVED***${bold(message.toString())}`))];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error.url)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputLines.push(cyan(error.url));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error.loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputLines.push(`${relativeId((error.loc.file***REMOVED***||***REMOVED***error.id))}***REMOVED***(${error.loc.line}:${error.loc.column})`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(error.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputLines.push(relativeId(error.id));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error.frame)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputLines.push(dim(error.frame));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error.stack)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputLines.push(dim(error.stack?.replace(`${nameSection}${error.message}\n`,***REMOVED***'')));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***outputLines.push('',***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED***stderr(outputLines.join('\n'));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!recover)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$1.exit(1);
}

const***REMOVED***comma***REMOVED***=***REMOVED***','.charCodeAt(0);
const***REMOVED***semicolon***REMOVED***=***REMOVED***';'.charCodeAt(0);
const***REMOVED***chars***REMOVED***=***REMOVED***'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const***REMOVED***intToChar***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(64);***REMOVED***//***REMOVED***64***REMOVED***possible***REMOVED***chars.
const***REMOVED***charToInt***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(128);***REMOVED***//***REMOVED***z***REMOVED***is***REMOVED***122***REMOVED***in***REMOVED***ASCII
for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***chars.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***chars.charCodeAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED***intToChar[i]***REMOVED***=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED***charToInt[c]***REMOVED***=***REMOVED***i;
}
//***REMOVED***Provide***REMOVED***a***REMOVED***fallback***REMOVED***for***REMOVED***older***REMOVED***environments.
const***REMOVED***td***REMOVED***=***REMOVED***typeof***REMOVED***TextDecoder***REMOVED***!==***REMOVED***'undefined'
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***/****REMOVED***#__PURE__***REMOVED****/***REMOVED***new***REMOVED***TextDecoder()
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***typeof***REMOVED***Buffer***REMOVED***!==***REMOVED***'undefined'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decode(buf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***Buffer.from(buf.buffer,***REMOVED***buf.byteOffset,***REMOVED***buf.byteLength);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out.toString();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decode(buf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***out***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***buf.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***String.fromCharCode(buf[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
function***REMOVED***decode(mappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***new***REMOVED***Int32Array(5);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decoded***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***index***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***semi***REMOVED***=***REMOVED***indexOf(mappings,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sorted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastCol***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***index;***REMOVED***i***REMOVED***<***REMOVED***semi;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***seg;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***decodeInteger(mappings,***REMOVED***i,***REMOVED***state,***REMOVED***0);***REMOVED***//***REMOVED***genColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***col***REMOVED***=***REMOVED***state[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(col***REMOVED***<***REMOVED***lastCol)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sorted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastCol***REMOVED***=***REMOVED***col;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(mappings,***REMOVED***i,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***decodeInteger(mappings,***REMOVED***i,***REMOVED***state,***REMOVED***1);***REMOVED***//***REMOVED***sourcesIndex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***decodeInteger(mappings,***REMOVED***i,***REMOVED***state,***REMOVED***2);***REMOVED***//***REMOVED***sourceLine
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***decodeInteger(mappings,***REMOVED***i,***REMOVED***state,***REMOVED***3);***REMOVED***//***REMOVED***sourceColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(mappings,***REMOVED***i,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***decodeInteger(mappings,***REMOVED***i,***REMOVED***state,***REMOVED***4);***REMOVED***//***REMOVED***namesIndex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[col,***REMOVED***state[1],***REMOVED***state[2],***REMOVED***state[3],***REMOVED***state[4]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[col,***REMOVED***state[1],***REMOVED***state[2],***REMOVED***state[3]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[col];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line.push(seg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!sorted)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sort(line);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decoded.push(line);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***semi***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(index***REMOVED***<=***REMOVED***mappings.length);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***decoded;
}
function***REMOVED***indexOf(mappings,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***mappings.indexOf(';',***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***idx***REMOVED***===***REMOVED***-1***REMOVED***?***REMOVED***mappings.length***REMOVED***:***REMOVED***idx;
}
function***REMOVED***decodeInteger(mappings,***REMOVED***pos,***REMOVED***state,***REMOVED***j)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shift***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***integer***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***mappings.charCodeAt(pos++);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***integer***REMOVED***=***REMOVED***charToInt[c];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***|=***REMOVED***(integer***REMOVED***&***REMOVED***31)***REMOVED***<<***REMOVED***shift;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shift***REMOVED***+=***REMOVED***5;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(integer***REMOVED***&***REMOVED***32);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldNegate***REMOVED***=***REMOVED***value***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***>>>=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldNegate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***-0x80000000***REMOVED***|***REMOVED***-value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state[j]***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pos;
}
function***REMOVED***hasMoreVlq(mappings,***REMOVED***i,***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>=***REMOVED***length)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mappings.charCodeAt(i)***REMOVED***!==***REMOVED***comma;
}
function***REMOVED***sort(line)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***line.sort(sortComparator);
}
function***REMOVED***sortComparator(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a[0]***REMOVED***-***REMOVED***b[0];
}
function***REMOVED***encode(decoded)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***new***REMOVED***Int32Array(5);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bufLength***REMOVED***=***REMOVED***1024***REMOVED*******REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subLength***REMOVED***=***REMOVED***bufLength***REMOVED***-***REMOVED***36;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***buf***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(bufLength);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sub***REMOVED***=***REMOVED***buf.subarray(0,***REMOVED***subLength);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***out***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***decoded.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***decoded[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***===***REMOVED***bufLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***td.decode(buf);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buf[pos++]***REMOVED***=***REMOVED***semicolon;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(line.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***line.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***segment***REMOVED***=***REMOVED***line[j];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***can***REMOVED***push***REMOVED***up***REMOVED***to***REMOVED***5***REMOVED***ints,***REMOVED***each***REMOVED***int***REMOVED***can***REMOVED***take***REMOVED***at***REMOVED***most***REMOVED***7***REMOVED***chars,***REMOVED***and***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***may***REMOVED***push***REMOVED***a***REMOVED***comma.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>***REMOVED***subLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***td.decode(sub);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buf.copyWithin(0,***REMOVED***subLength,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***-=***REMOVED***subLength;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(j***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buf[pos++]***REMOVED***=***REMOVED***comma;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***encodeInteger(buf,***REMOVED***pos,***REMOVED***state,***REMOVED***segment,***REMOVED***0);***REMOVED***//***REMOVED***genColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***encodeInteger(buf,***REMOVED***pos,***REMOVED***state,***REMOVED***segment,***REMOVED***1);***REMOVED***//***REMOVED***sourcesIndex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***encodeInteger(buf,***REMOVED***pos,***REMOVED***state,***REMOVED***segment,***REMOVED***2);***REMOVED***//***REMOVED***sourceLine
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***encodeInteger(buf,***REMOVED***pos,***REMOVED***state,***REMOVED***segment,***REMOVED***3);***REMOVED***//***REMOVED***sourceColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***4)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***encodeInteger(buf,***REMOVED***pos,***REMOVED***state,***REMOVED***segment,***REMOVED***4);***REMOVED***//***REMOVED***namesIndex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out***REMOVED***+***REMOVED***td.decode(buf.subarray(0,***REMOVED***pos));
}
function***REMOVED***encodeInteger(buf,***REMOVED***pos,***REMOVED***state,***REMOVED***segment,***REMOVED***j)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***segment[j];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***num***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***state[j];
***REMOVED******REMOVED******REMOVED******REMOVED***state[j]***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***num***REMOVED***=***REMOVED***num***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***(-num***REMOVED***<<***REMOVED***1)***REMOVED***|***REMOVED***1***REMOVED***:***REMOVED***num***REMOVED***<<***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***clamped***REMOVED***=***REMOVED***num***REMOVED***&***REMOVED***0b011111;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***num***REMOVED***>>>=***REMOVED***5;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(num***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clamped***REMOVED***|=***REMOVED***0b100000;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buf[pos++]***REMOVED***=***REMOVED***intToChar[clamped];
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(num***REMOVED***>***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pos;
}

class***REMOVED***BitSet***REMOVED***{
	constructor(arg)***REMOVED***{
		this.bits***REMOVED***=***REMOVED***arg***REMOVED***instanceof***REMOVED***BitSet***REMOVED***?***REMOVED***arg.bits.slice()***REMOVED***:***REMOVED***[];
	}

	add(n)***REMOVED***{
		this.bits[n***REMOVED***>>***REMOVED***5]***REMOVED***|=***REMOVED***1***REMOVED***<<***REMOVED***(n***REMOVED***&***REMOVED***31);
	}

	has(n)***REMOVED***{
		return***REMOVED***!!(this.bits[n***REMOVED***>>***REMOVED***5]***REMOVED***&***REMOVED***(1***REMOVED***<<***REMOVED***(n***REMOVED***&***REMOVED***31)));
	}
}

let***REMOVED***Chunk$1***REMOVED***=***REMOVED***class***REMOVED***Chunk***REMOVED***{
	constructor(start,***REMOVED***end,***REMOVED***content)***REMOVED***{
		this.start***REMOVED***=***REMOVED***start;
		this.end***REMOVED***=***REMOVED***end;
		this.original***REMOVED***=***REMOVED***content;

		this.intro***REMOVED***=***REMOVED***'';
		this.outro***REMOVED***=***REMOVED***'';

		this.content***REMOVED***=***REMOVED***content;
		this.storeName***REMOVED***=***REMOVED***false;
		this.edited***REMOVED***=***REMOVED***false;

		{
			this.previous***REMOVED***=***REMOVED***null;
			this.next***REMOVED***=***REMOVED***null;
		}
	}

	appendLeft(content)***REMOVED***{
		this.outro***REMOVED***+=***REMOVED***content;
	}

	appendRight(content)***REMOVED***{
		this.intro***REMOVED***=***REMOVED***this.intro***REMOVED***+***REMOVED***content;
	}

	clone()***REMOVED***{
		const***REMOVED***chunk***REMOVED***=***REMOVED***new***REMOVED***Chunk(this.start,***REMOVED***this.end,***REMOVED***this.original);

		chunk.intro***REMOVED***=***REMOVED***this.intro;
		chunk.outro***REMOVED***=***REMOVED***this.outro;
		chunk.content***REMOVED***=***REMOVED***this.content;
		chunk.storeName***REMOVED***=***REMOVED***this.storeName;
		chunk.edited***REMOVED***=***REMOVED***this.edited;

		return***REMOVED***chunk;
	}

	contains(index)***REMOVED***{
		return***REMOVED***this.start***REMOVED***<***REMOVED***index***REMOVED***&&***REMOVED***index***REMOVED***<***REMOVED***this.end;
	}

	eachNext(fn)***REMOVED***{
		let***REMOVED***chunk***REMOVED***=***REMOVED***this;
		while***REMOVED***(chunk)***REMOVED***{
			fn(chunk);
			chunk***REMOVED***=***REMOVED***chunk.next;
		}
	}

	eachPrevious(fn)***REMOVED***{
		let***REMOVED***chunk***REMOVED***=***REMOVED***this;
		while***REMOVED***(chunk)***REMOVED***{
			fn(chunk);
			chunk***REMOVED***=***REMOVED***chunk.previous;
		}
	}

	edit(content,***REMOVED***storeName,***REMOVED***contentOnly)***REMOVED***{
		this.content***REMOVED***=***REMOVED***content;
		if***REMOVED***(!contentOnly)***REMOVED***{
			this.intro***REMOVED***=***REMOVED***'';
			this.outro***REMOVED***=***REMOVED***'';
		}
		this.storeName***REMOVED***=***REMOVED***storeName;

		this.edited***REMOVED***=***REMOVED***true;

		return***REMOVED***this;
	}

	prependLeft(content)***REMOVED***{
		this.outro***REMOVED***=***REMOVED***content***REMOVED***+***REMOVED***this.outro;
	}

	prependRight(content)***REMOVED***{
		this.intro***REMOVED***=***REMOVED***content***REMOVED***+***REMOVED***this.intro;
	}

	split(index)***REMOVED***{
		const***REMOVED***sliceIndex***REMOVED***=***REMOVED***index***REMOVED***-***REMOVED***this.start;

		const***REMOVED***originalBefore***REMOVED***=***REMOVED***this.original.slice(0,***REMOVED***sliceIndex);
		const***REMOVED***originalAfter***REMOVED***=***REMOVED***this.original.slice(sliceIndex);

		this.original***REMOVED***=***REMOVED***originalBefore;

		const***REMOVED***newChunk***REMOVED***=***REMOVED***new***REMOVED***Chunk(index,***REMOVED***this.end,***REMOVED***originalAfter);
		newChunk.outro***REMOVED***=***REMOVED***this.outro;
		this.outro***REMOVED***=***REMOVED***'';

		this.end***REMOVED***=***REMOVED***index;

		if***REMOVED***(this.edited)***REMOVED***{
			//***REMOVED***after***REMOVED***split***REMOVED***we***REMOVED***should***REMOVED***save***REMOVED***the***REMOVED***edit***REMOVED***content***REMOVED***record***REMOVED***into***REMOVED***the***REMOVED***correct***REMOVED***chunk
			//***REMOVED***to***REMOVED***make***REMOVED***sure***REMOVED***sourcemap***REMOVED***correct
			//***REMOVED***For***REMOVED***example:
			//***REMOVED***'***REMOVED******REMOVED***test'.trim()
			//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***split***REMOVED******REMOVED******REMOVED***->***REMOVED***'***REMOVED******REMOVED***'***REMOVED***+***REMOVED***'test'
			//***REMOVED******REMOVED******REMOVED***✔️***REMOVED***edit***REMOVED******REMOVED******REMOVED******REMOVED***->***REMOVED***''***REMOVED***+***REMOVED***'test'
			//***REMOVED******REMOVED******REMOVED***✖️***REMOVED***edit***REMOVED******REMOVED******REMOVED******REMOVED***->***REMOVED***'test'***REMOVED***+***REMOVED***''***REMOVED***
			//***REMOVED***TODO***REMOVED***is***REMOVED***this***REMOVED***block***REMOVED***necessary?...
			newChunk.edit('',***REMOVED***false);
			this.content***REMOVED***=***REMOVED***'';
		}***REMOVED***else***REMOVED***{
			this.content***REMOVED***=***REMOVED***originalBefore;
		}

		newChunk.next***REMOVED***=***REMOVED***this.next;
		if***REMOVED***(newChunk.next)***REMOVED***newChunk.next.previous***REMOVED***=***REMOVED***newChunk;
		newChunk.previous***REMOVED***=***REMOVED***this;
		this.next***REMOVED***=***REMOVED***newChunk;

		return***REMOVED***newChunk;
	}

	toString()***REMOVED***{
		return***REMOVED***this.intro***REMOVED***+***REMOVED***this.content***REMOVED***+***REMOVED***this.outro;
	}

	trimEnd(rx)***REMOVED***{
		this.outro***REMOVED***=***REMOVED***this.outro.replace(rx,***REMOVED***'');
		if***REMOVED***(this.outro.length)***REMOVED***return***REMOVED***true;

		const***REMOVED***trimmed***REMOVED***=***REMOVED***this.content.replace(rx,***REMOVED***'');

		if***REMOVED***(trimmed.length)***REMOVED***{
			if***REMOVED***(trimmed***REMOVED***!==***REMOVED***this.content)***REMOVED***{
				this.split(this.start***REMOVED***+***REMOVED***trimmed.length).edit('',***REMOVED***undefined,***REMOVED***true);
				if***REMOVED***(this.edited)***REMOVED***{
					//***REMOVED***save***REMOVED***the***REMOVED***change,***REMOVED***if***REMOVED***it***REMOVED***has***REMOVED***been***REMOVED***edited
					this.edit(trimmed,***REMOVED***this.storeName,***REMOVED***true);
				}
			}
			return***REMOVED***true;
		}***REMOVED***else***REMOVED***{
			this.edit('',***REMOVED***undefined,***REMOVED***true);

			this.intro***REMOVED***=***REMOVED***this.intro.replace(rx,***REMOVED***'');
			if***REMOVED***(this.intro.length)***REMOVED***return***REMOVED***true;
		}
	}

	trimStart(rx)***REMOVED***{
		this.intro***REMOVED***=***REMOVED***this.intro.replace(rx,***REMOVED***'');
		if***REMOVED***(this.intro.length)***REMOVED***return***REMOVED***true;

		const***REMOVED***trimmed***REMOVED***=***REMOVED***this.content.replace(rx,***REMOVED***'');

		if***REMOVED***(trimmed.length)***REMOVED***{
			if***REMOVED***(trimmed***REMOVED***!==***REMOVED***this.content)***REMOVED***{
				const***REMOVED***newChunk***REMOVED***=***REMOVED***this.split(this.end***REMOVED***-***REMOVED***trimmed.length);
				if***REMOVED***(this.edited)***REMOVED***{
					//***REMOVED***save***REMOVED***the***REMOVED***change,***REMOVED***if***REMOVED***it***REMOVED***has***REMOVED***been***REMOVED***edited
					newChunk.edit(trimmed,***REMOVED***this.storeName,***REMOVED***true);
				}
				this.edit('',***REMOVED***undefined,***REMOVED***true);
			}
			return***REMOVED***true;
		}***REMOVED***else***REMOVED***{
			this.edit('',***REMOVED***undefined,***REMOVED***true);

			this.outro***REMOVED***=***REMOVED***this.outro.replace(rx,***REMOVED***'');
			if***REMOVED***(this.outro.length)***REMOVED***return***REMOVED***true;
		}
	}
};

function***REMOVED***getBtoa()***REMOVED***{
	if***REMOVED***(typeof***REMOVED***window***REMOVED***!==***REMOVED***'undefined'***REMOVED***&&***REMOVED***typeof***REMOVED***window.btoa***REMOVED***===***REMOVED***'function')***REMOVED***{
		return***REMOVED***(str)***REMOVED***=>***REMOVED***window.btoa(unescape(encodeURIComponent(str)));
	}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***Buffer***REMOVED***===***REMOVED***'function')***REMOVED***{
		return***REMOVED***(str)***REMOVED***=>***REMOVED***Buffer.from(str,***REMOVED***'utf-8').toString('base64');
	}***REMOVED***else***REMOVED***{
		return***REMOVED***()***REMOVED***=>***REMOVED***{
			throw***REMOVED***new***REMOVED***Error('Unsupported***REMOVED***environment:***REMOVED***`window.btoa`***REMOVED***or***REMOVED***`Buffer`***REMOVED***should***REMOVED***be***REMOVED***supported.');
		};
	}
}

const***REMOVED***btoa***REMOVED***=***REMOVED***/*#__PURE__*/***REMOVED***getBtoa();

class***REMOVED***SourceMap***REMOVED***{
	constructor(properties)***REMOVED***{
		this.version***REMOVED***=***REMOVED***3;
		this.file***REMOVED***=***REMOVED***properties.file;
		this.sources***REMOVED***=***REMOVED***properties.sources;
		this.sourcesContent***REMOVED***=***REMOVED***properties.sourcesContent;
		this.names***REMOVED***=***REMOVED***properties.names;
		this.mappings***REMOVED***=***REMOVED***encode(properties.mappings);
		if***REMOVED***(typeof***REMOVED***properties.x_google_ignoreList***REMOVED***!==***REMOVED***'undefined')***REMOVED***{
			this.x_google_ignoreList***REMOVED***=***REMOVED***properties.x_google_ignoreList;
		}
	}

	toString()***REMOVED***{
		return***REMOVED***JSON.stringify(this);
	}

	toUrl()***REMOVED***{
		return***REMOVED***'data:application/json;charset=utf-8;base64,'***REMOVED***+***REMOVED***btoa(this.toString());
	}
}

function***REMOVED***guessIndent(code)***REMOVED***{
	const***REMOVED***lines***REMOVED***=***REMOVED***code.split('\n');

	const***REMOVED***tabbed***REMOVED***=***REMOVED***lines.filter((line)***REMOVED***=>***REMOVED***/^\t+/.test(line));
	const***REMOVED***spaced***REMOVED***=***REMOVED***lines.filter((line)***REMOVED***=>***REMOVED***/^***REMOVED***{2,}/.test(line));

	if***REMOVED***(tabbed.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***spaced.length***REMOVED***===***REMOVED***0)***REMOVED***{
		return***REMOVED***null;
	}

	//***REMOVED***More***REMOVED***lines***REMOVED***tabbed***REMOVED***than***REMOVED***spaced?***REMOVED***Assume***REMOVED***tabs,***REMOVED***and
	//***REMOVED***default***REMOVED***to***REMOVED***tabs***REMOVED***in***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***a***REMOVED***tie***REMOVED***(or***REMOVED***nothing
	//***REMOVED***to***REMOVED***go***REMOVED***on)
	if***REMOVED***(tabbed.length***REMOVED***>=***REMOVED***spaced.length)***REMOVED***{
		return***REMOVED***'\t';
	}

	//***REMOVED***Otherwise,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***guess***REMOVED***the***REMOVED***multiple
	const***REMOVED***min***REMOVED***=***REMOVED***spaced.reduce((previous,***REMOVED***current)***REMOVED***=>***REMOVED***{
		const***REMOVED***numSpaces***REMOVED***=***REMOVED***/^***REMOVED***+/.exec(current)[0].length;
		return***REMOVED***Math.min(numSpaces,***REMOVED***previous);
	},***REMOVED***Infinity);

	return***REMOVED***new***REMOVED***Array(min***REMOVED***+***REMOVED***1).join('***REMOVED***');
}

function***REMOVED***getRelativePath(from,***REMOVED***to)***REMOVED***{
	const***REMOVED***fromParts***REMOVED***=***REMOVED***from.split(/[/\\]/);
	const***REMOVED***toParts***REMOVED***=***REMOVED***to.split(/[/\\]/);

	fromParts.pop();***REMOVED***//***REMOVED***get***REMOVED***dirname

	while***REMOVED***(fromParts[0]***REMOVED***===***REMOVED***toParts[0])***REMOVED***{
		fromParts.shift();
		toParts.shift();
	}

	if***REMOVED***(fromParts.length)***REMOVED***{
		let***REMOVED***i***REMOVED***=***REMOVED***fromParts.length;
		while***REMOVED***(i--)***REMOVED***fromParts[i]***REMOVED***=***REMOVED***'..';
	}

	return***REMOVED***fromParts.concat(toParts).join('/');
}

const***REMOVED***toString$1***REMOVED***=***REMOVED***Object.prototype.toString;

function***REMOVED***isObject$1(thing)***REMOVED***{
	return***REMOVED***toString$1.call(thing)***REMOVED***===***REMOVED***'[object***REMOVED***Object]';
}

function***REMOVED***getLocator(source)***REMOVED***{
	const***REMOVED***originalLines***REMOVED***=***REMOVED***source.split('\n');
	const***REMOVED***lineOffsets***REMOVED***=***REMOVED***[];

	for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***pos***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***originalLines.length;***REMOVED***i++)***REMOVED***{
		lineOffsets.push(pos);
		pos***REMOVED***+=***REMOVED***originalLines[i].length***REMOVED***+***REMOVED***1;
	}

	return***REMOVED***function***REMOVED***locate(index)***REMOVED***{
		let***REMOVED***i***REMOVED***=***REMOVED***0;
		let***REMOVED***j***REMOVED***=***REMOVED***lineOffsets.length;
		while***REMOVED***(i***REMOVED***<***REMOVED***j)***REMOVED***{
			const***REMOVED***m***REMOVED***=***REMOVED***(i***REMOVED***+***REMOVED***j)***REMOVED***>>***REMOVED***1;
			if***REMOVED***(index***REMOVED***<***REMOVED***lineOffsets[m])***REMOVED***{
				j***REMOVED***=***REMOVED***m;
			}***REMOVED***else***REMOVED***{
				i***REMOVED***=***REMOVED***m***REMOVED***+***REMOVED***1;
			}
		}
		const***REMOVED***line***REMOVED***=***REMOVED***i***REMOVED***-***REMOVED***1;
		const***REMOVED***column***REMOVED***=***REMOVED***index***REMOVED***-***REMOVED***lineOffsets[line];
		return***REMOVED***{***REMOVED***line,***REMOVED***column***REMOVED***};
	};
}

const***REMOVED***wordRegex***REMOVED***=***REMOVED***/\w/;

class***REMOVED***Mappings***REMOVED***{
	constructor(hires)***REMOVED***{
		this.hires***REMOVED***=***REMOVED***hires;
		this.generatedCodeLine***REMOVED***=***REMOVED***0;
		this.generatedCodeColumn***REMOVED***=***REMOVED***0;
		this.raw***REMOVED***=***REMOVED***[];
		this.rawSegments***REMOVED***=***REMOVED***this.raw[this.generatedCodeLine]***REMOVED***=***REMOVED***[];
		this.pending***REMOVED***=***REMOVED***null;
	}

	addEdit(sourceIndex,***REMOVED***content,***REMOVED***loc,***REMOVED***nameIndex)***REMOVED***{
		if***REMOVED***(content.length)***REMOVED***{
			const***REMOVED***segment***REMOVED***=***REMOVED***[this.generatedCodeColumn,***REMOVED***sourceIndex,***REMOVED***loc.line,***REMOVED***loc.column];
			if***REMOVED***(nameIndex***REMOVED***>=***REMOVED***0)***REMOVED***{
				segment.push(nameIndex);
			}
			this.rawSegments.push(segment);
		}***REMOVED***else***REMOVED***if***REMOVED***(this.pending)***REMOVED***{
			this.rawSegments.push(this.pending);
		}

		this.advance(content);
		this.pending***REMOVED***=***REMOVED***null;
	}

	addUneditedChunk(sourceIndex,***REMOVED***chunk,***REMOVED***original,***REMOVED***loc,***REMOVED***sourcemapLocations)***REMOVED***{
		let***REMOVED***originalCharIndex***REMOVED***=***REMOVED***chunk.start;
		let***REMOVED***first***REMOVED***=***REMOVED***true;
		//***REMOVED***when***REMOVED***iterating***REMOVED***each***REMOVED***char,***REMOVED***check***REMOVED***if***REMOVED***it's***REMOVED***in***REMOVED***a***REMOVED***word***REMOVED***boundary
		let***REMOVED***charInHiresBoundary***REMOVED***=***REMOVED***false;

		while***REMOVED***(originalCharIndex***REMOVED***<***REMOVED***chunk.end)***REMOVED***{
			if***REMOVED***(this.hires***REMOVED***||***REMOVED***first***REMOVED***||***REMOVED***sourcemapLocations.has(originalCharIndex))***REMOVED***{
				const***REMOVED***segment***REMOVED***=***REMOVED***[this.generatedCodeColumn,***REMOVED***sourceIndex,***REMOVED***loc.line,***REMOVED***loc.column];

				if***REMOVED***(this.hires***REMOVED***===***REMOVED***'boundary')***REMOVED***{
					//***REMOVED***in***REMOVED***hires***REMOVED***"boundary",***REMOVED***group***REMOVED***segments***REMOVED***per***REMOVED***word***REMOVED***boundary***REMOVED***than***REMOVED***per***REMOVED***char
					if***REMOVED***(wordRegex.test(original[originalCharIndex]))***REMOVED***{
						//***REMOVED***for***REMOVED***first***REMOVED***char***REMOVED***in***REMOVED***the***REMOVED***boundary***REMOVED***found,***REMOVED***start***REMOVED***the***REMOVED***boundary***REMOVED***by***REMOVED***pushing***REMOVED***a***REMOVED***segment
						if***REMOVED***(!charInHiresBoundary)***REMOVED***{
							this.rawSegments.push(segment);
							charInHiresBoundary***REMOVED***=***REMOVED***true;
						}
					}***REMOVED***else***REMOVED***{
						//***REMOVED***for***REMOVED***non-word***REMOVED***char,***REMOVED***end***REMOVED***the***REMOVED***boundary***REMOVED***by***REMOVED***pushing***REMOVED***a***REMOVED***segment
						this.rawSegments.push(segment);
						charInHiresBoundary***REMOVED***=***REMOVED***false;
					}
				}***REMOVED***else***REMOVED***{
					this.rawSegments.push(segment);
				}
			}

			if***REMOVED***(original[originalCharIndex]***REMOVED***===***REMOVED***'\n')***REMOVED***{
				loc.line***REMOVED***+=***REMOVED***1;
				loc.column***REMOVED***=***REMOVED***0;
				this.generatedCodeLine***REMOVED***+=***REMOVED***1;
				this.raw[this.generatedCodeLine]***REMOVED***=***REMOVED***this.rawSegments***REMOVED***=***REMOVED***[];
				this.generatedCodeColumn***REMOVED***=***REMOVED***0;
				first***REMOVED***=***REMOVED***true;
			}***REMOVED***else***REMOVED***{
				loc.column***REMOVED***+=***REMOVED***1;
				this.generatedCodeColumn***REMOVED***+=***REMOVED***1;
				first***REMOVED***=***REMOVED***false;
			}

			originalCharIndex***REMOVED***+=***REMOVED***1;
		}

		this.pending***REMOVED***=***REMOVED***null;
	}

	advance(str)***REMOVED***{
		if***REMOVED***(!str)***REMOVED***return;

		const***REMOVED***lines***REMOVED***=***REMOVED***str.split('\n');

		if***REMOVED***(lines.length***REMOVED***>***REMOVED***1)***REMOVED***{
			for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***lines.length***REMOVED***-***REMOVED***1;***REMOVED***i++)***REMOVED***{
				this.generatedCodeLine++;
				this.raw[this.generatedCodeLine]***REMOVED***=***REMOVED***this.rawSegments***REMOVED***=***REMOVED***[];
			}
			this.generatedCodeColumn***REMOVED***=***REMOVED***0;
		}

		this.generatedCodeColumn***REMOVED***+=***REMOVED***lines[lines.length***REMOVED***-***REMOVED***1].length;
	}
}

const***REMOVED***n***REMOVED***=***REMOVED***'\n';

const***REMOVED***warned***REMOVED***=***REMOVED***{
	insertLeft:***REMOVED***false,
	insertRight:***REMOVED***false,
	storeName:***REMOVED***false,
};

class***REMOVED***MagicString***REMOVED***{
	constructor(string,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
		const***REMOVED***chunk***REMOVED***=***REMOVED***new***REMOVED***Chunk$1(0,***REMOVED***string.length,***REMOVED***string);

		Object.defineProperties(this,***REMOVED***{
			original:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***string***REMOVED***},
			outro:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***''***REMOVED***},
			intro:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***''***REMOVED***},
			firstChunk:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***chunk***REMOVED***},
			lastChunk:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***chunk***REMOVED***},
			lastSearchedChunk:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***chunk***REMOVED***},
			byStart:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***{}***REMOVED***},
			byEnd:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***{}***REMOVED***},
			filename:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***options.filename***REMOVED***},
			indentExclusionRanges:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***options.indentExclusionRanges***REMOVED***},
			sourcemapLocations:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***new***REMOVED***BitSet()***REMOVED***},
			storedNames:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***{}***REMOVED***},
			indentStr:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***undefined***REMOVED***},
			ignoreList:***REMOVED***{***REMOVED***writable:***REMOVED***true,***REMOVED***value:***REMOVED***options.ignoreList***REMOVED***},
		});

		this.byStart[0]***REMOVED***=***REMOVED***chunk;
		this.byEnd[string.length]***REMOVED***=***REMOVED***chunk;
	}

	addSourcemapLocation(char)***REMOVED***{
		this.sourcemapLocations.add(char);
	}

	append(content)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('outro***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		this.outro***REMOVED***+=***REMOVED***content;
		return***REMOVED***this;
	}

	appendLeft(index,***REMOVED***content)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('inserted***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		this._split(index);

		const***REMOVED***chunk***REMOVED***=***REMOVED***this.byEnd[index];

		if***REMOVED***(chunk)***REMOVED***{
			chunk.appendLeft(content);
		}***REMOVED***else***REMOVED***{
			this.intro***REMOVED***+=***REMOVED***content;
		}
		return***REMOVED***this;
	}

	appendRight(index,***REMOVED***content)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('inserted***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		this._split(index);

		const***REMOVED***chunk***REMOVED***=***REMOVED***this.byStart[index];

		if***REMOVED***(chunk)***REMOVED***{
			chunk.appendRight(content);
		}***REMOVED***else***REMOVED***{
			this.outro***REMOVED***+=***REMOVED***content;
		}
		return***REMOVED***this;
	}

	clone()***REMOVED***{
		const***REMOVED***cloned***REMOVED***=***REMOVED***new***REMOVED***MagicString(this.original,***REMOVED***{***REMOVED***filename:***REMOVED***this.filename***REMOVED***});

		let***REMOVED***originalChunk***REMOVED***=***REMOVED***this.firstChunk;
		let***REMOVED***clonedChunk***REMOVED***=***REMOVED***(cloned.firstChunk***REMOVED***=***REMOVED***cloned.lastSearchedChunk***REMOVED***=***REMOVED***originalChunk.clone());

		while***REMOVED***(originalChunk)***REMOVED***{
			cloned.byStart[clonedChunk.start]***REMOVED***=***REMOVED***clonedChunk;
			cloned.byEnd[clonedChunk.end]***REMOVED***=***REMOVED***clonedChunk;

			const***REMOVED***nextOriginalChunk***REMOVED***=***REMOVED***originalChunk.next;
			const***REMOVED***nextClonedChunk***REMOVED***=***REMOVED***nextOriginalChunk***REMOVED***&&***REMOVED***nextOriginalChunk.clone();

			if***REMOVED***(nextClonedChunk)***REMOVED***{
				clonedChunk.next***REMOVED***=***REMOVED***nextClonedChunk;
				nextClonedChunk.previous***REMOVED***=***REMOVED***clonedChunk;

				clonedChunk***REMOVED***=***REMOVED***nextClonedChunk;
			}

			originalChunk***REMOVED***=***REMOVED***nextOriginalChunk;
		}

		cloned.lastChunk***REMOVED***=***REMOVED***clonedChunk;

		if***REMOVED***(this.indentExclusionRanges)***REMOVED***{
			cloned.indentExclusionRanges***REMOVED***=***REMOVED***this.indentExclusionRanges.slice();
		}

		cloned.sourcemapLocations***REMOVED***=***REMOVED***new***REMOVED***BitSet(this.sourcemapLocations);

		cloned.intro***REMOVED***=***REMOVED***this.intro;
		cloned.outro***REMOVED***=***REMOVED***this.outro;

		return***REMOVED***cloned;
	}

	generateDecodedMap(options)***REMOVED***{
		options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};

		const***REMOVED***sourceIndex***REMOVED***=***REMOVED***0;
		const***REMOVED***names***REMOVED***=***REMOVED***Object.keys(this.storedNames);
		const***REMOVED***mappings***REMOVED***=***REMOVED***new***REMOVED***Mappings(options.hires);

		const***REMOVED***locate***REMOVED***=***REMOVED***getLocator(this.original);

		if***REMOVED***(this.intro)***REMOVED***{
			mappings.advance(this.intro);
		}

		this.firstChunk.eachNext((chunk)***REMOVED***=>***REMOVED***{
			const***REMOVED***loc***REMOVED***=***REMOVED***locate(chunk.start);

			if***REMOVED***(chunk.intro.length)***REMOVED***mappings.advance(chunk.intro);

			if***REMOVED***(chunk.edited)***REMOVED***{
				mappings.addEdit(
					sourceIndex,
					chunk.content,
					loc,
					chunk.storeName***REMOVED***?***REMOVED***names.indexOf(chunk.original)***REMOVED***:***REMOVED***-1,
				);
			}***REMOVED***else***REMOVED***{
				mappings.addUneditedChunk(sourceIndex,***REMOVED***chunk,***REMOVED***this.original,***REMOVED***loc,***REMOVED***this.sourcemapLocations);
			}

			if***REMOVED***(chunk.outro.length)***REMOVED***mappings.advance(chunk.outro);
		});

		return***REMOVED***{
			file:***REMOVED***options.file***REMOVED***?***REMOVED***options.file.split(/[/\\]/).pop()***REMOVED***:***REMOVED***undefined,
			sources:***REMOVED***[
				options.source***REMOVED***?***REMOVED***getRelativePath(options.file***REMOVED***||***REMOVED***'',***REMOVED***options.source)***REMOVED***:***REMOVED***options.file***REMOVED***||***REMOVED***'',
			],
			sourcesContent:***REMOVED***options.includeContent***REMOVED***?***REMOVED***[this.original]***REMOVED***:***REMOVED***undefined,
			names,
			mappings:***REMOVED***mappings.raw,
			x_google_ignoreList:***REMOVED***this.ignoreList***REMOVED***?***REMOVED***[sourceIndex]***REMOVED***:***REMOVED***undefined,
		};
	}

	generateMap(options)***REMOVED***{
		return***REMOVED***new***REMOVED***SourceMap(this.generateDecodedMap(options));
	}

	_ensureindentStr()***REMOVED***{
		if***REMOVED***(this.indentStr***REMOVED***===***REMOVED***undefined)***REMOVED***{
			this.indentStr***REMOVED***=***REMOVED***guessIndent(this.original);
		}
	}

	_getRawIndentString()***REMOVED***{
		this._ensureindentStr();
		return***REMOVED***this.indentStr;
	}

	getIndentString()***REMOVED***{
		this._ensureindentStr();
		return***REMOVED***this.indentStr***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***'\t'***REMOVED***:***REMOVED***this.indentStr;
	}

	indent(indentStr,***REMOVED***options)***REMOVED***{
		const***REMOVED***pattern***REMOVED***=***REMOVED***/^[^\r\n]/gm;

		if***REMOVED***(isObject$1(indentStr))***REMOVED***{
			options***REMOVED***=***REMOVED***indentStr;
			indentStr***REMOVED***=***REMOVED***undefined;
		}

		if***REMOVED***(indentStr***REMOVED***===***REMOVED***undefined)***REMOVED***{
			this._ensureindentStr();
			indentStr***REMOVED***=***REMOVED***this.indentStr***REMOVED***||***REMOVED***'\t';
		}

		if***REMOVED***(indentStr***REMOVED***===***REMOVED***'')***REMOVED***return***REMOVED***this;***REMOVED***//***REMOVED***noop

		options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};

		//***REMOVED***Process***REMOVED***exclusion***REMOVED***ranges
		const***REMOVED***isExcluded***REMOVED***=***REMOVED***{};

		if***REMOVED***(options.exclude)***REMOVED***{
			const***REMOVED***exclusions***REMOVED***=
				typeof***REMOVED***options.exclude[0]***REMOVED***===***REMOVED***'number'***REMOVED***?***REMOVED***[options.exclude]***REMOVED***:***REMOVED***options.exclude;
			exclusions.forEach((exclusion)***REMOVED***=>***REMOVED***{
				for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***exclusion[0];***REMOVED***i***REMOVED***<***REMOVED***exclusion[1];***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
					isExcluded[i]***REMOVED***=***REMOVED***true;
				}
			});
		}

		let***REMOVED***shouldIndentNextCharacter***REMOVED***=***REMOVED***options.indentStart***REMOVED***!==***REMOVED***false;
		const***REMOVED***replacer***REMOVED***=***REMOVED***(match)***REMOVED***=>***REMOVED***{
			if***REMOVED***(shouldIndentNextCharacter)***REMOVED***return***REMOVED***`${indentStr}${match}`;
			shouldIndentNextCharacter***REMOVED***=***REMOVED***true;
			return***REMOVED***match;
		};

		this.intro***REMOVED***=***REMOVED***this.intro.replace(pattern,***REMOVED***replacer);

		let***REMOVED***charIndex***REMOVED***=***REMOVED***0;
		let***REMOVED***chunk***REMOVED***=***REMOVED***this.firstChunk;

		while***REMOVED***(chunk)***REMOVED***{
			const***REMOVED***end***REMOVED***=***REMOVED***chunk.end;

			if***REMOVED***(chunk.edited)***REMOVED***{
				if***REMOVED***(!isExcluded[charIndex])***REMOVED***{
					chunk.content***REMOVED***=***REMOVED***chunk.content.replace(pattern,***REMOVED***replacer);

					if***REMOVED***(chunk.content.length)***REMOVED***{
						shouldIndentNextCharacter***REMOVED***=***REMOVED***chunk.content[chunk.content.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***'\n';
					}
				}
			}***REMOVED***else***REMOVED***{
				charIndex***REMOVED***=***REMOVED***chunk.start;

				while***REMOVED***(charIndex***REMOVED***<***REMOVED***end)***REMOVED***{
					if***REMOVED***(!isExcluded[charIndex])***REMOVED***{
						const***REMOVED***char***REMOVED***=***REMOVED***this.original[charIndex];

						if***REMOVED***(char***REMOVED***===***REMOVED***'\n')***REMOVED***{
							shouldIndentNextCharacter***REMOVED***=***REMOVED***true;
						}***REMOVED***else***REMOVED***if***REMOVED***(char***REMOVED***!==***REMOVED***'\r'***REMOVED***&&***REMOVED***shouldIndentNextCharacter)***REMOVED***{
							shouldIndentNextCharacter***REMOVED***=***REMOVED***false;

							if***REMOVED***(charIndex***REMOVED***===***REMOVED***chunk.start)***REMOVED***{
								chunk.prependRight(indentStr);
							}***REMOVED***else***REMOVED***{
								this._splitChunk(chunk,***REMOVED***charIndex);
								chunk***REMOVED***=***REMOVED***chunk.next;
								chunk.prependRight(indentStr);
							}
						}
					}

					charIndex***REMOVED***+=***REMOVED***1;
				}
			}

			charIndex***REMOVED***=***REMOVED***chunk.end;
			chunk***REMOVED***=***REMOVED***chunk.next;
		}

		this.outro***REMOVED***=***REMOVED***this.outro.replace(pattern,***REMOVED***replacer);

		return***REMOVED***this;
	}

	insert()***REMOVED***{
		throw***REMOVED***new***REMOVED***Error(
			'magicString.insert(...)***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***prependRight(...)***REMOVED***or***REMOVED***appendLeft(...)',
		);
	}

	insertLeft(index,***REMOVED***content)***REMOVED***{
		if***REMOVED***(!warned.insertLeft)***REMOVED***{
			console.warn(
				'magicString.insertLeft(...)***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***magicString.appendLeft(...)***REMOVED***instead',
			);***REMOVED***//***REMOVED***eslint-disable-line***REMOVED***no-console
			warned.insertLeft***REMOVED***=***REMOVED***true;
		}

		return***REMOVED***this.appendLeft(index,***REMOVED***content);
	}

	insertRight(index,***REMOVED***content)***REMOVED***{
		if***REMOVED***(!warned.insertRight)***REMOVED***{
			console.warn(
				'magicString.insertRight(...)***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***magicString.prependRight(...)***REMOVED***instead',
			);***REMOVED***//***REMOVED***eslint-disable-line***REMOVED***no-console
			warned.insertRight***REMOVED***=***REMOVED***true;
		}

		return***REMOVED***this.prependRight(index,***REMOVED***content);
	}

	move(start,***REMOVED***end,***REMOVED***index)***REMOVED***{
		if***REMOVED***(index***REMOVED***>=***REMOVED***start***REMOVED***&&***REMOVED***index***REMOVED***<=***REMOVED***end)***REMOVED***throw***REMOVED***new***REMOVED***Error('Cannot***REMOVED***move***REMOVED***a***REMOVED***selection***REMOVED***inside***REMOVED***itself');

		this._split(start);
		this._split(end);
		this._split(index);

		const***REMOVED***first***REMOVED***=***REMOVED***this.byStart[start];
		const***REMOVED***last***REMOVED***=***REMOVED***this.byEnd[end];

		const***REMOVED***oldLeft***REMOVED***=***REMOVED***first.previous;
		const***REMOVED***oldRight***REMOVED***=***REMOVED***last.next;

		const***REMOVED***newRight***REMOVED***=***REMOVED***this.byStart[index];
		if***REMOVED***(!newRight***REMOVED***&&***REMOVED***last***REMOVED***===***REMOVED***this.lastChunk)***REMOVED***return***REMOVED***this;
		const***REMOVED***newLeft***REMOVED***=***REMOVED***newRight***REMOVED***?***REMOVED***newRight.previous***REMOVED***:***REMOVED***this.lastChunk;

		if***REMOVED***(oldLeft)***REMOVED***oldLeft.next***REMOVED***=***REMOVED***oldRight;
		if***REMOVED***(oldRight)***REMOVED***oldRight.previous***REMOVED***=***REMOVED***oldLeft;

		if***REMOVED***(newLeft)***REMOVED***newLeft.next***REMOVED***=***REMOVED***first;
		if***REMOVED***(newRight)***REMOVED***newRight.previous***REMOVED***=***REMOVED***last;

		if***REMOVED***(!first.previous)***REMOVED***this.firstChunk***REMOVED***=***REMOVED***last.next;
		if***REMOVED***(!last.next)***REMOVED***{
			this.lastChunk***REMOVED***=***REMOVED***first.previous;
			this.lastChunk.next***REMOVED***=***REMOVED***null;
		}

		first.previous***REMOVED***=***REMOVED***newLeft;
		last.next***REMOVED***=***REMOVED***newRight***REMOVED***||***REMOVED***null;

		if***REMOVED***(!newLeft)***REMOVED***this.firstChunk***REMOVED***=***REMOVED***first;
		if***REMOVED***(!newRight)***REMOVED***this.lastChunk***REMOVED***=***REMOVED***last;
		return***REMOVED***this;
	}

	overwrite(start,***REMOVED***end,***REMOVED***content,***REMOVED***options)***REMOVED***{
		options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
		return***REMOVED***this.update(start,***REMOVED***end,***REMOVED***content,***REMOVED***{***REMOVED***...options,***REMOVED***overwrite:***REMOVED***!options.contentOnly***REMOVED***});
	}

	update(start,***REMOVED***end,***REMOVED***content,***REMOVED***options)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('replacement***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		while***REMOVED***(start***REMOVED***<***REMOVED***0)***REMOVED***start***REMOVED***+=***REMOVED***this.original.length;
		while***REMOVED***(end***REMOVED***<***REMOVED***0)***REMOVED***end***REMOVED***+=***REMOVED***this.original.length;

		if***REMOVED***(end***REMOVED***>***REMOVED***this.original.length)***REMOVED***throw***REMOVED***new***REMOVED***Error('end***REMOVED***is***REMOVED***out***REMOVED***of***REMOVED***bounds');
		if***REMOVED***(start***REMOVED***===***REMOVED***end)
			throw***REMOVED***new***REMOVED***Error(
				'Cannot***REMOVED***overwrite***REMOVED***a***REMOVED***zero-length***REMOVED***range***REMOVED***–***REMOVED***use***REMOVED***appendLeft***REMOVED***or***REMOVED***prependRight***REMOVED***instead',
			);

		this._split(start);
		this._split(end);

		if***REMOVED***(options***REMOVED***===***REMOVED***true)***REMOVED***{
			if***REMOVED***(!warned.storeName)***REMOVED***{
				console.warn(
					'The***REMOVED***final***REMOVED***argument***REMOVED***to***REMOVED***magicString.overwrite(...)***REMOVED***should***REMOVED***be***REMOVED***an***REMOVED***options***REMOVED***object.***REMOVED***See***REMOVED***https://github.com/rich-harris/magic-string',
				);***REMOVED***//***REMOVED***eslint-disable-line***REMOVED***no-console
				warned.storeName***REMOVED***=***REMOVED***true;
			}

			options***REMOVED***=***REMOVED***{***REMOVED***storeName:***REMOVED***true***REMOVED***};
		}
		const***REMOVED***storeName***REMOVED***=***REMOVED***options***REMOVED***!==***REMOVED***undefined***REMOVED***?***REMOVED***options.storeName***REMOVED***:***REMOVED***false;
		const***REMOVED***overwrite***REMOVED***=***REMOVED***options***REMOVED***!==***REMOVED***undefined***REMOVED***?***REMOVED***options.overwrite***REMOVED***:***REMOVED***false;

		if***REMOVED***(storeName)***REMOVED***{
			const***REMOVED***original***REMOVED***=***REMOVED***this.original.slice(start,***REMOVED***end);
			Object.defineProperty(this.storedNames,***REMOVED***original,***REMOVED***{
				writable:***REMOVED***true,
				value:***REMOVED***true,
				enumerable:***REMOVED***true,
			});
		}

		const***REMOVED***first***REMOVED***=***REMOVED***this.byStart[start];
		const***REMOVED***last***REMOVED***=***REMOVED***this.byEnd[end];

		if***REMOVED***(first)***REMOVED***{
			let***REMOVED***chunk***REMOVED***=***REMOVED***first;
			while***REMOVED***(chunk***REMOVED***!==***REMOVED***last)***REMOVED***{
				if***REMOVED***(chunk.next***REMOVED***!==***REMOVED***this.byStart[chunk.end])***REMOVED***{
					throw***REMOVED***new***REMOVED***Error('Cannot***REMOVED***overwrite***REMOVED***across***REMOVED***a***REMOVED***split***REMOVED***point');
				}
				chunk***REMOVED***=***REMOVED***chunk.next;
				chunk.edit('',***REMOVED***false);
			}

			first.edit(content,***REMOVED***storeName,***REMOVED***!overwrite);
		}***REMOVED***else***REMOVED***{
			//***REMOVED***must***REMOVED***be***REMOVED***inserting***REMOVED***at***REMOVED***the***REMOVED***end
			const***REMOVED***newChunk***REMOVED***=***REMOVED***new***REMOVED***Chunk$1(start,***REMOVED***end,***REMOVED***'').edit(content,***REMOVED***storeName);

			//***REMOVED***TODO***REMOVED***last***REMOVED***chunk***REMOVED***in***REMOVED***the***REMOVED***array***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***the***REMOVED***last***REMOVED***chunk,***REMOVED***if***REMOVED***it's***REMOVED***moved...
			last.next***REMOVED***=***REMOVED***newChunk;
			newChunk.previous***REMOVED***=***REMOVED***last;
		}
		return***REMOVED***this;
	}

	prepend(content)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('outro***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		this.intro***REMOVED***=***REMOVED***content***REMOVED***+***REMOVED***this.intro;
		return***REMOVED***this;
	}

	prependLeft(index,***REMOVED***content)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('inserted***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		this._split(index);

		const***REMOVED***chunk***REMOVED***=***REMOVED***this.byEnd[index];

		if***REMOVED***(chunk)***REMOVED***{
			chunk.prependLeft(content);
		}***REMOVED***else***REMOVED***{
			this.intro***REMOVED***=***REMOVED***content***REMOVED***+***REMOVED***this.intro;
		}
		return***REMOVED***this;
	}

	prependRight(index,***REMOVED***content)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***content***REMOVED***!==***REMOVED***'string')***REMOVED***throw***REMOVED***new***REMOVED***TypeError('inserted***REMOVED***content***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string');

		this._split(index);

		const***REMOVED***chunk***REMOVED***=***REMOVED***this.byStart[index];

		if***REMOVED***(chunk)***REMOVED***{
			chunk.prependRight(content);
		}***REMOVED***else***REMOVED***{
			this.outro***REMOVED***=***REMOVED***content***REMOVED***+***REMOVED***this.outro;
		}
		return***REMOVED***this;
	}

	remove(start,***REMOVED***end)***REMOVED***{
		while***REMOVED***(start***REMOVED***<***REMOVED***0)***REMOVED***start***REMOVED***+=***REMOVED***this.original.length;
		while***REMOVED***(end***REMOVED***<***REMOVED***0)***REMOVED***end***REMOVED***+=***REMOVED***this.original.length;

		if***REMOVED***(start***REMOVED***===***REMOVED***end)***REMOVED***return***REMOVED***this;

		if***REMOVED***(start***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***end***REMOVED***>***REMOVED***this.original.length)***REMOVED***throw***REMOVED***new***REMOVED***Error('Character***REMOVED***is***REMOVED***out***REMOVED***of***REMOVED***bounds');
		if***REMOVED***(start***REMOVED***>***REMOVED***end)***REMOVED***throw***REMOVED***new***REMOVED***Error('end***REMOVED***must***REMOVED***be***REMOVED***greater***REMOVED***than***REMOVED***start');

		this._split(start);
		this._split(end);

		let***REMOVED***chunk***REMOVED***=***REMOVED***this.byStart[start];

		while***REMOVED***(chunk)***REMOVED***{
			chunk.intro***REMOVED***=***REMOVED***'';
			chunk.outro***REMOVED***=***REMOVED***'';
			chunk.edit('');

			chunk***REMOVED***=***REMOVED***end***REMOVED***>***REMOVED***chunk.end***REMOVED***?***REMOVED***this.byStart[chunk.end]***REMOVED***:***REMOVED***null;
		}
		return***REMOVED***this;
	}

	lastChar()***REMOVED***{
		if***REMOVED***(this.outro.length)***REMOVED***return***REMOVED***this.outro[this.outro.length***REMOVED***-***REMOVED***1];
		let***REMOVED***chunk***REMOVED***=***REMOVED***this.lastChunk;
		do***REMOVED***{
			if***REMOVED***(chunk.outro.length)***REMOVED***return***REMOVED***chunk.outro[chunk.outro.length***REMOVED***-***REMOVED***1];
			if***REMOVED***(chunk.content.length)***REMOVED***return***REMOVED***chunk.content[chunk.content.length***REMOVED***-***REMOVED***1];
			if***REMOVED***(chunk.intro.length)***REMOVED***return***REMOVED***chunk.intro[chunk.intro.length***REMOVED***-***REMOVED***1];
		}***REMOVED***while***REMOVED***((chunk***REMOVED***=***REMOVED***chunk.previous));
		if***REMOVED***(this.intro.length)***REMOVED***return***REMOVED***this.intro[this.intro.length***REMOVED***-***REMOVED***1];
		return***REMOVED***'';
	}

	lastLine()***REMOVED***{
		let***REMOVED***lineIndex***REMOVED***=***REMOVED***this.outro.lastIndexOf(n);
		if***REMOVED***(lineIndex***REMOVED***!==***REMOVED***-1)***REMOVED***return***REMOVED***this.outro.substr(lineIndex***REMOVED***+***REMOVED***1);
		let***REMOVED***lineStr***REMOVED***=***REMOVED***this.outro;
		let***REMOVED***chunk***REMOVED***=***REMOVED***this.lastChunk;
		do***REMOVED***{
			if***REMOVED***(chunk.outro.length***REMOVED***>***REMOVED***0)***REMOVED***{
				lineIndex***REMOVED***=***REMOVED***chunk.outro.lastIndexOf(n);
				if***REMOVED***(lineIndex***REMOVED***!==***REMOVED***-1)***REMOVED***return***REMOVED***chunk.outro.substr(lineIndex***REMOVED***+***REMOVED***1)***REMOVED***+***REMOVED***lineStr;
				lineStr***REMOVED***=***REMOVED***chunk.outro***REMOVED***+***REMOVED***lineStr;
			}

			if***REMOVED***(chunk.content.length***REMOVED***>***REMOVED***0)***REMOVED***{
				lineIndex***REMOVED***=***REMOVED***chunk.content.lastIndexOf(n);
				if***REMOVED***(lineIndex***REMOVED***!==***REMOVED***-1)***REMOVED***return***REMOVED***chunk.content.substr(lineIndex***REMOVED***+***REMOVED***1)***REMOVED***+***REMOVED***lineStr;
				lineStr***REMOVED***=***REMOVED***chunk.content***REMOVED***+***REMOVED***lineStr;
			}

			if***REMOVED***(chunk.intro.length***REMOVED***>***REMOVED***0)***REMOVED***{
				lineIndex***REMOVED***=***REMOVED***chunk.intro.lastIndexOf(n);
				if***REMOVED***(lineIndex***REMOVED***!==***REMOVED***-1)***REMOVED***return***REMOVED***chunk.intro.substr(lineIndex***REMOVED***+***REMOVED***1)***REMOVED***+***REMOVED***lineStr;
				lineStr***REMOVED***=***REMOVED***chunk.intro***REMOVED***+***REMOVED***lineStr;
			}
		}***REMOVED***while***REMOVED***((chunk***REMOVED***=***REMOVED***chunk.previous));
		lineIndex***REMOVED***=***REMOVED***this.intro.lastIndexOf(n);
		if***REMOVED***(lineIndex***REMOVED***!==***REMOVED***-1)***REMOVED***return***REMOVED***this.intro.substr(lineIndex***REMOVED***+***REMOVED***1)***REMOVED***+***REMOVED***lineStr;
		return***REMOVED***this.intro***REMOVED***+***REMOVED***lineStr;
	}

	slice(start***REMOVED***=***REMOVED***0,***REMOVED***end***REMOVED***=***REMOVED***this.original.length)***REMOVED***{
		while***REMOVED***(start***REMOVED***<***REMOVED***0)***REMOVED***start***REMOVED***+=***REMOVED***this.original.length;
		while***REMOVED***(end***REMOVED***<***REMOVED***0)***REMOVED***end***REMOVED***+=***REMOVED***this.original.length;

		let***REMOVED***result***REMOVED***=***REMOVED***'';

		//***REMOVED***find***REMOVED***start***REMOVED***chunk
		let***REMOVED***chunk***REMOVED***=***REMOVED***this.firstChunk;
		while***REMOVED***(chunk***REMOVED***&&***REMOVED***(chunk.start***REMOVED***>***REMOVED***start***REMOVED***||***REMOVED***chunk.end***REMOVED***<=***REMOVED***start))***REMOVED***{
			//***REMOVED***found***REMOVED***end***REMOVED***chunk***REMOVED***before***REMOVED***start
			if***REMOVED***(chunk.start***REMOVED***<***REMOVED***end***REMOVED***&&***REMOVED***chunk.end***REMOVED***>=***REMOVED***end)***REMOVED***{
				return***REMOVED***result;
			}

			chunk***REMOVED***=***REMOVED***chunk.next;
		}

		if***REMOVED***(chunk***REMOVED***&&***REMOVED***chunk.edited***REMOVED***&&***REMOVED***chunk.start***REMOVED***!==***REMOVED***start)
			throw***REMOVED***new***REMOVED***Error(`Cannot***REMOVED***use***REMOVED***replaced***REMOVED***character***REMOVED***${start}***REMOVED***as***REMOVED***slice***REMOVED***start***REMOVED***anchor.`);

		const***REMOVED***startChunk***REMOVED***=***REMOVED***chunk;
		while***REMOVED***(chunk)***REMOVED***{
			if***REMOVED***(chunk.intro***REMOVED***&&***REMOVED***(startChunk***REMOVED***!==***REMOVED***chunk***REMOVED***||***REMOVED***chunk.start***REMOVED***===***REMOVED***start))***REMOVED***{
				result***REMOVED***+=***REMOVED***chunk.intro;
			}

			const***REMOVED***containsEnd***REMOVED***=***REMOVED***chunk.start***REMOVED***<***REMOVED***end***REMOVED***&&***REMOVED***chunk.end***REMOVED***>=***REMOVED***end;
			if***REMOVED***(containsEnd***REMOVED***&&***REMOVED***chunk.edited***REMOVED***&&***REMOVED***chunk.end***REMOVED***!==***REMOVED***end)
				throw***REMOVED***new***REMOVED***Error(`Cannot***REMOVED***use***REMOVED***replaced***REMOVED***character***REMOVED***${end}***REMOVED***as***REMOVED***slice***REMOVED***end***REMOVED***anchor.`);

			const***REMOVED***sliceStart***REMOVED***=***REMOVED***startChunk***REMOVED***===***REMOVED***chunk***REMOVED***?***REMOVED***start***REMOVED***-***REMOVED***chunk.start***REMOVED***:***REMOVED***0;
			const***REMOVED***sliceEnd***REMOVED***=***REMOVED***containsEnd***REMOVED***?***REMOVED***chunk.content.length***REMOVED***+***REMOVED***end***REMOVED***-***REMOVED***chunk.end***REMOVED***:***REMOVED***chunk.content.length;

			result***REMOVED***+=***REMOVED***chunk.content.slice(sliceStart,***REMOVED***sliceEnd);

			if***REMOVED***(chunk.outro***REMOVED***&&***REMOVED***(!containsEnd***REMOVED***||***REMOVED***chunk.end***REMOVED***===***REMOVED***end))***REMOVED***{
				result***REMOVED***+=***REMOVED***chunk.outro;
			}

			if***REMOVED***(containsEnd)***REMOVED***{
				break;
			}

			chunk***REMOVED***=***REMOVED***chunk.next;
		}

		return***REMOVED***result;
	}

	//***REMOVED***TODO***REMOVED***deprecate***REMOVED***this?***REMOVED***not***REMOVED***really***REMOVED***very***REMOVED***useful
	snip(start,***REMOVED***end)***REMOVED***{
		const***REMOVED***clone***REMOVED***=***REMOVED***this.clone();
		clone.remove(0,***REMOVED***start);
		clone.remove(end,***REMOVED***clone.original.length);

		return***REMOVED***clone;
	}

	_split(index)***REMOVED***{
		if***REMOVED***(this.byStart[index]***REMOVED***||***REMOVED***this.byEnd[index])***REMOVED***return;

		let***REMOVED***chunk***REMOVED***=***REMOVED***this.lastSearchedChunk;
		const***REMOVED***searchForward***REMOVED***=***REMOVED***index***REMOVED***>***REMOVED***chunk.end;

		while***REMOVED***(chunk)***REMOVED***{
			if***REMOVED***(chunk.contains(index))***REMOVED***return***REMOVED***this._splitChunk(chunk,***REMOVED***index);

			chunk***REMOVED***=***REMOVED***searchForward***REMOVED***?***REMOVED***this.byStart[chunk.end]***REMOVED***:***REMOVED***this.byEnd[chunk.start];
		}
	}

	_splitChunk(chunk,***REMOVED***index)***REMOVED***{
		if***REMOVED***(chunk.edited***REMOVED***&&***REMOVED***chunk.content.length)***REMOVED***{
			//***REMOVED***zero-length***REMOVED***edited***REMOVED***chunks***REMOVED***are***REMOVED***a***REMOVED***special***REMOVED***case***REMOVED***(overlapping***REMOVED***replacements)
			const***REMOVED***loc***REMOVED***=***REMOVED***getLocator(this.original)(index);
			throw***REMOVED***new***REMOVED***Error(
				`Cannot***REMOVED***split***REMOVED***a***REMOVED***chunk***REMOVED***that***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***edited***REMOVED***(${loc.line}:${loc.column}***REMOVED***–***REMOVED***"${chunk.original}")`,
			);
		}

		const***REMOVED***newChunk***REMOVED***=***REMOVED***chunk.split(index);

		this.byEnd[index]***REMOVED***=***REMOVED***chunk;
		this.byStart[index]***REMOVED***=***REMOVED***newChunk;
		this.byEnd[newChunk.end]***REMOVED***=***REMOVED***newChunk;

		if***REMOVED***(chunk***REMOVED***===***REMOVED***this.lastChunk)***REMOVED***this.lastChunk***REMOVED***=***REMOVED***newChunk;

		this.lastSearchedChunk***REMOVED***=***REMOVED***chunk;
		return***REMOVED***true;
	}

	toString()***REMOVED***{
		let***REMOVED***str***REMOVED***=***REMOVED***this.intro;

		let***REMOVED***chunk***REMOVED***=***REMOVED***this.firstChunk;
		while***REMOVED***(chunk)***REMOVED***{
			str***REMOVED***+=***REMOVED***chunk.toString();
			chunk***REMOVED***=***REMOVED***chunk.next;
		}

		return***REMOVED***str***REMOVED***+***REMOVED***this.outro;
	}

	isEmpty()***REMOVED***{
		let***REMOVED***chunk***REMOVED***=***REMOVED***this.firstChunk;
		do***REMOVED***{
			if***REMOVED***(
				(chunk.intro.length***REMOVED***&&***REMOVED***chunk.intro.trim())***REMOVED***||
				(chunk.content.length***REMOVED***&&***REMOVED***chunk.content.trim())***REMOVED***||
				(chunk.outro.length***REMOVED***&&***REMOVED***chunk.outro.trim())
			)
				return***REMOVED***false;
		}***REMOVED***while***REMOVED***((chunk***REMOVED***=***REMOVED***chunk.next));
		return***REMOVED***true;
	}

	length()***REMOVED***{
		let***REMOVED***chunk***REMOVED***=***REMOVED***this.firstChunk;
		let***REMOVED***length***REMOVED***=***REMOVED***0;
		do***REMOVED***{
			length***REMOVED***+=***REMOVED***chunk.intro.length***REMOVED***+***REMOVED***chunk.content.length***REMOVED***+***REMOVED***chunk.outro.length;
		}***REMOVED***while***REMOVED***((chunk***REMOVED***=***REMOVED***chunk.next));
		return***REMOVED***length;
	}

	trimLines()***REMOVED***{
		return***REMOVED***this.trim('[\\r\\n]');
	}

	trim(charType)***REMOVED***{
		return***REMOVED***this.trimStart(charType).trimEnd(charType);
	}

	trimEndAborted(charType)***REMOVED***{
		const***REMOVED***rx***REMOVED***=***REMOVED***new***REMOVED***RegExp((charType***REMOVED***||***REMOVED***'\\s')***REMOVED***+***REMOVED***'+$');

		this.outro***REMOVED***=***REMOVED***this.outro.replace(rx,***REMOVED***'');
		if***REMOVED***(this.outro.length)***REMOVED***return***REMOVED***true;

		let***REMOVED***chunk***REMOVED***=***REMOVED***this.lastChunk;

		do***REMOVED***{
			const***REMOVED***end***REMOVED***=***REMOVED***chunk.end;
			const***REMOVED***aborted***REMOVED***=***REMOVED***chunk.trimEnd(rx);

			//***REMOVED***if***REMOVED***chunk***REMOVED***was***REMOVED***trimmed,***REMOVED***we***REMOVED***have***REMOVED***a***REMOVED***new***REMOVED***lastChunk
			if***REMOVED***(chunk.end***REMOVED***!==***REMOVED***end)***REMOVED***{
				if***REMOVED***(this.lastChunk***REMOVED***===***REMOVED***chunk)***REMOVED***{
					this.lastChunk***REMOVED***=***REMOVED***chunk.next;
				}

				this.byEnd[chunk.end]***REMOVED***=***REMOVED***chunk;
				this.byStart[chunk.next.start]***REMOVED***=***REMOVED***chunk.next;
				this.byEnd[chunk.next.end]***REMOVED***=***REMOVED***chunk.next;
			}

			if***REMOVED***(aborted)***REMOVED***return***REMOVED***true;
			chunk***REMOVED***=***REMOVED***chunk.previous;
		}***REMOVED***while***REMOVED***(chunk);

		return***REMOVED***false;
	}

	trimEnd(charType)***REMOVED***{
		this.trimEndAborted(charType);
		return***REMOVED***this;
	}
	trimStartAborted(charType)***REMOVED***{
		const***REMOVED***rx***REMOVED***=***REMOVED***new***REMOVED***RegExp('^'***REMOVED***+***REMOVED***(charType***REMOVED***||***REMOVED***'\\s')***REMOVED***+***REMOVED***'+');

		this.intro***REMOVED***=***REMOVED***this.intro.replace(rx,***REMOVED***'');
		if***REMOVED***(this.intro.length)***REMOVED***return***REMOVED***true;

		let***REMOVED***chunk***REMOVED***=***REMOVED***this.firstChunk;

		do***REMOVED***{
			const***REMOVED***end***REMOVED***=***REMOVED***chunk.end;
			const***REMOVED***aborted***REMOVED***=***REMOVED***chunk.trimStart(rx);

			if***REMOVED***(chunk.end***REMOVED***!==***REMOVED***end)***REMOVED***{
				//***REMOVED***special***REMOVED***case...
				if***REMOVED***(chunk***REMOVED***===***REMOVED***this.lastChunk)***REMOVED***this.lastChunk***REMOVED***=***REMOVED***chunk.next;

				this.byEnd[chunk.end]***REMOVED***=***REMOVED***chunk;
				this.byStart[chunk.next.start]***REMOVED***=***REMOVED***chunk.next;
				this.byEnd[chunk.next.end]***REMOVED***=***REMOVED***chunk.next;
			}

			if***REMOVED***(aborted)***REMOVED***return***REMOVED***true;
			chunk***REMOVED***=***REMOVED***chunk.next;
		}***REMOVED***while***REMOVED***(chunk);

		return***REMOVED***false;
	}

	trimStart(charType)***REMOVED***{
		this.trimStartAborted(charType);
		return***REMOVED***this;
	}

	hasChanged()***REMOVED***{
		return***REMOVED***this.original***REMOVED***!==***REMOVED***this.toString();
	}

	_replaceRegexp(searchValue,***REMOVED***replacement)***REMOVED***{
		function***REMOVED***getReplacement(match,***REMOVED***str)***REMOVED***{
			if***REMOVED***(typeof***REMOVED***replacement***REMOVED***===***REMOVED***'string')***REMOVED***{
				return***REMOVED***replacement.replace(/\$(\$|&|\d+)/g,***REMOVED***(_,***REMOVED***i)***REMOVED***=>***REMOVED***{
					//***REMOVED***https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter
					if***REMOVED***(i***REMOVED***===***REMOVED***'$')***REMOVED***return***REMOVED***'$';
					if***REMOVED***(i***REMOVED***===***REMOVED***'&')***REMOVED***return***REMOVED***match[0];
					const***REMOVED***num***REMOVED***=***REMOVED***+i;
					if***REMOVED***(num***REMOVED***<***REMOVED***match.length)***REMOVED***return***REMOVED***match[+i];
					return***REMOVED***`$${i}`;
				});
			}***REMOVED***else***REMOVED***{
				return***REMOVED***replacement(...match,***REMOVED***match.index,***REMOVED***str,***REMOVED***match.groups);
			}
		}
		function***REMOVED***matchAll(re,***REMOVED***str)***REMOVED***{
			let***REMOVED***match;
			const***REMOVED***matches***REMOVED***=***REMOVED***[];
			while***REMOVED***((match***REMOVED***=***REMOVED***re.exec(str)))***REMOVED***{
				matches.push(match);
			}
			return***REMOVED***matches;
		}
		if***REMOVED***(searchValue.global)***REMOVED***{
			const***REMOVED***matches***REMOVED***=***REMOVED***matchAll(searchValue,***REMOVED***this.original);
			matches.forEach((match)***REMOVED***=>***REMOVED***{
				if***REMOVED***(match.index***REMOVED***!=***REMOVED***null)
					this.overwrite(
						match.index,
						match.index***REMOVED***+***REMOVED***match[0].length,
						getReplacement(match,***REMOVED***this.original),
					);
			});
		}***REMOVED***else***REMOVED***{
			const***REMOVED***match***REMOVED***=***REMOVED***this.original.match(searchValue);
			if***REMOVED***(match***REMOVED***&&***REMOVED***match.index***REMOVED***!=***REMOVED***null)
				this.overwrite(
					match.index,
					match.index***REMOVED***+***REMOVED***match[0].length,
					getReplacement(match,***REMOVED***this.original),
				);
		}
		return***REMOVED***this;
	}

	_replaceString(string,***REMOVED***replacement)***REMOVED***{
		const***REMOVED***{***REMOVED***original***REMOVED***}***REMOVED***=***REMOVED***this;
		const***REMOVED***index***REMOVED***=***REMOVED***original.indexOf(string);

		if***REMOVED***(index***REMOVED***!==***REMOVED***-1)***REMOVED***{
			this.overwrite(index,***REMOVED***index***REMOVED***+***REMOVED***string.length,***REMOVED***replacement);
		}

		return***REMOVED***this;
	}

	replace(searchValue,***REMOVED***replacement)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***searchValue***REMOVED***===***REMOVED***'string')***REMOVED***{
			return***REMOVED***this._replaceString(searchValue,***REMOVED***replacement);
		}

		return***REMOVED***this._replaceRegexp(searchValue,***REMOVED***replacement);
	}

	_replaceAllString(string,***REMOVED***replacement)***REMOVED***{
		const***REMOVED***{***REMOVED***original***REMOVED***}***REMOVED***=***REMOVED***this;
		const***REMOVED***stringLength***REMOVED***=***REMOVED***string.length;
		for***REMOVED***(
			let***REMOVED***index***REMOVED***=***REMOVED***original.indexOf(string);
			index***REMOVED***!==***REMOVED***-1;
			index***REMOVED***=***REMOVED***original.indexOf(string,***REMOVED***index***REMOVED***+***REMOVED***stringLength)
		)***REMOVED***{
			this.overwrite(index,***REMOVED***index***REMOVED***+***REMOVED***stringLength,***REMOVED***replacement);
		}

		return***REMOVED***this;
	}

	replaceAll(searchValue,***REMOVED***replacement)***REMOVED***{
		if***REMOVED***(typeof***REMOVED***searchValue***REMOVED***===***REMOVED***'string')***REMOVED***{
			return***REMOVED***this._replaceAllString(searchValue,***REMOVED***replacement);
		}

		if***REMOVED***(!searchValue.global)***REMOVED***{
			throw***REMOVED***new***REMOVED***TypeError(
				'MagicString.prototype.replaceAll***REMOVED***called***REMOVED***with***REMOVED***a***REMOVED***non-global***REMOVED***RegExp***REMOVED***argument',
			);
		}

		return***REMOVED***this._replaceRegexp(searchValue,***REMOVED***replacement);
	}
}

const***REMOVED***hasOwnProp***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;

let***REMOVED***Bundle$1***REMOVED***=***REMOVED***class***REMOVED***Bundle***REMOVED***{
	constructor(options***REMOVED***=***REMOVED***{})***REMOVED***{
		this.intro***REMOVED***=***REMOVED***options.intro***REMOVED***||***REMOVED***'';
		this.separator***REMOVED***=***REMOVED***options.separator***REMOVED***!==***REMOVED***undefined***REMOVED***?***REMOVED***options.separator***REMOVED***:***REMOVED***'\n';
		this.sources***REMOVED***=***REMOVED***[];
		this.uniqueSources***REMOVED***=***REMOVED***[];
		this.uniqueSourceIndexByFilename***REMOVED***=***REMOVED***{};
	}

	addSource(source)***REMOVED***{
		if***REMOVED***(source***REMOVED***instanceof***REMOVED***MagicString)***REMOVED***{
			return***REMOVED***this.addSource({
				content:***REMOVED***source,
				filename:***REMOVED***source.filename,
				separator:***REMOVED***this.separator,
			});
		}

		if***REMOVED***(!isObject$1(source)***REMOVED***||***REMOVED***!source.content)***REMOVED***{
			throw***REMOVED***new***REMOVED***Error(
				'bundle.addSource()***REMOVED***takes***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***a***REMOVED***`content`***REMOVED***property,***REMOVED***which***REMOVED***should***REMOVED***be***REMOVED***an***REMOVED***instance***REMOVED***of***REMOVED***MagicString,***REMOVED***and***REMOVED***an***REMOVED***optional***REMOVED***`filename`',
			);
		}

		['filename',***REMOVED***'ignoreList',***REMOVED***'indentExclusionRanges',***REMOVED***'separator'].forEach((option)***REMOVED***=>***REMOVED***{
			if***REMOVED***(!hasOwnProp.call(source,***REMOVED***option))***REMOVED***source[option]***REMOVED***=***REMOVED***source.content[option];
		});

		if***REMOVED***(source.separator***REMOVED***===***REMOVED***undefined)***REMOVED***{
			//***REMOVED***TODO***REMOVED***there's***REMOVED***a***REMOVED***bunch***REMOVED***of***REMOVED***this***REMOVED***sort***REMOVED***of***REMOVED***thing,***REMOVED***needs***REMOVED***cleaning***REMOVED***up
			source.separator***REMOVED***=***REMOVED***this.separator;
		}

		if***REMOVED***(source.filename)***REMOVED***{
			if***REMOVED***(!hasOwnProp.call(this.uniqueSourceIndexByFilename,***REMOVED***source.filename))***REMOVED***{
				this.uniqueSourceIndexByFilename[source.filename]***REMOVED***=***REMOVED***this.uniqueSources.length;
				this.uniqueSources.push({***REMOVED***filename:***REMOVED***source.filename,***REMOVED***content:***REMOVED***source.content.original***REMOVED***});
			}***REMOVED***else***REMOVED***{
				const***REMOVED***uniqueSource***REMOVED***=***REMOVED***this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];
				if***REMOVED***(source.content.original***REMOVED***!==***REMOVED***uniqueSource.content)***REMOVED***{
					throw***REMOVED***new***REMOVED***Error(`Illegal***REMOVED***source:***REMOVED***same***REMOVED***filename***REMOVED***(${source.filename}),***REMOVED***different***REMOVED***contents`);
				}
			}
		}

		this.sources.push(source);
		return***REMOVED***this;
	}

	append(str,***REMOVED***options)***REMOVED***{
		this.addSource({
			content:***REMOVED***new***REMOVED***MagicString(str),
			separator:***REMOVED***(options***REMOVED***&&***REMOVED***options.separator)***REMOVED***||***REMOVED***'',
		});

		return***REMOVED***this;
	}

	clone()***REMOVED***{
		const***REMOVED***bundle***REMOVED***=***REMOVED***new***REMOVED***Bundle({
			intro:***REMOVED***this.intro,
			separator:***REMOVED***this.separator,
		});

		this.sources.forEach((source)***REMOVED***=>***REMOVED***{
			bundle.addSource({
				filename:***REMOVED***source.filename,
				content:***REMOVED***source.content.clone(),
				separator:***REMOVED***source.separator,
			});
		});

		return***REMOVED***bundle;
	}

	generateDecodedMap(options***REMOVED***=***REMOVED***{})***REMOVED***{
		const***REMOVED***names***REMOVED***=***REMOVED***[];
		let***REMOVED***x_google_ignoreList***REMOVED***=***REMOVED***undefined;
		this.sources.forEach((source)***REMOVED***=>***REMOVED***{
			Object.keys(source.content.storedNames).forEach((name)***REMOVED***=>***REMOVED***{
				if***REMOVED***(!~names.indexOf(name))***REMOVED***names.push(name);
			});
		});

		const***REMOVED***mappings***REMOVED***=***REMOVED***new***REMOVED***Mappings(options.hires);

		if***REMOVED***(this.intro)***REMOVED***{
			mappings.advance(this.intro);
		}

		this.sources.forEach((source,***REMOVED***i)***REMOVED***=>***REMOVED***{
			if***REMOVED***(i***REMOVED***>***REMOVED***0)***REMOVED***{
				mappings.advance(this.separator);
			}

			const***REMOVED***sourceIndex***REMOVED***=***REMOVED***source.filename***REMOVED***?***REMOVED***this.uniqueSourceIndexByFilename[source.filename]***REMOVED***:***REMOVED***-1;
			const***REMOVED***magicString***REMOVED***=***REMOVED***source.content;
			const***REMOVED***locate***REMOVED***=***REMOVED***getLocator(magicString.original);

			if***REMOVED***(magicString.intro)***REMOVED***{
				mappings.advance(magicString.intro);
			}

			magicString.firstChunk.eachNext((chunk)***REMOVED***=>***REMOVED***{
				const***REMOVED***loc***REMOVED***=***REMOVED***locate(chunk.start);

				if***REMOVED***(chunk.intro.length)***REMOVED***mappings.advance(chunk.intro);

				if***REMOVED***(source.filename)***REMOVED***{
					if***REMOVED***(chunk.edited)***REMOVED***{
						mappings.addEdit(
							sourceIndex,
							chunk.content,
							loc,
							chunk.storeName***REMOVED***?***REMOVED***names.indexOf(chunk.original)***REMOVED***:***REMOVED***-1,
						);
					}***REMOVED***else***REMOVED***{
						mappings.addUneditedChunk(
							sourceIndex,
							chunk,
							magicString.original,
							loc,
							magicString.sourcemapLocations,
						);
					}
				}***REMOVED***else***REMOVED***{
					mappings.advance(chunk.content);
				}

				if***REMOVED***(chunk.outro.length)***REMOVED***mappings.advance(chunk.outro);
			});

			if***REMOVED***(magicString.outro)***REMOVED***{
				mappings.advance(magicString.outro);
			}

			if***REMOVED***(source.ignoreList***REMOVED***&&***REMOVED***sourceIndex***REMOVED***!==***REMOVED***-1)***REMOVED***{
				if***REMOVED***(x_google_ignoreList***REMOVED***===***REMOVED***undefined)***REMOVED***{
					x_google_ignoreList***REMOVED***=***REMOVED***[];
				}
				x_google_ignoreList.push(sourceIndex);
			}
		});

		return***REMOVED***{
			file:***REMOVED***options.file***REMOVED***?***REMOVED***options.file.split(/[/\\]/).pop()***REMOVED***:***REMOVED***undefined,
			sources:***REMOVED***this.uniqueSources.map((source)***REMOVED***=>***REMOVED***{
				return***REMOVED***options.file***REMOVED***?***REMOVED***getRelativePath(options.file,***REMOVED***source.filename)***REMOVED***:***REMOVED***source.filename;
			}),
			sourcesContent:***REMOVED***this.uniqueSources.map((source)***REMOVED***=>***REMOVED***{
				return***REMOVED***options.includeContent***REMOVED***?***REMOVED***source.content***REMOVED***:***REMOVED***null;
			}),
			names,
			mappings:***REMOVED***mappings.raw,
			x_google_ignoreList,
		};
	}

	generateMap(options)***REMOVED***{
		return***REMOVED***new***REMOVED***SourceMap(this.generateDecodedMap(options));
	}

	getIndentString()***REMOVED***{
		const***REMOVED***indentStringCounts***REMOVED***=***REMOVED***{};

		this.sources.forEach((source)***REMOVED***=>***REMOVED***{
			const***REMOVED***indentStr***REMOVED***=***REMOVED***source.content._getRawIndentString();

			if***REMOVED***(indentStr***REMOVED***===***REMOVED***null)***REMOVED***return;

			if***REMOVED***(!indentStringCounts[indentStr])***REMOVED***indentStringCounts[indentStr]***REMOVED***=***REMOVED***0;
			indentStringCounts[indentStr]***REMOVED***+=***REMOVED***1;
		});

		return***REMOVED***(
			Object.keys(indentStringCounts).sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***{
				return***REMOVED***indentStringCounts[a]***REMOVED***-***REMOVED***indentStringCounts[b];
			})[0]***REMOVED***||***REMOVED***'\t'
		);
	}

	indent(indentStr)***REMOVED***{
		if***REMOVED***(!arguments.length)***REMOVED***{
			indentStr***REMOVED***=***REMOVED***this.getIndentString();
		}

		if***REMOVED***(indentStr***REMOVED***===***REMOVED***'')***REMOVED***return***REMOVED***this;***REMOVED***//***REMOVED***noop

		let***REMOVED***trailingNewline***REMOVED***=***REMOVED***!this.intro***REMOVED***||***REMOVED***this.intro.slice(-1)***REMOVED***===***REMOVED***'\n';

		this.sources.forEach((source,***REMOVED***i)***REMOVED***=>***REMOVED***{
			const***REMOVED***separator***REMOVED***=***REMOVED***source.separator***REMOVED***!==***REMOVED***undefined***REMOVED***?***REMOVED***source.separator***REMOVED***:***REMOVED***this.separator;
			const***REMOVED***indentStart***REMOVED***=***REMOVED***trailingNewline***REMOVED***||***REMOVED***(i***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***/\r?\n$/.test(separator));

			source.content.indent(indentStr,***REMOVED***{
				exclude:***REMOVED***source.indentExclusionRanges,
				indentStart,***REMOVED***//:***REMOVED***trailingNewline***REMOVED***||***REMOVED***/\r?\n$/.test(***REMOVED***separator***REMOVED***)***REMOVED******REMOVED***//true///\r?\n/.test(***REMOVED***separator***REMOVED***)
			});

			trailingNewline***REMOVED***=***REMOVED***source.content.lastChar()***REMOVED***===***REMOVED***'\n';
		});

		if***REMOVED***(this.intro)***REMOVED***{
			this.intro***REMOVED***=
				indentStr***REMOVED***+
				this.intro.replace(/^[^\n]/gm,***REMOVED***(match,***REMOVED***index)***REMOVED***=>***REMOVED***{
					return***REMOVED***index***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***indentStr***REMOVED***+***REMOVED***match***REMOVED***:***REMOVED***match;
				});
		}

		return***REMOVED***this;
	}

	prepend(str)***REMOVED***{
		this.intro***REMOVED***=***REMOVED***str***REMOVED***+***REMOVED***this.intro;
		return***REMOVED***this;
	}

	toString()***REMOVED***{
		const***REMOVED***body***REMOVED***=***REMOVED***this.sources
			.map((source,***REMOVED***i)***REMOVED***=>***REMOVED***{
				const***REMOVED***separator***REMOVED***=***REMOVED***source.separator***REMOVED***!==***REMOVED***undefined***REMOVED***?***REMOVED***source.separator***REMOVED***:***REMOVED***this.separator;
				const***REMOVED***str***REMOVED***=***REMOVED***(i***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***separator***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***source.content.toString();

				return***REMOVED***str;
			})
			.join('');

		return***REMOVED***this.intro***REMOVED***+***REMOVED***body;
	}

	isEmpty()***REMOVED***{
		if***REMOVED***(this.intro.length***REMOVED***&&***REMOVED***this.intro.trim())***REMOVED***return***REMOVED***false;
		if***REMOVED***(this.sources.some((source)***REMOVED***=>***REMOVED***!source.content.isEmpty()))***REMOVED***return***REMOVED***false;
		return***REMOVED***true;
	}

	length()***REMOVED***{
		return***REMOVED***this.sources.reduce(
			(length,***REMOVED***source)***REMOVED***=>***REMOVED***length***REMOVED***+***REMOVED***source.content.length(),
			this.intro.length,
		);
	}

	trimLines()***REMOVED***{
		return***REMOVED***this.trim('[\\r\\n]');
	}

	trim(charType)***REMOVED***{
		return***REMOVED***this.trimStart(charType).trimEnd(charType);
	}

	trimStart(charType)***REMOVED***{
		const***REMOVED***rx***REMOVED***=***REMOVED***new***REMOVED***RegExp('^'***REMOVED***+***REMOVED***(charType***REMOVED***||***REMOVED***'\\s')***REMOVED***+***REMOVED***'+');
		this.intro***REMOVED***=***REMOVED***this.intro.replace(rx,***REMOVED***'');

		if***REMOVED***(!this.intro)***REMOVED***{
			let***REMOVED***source;
			let***REMOVED***i***REMOVED***=***REMOVED***0;

			do***REMOVED***{
				source***REMOVED***=***REMOVED***this.sources[i++];
				if***REMOVED***(!source)***REMOVED***{
					break;
				}
			}***REMOVED***while***REMOVED***(!source.content.trimStartAborted(charType));
		}

		return***REMOVED***this;
	}

	trimEnd(charType)***REMOVED***{
		const***REMOVED***rx***REMOVED***=***REMOVED***new***REMOVED***RegExp((charType***REMOVED***||***REMOVED***'\\s')***REMOVED***+***REMOVED***'+$');

		let***REMOVED***source;
		let***REMOVED***i***REMOVED***=***REMOVED***this.sources.length***REMOVED***-***REMOVED***1;

		do***REMOVED***{
			source***REMOVED***=***REMOVED***this.sources[i--];
			if***REMOVED***(!source)***REMOVED***{
				this.intro***REMOVED***=***REMOVED***this.intro.replace(rx,***REMOVED***'');
				break;
			}
		}***REMOVED***while***REMOVED***(!source.content.trimEndAborted(charType));

		return***REMOVED***this;
	}
};

const***REMOVED***needsEscapeRegEx***REMOVED***=***REMOVED***/[\n\r'\\\u2028\u2029]/;
const***REMOVED***quoteNewlineRegEx***REMOVED***=***REMOVED***/([\n\r'\u2028\u2029])/g;
const***REMOVED***backSlashRegEx***REMOVED***=***REMOVED***/\\/g;
function***REMOVED***escapeId(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!needsEscapeRegEx.test(id))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id.replace(backSlashRegEx,***REMOVED***'\\\\').replace(quoteNewlineRegEx,***REMOVED***'\\$1');
}

class***REMOVED***ExternalChunk***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(module,***REMOVED***options,***REMOVED***inputBase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputBase***REMOVED***=***REMOVED***inputBase;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.defaultVariableName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespaceVariableName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variableName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importAssertions***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id***REMOVED***=***REMOVED***module.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.moduleInfo***REMOVED***=***REMOVED***module.info;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renormalizeRenderPath***REMOVED***=***REMOVED***module.renormalizeRenderPath;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.suggestedVariableName***REMOVED***=***REMOVED***module.suggestedVariableName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getFileName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***paths***REMOVED***}***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.fileName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(typeof***REMOVED***paths***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***paths(this.id)***REMOVED***:***REMOVED***paths[this.id])***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.renormalizeRenderPath***REMOVED***?***REMOVED***normalize(node_path.relative(this.inputBase,***REMOVED***this.id))***REMOVED***:***REMOVED***this.id));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getImportAssertions(snippets)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.importAssertions***REMOVED***||***REMOVED***(this.importAssertions***REMOVED***=***REMOVED***formatAssertions(this.options.format***REMOVED***===***REMOVED***'es'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.externalImportAssertions***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.moduleInfo.assertions,***REMOVED***snippets)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getImportPath(importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***escapeId(this.renormalizeRenderPath
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***getImportPath(importer,***REMOVED***this.getFileName(),***REMOVED***this.options.format***REMOVED***===***REMOVED***'amd',***REMOVED***false)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.getFileName());
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***formatAssertions(assertions,***REMOVED***{***REMOVED***getObject***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertionEntries***REMOVED***=***REMOVED***Object.entries(assertions).map(([key,***REMOVED***value])***REMOVED***=>***REMOVED***[key,***REMOVED***`'${value}'`]);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(assertionEntries.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getObject(assertionEntries,***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***null***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
}

const***REMOVED***UnknownKey***REMOVED***=***REMOVED***Symbol('Unknown***REMOVED***Key');
const***REMOVED***UnknownNonAccessorKey***REMOVED***=***REMOVED***Symbol('Unknown***REMOVED***Non-Accessor***REMOVED***Key');
const***REMOVED***UnknownInteger***REMOVED***=***REMOVED***Symbol('Unknown***REMOVED***Integer');
const***REMOVED***SymbolToStringTag***REMOVED***=***REMOVED***Symbol('Symbol.toStringTag');
const***REMOVED***EMPTY_PATH***REMOVED***=***REMOVED***[];
const***REMOVED***UNKNOWN_PATH***REMOVED***=***REMOVED***[UnknownKey];
//***REMOVED***For***REMOVED***deoptimizations,***REMOVED***this***REMOVED***means***REMOVED***we***REMOVED***are***REMOVED***modifying***REMOVED***an***REMOVED***unknown***REMOVED***property***REMOVED***but***REMOVED***did
//***REMOVED***not***REMOVED***lose***REMOVED***track***REMOVED***of***REMOVED***the***REMOVED***object***REMOVED***or***REMOVED***are***REMOVED***creating***REMOVED***a***REMOVED***setter/getter;
//***REMOVED***For***REMOVED***assignment***REMOVED***effects***REMOVED***it***REMOVED***means***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***check***REMOVED***for***REMOVED***setter/getter***REMOVED***effects
//***REMOVED***but***REMOVED***only***REMOVED***if***REMOVED***something***REMOVED***is***REMOVED***mutated***REMOVED***that***REMOVED***is***REMOVED***included,***REMOVED***which***REMOVED***is***REMOVED***relevant***REMOVED***for
//***REMOVED***Object.defineProperty
const***REMOVED***UNKNOWN_NON_ACCESSOR_PATH***REMOVED***=***REMOVED***[UnknownNonAccessorKey];
const***REMOVED***UNKNOWN_INTEGER_PATH***REMOVED***=***REMOVED***[UnknownInteger];
const***REMOVED***EntitiesKey***REMOVED***=***REMOVED***Symbol('Entities');
class***REMOVED***PathTracker***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entityPaths***REMOVED***=***REMOVED***Object.create(null,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[EntitiesKey]:***REMOVED***{***REMOVED***value:***REMOVED***new***REMOVED***Set()***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***trackEntityAtPathAndGetIfTracked(path,***REMOVED***entity)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trackedEntities***REMOVED***=***REMOVED***this.getEntities(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(trackedEntities.has(entity))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trackedEntities.add(entity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***withTrackedEntityAtPath(path,***REMOVED***entity,***REMOVED***onUntracked,***REMOVED***returnIfTracked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trackedEntities***REMOVED***=***REMOVED***this.getEntities(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(trackedEntities.has(entity))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnIfTracked;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trackedEntities.add(entity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***onUntracked();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trackedEntities.delete(entity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getEntities(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentPaths***REMOVED***=***REMOVED***this.entityPaths;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***pathSegment***REMOVED***of***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentPaths***REMOVED***=***REMOVED***currentPaths[pathSegment]***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentPaths[pathSegment]***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.create(null,***REMOVED***{***REMOVED***[EntitiesKey]:***REMOVED***{***REMOVED***value:***REMOVED***new***REMOVED***Set()***REMOVED***}***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***currentPaths[EntitiesKey];
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***SHARED_RECURSION_TRACKER***REMOVED***=***REMOVED***new***REMOVED***PathTracker();
class***REMOVED***DiscriminatedPathTracker***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entityPaths***REMOVED***=***REMOVED***Object.create(null,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[EntitiesKey]:***REMOVED***{***REMOVED***value:***REMOVED***new***REMOVED***Map()***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***trackEntityAtPathAndGetIfTracked(path,***REMOVED***discriminator,***REMOVED***entity)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentPaths***REMOVED***=***REMOVED***this.entityPaths;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***pathSegment***REMOVED***of***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentPaths***REMOVED***=***REMOVED***currentPaths[pathSegment]***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentPaths[pathSegment]***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.create(null,***REMOVED***{***REMOVED***[EntitiesKey]:***REMOVED***{***REMOVED***value:***REMOVED***new***REMOVED***Map()***REMOVED***}***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trackedEntities***REMOVED***=***REMOVED***getOrCreate(currentPaths[EntitiesKey],***REMOVED***discriminator,***REMOVED***(getNewSet));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(trackedEntities.has(entity))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trackedEntities.add(entity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***UnknownValue***REMOVED***=***REMOVED***Symbol('Unknown***REMOVED***Value');
const***REMOVED***UnknownTruthyValue***REMOVED***=***REMOVED***Symbol('Unknown***REMOVED***Truthy***REMOVED***Value');
class***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***_path,***REMOVED***_recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(_path)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***possible***REMOVED***it***REMOVED***returns***REMOVED***a***REMOVED***stringifyable***REMOVED***literal***REMOVED***value***REMOVED***for***REMOVED***this***REMOVED***node***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***can***REMOVED***be***REMOVED***used***REMOVED***for***REMOVED***inlining***REMOVED***or***REMOVED***comparing***REMOVED***values.***REMOVED***Otherwise,***REMOVED***it***REMOVED***should***REMOVED***return
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***UnknownValue.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(_path,***REMOVED***_recursionTracker,***REMOVED***_origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(_path,***REMOVED***_interaction,***REMOVED***_recursionTracker,***REMOVED***_origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(_path,***REMOVED***_interaction,***REMOVED***_context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(_context,***REMOVED***_includeChildrenRecursively,***REMOVED***_options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***shouldBeIncluded(_context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***UNKNOWN_EXPRESSION***REMOVED***=***REMOVED***new***REMOVED***(class***REMOVED***UnknownExpression***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
})();
const***REMOVED***UNKNOWN_RETURN_EXPRESSION***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***UNKNOWN_EXPRESSION,
***REMOVED******REMOVED******REMOVED******REMOVED***false
];
const***REMOVED***deoptimizeInteraction***REMOVED***=***REMOVED***(interaction)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***interaction.args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument?.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED***}
};

const***REMOVED***INTERACTION_ACCESSED***REMOVED***=***REMOVED***0;
const***REMOVED***INTERACTION_ASSIGNED***REMOVED***=***REMOVED***1;
const***REMOVED***INTERACTION_CALLED***REMOVED***=***REMOVED***2;
const***REMOVED***NODE_INTERACTION_UNKNOWN_ACCESS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[null],
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_ACCESSED
};
const***REMOVED***NODE_INTERACTION_UNKNOWN_ASSIGNMENT***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[null,***REMOVED***UNKNOWN_EXPRESSION],
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_ASSIGNED
};
//***REMOVED***While***REMOVED***this***REMOVED***is***REMOVED***technically***REMOVED***a***REMOVED***call***REMOVED***without***REMOVED***arguments,***REMOVED***we***REMOVED***can***REMOVED***compare***REMOVED***against
//***REMOVED***this***REMOVED***reference***REMOVED***in***REMOVED***places***REMOVED***where***REMOVED***precise***REMOVED***values***REMOVED***or***REMOVED***this***REMOVED***argument***REMOVED***would***REMOVED***make***REMOVED***a
//***REMOVED***difference
const***REMOVED***NODE_INTERACTION_UNKNOWN_CALL***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[null],
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
};

class***REMOVED***Variable***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alwaysRendered***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.forbiddenNames***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.initReached***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isId***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isReassigned***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.kind***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderBaseName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Binds***REMOVED***identifiers***REMOVED***that***REMOVED***reference***REMOVED***this***REMOVED***variable***REMOVED***to***REMOVED***this***REMOVED***variable.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Necessary***REMOVED***to***REMOVED***be***REMOVED***able***REMOVED***to***REMOVED***change***REMOVED***variable***REMOVED***names.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***addReference(_identifier)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Prevent***REMOVED***this***REMOVED***variable***REMOVED***from***REMOVED***being***REMOVED***renamed***REMOVED***to***REMOVED***this***REMOVED***name***REMOVED***to***REMOVED***avoid***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***collisions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***forbidName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.forbiddenNames***REMOVED***||***REMOVED***(this.forbiddenNames***REMOVED***=***REMOVED***new***REMOVED***Set())).add(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getBaseVariableName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.renderBaseName***REMOVED***||***REMOVED***this.renderName***REMOVED***||***REMOVED***this.name;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getName(getPropertyAccess,***REMOVED***useOriginalName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(useOriginalName?.(this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.renderName***REMOVED***||***REMOVED***this.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.renderBaseName***REMOVED***?***REMOVED***`${this.renderBaseName}${getPropertyAccess(name)}`***REMOVED***:***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***},***REMOVED***_context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Marks***REMOVED***this***REMOVED***variable***REMOVED***as***REMOVED***being***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***bundle,***REMOVED***which***REMOVED***is***REMOVED***usually***REMOVED***the***REMOVED***case***REMOVED***when***REMOVED***one***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***its***REMOVED***identifiers***REMOVED***becomes***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***bundle.***REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***it***REMOVED***has***REMOVED***not***REMOVED***been***REMOVED***included
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***previously.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Once***REMOVED***a***REMOVED***variable***REMOVED***is***REMOVED***included,***REMOVED***it***REMOVED***should***REMOVED***take***REMOVED***care***REMOVED***all***REMOVED***its***REMOVED***declarations***REMOVED***are***REMOVED***included.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markCalledFromTryStatement()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setRenderNames(baseName,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderBaseName***REMOVED***=***REMOVED***baseName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderName***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ExternalVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(module,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.referenced***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module***REMOVED***=***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isNamespace***REMOVED***=***REMOVED***name***REMOVED***===***REMOVED***'*';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addReference(identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.referenced***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.name***REMOVED***===***REMOVED***'default'***REMOVED***||***REMOVED***this.name***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module.suggestName(identifier.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***(this.isNamespace***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module.used***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***RESERVED_NAMES***REMOVED***=***REMOVED***new***REMOVED***Set([
***REMOVED******REMOVED******REMOVED******REMOVED***'await',
***REMOVED******REMOVED******REMOVED******REMOVED***'break',
***REMOVED******REMOVED******REMOVED******REMOVED***'case',
***REMOVED******REMOVED******REMOVED******REMOVED***'catch',
***REMOVED******REMOVED******REMOVED******REMOVED***'class',
***REMOVED******REMOVED******REMOVED******REMOVED***'const',
***REMOVED******REMOVED******REMOVED******REMOVED***'continue',
***REMOVED******REMOVED******REMOVED******REMOVED***'debugger',
***REMOVED******REMOVED******REMOVED******REMOVED***'default',
***REMOVED******REMOVED******REMOVED******REMOVED***'delete',
***REMOVED******REMOVED******REMOVED******REMOVED***'do',
***REMOVED******REMOVED******REMOVED******REMOVED***'else',
***REMOVED******REMOVED******REMOVED******REMOVED***'enum',
***REMOVED******REMOVED******REMOVED******REMOVED***'eval',
***REMOVED******REMOVED******REMOVED******REMOVED***'export',
***REMOVED******REMOVED******REMOVED******REMOVED***'extends',
***REMOVED******REMOVED******REMOVED******REMOVED***'false',
***REMOVED******REMOVED******REMOVED******REMOVED***'finally',
***REMOVED******REMOVED******REMOVED******REMOVED***'for',
***REMOVED******REMOVED******REMOVED******REMOVED***'function',
***REMOVED******REMOVED******REMOVED******REMOVED***'if',
***REMOVED******REMOVED******REMOVED******REMOVED***'implements',
***REMOVED******REMOVED******REMOVED******REMOVED***'import',
***REMOVED******REMOVED******REMOVED******REMOVED***'in',
***REMOVED******REMOVED******REMOVED******REMOVED***'instanceof',
***REMOVED******REMOVED******REMOVED******REMOVED***'interface',
***REMOVED******REMOVED******REMOVED******REMOVED***'let',
***REMOVED******REMOVED******REMOVED******REMOVED***'NaN',
***REMOVED******REMOVED******REMOVED******REMOVED***'new',
***REMOVED******REMOVED******REMOVED******REMOVED***'null',
***REMOVED******REMOVED******REMOVED******REMOVED***'package',
***REMOVED******REMOVED******REMOVED******REMOVED***'private',
***REMOVED******REMOVED******REMOVED******REMOVED***'protected',
***REMOVED******REMOVED******REMOVED******REMOVED***'public',
***REMOVED******REMOVED******REMOVED******REMOVED***'return',
***REMOVED******REMOVED******REMOVED******REMOVED***'static',
***REMOVED******REMOVED******REMOVED******REMOVED***'super',
***REMOVED******REMOVED******REMOVED******REMOVED***'switch',
***REMOVED******REMOVED******REMOVED******REMOVED***'this',
***REMOVED******REMOVED******REMOVED******REMOVED***'throw',
***REMOVED******REMOVED******REMOVED******REMOVED***'true',
***REMOVED******REMOVED******REMOVED******REMOVED***'try',
***REMOVED******REMOVED******REMOVED******REMOVED***'typeof',
***REMOVED******REMOVED******REMOVED******REMOVED***'undefined',
***REMOVED******REMOVED******REMOVED******REMOVED***'var',
***REMOVED******REMOVED******REMOVED******REMOVED***'void',
***REMOVED******REMOVED******REMOVED******REMOVED***'while',
***REMOVED******REMOVED******REMOVED******REMOVED***'with',
***REMOVED******REMOVED******REMOVED******REMOVED***'yield'
]);
const***REMOVED***RESERVED_NAMES$1***REMOVED***=***REMOVED***RESERVED_NAMES;

const***REMOVED***illegalCharacters***REMOVED***=***REMOVED***/[^\w$]/g;
const***REMOVED***startsWithDigit***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***/\d/.test(value[0]);
const***REMOVED***needsEscape***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***startsWithDigit(value)***REMOVED***||***REMOVED***RESERVED_NAMES$1.has(value)***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***'arguments';
function***REMOVED***isLegal(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsEscape(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!illegalCharacters.test(value);
}
function***REMOVED***makeLegal(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/-(\w)/g,***REMOVED***(_,***REMOVED***letter)***REMOVED***=>***REMOVED***letter.toUpperCase())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(illegalCharacters,***REMOVED***'_');
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsEscape(value))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***`_${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***||***REMOVED***'_';
}

class***REMOVED***ExternalModule***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(options,***REMOVED***id,***REMOVED***moduleSideEffects,***REMOVED***meta,***REMOVED***renormalizeRenderPath,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renormalizeRenderPath***REMOVED***=***REMOVED***renormalizeRenderPath;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicImporters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.execIndex***REMOVED***=***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportedVariables***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reexported***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.used***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarations***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.mostCommonSuggestion***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nameSuggestions***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.suggestedVariableName***REMOVED***=***REMOVED***makeLegal(id.split(/[/\\]/).pop());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***importers,***REMOVED***dynamicImporters***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***info***REMOVED***=***REMOVED***(this.info***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicallyImportedIdResolutions:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicallyImportedIds:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***dynamicImporters()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dynamicImporters.sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedBindings:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDefaultExport:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***hasModuleSideEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation('Accessing***REMOVED***ModuleInfo.hasModuleSideEffects***REMOVED***from***REMOVED***plugins***REMOVED***is***REMOVED***deprecated.***REMOVED***Please***REMOVED***use***REMOVED***ModuleInfo.moduleSideEffects***REMOVED***instead.',***REMOVED***URL_THIS_GETMODULEINFO,***REMOVED***true,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***info.moduleSideEffects;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedAfterOneOf:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedBefore:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedIdResolutions:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedIds:***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***importers()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***importers.sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEntry:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isExternal:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIncluded:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamedExports:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Hide***REMOVED***the***REMOVED***deprecated***REMOVED***key***REMOVED***so***REMOVED***that***REMOVED***it***REMOVED***only***REMOVED***warns***REMOVED***when***REMOVED***accessed***REMOVED***explicitly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(this.info,***REMOVED***'hasModuleSideEffects',***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getVariableForExportName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***this.declarations.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[declaration];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***externalVariable***REMOVED***=***REMOVED***new***REMOVED***ExternalVariable(this,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarations.set(name,***REMOVED***externalVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportedVariables.set(externalVariable,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[externalVariable];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***suggestName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***(this.nameSuggestions.get(name)***REMOVED***??***REMOVED***0)***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nameSuggestions.set(name,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***>***REMOVED***this.mostCommonSuggestion)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.mostCommonSuggestion***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.suggestedVariableName***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***warnUnusedImports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unused***REMOVED***=***REMOVED***[...this.declarations]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(([name,***REMOVED***declaration])***REMOVED***=>***REMOVED***name***REMOVED***!==***REMOVED***'*'***REMOVED***&&***REMOVED***!declaration.included***REMOVED***&&***REMOVED***!this.reexported***REMOVED***&&***REMOVED***!declaration.referenced)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(([name])***REMOVED***=>***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unused.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importersSet***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***unused)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***importer***REMOVED***of***REMOVED***this.declarations.get(name).module.importers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importersSet.add(importer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importersArray***REMOVED***=***REMOVED***[...importersSet];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logUnusedExternalImports(this.id,***REMOVED***unused,***REMOVED***importersArray));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***getDefaultExportFromCjs***REMOVED***(x)***REMOVED***{
	return***REMOVED***x***REMOVED***&&***REMOVED***x.__esModule***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(x,***REMOVED***'default')***REMOVED***?***REMOVED***x['default']***REMOVED***:***REMOVED***x;
}

function***REMOVED***getAugmentedNamespace(n)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(n.__esModule)***REMOVED***return***REMOVED***n;
***REMOVED******REMOVED***var***REMOVED***f***REMOVED***=***REMOVED***n.default;
	if***REMOVED***(typeof***REMOVED***f***REMOVED***==***REMOVED***"function")***REMOVED***{
		var***REMOVED***a***REMOVED***=***REMOVED***function***REMOVED***a***REMOVED***()***REMOVED***{
			if***REMOVED***(this***REMOVED***instanceof***REMOVED***a)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.construct(f,***REMOVED***arguments,***REMOVED***this.constructor);
			}
			return***REMOVED***f.apply(this,***REMOVED***arguments);
		};
		a.prototype***REMOVED***=***REMOVED***f.prototype;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***a***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***Object.defineProperty(a,***REMOVED***'__esModule',***REMOVED***{value:***REMOVED***true});
	Object.keys(n).forEach(function***REMOVED***(k)***REMOVED***{
		var***REMOVED***d***REMOVED***=***REMOVED***Object.getOwnPropertyDescriptor(n,***REMOVED***k);
		Object.defineProperty(a,***REMOVED***k,***REMOVED***d.get***REMOVED***?***REMOVED***d***REMOVED***:***REMOVED***{
			enumerable:***REMOVED***true,
			get:***REMOVED***function***REMOVED***()***REMOVED***{
				return***REMOVED***n[k];
			}
		});
	});
	return***REMOVED***a;
}

var***REMOVED***utils$3***REMOVED***=***REMOVED***{};

const***REMOVED***path$1***REMOVED***=***REMOVED***require$$0$1;
const***REMOVED***WIN_SLASH***REMOVED***=***REMOVED***'\\\\/';
const***REMOVED***WIN_NO_SLASH***REMOVED***=***REMOVED***`[^${WIN_SLASH}]`;

/**
***REMOVED*******REMOVED***Posix***REMOVED***glob***REMOVED***regex
***REMOVED****/

const***REMOVED***DOT_LITERAL***REMOVED***=***REMOVED***'\\.';
const***REMOVED***PLUS_LITERAL***REMOVED***=***REMOVED***'\\+';
const***REMOVED***QMARK_LITERAL***REMOVED***=***REMOVED***'\\?';
const***REMOVED***SLASH_LITERAL***REMOVED***=***REMOVED***'\\/';
const***REMOVED***ONE_CHAR***REMOVED***=***REMOVED***'(?=.)';
const***REMOVED***QMARK***REMOVED***=***REMOVED***'[^/]';
const***REMOVED***END_ANCHOR***REMOVED***=***REMOVED***`(?:${SLASH_LITERAL}|$)`;
const***REMOVED***START_ANCHOR***REMOVED***=***REMOVED***`(?:^|${SLASH_LITERAL})`;
const***REMOVED***DOTS_SLASH***REMOVED***=***REMOVED***`${DOT_LITERAL}{1,2}${END_ANCHOR}`;
const***REMOVED***NO_DOT***REMOVED***=***REMOVED***`(?!${DOT_LITERAL})`;
const***REMOVED***NO_DOTS***REMOVED***=***REMOVED***`(?!${START_ANCHOR}${DOTS_SLASH})`;
const***REMOVED***NO_DOT_SLASH***REMOVED***=***REMOVED***`(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;
const***REMOVED***NO_DOTS_SLASH***REMOVED***=***REMOVED***`(?!${DOTS_SLASH})`;
const***REMOVED***QMARK_NO_DOT***REMOVED***=***REMOVED***`[^.${SLASH_LITERAL}]`;
const***REMOVED***STAR***REMOVED***=***REMOVED***`${QMARK}*?`;

const***REMOVED***POSIX_CHARS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***DOT_LITERAL,
***REMOVED******REMOVED***PLUS_LITERAL,
***REMOVED******REMOVED***QMARK_LITERAL,
***REMOVED******REMOVED***SLASH_LITERAL,
***REMOVED******REMOVED***ONE_CHAR,
***REMOVED******REMOVED***QMARK,
***REMOVED******REMOVED***END_ANCHOR,
***REMOVED******REMOVED***DOTS_SLASH,
***REMOVED******REMOVED***NO_DOT,
***REMOVED******REMOVED***NO_DOTS,
***REMOVED******REMOVED***NO_DOT_SLASH,
***REMOVED******REMOVED***NO_DOTS_SLASH,
***REMOVED******REMOVED***QMARK_NO_DOT,
***REMOVED******REMOVED***STAR,
***REMOVED******REMOVED***START_ANCHOR
};

/**
***REMOVED*******REMOVED***Windows***REMOVED***glob***REMOVED***regex
***REMOVED****/

const***REMOVED***WINDOWS_CHARS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***...POSIX_CHARS,

***REMOVED******REMOVED***SLASH_LITERAL:***REMOVED***`[${WIN_SLASH}]`,
***REMOVED******REMOVED***QMARK:***REMOVED***WIN_NO_SLASH,
***REMOVED******REMOVED***STAR:***REMOVED***`${WIN_NO_SLASH}*?`,
***REMOVED******REMOVED***DOTS_SLASH:***REMOVED***`${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,
***REMOVED******REMOVED***NO_DOT:***REMOVED***`(?!${DOT_LITERAL})`,
***REMOVED******REMOVED***NO_DOTS:***REMOVED***`(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,
***REMOVED******REMOVED***NO_DOT_SLASH:***REMOVED***`(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,
***REMOVED******REMOVED***NO_DOTS_SLASH:***REMOVED***`(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,
***REMOVED******REMOVED***QMARK_NO_DOT:***REMOVED***`[^.${WIN_SLASH}]`,
***REMOVED******REMOVED***START_ANCHOR:***REMOVED***`(?:^|[${WIN_SLASH}])`,
***REMOVED******REMOVED***END_ANCHOR:***REMOVED***`(?:[${WIN_SLASH}]|$)`
};

/**
***REMOVED*******REMOVED***POSIX***REMOVED***Bracket***REMOVED***Regex
***REMOVED****/

const***REMOVED***POSIX_REGEX_SOURCE$1***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***alnum:***REMOVED***'a-zA-Z0-9',
***REMOVED******REMOVED***alpha:***REMOVED***'a-zA-Z',
***REMOVED******REMOVED***ascii:***REMOVED***'\\x00-\\x7F',
***REMOVED******REMOVED***blank:***REMOVED***'***REMOVED***\\t',
***REMOVED******REMOVED***cntrl:***REMOVED***'\\x00-\\x1F\\x7F',
***REMOVED******REMOVED***digit:***REMOVED***'0-9',
***REMOVED******REMOVED***graph:***REMOVED***'\\x21-\\x7E',
***REMOVED******REMOVED***lower:***REMOVED***'a-z',
***REMOVED******REMOVED***print:***REMOVED***'\\x20-\\x7E***REMOVED***',
***REMOVED******REMOVED***punct:***REMOVED***'\\-!"#$%&\'()\\*+,./:;<=>?@[\\]^_`{|}~',
***REMOVED******REMOVED***space:***REMOVED***'***REMOVED***\\t\\r\\n\\v\\f',
***REMOVED******REMOVED***upper:***REMOVED***'A-Z',
***REMOVED******REMOVED***word:***REMOVED***'A-Za-z0-9_',
***REMOVED******REMOVED***xdigit:***REMOVED***'A-Fa-f0-9'
};

var***REMOVED***constants$2***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***MAX_LENGTH:***REMOVED***1024***REMOVED*******REMOVED***64,
***REMOVED******REMOVED***POSIX_REGEX_SOURCE:***REMOVED***POSIX_REGEX_SOURCE$1,

***REMOVED******REMOVED***//***REMOVED***regular***REMOVED***expressions
***REMOVED******REMOVED***REGEX_BACKSLASH:***REMOVED***/\\(?![*+?^${}(|)[\]])/g,
***REMOVED******REMOVED***REGEX_NON_SPECIAL_CHARS:***REMOVED***/^[^@![\].,$*+?^{}()|\\/]+/,
***REMOVED******REMOVED***REGEX_SPECIAL_CHARS:***REMOVED***/[-*+?.^${}(|)[\]]/,
***REMOVED******REMOVED***REGEX_SPECIAL_CHARS_BACKREF:***REMOVED***/(\\?)((\W)(\3*))/g,
***REMOVED******REMOVED***REGEX_SPECIAL_CHARS_GLOBAL:***REMOVED***/([-*+?.^${}(|)[\]])/g,
***REMOVED******REMOVED***REGEX_REMOVE_BACKSLASH:***REMOVED***/(?:\[.*?[^\\]\]|\\(?=.))/g,

***REMOVED******REMOVED***//***REMOVED***Replace***REMOVED***globs***REMOVED***with***REMOVED***equivalent***REMOVED***patterns***REMOVED***to***REMOVED***reduce***REMOVED***parsing***REMOVED***time.
***REMOVED******REMOVED***REPLACEMENTS:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'***':***REMOVED***'*',
***REMOVED******REMOVED******REMOVED******REMOVED***'**/**':***REMOVED***'**',
***REMOVED******REMOVED******REMOVED******REMOVED***'**/**/**':***REMOVED***'**'
***REMOVED******REMOVED***},

***REMOVED******REMOVED***//***REMOVED***Digits
***REMOVED******REMOVED***CHAR_0:***REMOVED***48,***REMOVED***/****REMOVED***0***REMOVED****/
***REMOVED******REMOVED***CHAR_9:***REMOVED***57,***REMOVED***/****REMOVED***9***REMOVED****/

***REMOVED******REMOVED***//***REMOVED***Alphabet***REMOVED***chars.
***REMOVED******REMOVED***CHAR_UPPERCASE_A:***REMOVED***65,***REMOVED***/****REMOVED***A***REMOVED****/
***REMOVED******REMOVED***CHAR_LOWERCASE_A:***REMOVED***97,***REMOVED***/****REMOVED***a***REMOVED****/
***REMOVED******REMOVED***CHAR_UPPERCASE_Z:***REMOVED***90,***REMOVED***/****REMOVED***Z***REMOVED****/
***REMOVED******REMOVED***CHAR_LOWERCASE_Z:***REMOVED***122,***REMOVED***/****REMOVED***z***REMOVED****/

***REMOVED******REMOVED***CHAR_LEFT_PARENTHESES:***REMOVED***40,***REMOVED***/****REMOVED***(***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_PARENTHESES:***REMOVED***41,***REMOVED***/****REMOVED***)***REMOVED****/

***REMOVED******REMOVED***CHAR_ASTERISK:***REMOVED***42,***REMOVED***/****REMOVED*******REMOVED****/

***REMOVED******REMOVED***//***REMOVED***Non-alphabetic***REMOVED***chars.
***REMOVED******REMOVED***CHAR_AMPERSAND:***REMOVED***38,***REMOVED***/****REMOVED***&***REMOVED****/
***REMOVED******REMOVED***CHAR_AT:***REMOVED***64,***REMOVED***/****REMOVED***@***REMOVED****/
***REMOVED******REMOVED***CHAR_BACKWARD_SLASH:***REMOVED***92,***REMOVED***/****REMOVED***\***REMOVED****/
***REMOVED******REMOVED***CHAR_CARRIAGE_RETURN:***REMOVED***13,***REMOVED***/****REMOVED***\r***REMOVED****/
***REMOVED******REMOVED***CHAR_CIRCUMFLEX_ACCENT:***REMOVED***94,***REMOVED***/****REMOVED***^***REMOVED****/
***REMOVED******REMOVED***CHAR_COLON:***REMOVED***58,***REMOVED***/****REMOVED***:***REMOVED****/
***REMOVED******REMOVED***CHAR_COMMA:***REMOVED***44,***REMOVED***/****REMOVED***,***REMOVED****/
***REMOVED******REMOVED***CHAR_DOT:***REMOVED***46,***REMOVED***/****REMOVED***.***REMOVED****/
***REMOVED******REMOVED***CHAR_DOUBLE_QUOTE:***REMOVED***34,***REMOVED***/****REMOVED***"***REMOVED****/
***REMOVED******REMOVED***CHAR_EQUAL:***REMOVED***61,***REMOVED***/****REMOVED***=***REMOVED****/
***REMOVED******REMOVED***CHAR_EXCLAMATION_MARK:***REMOVED***33,***REMOVED***/****REMOVED***!***REMOVED****/
***REMOVED******REMOVED***CHAR_FORM_FEED:***REMOVED***12,***REMOVED***/****REMOVED***\f***REMOVED****/
***REMOVED******REMOVED***CHAR_FORWARD_SLASH:***REMOVED***47,***REMOVED***/****REMOVED***/***REMOVED****/
***REMOVED******REMOVED***CHAR_GRAVE_ACCENT:***REMOVED***96,***REMOVED***/****REMOVED***`***REMOVED****/
***REMOVED******REMOVED***CHAR_HASH:***REMOVED***35,***REMOVED***/****REMOVED***#***REMOVED****/
***REMOVED******REMOVED***CHAR_HYPHEN_MINUS:***REMOVED***45,***REMOVED***/****REMOVED***-***REMOVED****/
***REMOVED******REMOVED***CHAR_LEFT_ANGLE_BRACKET:***REMOVED***60,***REMOVED***/****REMOVED***<***REMOVED****/
***REMOVED******REMOVED***CHAR_LEFT_CURLY_BRACE:***REMOVED***123,***REMOVED***/****REMOVED***{***REMOVED****/
***REMOVED******REMOVED***CHAR_LEFT_SQUARE_BRACKET:***REMOVED***91,***REMOVED***/****REMOVED***[***REMOVED****/
***REMOVED******REMOVED***CHAR_LINE_FEED:***REMOVED***10,***REMOVED***/****REMOVED***\n***REMOVED****/
***REMOVED******REMOVED***CHAR_NO_BREAK_SPACE:***REMOVED***160,***REMOVED***/****REMOVED***\u00A0***REMOVED****/
***REMOVED******REMOVED***CHAR_PERCENT:***REMOVED***37,***REMOVED***/****REMOVED***%***REMOVED****/
***REMOVED******REMOVED***CHAR_PLUS:***REMOVED***43,***REMOVED***/****REMOVED***+***REMOVED****/
***REMOVED******REMOVED***CHAR_QUESTION_MARK:***REMOVED***63,***REMOVED***/****REMOVED***?***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_ANGLE_BRACKET:***REMOVED***62,***REMOVED***/****REMOVED***>***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_CURLY_BRACE:***REMOVED***125,***REMOVED***/****REMOVED***}***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_SQUARE_BRACKET:***REMOVED***93,***REMOVED***/****REMOVED***]***REMOVED****/
***REMOVED******REMOVED***CHAR_SEMICOLON:***REMOVED***59,***REMOVED***/****REMOVED***;***REMOVED****/
***REMOVED******REMOVED***CHAR_SINGLE_QUOTE:***REMOVED***39,***REMOVED***/****REMOVED***'***REMOVED****/
***REMOVED******REMOVED***CHAR_SPACE:***REMOVED***32,***REMOVED***/****REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***CHAR_TAB:***REMOVED***9,***REMOVED***/****REMOVED***\t***REMOVED****/
***REMOVED******REMOVED***CHAR_UNDERSCORE:***REMOVED***95,***REMOVED***/****REMOVED***_***REMOVED****/
***REMOVED******REMOVED***CHAR_VERTICAL_LINE:***REMOVED***124,***REMOVED***/****REMOVED***|***REMOVED****/
***REMOVED******REMOVED***CHAR_ZERO_WIDTH_NOBREAK_SPACE:***REMOVED***65279,***REMOVED***/****REMOVED***\uFEFF***REMOVED****/

***REMOVED******REMOVED***SEP:***REMOVED***path$1.sep,

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Create***REMOVED***EXTGLOB_CHARS
***REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED***extglobChars(chars)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'!':***REMOVED***{***REMOVED***type:***REMOVED***'negate',***REMOVED***open:***REMOVED***'(?:(?!(?:',***REMOVED***close:***REMOVED***`))${chars.STAR})`***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'?':***REMOVED***{***REMOVED***type:***REMOVED***'qmark',***REMOVED***open:***REMOVED***'(?:',***REMOVED***close:***REMOVED***')?'***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'+':***REMOVED***{***REMOVED***type:***REMOVED***'plus',***REMOVED***open:***REMOVED***'(?:',***REMOVED***close:***REMOVED***')+'***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'*':***REMOVED***{***REMOVED***type:***REMOVED***'star',***REMOVED***open:***REMOVED***'(?:',***REMOVED***close:***REMOVED***')*'***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'@':***REMOVED***{***REMOVED***type:***REMOVED***'at',***REMOVED***open:***REMOVED***'(?:',***REMOVED***close:***REMOVED***')'***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***},

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Create***REMOVED***GLOB_CHARS
***REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED***globChars(win32)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***win32***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***WINDOWS_CHARS***REMOVED***:***REMOVED***POSIX_CHARS;
***REMOVED******REMOVED***}
};

(function***REMOVED***(exports)***REMOVED***{

	const***REMOVED***path***REMOVED***=***REMOVED***require$$0$1;
	const***REMOVED***win32***REMOVED***=***REMOVED***process.platform***REMOVED***===***REMOVED***'win32';
	const***REMOVED***{
	***REMOVED******REMOVED***REGEX_BACKSLASH,
	***REMOVED******REMOVED***REGEX_REMOVE_BACKSLASH,
	***REMOVED******REMOVED***REGEX_SPECIAL_CHARS,
	***REMOVED******REMOVED***REGEX_SPECIAL_CHARS_GLOBAL
	}***REMOVED***=***REMOVED***constants$2;

	exports.isObject***REMOVED***=***REMOVED***val***REMOVED***=>***REMOVED***val***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***!Array.isArray(val);
	exports.hasRegexChars***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***REGEX_SPECIAL_CHARS.test(str);
	exports.isRegexChar***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***str.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***exports.hasRegexChars(str);
	exports.escapeRegex***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***str.replace(REGEX_SPECIAL_CHARS_GLOBAL,***REMOVED***'\\$1');
	exports.toPosixSlashes***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***str.replace(REGEX_BACKSLASH,***REMOVED***'/');

	exports.removeBackslashes***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***str.replace(REGEX_REMOVE_BACKSLASH,***REMOVED***match***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***match***REMOVED***===***REMOVED***'\\'***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***match;
	***REMOVED******REMOVED***});
	};

	exports.supportsLookbehinds***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***segs***REMOVED***=***REMOVED***process.version.slice(1).split('.').map(Number);
	***REMOVED******REMOVED***if***REMOVED***(segs.length***REMOVED***===***REMOVED***3***REMOVED***&&***REMOVED***segs[0]***REMOVED***>=***REMOVED***9***REMOVED***||***REMOVED***(segs[0]***REMOVED***===***REMOVED***8***REMOVED***&&***REMOVED***segs[1]***REMOVED***>=***REMOVED***10))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***false;
	};

	exports.isWindows***REMOVED***=***REMOVED***options***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***&&***REMOVED***typeof***REMOVED***options.windows***REMOVED***===***REMOVED***'boolean')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.windows;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***win32***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***path.sep***REMOVED***===***REMOVED***'\\';
	};

	exports.escapeLast***REMOVED***=***REMOVED***(input,***REMOVED***char,***REMOVED***lastIdx)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***input.lastIndexOf(char,***REMOVED***lastIdx);
	***REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***===***REMOVED***-1)***REMOVED***return***REMOVED***input;
	***REMOVED******REMOVED***if***REMOVED***(input[idx***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***'\\')***REMOVED***return***REMOVED***exports.escapeLast(input,***REMOVED***char,***REMOVED***idx***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED***return***REMOVED***`${input.slice(0,***REMOVED***idx)}\\${input.slice(idx)}`;
	};

	exports.removePrefix***REMOVED***=***REMOVED***(input,***REMOVED***state***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***input;
	***REMOVED******REMOVED***if***REMOVED***(output.startsWith('./'))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***output.slice(2);
	***REMOVED******REMOVED******REMOVED******REMOVED***state.prefix***REMOVED***=***REMOVED***'./';
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***output;
	};

	exports.wrapOutput***REMOVED***=***REMOVED***(input,***REMOVED***state***REMOVED***=***REMOVED***{},***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***prepend***REMOVED***=***REMOVED***options.contains***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'^';
	***REMOVED******REMOVED***const***REMOVED***append***REMOVED***=***REMOVED***options.contains***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'$';

	***REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***`${prepend}(?:${input})${append}`;
	***REMOVED******REMOVED***if***REMOVED***(state.negated***REMOVED***===***REMOVED***true)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***`(?:^(?!${output}).*$)`;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***output;
	};***REMOVED***
}***REMOVED***(utils$3));

const***REMOVED***utils$2***REMOVED***=***REMOVED***utils$3;
const***REMOVED***{
***REMOVED******REMOVED***CHAR_ASTERISK,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED*******REMOVED****/
***REMOVED******REMOVED***CHAR_AT,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***@***REMOVED****/
***REMOVED******REMOVED***CHAR_BACKWARD_SLASH,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***\***REMOVED****/
***REMOVED******REMOVED***CHAR_COMMA,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***,***REMOVED****/
***REMOVED******REMOVED***CHAR_DOT,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***.***REMOVED****/
***REMOVED******REMOVED***CHAR_EXCLAMATION_MARK,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***!***REMOVED****/
***REMOVED******REMOVED***CHAR_FORWARD_SLASH,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***/***REMOVED****/
***REMOVED******REMOVED***CHAR_LEFT_CURLY_BRACE,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***{***REMOVED****/
***REMOVED******REMOVED***CHAR_LEFT_PARENTHESES,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***(***REMOVED****/
***REMOVED******REMOVED***CHAR_LEFT_SQUARE_BRACKET,***REMOVED******REMOVED***/****REMOVED***[***REMOVED****/
***REMOVED******REMOVED***CHAR_PLUS,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***+***REMOVED****/
***REMOVED******REMOVED***CHAR_QUESTION_MARK,***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***?***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_CURLY_BRACE,***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***}***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_PARENTHESES,***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***)***REMOVED****/
***REMOVED******REMOVED***CHAR_RIGHT_SQUARE_BRACKET***REMOVED******REMOVED***/****REMOVED***]***REMOVED****/
}***REMOVED***=***REMOVED***constants$2;

const***REMOVED***isPathSeparator***REMOVED***=***REMOVED***code***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***CHAR_FORWARD_SLASH***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***CHAR_BACKWARD_SLASH;
};

const***REMOVED***depth***REMOVED***=***REMOVED***token***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(token.isPrefix***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***token.depth***REMOVED***=***REMOVED***token.isGlobstar***REMOVED***?***REMOVED***Infinity***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***Quickly***REMOVED***scans***REMOVED***a***REMOVED***glob***REMOVED***pattern***REMOVED***and***REMOVED***returns***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***a***REMOVED***handful***REMOVED***of
***REMOVED*******REMOVED***useful***REMOVED***properties,***REMOVED***like***REMOVED***`isGlob`,***REMOVED***`path`***REMOVED***(the***REMOVED***leading***REMOVED***non-glob,***REMOVED***if***REMOVED***it***REMOVED***exists),
***REMOVED*******REMOVED***`glob`***REMOVED***(the***REMOVED***actual***REMOVED***pattern),***REMOVED***`negated`***REMOVED***(true***REMOVED***if***REMOVED***the***REMOVED***path***REMOVED***starts***REMOVED***with***REMOVED***`!`***REMOVED***but***REMOVED***not
***REMOVED*******REMOVED***with***REMOVED***`!(`)***REMOVED***and***REMOVED***`negatedExtglob`***REMOVED***(true***REMOVED***if***REMOVED***the***REMOVED***path***REMOVED***starts***REMOVED***with***REMOVED***`!(`).
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***pm***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***console.log(pm.scan('foo/bar/*.js'));
***REMOVED*******REMOVED***{***REMOVED***isGlob:***REMOVED***true,***REMOVED***input:***REMOVED***'foo/bar/*.js',***REMOVED***base:***REMOVED***'foo/bar',***REMOVED***glob:***REMOVED***'*.js'***REMOVED***}
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`str`
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`options`
***REMOVED*******REMOVED***@return***REMOVED***{Object}***REMOVED***Returns***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***tokens***REMOVED***and***REMOVED***regex***REMOVED***source***REMOVED***string.
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

const***REMOVED***scan$1***REMOVED***=***REMOVED***(input,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};

***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***input.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***const***REMOVED***scanToEnd***REMOVED***=***REMOVED***opts.parts***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***opts.scanToEnd***REMOVED***===***REMOVED***true;
***REMOVED******REMOVED***const***REMOVED***slashes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***parts***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***let***REMOVED***str***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED***let***REMOVED***index***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***isBrace***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***isBracket***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***isGlob***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***isExtglob***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***isGlobstar***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***braceEscaped***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***backslashes***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***negated***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***negatedExtglob***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***finished***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***braces***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***prev;
***REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED***let***REMOVED***token***REMOVED***=***REMOVED***{***REMOVED***value:***REMOVED***'',***REMOVED***depth:***REMOVED***0,***REMOVED***isGlob:***REMOVED***false***REMOVED***};

***REMOVED******REMOVED***const***REMOVED***eos***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***index***REMOVED***>=***REMOVED***length;
***REMOVED******REMOVED***const***REMOVED***peek***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***str.charCodeAt(index***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***const***REMOVED***advance***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prev***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str.charCodeAt(++index);
***REMOVED******REMOVED***};

***REMOVED******REMOVED***while***REMOVED***(index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_BACKWARD_SLASH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backslashes***REMOVED***=***REMOVED***token.backslashes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***advance();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_LEFT_CURLY_BRACE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceEscaped***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(braceEscaped***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***CHAR_LEFT_CURLY_BRACE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braces++;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(eos()***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***(code***REMOVED***=***REMOVED***advance()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_BACKWARD_SLASH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backslashes***REMOVED***=***REMOVED***token.backslashes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_LEFT_CURLY_BRACE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braces++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(braceEscaped***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***CHAR_DOT***REMOVED***&&***REMOVED***(code***REMOVED***=***REMOVED***advance())***REMOVED***===***REMOVED***CHAR_DOT)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBrace***REMOVED***=***REMOVED***token.isBrace***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(braceEscaped***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***CHAR_COMMA)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBrace***REMOVED***=***REMOVED***token.isBrace***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_RIGHT_CURLY_BRACE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braces--;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(braces***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceEscaped***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBrace***REMOVED***=***REMOVED***token.isBrace***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_FORWARD_SLASH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slashes.push(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(token);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***{***REMOVED***value:***REMOVED***'',***REMOVED***depth:***REMOVED***0,***REMOVED***isGlob:***REMOVED***false***REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(finished***REMOVED***===***REMOVED***true)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***===***REMOVED***CHAR_DOT***REMOVED***&&***REMOVED***index***REMOVED***===***REMOVED***(start***REMOVED***+***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noext***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isExtglobChar***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***CHAR_PLUS
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***CHAR_AT
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***CHAR_ASTERISK
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***CHAR_QUESTION_MARK
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***CHAR_EXCLAMATION_MARK;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExtglobChar***REMOVED***===***REMOVED***true***REMOVED***&&***REMOVED***peek()***REMOVED***===***REMOVED***CHAR_LEFT_PARENTHESES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isExtglob***REMOVED***=***REMOVED***token.isExtglob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_EXCLAMATION_MARK***REMOVED***&&***REMOVED***index***REMOVED***===***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negatedExtglob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(eos()***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***(code***REMOVED***=***REMOVED***advance()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_BACKWARD_SLASH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backslashes***REMOVED***=***REMOVED***token.backslashes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_RIGHT_PARENTHESES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_ASTERISK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***===***REMOVED***CHAR_ASTERISK)***REMOVED***isGlobstar***REMOVED***=***REMOVED***token.isGlobstar***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_QUESTION_MARK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_LEFT_SQUARE_BRACKET)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(eos()***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***(next***REMOVED***=***REMOVED***advance()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***CHAR_BACKWARD_SLASH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backslashes***REMOVED***=***REMOVED***token.backslashes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***CHAR_RIGHT_SQUARE_BRACKET)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBracket***REMOVED***=***REMOVED***token.isBracket***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.nonegate***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***CHAR_EXCLAMATION_MARK***REMOVED***&&***REMOVED***index***REMOVED***===***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negated***REMOVED***=***REMOVED***token.negated***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noparen***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***CHAR_LEFT_PARENTHESES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***token.isGlob***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(eos()***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***(code***REMOVED***=***REMOVED***advance()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_LEFT_PARENTHESES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backslashes***REMOVED***=***REMOVED***token.backslashes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***CHAR_RIGHT_PARENTHESES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isGlob***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finished***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scanToEnd***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(opts.noext***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isExtglob***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***isGlob***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***let***REMOVED***base***REMOVED***=***REMOVED***str;
***REMOVED******REMOVED***let***REMOVED***prefix***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED***let***REMOVED***glob***REMOVED***=***REMOVED***'';

***REMOVED******REMOVED***if***REMOVED***(start***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prefix***REMOVED***=***REMOVED***str.slice(0,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***str.slice(start);
***REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***-=***REMOVED***start;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(base***REMOVED***&&***REMOVED***isGlob***REMOVED***===***REMOVED***true***REMOVED***&&***REMOVED***lastIndex***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***str.slice(0,***REMOVED***lastIndex);
***REMOVED******REMOVED******REMOVED******REMOVED***glob***REMOVED***=***REMOVED***str.slice(lastIndex);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isGlob***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***glob***REMOVED***=***REMOVED***str;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***str;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(base***REMOVED***&&***REMOVED***base***REMOVED***!==***REMOVED***''***REMOVED***&&***REMOVED***base***REMOVED***!==***REMOVED***'/'***REMOVED***&&***REMOVED***base***REMOVED***!==***REMOVED***str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPathSeparator(base.charCodeAt(base.length***REMOVED***-***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***base.slice(0,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(opts.unescape***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(glob)***REMOVED***glob***REMOVED***=***REMOVED***utils$2.removeBackslashes(glob);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(base***REMOVED***&&***REMOVED***backslashes***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***utils$2.removeBackslashes(base);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***input,
***REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED***base,
***REMOVED******REMOVED******REMOVED******REMOVED***glob,
***REMOVED******REMOVED******REMOVED******REMOVED***isBrace,
***REMOVED******REMOVED******REMOVED******REMOVED***isBracket,
***REMOVED******REMOVED******REMOVED******REMOVED***isGlob,
***REMOVED******REMOVED******REMOVED******REMOVED***isExtglob,
***REMOVED******REMOVED******REMOVED******REMOVED***isGlobstar,
***REMOVED******REMOVED******REMOVED******REMOVED***negated,
***REMOVED******REMOVED******REMOVED******REMOVED***negatedExtglob
***REMOVED******REMOVED***};

***REMOVED******REMOVED***if***REMOVED***(opts.tokens***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.maxDepth***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPathSeparator(code))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(token);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.tokens***REMOVED***=***REMOVED***tokens;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(opts.parts***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***opts.tokens***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***prevIndex;

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***idx***REMOVED***=***REMOVED***0;***REMOVED***idx***REMOVED***<***REMOVED***slashes.length;***REMOVED***idx++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***prevIndex***REMOVED***?***REMOVED***prevIndex***REMOVED***+***REMOVED***1***REMOVED***:***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***slashes[idx];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***input.slice(n,***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.tokens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***start***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[idx].isPrefix***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[idx].value***REMOVED***=***REMOVED***prefix;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[idx].value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depth(tokens[idx]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.maxDepth***REMOVED***+=***REMOVED***tokens[idx].depth;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***!==***REMOVED***0***REMOVED***||***REMOVED***value***REMOVED***!==***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.push(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prevIndex***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevIndex***REMOVED***&&***REMOVED***prevIndex***REMOVED***+***REMOVED***1***REMOVED***<***REMOVED***input.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***input.slice(prevIndex***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.push(value);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.tokens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[tokens.length***REMOVED***-***REMOVED***1].value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depth(tokens[tokens.length***REMOVED***-***REMOVED***1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.maxDepth***REMOVED***+=***REMOVED***tokens[tokens.length***REMOVED***-***REMOVED***1].depth;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***state.slashes***REMOVED***=***REMOVED***slashes;
***REMOVED******REMOVED******REMOVED******REMOVED***state.parts***REMOVED***=***REMOVED***parts;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***state;
};

var***REMOVED***scan_1***REMOVED***=***REMOVED***scan$1;

const***REMOVED***constants$1***REMOVED***=***REMOVED***constants$2;
const***REMOVED***utils$1***REMOVED***=***REMOVED***utils$3;

/**
***REMOVED*******REMOVED***Constants
***REMOVED****/

const***REMOVED***{
***REMOVED******REMOVED***MAX_LENGTH,
***REMOVED******REMOVED***POSIX_REGEX_SOURCE,
***REMOVED******REMOVED***REGEX_NON_SPECIAL_CHARS,
***REMOVED******REMOVED***REGEX_SPECIAL_CHARS_BACKREF,
***REMOVED******REMOVED***REPLACEMENTS
}***REMOVED***=***REMOVED***constants$1;

/**
***REMOVED*******REMOVED***Helpers
***REMOVED****/

const***REMOVED***expandRange***REMOVED***=***REMOVED***(args,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***options.expandRange***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.expandRange(...args,***REMOVED***options);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***args.sort();
***REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***`[${args.join('-')}]`;

***REMOVED******REMOVED***return***REMOVED***value;
};

/**
***REMOVED*******REMOVED***Create***REMOVED***the***REMOVED***message***REMOVED***for***REMOVED***a***REMOVED***syntax***REMOVED***error
***REMOVED****/

const***REMOVED***syntaxError***REMOVED***=***REMOVED***(type,***REMOVED***char)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***`Missing***REMOVED***${type}:***REMOVED***"${char}"***REMOVED***-***REMOVED***use***REMOVED***"\\\\${char}"***REMOVED***to***REMOVED***match***REMOVED***literal***REMOVED***characters`;
};

/**
***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***given***REMOVED***input***REMOVED***string.
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***input
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***options
***REMOVED*******REMOVED***@return***REMOVED***{Object}
***REMOVED****/

const***REMOVED***parse$2***REMOVED***=***REMOVED***(input,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***input***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Expected***REMOVED***a***REMOVED***string');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***input***REMOVED***=***REMOVED***REPLACEMENTS[input]***REMOVED***||***REMOVED***input;

***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***{***REMOVED***...options***REMOVED***};
***REMOVED******REMOVED***const***REMOVED***max***REMOVED***=***REMOVED***typeof***REMOVED***opts.maxLength***REMOVED***===***REMOVED***'number'***REMOVED***?***REMOVED***Math.min(MAX_LENGTH,***REMOVED***opts.maxLength)***REMOVED***:***REMOVED***MAX_LENGTH;

***REMOVED******REMOVED***let***REMOVED***len***REMOVED***=***REMOVED***input.length;
***REMOVED******REMOVED***if***REMOVED***(len***REMOVED***>***REMOVED***max)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(`Input***REMOVED***length:***REMOVED***${len},***REMOVED***exceeds***REMOVED***maximum***REMOVED***allowed***REMOVED***length:***REMOVED***${max}`);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***bos***REMOVED***=***REMOVED***{***REMOVED***type:***REMOVED***'bos',***REMOVED***value:***REMOVED***'',***REMOVED***output:***REMOVED***opts.prepend***REMOVED***||***REMOVED***''***REMOVED***};
***REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***[bos];

***REMOVED******REMOVED***const***REMOVED***capture***REMOVED***=***REMOVED***opts.capture***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'?:';
***REMOVED******REMOVED***const***REMOVED***win32***REMOVED***=***REMOVED***utils$1.isWindows(options);

***REMOVED******REMOVED***//***REMOVED***create***REMOVED***constants***REMOVED***based***REMOVED***on***REMOVED***platform,***REMOVED***for***REMOVED***windows***REMOVED***or***REMOVED***posix
***REMOVED******REMOVED***const***REMOVED***PLATFORM_CHARS***REMOVED***=***REMOVED***constants$1.globChars(win32);
***REMOVED******REMOVED***const***REMOVED***EXTGLOB_CHARS***REMOVED***=***REMOVED***constants$1.extglobChars(PLATFORM_CHARS);

***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***DOT_LITERAL,
***REMOVED******REMOVED******REMOVED******REMOVED***PLUS_LITERAL,
***REMOVED******REMOVED******REMOVED******REMOVED***SLASH_LITERAL,
***REMOVED******REMOVED******REMOVED******REMOVED***ONE_CHAR,
***REMOVED******REMOVED******REMOVED******REMOVED***DOTS_SLASH,
***REMOVED******REMOVED******REMOVED******REMOVED***NO_DOT,
***REMOVED******REMOVED******REMOVED******REMOVED***NO_DOT_SLASH,
***REMOVED******REMOVED******REMOVED******REMOVED***NO_DOTS_SLASH,
***REMOVED******REMOVED******REMOVED******REMOVED***QMARK,
***REMOVED******REMOVED******REMOVED******REMOVED***QMARK_NO_DOT,
***REMOVED******REMOVED******REMOVED******REMOVED***STAR,
***REMOVED******REMOVED******REMOVED******REMOVED***START_ANCHOR
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***PLATFORM_CHARS;

***REMOVED******REMOVED***const***REMOVED***globstar***REMOVED***=***REMOVED***opts***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(${capture}(?:(?!${START_ANCHOR}${opts.dot***REMOVED***?***REMOVED***DOTS_SLASH***REMOVED***:***REMOVED***DOT_LITERAL}).)*?)`;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***nodot***REMOVED***=***REMOVED***opts.dot***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***NO_DOT;
***REMOVED******REMOVED***const***REMOVED***qmarkNoDot***REMOVED***=***REMOVED***opts.dot***REMOVED***?***REMOVED***QMARK***REMOVED***:***REMOVED***QMARK_NO_DOT;
***REMOVED******REMOVED***let***REMOVED***star***REMOVED***=***REMOVED***opts.bash***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***globstar(opts)***REMOVED***:***REMOVED***STAR;

***REMOVED******REMOVED***if***REMOVED***(opts.capture)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***star***REMOVED***=***REMOVED***`(${star})`;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***minimatch***REMOVED***options***REMOVED***support
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***opts.noext***REMOVED***===***REMOVED***'boolean')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***opts.noextglob***REMOVED***=***REMOVED***opts.noext;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***input,
***REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***dot:***REMOVED***opts.dot***REMOVED***===***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***consumed:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED***output:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED***prefix:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED***backtrack:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***negated:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***brackets:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***braces:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***parens:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***globstar:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***tokens
***REMOVED******REMOVED***};

***REMOVED******REMOVED***input***REMOVED***=***REMOVED***utils$1.removePrefix(input,***REMOVED***state);
***REMOVED******REMOVED***len***REMOVED***=***REMOVED***input.length;

***REMOVED******REMOVED***const***REMOVED***extglobs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***braces***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***stack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***prev***REMOVED***=***REMOVED***bos;
***REMOVED******REMOVED***let***REMOVED***value;

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Tokenizing***REMOVED***helpers
***REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED***const***REMOVED***eos***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***state.index***REMOVED***===***REMOVED***len***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***const***REMOVED***peek***REMOVED***=***REMOVED***state.peek***REMOVED***=***REMOVED***(n***REMOVED***=***REMOVED***1)***REMOVED***=>***REMOVED***input[state.index***REMOVED***+***REMOVED***n];
***REMOVED******REMOVED***const***REMOVED***advance***REMOVED***=***REMOVED***state.advance***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***input[++state.index]***REMOVED***||***REMOVED***'';
***REMOVED******REMOVED***const***REMOVED***remaining***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***input.slice(state.index***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***const***REMOVED***consume***REMOVED***=***REMOVED***(value***REMOVED***=***REMOVED***'',***REMOVED***num***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.consumed***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***state.index***REMOVED***+=***REMOVED***num;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***append***REMOVED***=***REMOVED***token***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***token.output***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***token.output***REMOVED***:***REMOVED***token.value;
***REMOVED******REMOVED******REMOVED******REMOVED***consume(token.value);
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***negate***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***count***REMOVED***=***REMOVED***1;

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(peek()***REMOVED***===***REMOVED***'!'***REMOVED***&&***REMOVED***(peek(2)***REMOVED***!==***REMOVED***'('***REMOVED***||***REMOVED***peek(3)***REMOVED***===***REMOVED***'?'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.start++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count++;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(count***REMOVED***%***REMOVED***2***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***state.negated***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***state.start++;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***increment***REMOVED***=***REMOVED***type***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state[type]++;
***REMOVED******REMOVED******REMOVED******REMOVED***stack.push(type);
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***decrement***REMOVED***=***REMOVED***type***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state[type]--;
***REMOVED******REMOVED******REMOVED******REMOVED***stack.pop();
***REMOVED******REMOVED***};

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Push***REMOVED***tokens***REMOVED***onto***REMOVED***the***REMOVED***tokens***REMOVED***array.***REMOVED***This***REMOVED***helper***REMOVED***speeds***REMOVED***up
***REMOVED******REMOVED******REMOVED*******REMOVED***tokenizing***REMOVED***by***REMOVED***1)***REMOVED***helping***REMOVED***us***REMOVED***avoid***REMOVED***backtracking***REMOVED***as***REMOVED***much***REMOVED***as***REMOVED***possible,
***REMOVED******REMOVED******REMOVED*******REMOVED***and***REMOVED***2)***REMOVED***helping***REMOVED***us***REMOVED***avoid***REMOVED***creating***REMOVED***extra***REMOVED***tokens***REMOVED***when***REMOVED***consecutive
***REMOVED******REMOVED******REMOVED*******REMOVED***characters***REMOVED***are***REMOVED***plain***REMOVED***text.***REMOVED***This***REMOVED***improves***REMOVED***performance***REMOVED***and***REMOVED***simplifies
***REMOVED******REMOVED******REMOVED*******REMOVED***lookbehinds.
***REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED***const***REMOVED***push***REMOVED***=***REMOVED***tok***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.type***REMOVED***===***REMOVED***'globstar')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isBrace***REMOVED***=***REMOVED***state.braces***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***(tok.type***REMOVED***===***REMOVED***'comma'***REMOVED***||***REMOVED***tok.type***REMOVED***===***REMOVED***'brace');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isExtglob***REMOVED***=***REMOVED***tok.extglob***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***(extglobs.length***REMOVED***&&***REMOVED***(tok.type***REMOVED***===***REMOVED***'pipe'***REMOVED***||***REMOVED***tok.type***REMOVED***===***REMOVED***'paren'));

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tok.type***REMOVED***!==***REMOVED***'slash'***REMOVED***&&***REMOVED***tok.type***REMOVED***!==***REMOVED***'paren'***REMOVED***&&***REMOVED***!isBrace***REMOVED***&&***REMOVED***!isExtglob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***state.output.slice(0,***REMOVED***-prev.output.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'star';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***=***REMOVED***'*';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***star;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***prev.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extglobs.length***REMOVED***&&***REMOVED***tok.type***REMOVED***!==***REMOVED***'paren')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobs[extglobs.length***REMOVED***-***REMOVED***1].inner***REMOVED***+=***REMOVED***tok.value;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tok.value***REMOVED***||***REMOVED***tok.output)***REMOVED***append(tok);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***prev.type***REMOVED***===***REMOVED***'text'***REMOVED***&&***REMOVED***tok.type***REMOVED***===***REMOVED***'text')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***tok.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***(prev.output***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***tok.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***tok.prev***REMOVED***=***REMOVED***prev;
***REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(tok);
***REMOVED******REMOVED******REMOVED******REMOVED***prev***REMOVED***=***REMOVED***tok;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***extglobOpen***REMOVED***=***REMOVED***(type,***REMOVED***value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***token***REMOVED***=***REMOVED***{***REMOVED***...EXTGLOB_CHARS[value],***REMOVED***conditions:***REMOVED***1,***REMOVED***inner:***REMOVED***''***REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***token.prev***REMOVED***=***REMOVED***prev;
***REMOVED******REMOVED******REMOVED******REMOVED***token.parens***REMOVED***=***REMOVED***state.parens;
***REMOVED******REMOVED******REMOVED******REMOVED***token.output***REMOVED***=***REMOVED***state.output;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***output***REMOVED***=***REMOVED***(opts.capture***REMOVED***?***REMOVED***'('***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***token.open;

***REMOVED******REMOVED******REMOVED******REMOVED***increment('parens');
***REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type,***REMOVED***value,***REMOVED***output:***REMOVED***state.output***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***ONE_CHAR***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'paren',***REMOVED***extglob:***REMOVED***true,***REMOVED***value:***REMOVED***advance(),***REMOVED***output***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***extglobs.push(token);
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***extglobClose***REMOVED***=***REMOVED***token***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***token.close***REMOVED***+***REMOVED***(opts.capture***REMOVED***?***REMOVED***')'***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rest;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.type***REMOVED***===***REMOVED***'negate')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***extglobStar***REMOVED***=***REMOVED***star;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.inner***REMOVED***&&***REMOVED***token.inner.length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***token.inner.includes('/'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobStar***REMOVED***=***REMOVED***globstar(opts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extglobStar***REMOVED***!==***REMOVED***star***REMOVED***||***REMOVED***eos()***REMOVED***||***REMOVED***/^\)+$/.test(remaining()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***token.close***REMOVED***=***REMOVED***`)$))${extglobStar}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.inner.includes('*')***REMOVED***&&***REMOVED***(rest***REMOVED***=***REMOVED***remaining())***REMOVED***&&***REMOVED***/^\.[^\\/.]+$/.test(rest))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Any***REMOVED***non-magical***REMOVED***string***REMOVED***(`.ts`)***REMOVED***or***REMOVED***even***REMOVED***nested***REMOVED***expression***REMOVED***(`.{ts,tsx}`)***REMOVED***can***REMOVED***follow***REMOVED***after***REMOVED***the***REMOVED***closing***REMOVED***parenthesis.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***this***REMOVED***case,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***parse***REMOVED***the***REMOVED***string***REMOVED***and***REMOVED***use***REMOVED***it***REMOVED***in***REMOVED***the***REMOVED***output***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***pattern.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Suitable***REMOVED***patterns:***REMOVED***`/!(*.d).ts`,***REMOVED***`/!(*.d).{ts,tsx}`,***REMOVED***`**/!(*-dbg).@(js)`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Disabling***REMOVED***the***REMOVED***`fastpaths`***REMOVED***option***REMOVED***due***REMOVED***to***REMOVED***a***REMOVED***problem***REMOVED***with***REMOVED***parsing***REMOVED***strings***REMOVED***as***REMOVED***`.ts`***REMOVED***in***REMOVED***the***REMOVED***pattern***REMOVED***like***REMOVED***`**/!(*.d).ts`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***parse$2(rest,***REMOVED***{***REMOVED***...options,***REMOVED***fastpaths:***REMOVED***false***REMOVED***}).output;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***token.close***REMOVED***=***REMOVED***`)${expression})${extglobStar})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.prev.type***REMOVED***===***REMOVED***'bos')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.negatedExtglob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'paren',***REMOVED***extglob:***REMOVED***true,***REMOVED***value,***REMOVED***output***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***decrement('parens');
***REMOVED******REMOVED***};

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Fast***REMOVED***paths
***REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED***if***REMOVED***(opts.fastpaths***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***!/(^[*!]|[/()[\]{}"])/.test(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***backslashes***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***input.replace(REGEX_SPECIAL_CHARS_BACKREF,***REMOVED***(m,***REMOVED***esc,***REMOVED***chars,***REMOVED***first,***REMOVED***rest,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backslashes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***m;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first***REMOVED***===***REMOVED***'?')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***esc***REMOVED***+***REMOVED***first***REMOVED***+***REMOVED***(rest***REMOVED***?***REMOVED***QMARK.repeat(rest.length)***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***qmarkNoDot***REMOVED***+***REMOVED***(rest***REMOVED***?***REMOVED***QMARK.repeat(rest.length)***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***QMARK.repeat(chars.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first***REMOVED***===***REMOVED***'.')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***DOT_LITERAL.repeat(chars.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***esc***REMOVED***+***REMOVED***first***REMOVED***+***REMOVED***(rest***REMOVED***?***REMOVED***star***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***star;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***esc***REMOVED***?***REMOVED***m***REMOVED***:***REMOVED***`\\${m}`;
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(backslashes***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.unescape***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***output.replace(/\\/g,***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***output.replace(/\\+/g,***REMOVED***m***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***m.length***REMOVED***%***REMOVED***2***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***'\\\\'***REMOVED***:***REMOVED***(m***REMOVED***?***REMOVED***'\\'***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(output***REMOVED***===***REMOVED***input***REMOVED***&&***REMOVED***opts.contains***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***utils$1.wrapOutput(output,***REMOVED***state,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***state;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Tokenize***REMOVED***input***REMOVED***until***REMOVED***we***REMOVED***reach***REMOVED***end-of-string
***REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED***while***REMOVED***(!eos())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***advance();

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'\u0000')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Escaped***REMOVED***characters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***peek();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***'/'***REMOVED***&&***REMOVED***opts.bash***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***'.'***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***';')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+=***REMOVED***'\\';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***collapse***REMOVED***slashes***REMOVED***to***REMOVED***reduce***REMOVED***potential***REMOVED***for***REMOVED***exploits
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/^\\+/.exec(remaining());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***slashes***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(match***REMOVED***&&***REMOVED***match[0].length***REMOVED***>***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slashes***REMOVED***=***REMOVED***match[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.index***REMOVED***+=***REMOVED***slashes;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(slashes***REMOVED***%***REMOVED***2***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+=***REMOVED***'\\';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.unescape***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+=***REMOVED***advance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.brackets***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***we're***REMOVED***inside***REMOVED***a***REMOVED***regex***REMOVED***character***REMOVED***class,***REMOVED***continue
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***until***REMOVED***we***REMOVED***reach***REMOVED***the***REMOVED***closing***REMOVED***bracket.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.brackets***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***(value***REMOVED***!==***REMOVED***']'***REMOVED***||***REMOVED***prev.value***REMOVED***===***REMOVED***'['***REMOVED***||***REMOVED***prev.value***REMOVED***===***REMOVED***'[^'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.posix***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***value***REMOVED***===***REMOVED***':')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inner***REMOVED***=***REMOVED***prev.value.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inner.includes('['))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.posix***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inner.includes(':'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***prev.value.lastIndexOf('[');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pre***REMOVED***=***REMOVED***prev.value.slice(0,***REMOVED***idx);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rest***REMOVED***=***REMOVED***prev.value.slice(idx***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***posix***REMOVED***=***REMOVED***POSIX_REGEX_SOURCE[rest];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(posix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***=***REMOVED***pre***REMOVED***+***REMOVED***posix;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.backtrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***advance();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!bos.output***REMOVED***&&***REMOVED***tokens.indexOf(prev)***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bos.output***REMOVED***=***REMOVED***ONE_CHAR;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((value***REMOVED***===***REMOVED***'['***REMOVED***&&***REMOVED***peek()***REMOVED***!==***REMOVED***':')***REMOVED***||***REMOVED***(value***REMOVED***===***REMOVED***'-'***REMOVED***&&***REMOVED***peek()***REMOVED***===***REMOVED***']'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***`\\${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***']'***REMOVED***&&***REMOVED***(prev.value***REMOVED***===***REMOVED***'['***REMOVED***||***REMOVED***prev.value***REMOVED***===***REMOVED***'[^'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***`\\${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.posix***REMOVED***===***REMOVED***true***REMOVED***&&***REMOVED***value***REMOVED***===***REMOVED***'!'***REMOVED***&&***REMOVED***prev.value***REMOVED***===***REMOVED***'[')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***'^';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***append({***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***we're***REMOVED***inside***REMOVED***a***REMOVED***quoted***REMOVED***string,***REMOVED***continue
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***until***REMOVED***we***REMOVED***reach***REMOVED***the***REMOVED***closing***REMOVED***double***REMOVED***quote.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.quotes***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***value***REMOVED***!==***REMOVED***'"')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***utils$1.escapeRegex(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***append({***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Double***REMOVED***quotes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'"')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.quotes***REMOVED***=***REMOVED***state.quotes***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.keepQuotes***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Parentheses
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'(')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***increment('parens');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'paren',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***')')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.parens***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***opts.strictBrackets***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(syntaxError('opening',***REMOVED***'('));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extglob***REMOVED***=***REMOVED***extglobs[extglobs.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extglob***REMOVED***&&***REMOVED***state.parens***REMOVED***===***REMOVED***extglob.parens***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobClose(extglobs.pop());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'paren',***REMOVED***value,***REMOVED***output:***REMOVED***state.parens***REMOVED***?***REMOVED***')'***REMOVED***:***REMOVED***'\\)'***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decrement('parens');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Square***REMOVED***brackets
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'[')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.nobracket***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***!remaining().includes(']'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.nobracket***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***opts.strictBrackets***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(syntaxError('closing',***REMOVED***']'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***`\\${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***increment('brackets');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'bracket',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***']')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.nobracket***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***(prev***REMOVED***&&***REMOVED***prev.type***REMOVED***===***REMOVED***'bracket'***REMOVED***&&***REMOVED***prev.value.length***REMOVED***===***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value,***REMOVED***output:***REMOVED***`\\${value}`***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.brackets***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.strictBrackets***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(syntaxError('opening',***REMOVED***'['));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value,***REMOVED***output:***REMOVED***`\\${value}`***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decrement('brackets');

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevValue***REMOVED***=***REMOVED***prev.value.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.posix***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***prevValue[0]***REMOVED***===***REMOVED***'^'***REMOVED***&&***REMOVED***!prevValue.includes('/'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***`/${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***append({***REMOVED***value***REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***literal***REMOVED***brackets***REMOVED***are***REMOVED***explicitly***REMOVED***disabled
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***assume***REMOVED***we***REMOVED***should***REMOVED***match***REMOVED***with***REMOVED***a***REMOVED***regex***REMOVED***character***REMOVED***class
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.literalBrackets***REMOVED***===***REMOVED***false***REMOVED***||***REMOVED***utils$1.hasRegexChars(prevValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***escaped***REMOVED***=***REMOVED***utils$1.escapeRegex(prev.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***state.output.slice(0,***REMOVED***-prev.value.length);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***literal***REMOVED***brackets***REMOVED***are***REMOVED***explicitly***REMOVED***enabled
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***assume***REMOVED***we***REMOVED***should***REMOVED***escape***REMOVED***the***REMOVED***brackets***REMOVED***to***REMOVED***match***REMOVED***literal***REMOVED***characters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.literalBrackets***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***escaped;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***=***REMOVED***escaped;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***the***REMOVED***user***REMOVED***specifies***REMOVED***nothing,***REMOVED***try***REMOVED***to***REMOVED***match***REMOVED***both
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***=***REMOVED***`(${capture}${escaped}|${prev.value})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***prev.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Braces
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'{'***REMOVED***&&***REMOVED***opts.nobrace***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***increment('braces');

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***open***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'brace',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output:***REMOVED***'(',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputIndex:***REMOVED***state.output.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokensIndex:***REMOVED***state.tokens.length
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braces.push(open);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(open);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'}')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***brace***REMOVED***=***REMOVED***braces[braces.length***REMOVED***-***REMOVED***1];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.nobrace***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***!brace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value,***REMOVED***output:***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***')';

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(brace.dots***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***tokens.slice();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***range***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***arr.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arr[i].type***REMOVED***===***REMOVED***'brace')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arr[i].type***REMOVED***!==***REMOVED***'dots')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.unshift(arr[i].value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***expandRange(range,***REMOVED***opts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.backtrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(brace.comma***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***brace.dots***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***state.output.slice(0,***REMOVED***brace.outputIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toks***REMOVED***=***REMOVED***state.tokens.slice(brace.tokensIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***brace.value***REMOVED***=***REMOVED***brace.output***REMOVED***=***REMOVED***'\\{';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***output***REMOVED***=***REMOVED***'\\}';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***out;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***t***REMOVED***of***REMOVED***toks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***(t.output***REMOVED***||***REMOVED***t.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'brace',***REMOVED***value,***REMOVED***output***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decrement('braces');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braces.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Pipes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'|')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extglobs.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobs[extglobs.length***REMOVED***-***REMOVED***1].conditions++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Commas
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***',')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***brace***REMOVED***=***REMOVED***braces[braces.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(brace***REMOVED***&&***REMOVED***stack[stack.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***'braces')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***brace.comma***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***'|';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'comma',***REMOVED***value,***REMOVED***output***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Slashes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'/')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***beginning***REMOVED***of***REMOVED***the***REMOVED***glob***REMOVED***is***REMOVED***"./",***REMOVED***advance***REMOVED***the***REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***index,***REMOVED***and***REMOVED***don't***REMOVED***add***REMOVED***the***REMOVED***"./"***REMOVED***characters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***the***REMOVED***state.***REMOVED***This***REMOVED***greatly***REMOVED***simplifies***REMOVED***lookbehinds***REMOVED***when
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***checking***REMOVED***for***REMOVED***BOS***REMOVED***characters***REMOVED***like***REMOVED***"!"***REMOVED***and***REMOVED***"."***REMOVED***(not***REMOVED***"./")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.type***REMOVED***===***REMOVED***'dot'***REMOVED***&&***REMOVED***state.index***REMOVED***===***REMOVED***state.start***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.start***REMOVED***=***REMOVED***state.index***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.consumed***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev***REMOVED***=***REMOVED***bos;***REMOVED***//***REMOVED***reset***REMOVED***"prev"***REMOVED***to***REMOVED***the***REMOVED***first***REMOVED***token
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'slash',***REMOVED***value,***REMOVED***output:***REMOVED***SLASH_LITERAL***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Dots
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'.')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.braces***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***prev.type***REMOVED***===***REMOVED***'dot')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.value***REMOVED***===***REMOVED***'.')***REMOVED***prev.output***REMOVED***=***REMOVED***DOT_LITERAL;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***brace***REMOVED***=***REMOVED***braces[braces.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'dots';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***brace.dots***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((state.braces***REMOVED***+***REMOVED***state.parens)***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***prev.type***REMOVED***!==***REMOVED***'bos'***REMOVED***&&***REMOVED***prev.type***REMOVED***!==***REMOVED***'slash')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value,***REMOVED***output:***REMOVED***DOT_LITERAL***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'dot',***REMOVED***value,***REMOVED***output:***REMOVED***DOT_LITERAL***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Question***REMOVED***marks
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'?')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isGroup***REMOVED***=***REMOVED***prev***REMOVED***&&***REMOVED***prev.value***REMOVED***===***REMOVED***'(';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isGroup***REMOVED***&&***REMOVED***opts.noextglob***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***peek()***REMOVED***===***REMOVED***'('***REMOVED***&&***REMOVED***peek(2)***REMOVED***!==***REMOVED***'?')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobOpen('qmark',***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***prev.type***REMOVED***===***REMOVED***'paren')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***peek();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***'<'***REMOVED***&&***REMOVED***!utils$1.supportsLookbehinds())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Node.js***REMOVED***v10***REMOVED***or***REMOVED***higher***REMOVED***is***REMOVED***required***REMOVED***for***REMOVED***regex***REMOVED***lookbehinds');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((prev.value***REMOVED***===***REMOVED***'('***REMOVED***&&***REMOVED***!/[!=<:]/.test(next))***REMOVED***||***REMOVED***(next***REMOVED***===***REMOVED***'<'***REMOVED***&&***REMOVED***!/<([!=]|\w+>)/.test(remaining())))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***`\\${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value,***REMOVED***output***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.dot***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***(prev.type***REMOVED***===***REMOVED***'slash'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'bos'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'qmark',***REMOVED***value,***REMOVED***output:***REMOVED***QMARK_NO_DOT***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'qmark',***REMOVED***value,***REMOVED***output:***REMOVED***QMARK***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Exclamation
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'!')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noextglob***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***peek()***REMOVED***===***REMOVED***'(')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(peek(2)***REMOVED***!==***REMOVED***'?'***REMOVED***||***REMOVED***!/[!=<:]/.test(peek(3)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobOpen('negate',***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.nonegate***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***state.index***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Plus
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'+')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noextglob***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***peek()***REMOVED***===***REMOVED***'('***REMOVED***&&***REMOVED***peek(2)***REMOVED***!==***REMOVED***'?')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobOpen('plus',***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((prev***REMOVED***&&***REMOVED***prev.value***REMOVED***===***REMOVED***'(')***REMOVED***||***REMOVED***opts.regex***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'plus',***REMOVED***value,***REMOVED***output:***REMOVED***PLUS_LITERAL***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((prev***REMOVED***&&***REMOVED***(prev.type***REMOVED***===***REMOVED***'bracket'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'paren'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'brace'))***REMOVED***||***REMOVED***state.parens***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'plus',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'plus',***REMOVED***value:***REMOVED***PLUS_LITERAL***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Plain***REMOVED***text
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'@')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noextglob***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***peek()***REMOVED***===***REMOVED***'('***REMOVED***&&***REMOVED***peek(2)***REMOVED***!==***REMOVED***'?')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'at',***REMOVED***extglob:***REMOVED***true,***REMOVED***value,***REMOVED***output:***REMOVED***''***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Plain***REMOVED***text
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***'$'***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***'^')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***`\\${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***REGEX_NON_SPECIAL_CHARS.exec(remaining());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+=***REMOVED***match[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.index***REMOVED***+=***REMOVED***match[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'text',***REMOVED***value***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Stars
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***(prev.type***REMOVED***===***REMOVED***'globstar'***REMOVED***||***REMOVED***prev.star***REMOVED***===***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'star';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.star***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***star;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.backtrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.globstar***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rest***REMOVED***=***REMOVED***remaining();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noextglob***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***/^\([^?]/.test(rest))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extglobOpen('star',***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.type***REMOVED***===***REMOVED***'star')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noglobstar***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prior***REMOVED***=***REMOVED***prev.prev;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***before***REMOVED***=***REMOVED***prior.prev;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isStart***REMOVED***=***REMOVED***prior.type***REMOVED***===***REMOVED***'slash'***REMOVED***||***REMOVED***prior.type***REMOVED***===***REMOVED***'bos';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***afterStar***REMOVED***=***REMOVED***before***REMOVED***&&***REMOVED***(before.type***REMOVED***===***REMOVED***'star'***REMOVED***||***REMOVED***before.type***REMOVED***===***REMOVED***'globstar');

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.bash***REMOVED***===***REMOVED***true***REMOVED***&&***REMOVED***(!isStart***REMOVED***||***REMOVED***(rest[0]***REMOVED***&&***REMOVED***rest[0]***REMOVED***!==***REMOVED***'/')))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'star',***REMOVED***value,***REMOVED***output:***REMOVED***''***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isBrace***REMOVED***=***REMOVED***state.braces***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***(prior.type***REMOVED***===***REMOVED***'comma'***REMOVED***||***REMOVED***prior.type***REMOVED***===***REMOVED***'brace');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isExtglob***REMOVED***=***REMOVED***extglobs.length***REMOVED***&&***REMOVED***(prior.type***REMOVED***===***REMOVED***'pipe'***REMOVED***||***REMOVED***prior.type***REMOVED***===***REMOVED***'paren');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isStart***REMOVED***&&***REMOVED***prior.type***REMOVED***!==***REMOVED***'paren'***REMOVED***&&***REMOVED***!isBrace***REMOVED***&&***REMOVED***!isExtglob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'star',***REMOVED***value,***REMOVED***output:***REMOVED***''***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***strip***REMOVED***consecutive***REMOVED***`/**/`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(rest.slice(0,***REMOVED***3)***REMOVED***===***REMOVED***'/**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***after***REMOVED***=***REMOVED***input[state.index***REMOVED***+***REMOVED***4];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(after***REMOVED***&&***REMOVED***after***REMOVED***!==***REMOVED***'/')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rest***REMOVED***=***REMOVED***rest.slice(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume('/**',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prior.type***REMOVED***===***REMOVED***'bos'***REMOVED***&&***REMOVED***eos())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'globstar';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***globstar(opts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***prev.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.globstar***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prior.type***REMOVED***===***REMOVED***'slash'***REMOVED***&&***REMOVED***prior.prev.type***REMOVED***!==***REMOVED***'bos'***REMOVED***&&***REMOVED***!afterStar***REMOVED***&&***REMOVED***eos())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***state.output.slice(0,***REMOVED***-(prior.output***REMOVED***+***REMOVED***prev.output).length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prior.output***REMOVED***=***REMOVED***`(?:${prior.output}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'globstar';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***globstar(opts)***REMOVED***+***REMOVED***(opts.strictSlashes***REMOVED***?***REMOVED***')'***REMOVED***:***REMOVED***'|$)');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.globstar***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***prior.output***REMOVED***+***REMOVED***prev.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prior.type***REMOVED***===***REMOVED***'slash'***REMOVED***&&***REMOVED***prior.prev.type***REMOVED***!==***REMOVED***'bos'***REMOVED***&&***REMOVED***rest[0]***REMOVED***===***REMOVED***'/')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***rest[1]***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***'|$'***REMOVED***:***REMOVED***'';

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***state.output.slice(0,***REMOVED***-(prior.output***REMOVED***+***REMOVED***prev.output).length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prior.output***REMOVED***=***REMOVED***`(?:${prior.output}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'globstar';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***`${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***prior.output***REMOVED***+***REMOVED***prev.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.globstar***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value***REMOVED***+***REMOVED***advance());

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'slash',***REMOVED***value:***REMOVED***'/',***REMOVED***output:***REMOVED***''***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prior.type***REMOVED***===***REMOVED***'bos'***REMOVED***&&***REMOVED***rest[0]***REMOVED***===***REMOVED***'/')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'globstar';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***`(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***prev.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.globstar***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value***REMOVED***+***REMOVED***advance());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'slash',***REMOVED***value:***REMOVED***'/',***REMOVED***output:***REMOVED***''***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***remove***REMOVED***single***REMOVED***star***REMOVED***from***REMOVED***output
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***state.output.slice(0,***REMOVED***-prev.output.length);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reset***REMOVED***previous***REMOVED***token***REMOVED***to***REMOVED***globstar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.type***REMOVED***=***REMOVED***'globstar';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***=***REMOVED***globstar(opts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.value***REMOVED***+=***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reset***REMOVED***output***REMOVED***with***REMOVED***globstar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***prev.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.globstar***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consume(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***token***REMOVED***=***REMOVED***{***REMOVED***type:***REMOVED***'star',***REMOVED***value,***REMOVED***output:***REMOVED***star***REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.bash***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.output***REMOVED***=***REMOVED***'.*?';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.type***REMOVED***===***REMOVED***'bos'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'slash')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.output***REMOVED***=***REMOVED***nodot***REMOVED***+***REMOVED***token.output;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(token);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***(prev.type***REMOVED***===***REMOVED***'bracket'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'paren')***REMOVED***&&***REMOVED***opts.regex***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.output***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(token);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.index***REMOVED***===***REMOVED***state.start***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'slash'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'dot')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev.type***REMOVED***===***REMOVED***'dot')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***NO_DOT_SLASH;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***+=***REMOVED***NO_DOT_SLASH;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(opts.dot***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***NO_DOTS_SLASH;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***+=***REMOVED***NO_DOTS_SLASH;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***nodot;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***+=***REMOVED***nodot;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(peek()***REMOVED***!==***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***ONE_CHAR;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.output***REMOVED***+=***REMOVED***ONE_CHAR;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***push(token);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***while***REMOVED***(state.brackets***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.strictBrackets***REMOVED***===***REMOVED***true)***REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(syntaxError('closing',***REMOVED***']'));
***REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***utils$1.escapeLast(state.output,***REMOVED***'[');
***REMOVED******REMOVED******REMOVED******REMOVED***decrement('brackets');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***while***REMOVED***(state.parens***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.strictBrackets***REMOVED***===***REMOVED***true)***REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(syntaxError('closing',***REMOVED***')'));
***REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***utils$1.escapeLast(state.output,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED***decrement('parens');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***while***REMOVED***(state.braces***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.strictBrackets***REMOVED***===***REMOVED***true)***REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(syntaxError('closing',***REMOVED***'}'));
***REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***utils$1.escapeLast(state.output,***REMOVED***'{');
***REMOVED******REMOVED******REMOVED******REMOVED***decrement('braces');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(opts.strictSlashes***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***(prev.type***REMOVED***===***REMOVED***'star'***REMOVED***||***REMOVED***prev.type***REMOVED***===***REMOVED***'bracket'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***push({***REMOVED***type:***REMOVED***'maybe_slash',***REMOVED***value:***REMOVED***'',***REMOVED***output:***REMOVED***`${SLASH_LITERAL}?`***REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***rebuild***REMOVED***the***REMOVED***output***REMOVED***if***REMOVED***we***REMOVED***had***REMOVED***to***REMOVED***backtrack***REMOVED***at***REMOVED***any***REMOVED***point
***REMOVED******REMOVED***if***REMOVED***(state.backtrack***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***=***REMOVED***'';

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***token***REMOVED***of***REMOVED***state.tokens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***token.output***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***token.output***REMOVED***:***REMOVED***token.value;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.suffix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.output***REMOVED***+=***REMOVED***token.suffix;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***state;
};

/**
***REMOVED*******REMOVED***Fast***REMOVED***paths***REMOVED***for***REMOVED***creating***REMOVED***regular***REMOVED***expressions***REMOVED***for***REMOVED***common***REMOVED***glob***REMOVED***patterns.
***REMOVED*******REMOVED***This***REMOVED***can***REMOVED***significantly***REMOVED***speed***REMOVED***up***REMOVED***processing***REMOVED***and***REMOVED***has***REMOVED***very***REMOVED***little***REMOVED***downside
***REMOVED*******REMOVED***impact***REMOVED***when***REMOVED***none***REMOVED***of***REMOVED***the***REMOVED***fast***REMOVED***paths***REMOVED***match.
***REMOVED****/

parse$2.fastpaths***REMOVED***=***REMOVED***(input,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***{***REMOVED***...options***REMOVED***};
***REMOVED******REMOVED***const***REMOVED***max***REMOVED***=***REMOVED***typeof***REMOVED***opts.maxLength***REMOVED***===***REMOVED***'number'***REMOVED***?***REMOVED***Math.min(MAX_LENGTH,***REMOVED***opts.maxLength)***REMOVED***:***REMOVED***MAX_LENGTH;
***REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***input.length;
***REMOVED******REMOVED***if***REMOVED***(len***REMOVED***>***REMOVED***max)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***SyntaxError(`Input***REMOVED***length:***REMOVED***${len},***REMOVED***exceeds***REMOVED***maximum***REMOVED***allowed***REMOVED***length:***REMOVED***${max}`);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***input***REMOVED***=***REMOVED***REPLACEMENTS[input]***REMOVED***||***REMOVED***input;
***REMOVED******REMOVED***const***REMOVED***win32***REMOVED***=***REMOVED***utils$1.isWindows(options);

***REMOVED******REMOVED***//***REMOVED***create***REMOVED***constants***REMOVED***based***REMOVED***on***REMOVED***platform,***REMOVED***for***REMOVED***windows***REMOVED***or***REMOVED***posix
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***DOT_LITERAL,
***REMOVED******REMOVED******REMOVED******REMOVED***SLASH_LITERAL,
***REMOVED******REMOVED******REMOVED******REMOVED***ONE_CHAR,
***REMOVED******REMOVED******REMOVED******REMOVED***DOTS_SLASH,
***REMOVED******REMOVED******REMOVED******REMOVED***NO_DOT,
***REMOVED******REMOVED******REMOVED******REMOVED***NO_DOTS,
***REMOVED******REMOVED******REMOVED******REMOVED***NO_DOTS_SLASH,
***REMOVED******REMOVED******REMOVED******REMOVED***STAR,
***REMOVED******REMOVED******REMOVED******REMOVED***START_ANCHOR
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***constants$1.globChars(win32);

***REMOVED******REMOVED***const***REMOVED***nodot***REMOVED***=***REMOVED***opts.dot***REMOVED***?***REMOVED***NO_DOTS***REMOVED***:***REMOVED***NO_DOT;
***REMOVED******REMOVED***const***REMOVED***slashDot***REMOVED***=***REMOVED***opts.dot***REMOVED***?***REMOVED***NO_DOTS_SLASH***REMOVED***:***REMOVED***NO_DOT;
***REMOVED******REMOVED***const***REMOVED***capture***REMOVED***=***REMOVED***opts.capture***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'?:';
***REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{***REMOVED***negated:***REMOVED***false,***REMOVED***prefix:***REMOVED***''***REMOVED***};
***REMOVED******REMOVED***let***REMOVED***star***REMOVED***=***REMOVED***opts.bash***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***'.*?'***REMOVED***:***REMOVED***STAR;

***REMOVED******REMOVED***if***REMOVED***(opts.capture)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***star***REMOVED***=***REMOVED***`(${star})`;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***globstar***REMOVED***=***REMOVED***opts***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.noglobstar***REMOVED***===***REMOVED***true)***REMOVED***return***REMOVED***star;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(${capture}(?:(?!${START_ANCHOR}${opts.dot***REMOVED***?***REMOVED***DOTS_SLASH***REMOVED***:***REMOVED***DOT_LITERAL}).)*?)`;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***create***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${nodot}${ONE_CHAR}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'.*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${DOT_LITERAL}${ONE_CHAR}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'*.*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'*/*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'**':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodot***REMOVED***+***REMOVED***globstar(opts);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'**/*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'**/*.*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'**/.*':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/^(.*?)\.(\w+)$/.exec(str);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***return;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***create(match[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!source)***REMOVED***return;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source***REMOVED***+***REMOVED***DOT_LITERAL***REMOVED***+***REMOVED***match[2];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***output***REMOVED***=***REMOVED***utils$1.removePrefix(input,***REMOVED***state);
***REMOVED******REMOVED***let***REMOVED***source***REMOVED***=***REMOVED***create(output);

***REMOVED******REMOVED***if***REMOVED***(source***REMOVED***&&***REMOVED***opts.strictSlashes***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***+=***REMOVED***`${SLASH_LITERAL}?`;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***source;
};

var***REMOVED***parse_1***REMOVED***=***REMOVED***parse$2;

const***REMOVED***path***REMOVED***=***REMOVED***require$$0$1;
const***REMOVED***scan***REMOVED***=***REMOVED***scan_1;
const***REMOVED***parse$1***REMOVED***=***REMOVED***parse_1;
const***REMOVED***utils***REMOVED***=***REMOVED***utils$3;
const***REMOVED***constants***REMOVED***=***REMOVED***constants$2;
const***REMOVED***isObject***REMOVED***=***REMOVED***val***REMOVED***=>***REMOVED***val***REMOVED***&&***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***!Array.isArray(val);

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***matcher***REMOVED***function***REMOVED***from***REMOVED***one***REMOVED***or***REMOVED***more***REMOVED***glob***REMOVED***patterns.***REMOVED***The
***REMOVED*******REMOVED***returned***REMOVED***function***REMOVED***takes***REMOVED***a***REMOVED***string***REMOVED***to***REMOVED***match***REMOVED***as***REMOVED***its***REMOVED***first***REMOVED***argument,
***REMOVED*******REMOVED***and***REMOVED***returns***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***string***REMOVED***is***REMOVED***a***REMOVED***match.***REMOVED***The***REMOVED***returned***REMOVED***matcher
***REMOVED*******REMOVED***function***REMOVED***also***REMOVED***takes***REMOVED***a***REMOVED***boolean***REMOVED***as***REMOVED***the***REMOVED***second***REMOVED***argument***REMOVED***that,***REMOVED***when***REMOVED***true,
***REMOVED*******REMOVED***returns***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***additional***REMOVED***information.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***//***REMOVED***picomatch(glob[,***REMOVED***options]);
***REMOVED****
***REMOVED*******REMOVED***const***REMOVED***isMatch***REMOVED***=***REMOVED***picomatch('*.!(*a)');
***REMOVED*******REMOVED***console.log(isMatch('a.a'));***REMOVED***//=>***REMOVED***false
***REMOVED*******REMOVED***console.log(isMatch('a.b'));***REMOVED***//=>***REMOVED***true
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@name***REMOVED***picomatch
***REMOVED*******REMOVED***@param***REMOVED***{String|Array}***REMOVED***`globs`***REMOVED***One***REMOVED***or***REMOVED***more***REMOVED***glob***REMOVED***patterns.
***REMOVED*******REMOVED***@param***REMOVED***{Object=}***REMOVED***`options`
***REMOVED*******REMOVED***@return***REMOVED***{Function=}***REMOVED***Returns***REMOVED***a***REMOVED***matcher***REMOVED***function.
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

const***REMOVED***picomatch$1***REMOVED***=***REMOVED***(glob,***REMOVED***options,***REMOVED***returnState***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(glob))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fns***REMOVED***=***REMOVED***glob.map(input***REMOVED***=>***REMOVED***picomatch$1(input,***REMOVED***options,***REMOVED***returnState));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrayMatcher***REMOVED***=***REMOVED***str***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***isMatch***REMOVED***of***REMOVED***fns)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***isMatch(str);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state)***REMOVED***return***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrayMatcher;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***isState***REMOVED***=***REMOVED***isObject(glob)***REMOVED***&&***REMOVED***glob.tokens***REMOVED***&&***REMOVED***glob.input;

***REMOVED******REMOVED***if***REMOVED***(glob***REMOVED***===***REMOVED***''***REMOVED***||***REMOVED***(typeof***REMOVED***glob***REMOVED***!==***REMOVED***'string'***REMOVED***&&***REMOVED***!isState))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Expected***REMOVED***pattern***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***non-empty***REMOVED***string');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***posix***REMOVED***=***REMOVED***utils.isWindows(options);
***REMOVED******REMOVED***const***REMOVED***regex***REMOVED***=***REMOVED***isState
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***picomatch$1.compileRe(glob,***REMOVED***options)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***picomatch$1.makeRe(glob,***REMOVED***options,***REMOVED***false,***REMOVED***true);

***REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***regex.state;
***REMOVED******REMOVED***delete***REMOVED***regex.state;

***REMOVED******REMOVED***let***REMOVED***isIgnored***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(opts.ignore)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ignoreOpts***REMOVED***=***REMOVED***{***REMOVED***...options,***REMOVED***ignore:***REMOVED***null,***REMOVED***onMatch:***REMOVED***null,***REMOVED***onResult:***REMOVED***null***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***isIgnored***REMOVED***=***REMOVED***picomatch$1(opts.ignore,***REMOVED***ignoreOpts,***REMOVED***returnState);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***matcher***REMOVED***=***REMOVED***(input,***REMOVED***returnObject***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***isMatch,***REMOVED***match,***REMOVED***output***REMOVED***}***REMOVED***=***REMOVED***picomatch$1.test(input,***REMOVED***regex,***REMOVED***options,***REMOVED***{***REMOVED***glob,***REMOVED***posix***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***{***REMOVED***glob,***REMOVED***state,***REMOVED***regex,***REMOVED***posix,***REMOVED***input,***REMOVED***output,***REMOVED***match,***REMOVED***isMatch***REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***opts.onResult***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts.onResult(result);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMatch***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.isMatch***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnObject***REMOVED***?***REMOVED***result***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIgnored(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***opts.onIgnore***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts.onIgnore(result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.isMatch***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnObject***REMOVED***?***REMOVED***result***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***opts.onMatch***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts.onMatch(result);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnObject***REMOVED***?***REMOVED***result***REMOVED***:***REMOVED***true;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***if***REMOVED***(returnState)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***matcher.state***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***matcher;
};

/**
***REMOVED*******REMOVED***Test***REMOVED***`input`***REMOVED***with***REMOVED***the***REMOVED***given***REMOVED***`regex`.***REMOVED***This***REMOVED***is***REMOVED***used***REMOVED***by***REMOVED***the***REMOVED***main
***REMOVED*******REMOVED***`picomatch()`***REMOVED***function***REMOVED***to***REMOVED***test***REMOVED***the***REMOVED***input***REMOVED***string.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***//***REMOVED***picomatch.test(input,***REMOVED***regex[,***REMOVED***options]);
***REMOVED****
***REMOVED*******REMOVED***console.log(picomatch.test('foo/bar',***REMOVED***/^(?:([^/]*?)\/([^/]*?))$/));
***REMOVED*******REMOVED***//***REMOVED***{***REMOVED***isMatch:***REMOVED***true,***REMOVED***match:***REMOVED***[***REMOVED***'foo/',***REMOVED***'foo',***REMOVED***'bar'***REMOVED***],***REMOVED***output:***REMOVED***'foo/bar'***REMOVED***}
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`input`***REMOVED***String***REMOVED***to***REMOVED***test.
***REMOVED*******REMOVED***@param***REMOVED***{RegExp}***REMOVED***`regex`
***REMOVED*******REMOVED***@return***REMOVED***{Object}***REMOVED***Returns***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***matching***REMOVED***info.
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.test***REMOVED***=***REMOVED***(input,***REMOVED***regex,***REMOVED***options,***REMOVED***{***REMOVED***glob,***REMOVED***posix***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***input***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Expected***REMOVED***input***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***string');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(input***REMOVED***===***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***isMatch:***REMOVED***false,***REMOVED***output:***REMOVED***''***REMOVED***};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***format***REMOVED***=***REMOVED***opts.format***REMOVED***||***REMOVED***(posix***REMOVED***?***REMOVED***utils.toPosixSlashes***REMOVED***:***REMOVED***null);
***REMOVED******REMOVED***let***REMOVED***match***REMOVED***=***REMOVED***input***REMOVED***===***REMOVED***glob;
***REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***(match***REMOVED***&&***REMOVED***format)***REMOVED***?***REMOVED***format(input)***REMOVED***:***REMOVED***input;

***REMOVED******REMOVED***if***REMOVED***(match***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***format***REMOVED***?***REMOVED***format(input)***REMOVED***:***REMOVED***input;
***REMOVED******REMOVED******REMOVED******REMOVED***match***REMOVED***=***REMOVED***output***REMOVED***===***REMOVED***glob;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(match***REMOVED***===***REMOVED***false***REMOVED***||***REMOVED***opts.capture***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.matchBase***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***opts.basename***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***match***REMOVED***=***REMOVED***picomatch$1.matchBase(input,***REMOVED***regex,***REMOVED***options,***REMOVED***posix);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***match***REMOVED***=***REMOVED***regex.exec(output);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***{***REMOVED***isMatch:***REMOVED***Boolean(match),***REMOVED***match,***REMOVED***output***REMOVED***};
};

/**
***REMOVED*******REMOVED***Match***REMOVED***the***REMOVED***basename***REMOVED***of***REMOVED***a***REMOVED***filepath.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***//***REMOVED***picomatch.matchBase(input,***REMOVED***glob[,***REMOVED***options]);
***REMOVED*******REMOVED***console.log(picomatch.matchBase('foo/bar.js',***REMOVED***'*.js');***REMOVED***//***REMOVED***true
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`input`***REMOVED***String***REMOVED***to***REMOVED***test.
***REMOVED*******REMOVED***@param***REMOVED***{RegExp|String}***REMOVED***`glob`***REMOVED***Glob***REMOVED***pattern***REMOVED***or***REMOVED***regex***REMOVED***created***REMOVED***by***REMOVED***[.makeRe](#makeRe).
***REMOVED*******REMOVED***@return***REMOVED***{Boolean}
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.matchBase***REMOVED***=***REMOVED***(input,***REMOVED***glob,***REMOVED***options,***REMOVED***posix***REMOVED***=***REMOVED***utils.isWindows(options))***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***regex***REMOVED***=***REMOVED***glob***REMOVED***instanceof***REMOVED***RegExp***REMOVED***?***REMOVED***glob***REMOVED***:***REMOVED***picomatch$1.makeRe(glob,***REMOVED***options);
***REMOVED******REMOVED***return***REMOVED***regex.test(path.basename(input));
};

/**
***REMOVED*******REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED*****any*****REMOVED***of***REMOVED***the***REMOVED***given***REMOVED***glob***REMOVED***`patterns`***REMOVED***match***REMOVED***the***REMOVED***specified***REMOVED***`string`.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***//***REMOVED***picomatch.isMatch(string,***REMOVED***patterns[,***REMOVED***options]);
***REMOVED****
***REMOVED*******REMOVED***console.log(picomatch.isMatch('a.a',***REMOVED***['b.*',***REMOVED***'*.a']));***REMOVED***//=>***REMOVED***true
***REMOVED*******REMOVED***console.log(picomatch.isMatch('a.a',***REMOVED***'b.*'));***REMOVED***//=>***REMOVED***false
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String|Array}***REMOVED***str***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***test.
***REMOVED*******REMOVED***@param***REMOVED***{String|Array}***REMOVED***patterns***REMOVED***One***REMOVED***or***REMOVED***more***REMOVED***glob***REMOVED***patterns***REMOVED***to***REMOVED***use***REMOVED***for***REMOVED***matching.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***[options]***REMOVED***See***REMOVED***available***REMOVED***[options](#options).
***REMOVED*******REMOVED***@return***REMOVED***{Boolean}***REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***any***REMOVED***patterns***REMOVED***match***REMOVED***`str`
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.isMatch***REMOVED***=***REMOVED***(str,***REMOVED***patterns,***REMOVED***options)***REMOVED***=>***REMOVED***picomatch$1(patterns,***REMOVED***options)(str);

/**
***REMOVED*******REMOVED***Parse***REMOVED***a***REMOVED***glob***REMOVED***pattern***REMOVED***to***REMOVED***create***REMOVED***the***REMOVED***source***REMOVED***string***REMOVED***for***REMOVED***a***REMOVED***regular
***REMOVED*******REMOVED***expression.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***picomatch.parse(pattern[,***REMOVED***options]);
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`pattern`
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`options`
***REMOVED*******REMOVED***@return***REMOVED***{Object}***REMOVED***Returns***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***useful***REMOVED***properties***REMOVED***and***REMOVED***output***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***as***REMOVED***a***REMOVED***regex***REMOVED***source***REMOVED***string.
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.parse***REMOVED***=***REMOVED***(pattern,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(pattern))***REMOVED***return***REMOVED***pattern.map(p***REMOVED***=>***REMOVED***picomatch$1.parse(p,***REMOVED***options));
***REMOVED******REMOVED***return***REMOVED***parse$1(pattern,***REMOVED***{***REMOVED***...options,***REMOVED***fastpaths:***REMOVED***false***REMOVED***});
};

/**
***REMOVED*******REMOVED***Scan***REMOVED***a***REMOVED***glob***REMOVED***pattern***REMOVED***to***REMOVED***separate***REMOVED***the***REMOVED***pattern***REMOVED***into***REMOVED***segments.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***//***REMOVED***picomatch.scan(input[,***REMOVED***options]);
***REMOVED****
***REMOVED*******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***picomatch.scan('!./foo/*.js');
***REMOVED*******REMOVED***console.log(result);
***REMOVED*******REMOVED***{***REMOVED***prefix:***REMOVED***'!./',
***REMOVED*******REMOVED******REMOVED******REMOVED***input:***REMOVED***'!./foo/*.js',
***REMOVED*******REMOVED******REMOVED******REMOVED***start:***REMOVED***3,
***REMOVED*******REMOVED******REMOVED******REMOVED***base:***REMOVED***'foo',
***REMOVED*******REMOVED******REMOVED******REMOVED***glob:***REMOVED***'*.js',
***REMOVED*******REMOVED******REMOVED******REMOVED***isBrace:***REMOVED***false,
***REMOVED*******REMOVED******REMOVED******REMOVED***isBracket:***REMOVED***false,
***REMOVED*******REMOVED******REMOVED******REMOVED***isGlob:***REMOVED***true,
***REMOVED*******REMOVED******REMOVED******REMOVED***isExtglob:***REMOVED***false,
***REMOVED*******REMOVED******REMOVED******REMOVED***isGlobstar:***REMOVED***false,
***REMOVED*******REMOVED******REMOVED******REMOVED***negated:***REMOVED***true***REMOVED***}
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`input`***REMOVED***Glob***REMOVED***pattern***REMOVED***to***REMOVED***scan.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`options`
***REMOVED*******REMOVED***@return***REMOVED***{Object}***REMOVED***Returns***REMOVED***an***REMOVED***object***REMOVED***with
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.scan***REMOVED***=***REMOVED***(input,***REMOVED***options)***REMOVED***=>***REMOVED***scan(input,***REMOVED***options);

/**
***REMOVED*******REMOVED***Compile***REMOVED***a***REMOVED***regular***REMOVED***expression***REMOVED***from***REMOVED***the***REMOVED***`state`***REMOVED***object***REMOVED***returned***REMOVED***by***REMOVED***the
***REMOVED*******REMOVED***[parse()](#parse)***REMOVED***method.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`state`
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`options`
***REMOVED*******REMOVED***@param***REMOVED***{Boolean}***REMOVED***`returnOutput`***REMOVED***Intended***REMOVED***for***REMOVED***implementors,***REMOVED***this***REMOVED***argument***REMOVED***allows***REMOVED***you***REMOVED***to***REMOVED***return***REMOVED***the***REMOVED***raw***REMOVED***output***REMOVED***from***REMOVED***the***REMOVED***parser.
***REMOVED*******REMOVED***@param***REMOVED***{Boolean}***REMOVED***`returnState`***REMOVED***Adds***REMOVED***the***REMOVED***state***REMOVED***to***REMOVED***a***REMOVED***`state`***REMOVED***property***REMOVED***on***REMOVED***the***REMOVED***returned***REMOVED***regex.***REMOVED***Useful***REMOVED***for***REMOVED***implementors***REMOVED***and***REMOVED***debugging.
***REMOVED*******REMOVED***@return***REMOVED***{RegExp}
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.compileRe***REMOVED***=***REMOVED***(state,***REMOVED***options,***REMOVED***returnOutput***REMOVED***=***REMOVED***false,***REMOVED***returnState***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(returnOutput***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***state.output;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***prepend***REMOVED***=***REMOVED***opts.contains***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'^';
***REMOVED******REMOVED***const***REMOVED***append***REMOVED***=***REMOVED***opts.contains***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'$';

***REMOVED******REMOVED***let***REMOVED***source***REMOVED***=***REMOVED***`${prepend}(?:${state.output})${append}`;
***REMOVED******REMOVED***if***REMOVED***(state***REMOVED***&&***REMOVED***state.negated***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***`^(?!${source}).*$`;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***regex***REMOVED***=***REMOVED***picomatch$1.toRegex(source,***REMOVED***options);
***REMOVED******REMOVED***if***REMOVED***(returnState***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***regex.state***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***regex;
};

/**
***REMOVED*******REMOVED***Create***REMOVED***a***REMOVED***regular***REMOVED***expression***REMOVED***from***REMOVED***a***REMOVED***parsed***REMOVED***glob***REMOVED***pattern.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***picomatch.parse('*.js');
***REMOVED*******REMOVED***//***REMOVED***picomatch.compileRe(state[,***REMOVED***options]);
***REMOVED****
***REMOVED*******REMOVED***console.log(picomatch.compileRe(state));
***REMOVED*******REMOVED***//=>***REMOVED***/^(?:(?!\.)(?=.)[^/]*?\.js)$/
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`state`***REMOVED***The***REMOVED***object***REMOVED***returned***REMOVED***from***REMOVED***the***REMOVED***`.parse`***REMOVED***method.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`options`
***REMOVED*******REMOVED***@param***REMOVED***{Boolean}***REMOVED***`returnOutput`***REMOVED***Implementors***REMOVED***may***REMOVED***use***REMOVED***this***REMOVED***argument***REMOVED***to***REMOVED***return***REMOVED***the***REMOVED***compiled***REMOVED***output,***REMOVED***instead***REMOVED***of***REMOVED***a***REMOVED***regular***REMOVED***expression.***REMOVED***This***REMOVED***is***REMOVED***not***REMOVED***exposed***REMOVED***on***REMOVED***the***REMOVED***options***REMOVED***to***REMOVED***prevent***REMOVED***end-users***REMOVED***from***REMOVED***mutating***REMOVED***the***REMOVED***result.
***REMOVED*******REMOVED***@param***REMOVED***{Boolean}***REMOVED***`returnState`***REMOVED***Implementors***REMOVED***may***REMOVED***use***REMOVED***this***REMOVED***argument***REMOVED***to***REMOVED***return***REMOVED***the***REMOVED***state***REMOVED***from***REMOVED***the***REMOVED***parsed***REMOVED***glob***REMOVED***with***REMOVED***the***REMOVED***returned***REMOVED***regular***REMOVED***expression.
***REMOVED*******REMOVED***@return***REMOVED***{RegExp}***REMOVED***Returns***REMOVED***a***REMOVED***regex***REMOVED***created***REMOVED***from***REMOVED***the***REMOVED***given***REMOVED***pattern.
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.makeRe***REMOVED***=***REMOVED***(input,***REMOVED***options***REMOVED***=***REMOVED***{},***REMOVED***returnOutput***REMOVED***=***REMOVED***false,***REMOVED***returnState***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!input***REMOVED***||***REMOVED***typeof***REMOVED***input***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Expected***REMOVED***a***REMOVED***non-empty***REMOVED***string');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***let***REMOVED***parsed***REMOVED***=***REMOVED***{***REMOVED***negated:***REMOVED***false,***REMOVED***fastpaths:***REMOVED***true***REMOVED***};

***REMOVED******REMOVED***if***REMOVED***(options.fastpaths***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***(input[0]***REMOVED***===***REMOVED***'.'***REMOVED***||***REMOVED***input[0]***REMOVED***===***REMOVED***'*'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parsed.output***REMOVED***=***REMOVED***parse$1.fastpaths(input,***REMOVED***options);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(!parsed.output)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parsed***REMOVED***=***REMOVED***parse$1(input,***REMOVED***options);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***picomatch$1.compileRe(parsed,***REMOVED***options,***REMOVED***returnOutput,***REMOVED***returnState);
};

/**
***REMOVED*******REMOVED***Create***REMOVED***a***REMOVED***regular***REMOVED***expression***REMOVED***from***REMOVED***the***REMOVED***given***REMOVED***regex***REMOVED***source***REMOVED***string.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***const***REMOVED***picomatch***REMOVED***=***REMOVED***require('picomatch');
***REMOVED*******REMOVED***//***REMOVED***picomatch.toRegex(source[,***REMOVED***options]);
***REMOVED****
***REMOVED*******REMOVED***const***REMOVED***{***REMOVED***output***REMOVED***}***REMOVED***=***REMOVED***picomatch.parse('*.js');
***REMOVED*******REMOVED***console.log(picomatch.toRegex(output));
***REMOVED*******REMOVED***//=>***REMOVED***/^(?:(?!\.)(?=.)[^/]*?\.js)$/
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***`source`***REMOVED***Regular***REMOVED***expression***REMOVED***source***REMOVED***string.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***`options`
***REMOVED*******REMOVED***@return***REMOVED***{RegExp}
***REMOVED*******REMOVED***@api***REMOVED***public
***REMOVED****/

picomatch$1.toRegex***REMOVED***=***REMOVED***(source,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***RegExp(source,***REMOVED***opts.flags***REMOVED***||***REMOVED***(opts.nocase***REMOVED***?***REMOVED***'i'***REMOVED***:***REMOVED***''));
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***&&***REMOVED***options.debug***REMOVED***===***REMOVED***true)***REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***/$^/;
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***Picomatch***REMOVED***constants.
***REMOVED*******REMOVED***@return***REMOVED***{Object}
***REMOVED****/

picomatch$1.constants***REMOVED***=***REMOVED***constants;

/**
***REMOVED*******REMOVED***Expose***REMOVED***"picomatch"
***REMOVED****/

var***REMOVED***picomatch_1***REMOVED***=***REMOVED***picomatch$1;

var***REMOVED***picomatch***REMOVED***=***REMOVED***picomatch_1;

const***REMOVED***pm***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(picomatch);

const***REMOVED***extractors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ArrayPattern(names,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***param.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractors[element.type](names,***REMOVED***element);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***AssignmentPattern(names,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractors[param.left.type](names,***REMOVED***param.left);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***Identifier(names,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names.push(param.name);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***MemberExpression()***REMOVED***{***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***ObjectPattern(names,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prop***REMOVED***of***REMOVED***param.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore***REMOVED***Typescript***REMOVED***reports***REMOVED***that***REMOVED***this***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***'RestElement')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractors.RestElement(names,***REMOVED***prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractors[prop.value.type](names,***REMOVED***prop.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***RestElement(names,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractors[param.argument.type](names,***REMOVED***param.argument);
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***extractAssignedNames***REMOVED***=***REMOVED***function***REMOVED***extractAssignedNames(param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***names***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***extractors[param.type](names,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***names;
};

//***REMOVED***Helper***REMOVED***since***REMOVED***Typescript***REMOVED***can't***REMOVED***detect***REMOVED***readonly***REMOVED***arrays***REMOVED***with***REMOVED***Array.isArray
function***REMOVED***isArray$1(arg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array.isArray(arg);
}
function***REMOVED***ensureArray(thing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray$1(thing))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***thing;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(thing***REMOVED***==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[thing];
}

const***REMOVED***normalizePath***REMOVED***=***REMOVED***function***REMOVED***normalizePath(filename)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***filename.split(require$$0$1.win32.sep).join(require$$0$1.posix.sep);
};

function***REMOVED***getMatcherString(id,***REMOVED***resolutionBase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolutionBase***REMOVED***===***REMOVED***false***REMOVED***||***REMOVED***require$$0$1.isAbsolute(id)***REMOVED***||***REMOVED***id.startsWith('**'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***normalizePath(id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***resolve('')***REMOVED***is***REMOVED***valid***REMOVED***and***REMOVED***will***REMOVED***default***REMOVED***to***REMOVED***process.cwd()
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***basePath***REMOVED***=***REMOVED***normalizePath(require$$0$1.resolve(resolutionBase***REMOVED***||***REMOVED***''))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***escape***REMOVED***all***REMOVED***possible***REMOVED***(posix***REMOVED***+***REMOVED***win)***REMOVED***path***REMOVED***characters***REMOVED***that***REMOVED***might***REMOVED***interfere***REMOVED***with***REMOVED***regex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/[-^$*+?.()|[\]{}]/g,***REMOVED***'\\$&');
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Note***REMOVED***that***REMOVED***we***REMOVED***use***REMOVED***posix.join***REMOVED***because:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***1.***REMOVED***the***REMOVED***basePath***REMOVED***has***REMOVED***been***REMOVED***normalized***REMOVED***to***REMOVED***use***REMOVED***/
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***2.***REMOVED***the***REMOVED***incoming***REMOVED***glob***REMOVED***(id)***REMOVED***matcher,***REMOVED***also***REMOVED***uses***REMOVED***/
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***otherwise***REMOVED***Node***REMOVED***will***REMOVED***force***REMOVED***backslash***REMOVED***(\)***REMOVED***on***REMOVED***windows
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***require$$0$1.posix.join(basePath,***REMOVED***normalizePath(id));
}
const***REMOVED***createFilter***REMOVED***=***REMOVED***function***REMOVED***createFilter(include,***REMOVED***exclude,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolutionBase***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.resolve;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getMatcher***REMOVED***=***REMOVED***(id)***REMOVED***=>***REMOVED***id***REMOVED***instanceof***REMOVED***RegExp
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***(what)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***refactor***REMOVED***is***REMOVED***a***REMOVED***tad***REMOVED***overly***REMOVED***verbose***REMOVED***but***REMOVED***makes***REMOVED***for***REMOVED***easy***REMOVED***debugging
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***getMatcherString(id,***REMOVED***resolutionBase);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fn***REMOVED***=***REMOVED***pm(pattern,***REMOVED***{***REMOVED***dot:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***fn(what);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***includeMatchers***REMOVED***=***REMOVED***ensureArray(include).map(getMatcher);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***excludeMatchers***REMOVED***=***REMOVED***ensureArray(exclude).map(getMatcher);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***result(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***id***REMOVED***!==***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/\0/.test(id))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pathId***REMOVED***=***REMOVED***normalizePath(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***excludeMatchers.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matcher***REMOVED***=***REMOVED***excludeMatchers[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matcher.test(pathId))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***includeMatchers.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matcher***REMOVED***=***REMOVED***includeMatchers[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matcher.test(pathId))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!includeMatchers.length;
***REMOVED******REMOVED******REMOVED******REMOVED***};
};

const***REMOVED***reservedWords$1***REMOVED***=***REMOVED***'break***REMOVED***case***REMOVED***class***REMOVED***catch***REMOVED***const***REMOVED***continue***REMOVED***debugger***REMOVED***default***REMOVED***delete***REMOVED***do***REMOVED***else***REMOVED***export***REMOVED***extends***REMOVED***finally***REMOVED***for***REMOVED***function***REMOVED***if***REMOVED***import***REMOVED***in***REMOVED***instanceof***REMOVED***let***REMOVED***new***REMOVED***return***REMOVED***super***REMOVED***switch***REMOVED***this***REMOVED***throw***REMOVED***try***REMOVED***typeof***REMOVED***var***REMOVED***void***REMOVED***while***REMOVED***with***REMOVED***yield***REMOVED***enum***REMOVED***await***REMOVED***implements***REMOVED***package***REMOVED***protected***REMOVED***static***REMOVED***interface***REMOVED***private***REMOVED***public';
const***REMOVED***builtins***REMOVED***=***REMOVED***'arguments***REMOVED***Infinity***REMOVED***NaN***REMOVED***undefined***REMOVED***null***REMOVED***true***REMOVED***false***REMOVED***eval***REMOVED***uneval***REMOVED***isFinite***REMOVED***isNaN***REMOVED***parseFloat***REMOVED***parseInt***REMOVED***decodeURI***REMOVED***decodeURIComponent***REMOVED***encodeURI***REMOVED***encodeURIComponent***REMOVED***escape***REMOVED***unescape***REMOVED***Object***REMOVED***Function***REMOVED***Boolean***REMOVED***Symbol***REMOVED***Error***REMOVED***EvalError***REMOVED***InternalError***REMOVED***RangeError***REMOVED***ReferenceError***REMOVED***SyntaxError***REMOVED***TypeError***REMOVED***URIError***REMOVED***Number***REMOVED***Math***REMOVED***Date***REMOVED***String***REMOVED***RegExp***REMOVED***Array***REMOVED***Int8Array***REMOVED***Uint8Array***REMOVED***Uint8ClampedArray***REMOVED***Int16Array***REMOVED***Uint16Array***REMOVED***Int32Array***REMOVED***Uint32Array***REMOVED***Float32Array***REMOVED***Float64Array***REMOVED***Map***REMOVED***Set***REMOVED***WeakMap***REMOVED***WeakSet***REMOVED***SIMD***REMOVED***ArrayBuffer***REMOVED***DataView***REMOVED***JSON***REMOVED***Promise***REMOVED***Generator***REMOVED***GeneratorFunction***REMOVED***Reflect***REMOVED***Proxy***REMOVED***Intl';
const***REMOVED***forbiddenIdentifiers***REMOVED***=***REMOVED***new***REMOVED***Set(`${reservedWords$1}***REMOVED***${builtins}`.split('***REMOVED***'));
forbiddenIdentifiers.add('');

function***REMOVED***createInclusionContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***brokenFlow:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasBreak:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasContinue:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedCallArguments:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedLabels:***REMOVED***new***REMOVED***Set()
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***createHasEffectsContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessed:***REMOVED***new***REMOVED***PathTracker(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assigned:***REMOVED***new***REMOVED***PathTracker(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***brokenFlow:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***called:***REMOVED***new***REMOVED***DiscriminatedPathTracker(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasBreak:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasContinue:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ignore:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***breaks:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continues:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labels:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnYield:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedLabels:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instantiated:***REMOVED***new***REMOVED***DiscriminatedPathTracker(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacedVariableInits:***REMOVED***new***REMOVED***Map()
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

function***REMOVED***assembleMemberDescriptions(memberDescriptions,***REMOVED***inheritedDescriptions***REMOVED***=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.create(inheritedDescriptions,***REMOVED***memberDescriptions);
}
const***REMOVED***UNDEFINED_EXPRESSION***REMOVED***=***REMOVED***new***REMOVED***(class***REMOVED***UndefinedExpression***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
})();
const***REMOVED***returnsUnknown***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***UNKNOWN_EXPRESSION
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***UNKNOWN_LITERAL_BOOLEAN***REMOVED***=***REMOVED***new***REMOVED***(class***REMOVED***UnknownBoolean***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMemberReturnExpressionWhenCalled(literalBooleanMembers,***REMOVED***path[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasMemberEffectWhenCalled(literalBooleanMembers,***REMOVED***path[0],***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
})();
const***REMOVED***returnsBoolean***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***UNKNOWN_LITERAL_BOOLEAN
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***UNKNOWN_LITERAL_NUMBER***REMOVED***=***REMOVED***new***REMOVED***(class***REMOVED***UnknownNumber***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMemberReturnExpressionWhenCalled(literalNumberMembers,***REMOVED***path[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasMemberEffectWhenCalled(literalNumberMembers,***REMOVED***path[0],***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
})();
const***REMOVED***returnsNumber***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***UNKNOWN_LITERAL_NUMBER
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***UNKNOWN_LITERAL_STRING***REMOVED***=***REMOVED***new***REMOVED***(class***REMOVED***UnknownString***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMemberReturnExpressionWhenCalled(literalStringMembers,***REMOVED***path[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasMemberEffectWhenCalled(literalStringMembers,***REMOVED***path[0],***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
})();
const***REMOVED***returnsString***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***UNKNOWN_LITERAL_STRING
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***stringReplace***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled({***REMOVED***args***REMOVED***},***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***argument1***REMOVED***=***REMOVED***args[2];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(args.length***REMOVED***<***REMOVED***3***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(typeof***REMOVED***argument1.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***===***REMOVED***'symbol'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument1.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_CALL,***REMOVED***context)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***UNKNOWN_LITERAL_STRING
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***objectMembers***REMOVED***=***REMOVED***assembleMemberDescriptions({
***REMOVED******REMOVED******REMOVED******REMOVED***hasOwnProperty:***REMOVED***returnsBoolean,
***REMOVED******REMOVED******REMOVED******REMOVED***isPrototypeOf:***REMOVED***returnsBoolean,
***REMOVED******REMOVED******REMOVED******REMOVED***propertyIsEnumerable:***REMOVED***returnsBoolean,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleString:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toString:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***valueOf:***REMOVED***returnsUnknown
});
const***REMOVED***literalBooleanMembers***REMOVED***=***REMOVED***assembleMemberDescriptions({
***REMOVED******REMOVED******REMOVED******REMOVED***valueOf:***REMOVED***returnsBoolean
},***REMOVED***objectMembers);
const***REMOVED***literalNumberMembers***REMOVED***=***REMOVED***assembleMemberDescriptions({
***REMOVED******REMOVED******REMOVED******REMOVED***toExponential:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toFixed:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleString:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toPrecision:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***valueOf:***REMOVED***returnsNumber
},***REMOVED***objectMembers);
/**
***REMOVED*******REMOVED***RegExp***REMOVED***are***REMOVED***stateful***REMOVED***when***REMOVED***they***REMOVED***have***REMOVED***the***REMOVED***global***REMOVED***or***REMOVED***sticky***REMOVED***flags***REMOVED***set.
***REMOVED*******REMOVED***But***REMOVED***if***REMOVED***we***REMOVED***actually***REMOVED***don't***REMOVED***use***REMOVED***them,***REMOVED***the***REMOVED***side***REMOVED***effect***REMOVED***does***REMOVED***not***REMOVED***matter.
***REMOVED*******REMOVED***the***REMOVED***check***REMOVED***logic***REMOVED***in***REMOVED***`hasEffectsOnInteractionAtPath`.
***REMOVED****/
const***REMOVED***literalRegExpMembers***REMOVED***=***REMOVED***assembleMemberDescriptions({
***REMOVED******REMOVED******REMOVED******REMOVED***exec:***REMOVED***returnsUnknown,
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***returnsBoolean
},***REMOVED***objectMembers);
const***REMOVED***literalStringMembers***REMOVED***=***REMOVED***assembleMemberDescriptions({
***REMOVED******REMOVED******REMOVED******REMOVED***anchor:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***at:***REMOVED***returnsUnknown,
***REMOVED******REMOVED******REMOVED******REMOVED***big:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***blink:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***bold:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***charAt:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***charCodeAt:***REMOVED***returnsNumber,
***REMOVED******REMOVED******REMOVED******REMOVED***codePointAt:***REMOVED***returnsUnknown,
***REMOVED******REMOVED******REMOVED******REMOVED***concat:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***endsWith:***REMOVED***returnsBoolean,
***REMOVED******REMOVED******REMOVED******REMOVED***fixed:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***fontcolor:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***fontsize:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***includes:***REMOVED***returnsBoolean,
***REMOVED******REMOVED******REMOVED******REMOVED***indexOf:***REMOVED***returnsNumber,
***REMOVED******REMOVED******REMOVED******REMOVED***italics:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***lastIndexOf:***REMOVED***returnsNumber,
***REMOVED******REMOVED******REMOVED******REMOVED***link:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***localeCompare:***REMOVED***returnsNumber,
***REMOVED******REMOVED******REMOVED******REMOVED***match:***REMOVED***returnsUnknown,
***REMOVED******REMOVED******REMOVED******REMOVED***matchAll:***REMOVED***returnsUnknown,
***REMOVED******REMOVED******REMOVED******REMOVED***normalize:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***padEnd:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***padStart:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***repeat:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***replace:***REMOVED***stringReplace,
***REMOVED******REMOVED******REMOVED******REMOVED***replaceAll:***REMOVED***stringReplace,
***REMOVED******REMOVED******REMOVED******REMOVED***search:***REMOVED***returnsNumber,
***REMOVED******REMOVED******REMOVED******REMOVED***slice:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***small:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***split:***REMOVED***returnsUnknown,
***REMOVED******REMOVED******REMOVED******REMOVED***startsWith:***REMOVED***returnsBoolean,
***REMOVED******REMOVED******REMOVED******REMOVED***strike:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***sub:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***substr:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***substring:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***sup:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleLowerCase:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleUpperCase:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toLowerCase:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toString:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***toUpperCase:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***trim:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***trimEnd:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***trimLeft:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***trimRight:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***trimStart:***REMOVED***returnsString,
***REMOVED******REMOVED******REMOVED******REMOVED***valueOf:***REMOVED***returnsString
},***REMOVED***objectMembers);
function***REMOVED***getLiteralMembersForValue(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***instanceof***REMOVED***RegExp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***literalRegExpMembers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(typeof***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'boolean':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***literalBooleanMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'number':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***literalNumberMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'string':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***literalStringMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.create(null);
}
function***REMOVED***hasMemberEffectWhenCalled(members,***REMOVED***memberName,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***memberName***REMOVED***!==***REMOVED***'string'***REMOVED***||***REMOVED***!members[memberName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***members[memberName].hasEffectsWhenCalled?.(interaction,***REMOVED***context)***REMOVED***||***REMOVED***false;
}
function***REMOVED***getMemberReturnExpressionWhenCalled(members,***REMOVED***memberName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***memberName***REMOVED***!==***REMOVED***'string'***REMOVED***||***REMOVED***!members[memberName])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[members[memberName].returns,***REMOVED***false];
}

//***REMOVED***AST***REMOVED***walker***REMOVED***module***REMOVED***for***REMOVED***Mozilla***REMOVED***Parser***REMOVED***API***REMOVED***compatible***REMOVED***trees


function***REMOVED***skipThrough(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***c(node,***REMOVED***st);***REMOVED***}
function***REMOVED***ignore(_node,***REMOVED***_st,***REMOVED***_c)***REMOVED***{}

//***REMOVED***Node***REMOVED***walkers.

var***REMOVED***base***REMOVED***=***REMOVED***{};

base.Program***REMOVED***=***REMOVED***base.BlockStatement***REMOVED***=***REMOVED***base.StaticBlock***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.body;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***stmt***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(stmt,***REMOVED***st,***REMOVED***"Statement");
***REMOVED******REMOVED***}
};
base.Statement***REMOVED***=***REMOVED***skipThrough;
base.EmptyStatement***REMOVED***=***REMOVED***ignore;
base.ExpressionStatement***REMOVED***=***REMOVED***base.ParenthesizedExpression***REMOVED***=***REMOVED***base.ChainExpression***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***return***REMOVED***c(node.expression,***REMOVED***st,***REMOVED***"Expression");***REMOVED***};
base.IfStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.test,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.consequent,***REMOVED***st,***REMOVED***"Statement");
***REMOVED******REMOVED***if***REMOVED***(node.alternate)***REMOVED***{***REMOVED***c(node.alternate,***REMOVED***st,***REMOVED***"Statement");***REMOVED***}
};
base.LabeledStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***return***REMOVED***c(node.body,***REMOVED***st,***REMOVED***"Statement");***REMOVED***};
base.BreakStatement***REMOVED***=***REMOVED***base.ContinueStatement***REMOVED***=***REMOVED***ignore;
base.WithStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.object,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.body,***REMOVED***st,***REMOVED***"Statement");
};
base.SwitchStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.discriminant,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i$1***REMOVED***=***REMOVED***0,***REMOVED***list$1***REMOVED***=***REMOVED***node.cases;***REMOVED***i$1***REMOVED***<***REMOVED***list$1.length;***REMOVED***i$1***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cs***REMOVED***=***REMOVED***list$1[i$1];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cs.test)***REMOVED***{***REMOVED***c(cs.test,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***cs.consequent;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cons***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c(cons,***REMOVED***st,***REMOVED***"Statement");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
base.SwitchCase***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.test)***REMOVED***{***REMOVED***c(node.test,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.consequent;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cons***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(cons,***REMOVED***st,***REMOVED***"Statement");
***REMOVED******REMOVED***}
};
base.ReturnStatement***REMOVED***=***REMOVED***base.YieldExpression***REMOVED***=***REMOVED***base.AwaitExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.argument)***REMOVED***{***REMOVED***c(node.argument,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
};
base.ThrowStatement***REMOVED***=***REMOVED***base.SpreadElement***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***return***REMOVED***c(node.argument,***REMOVED***st,***REMOVED***"Expression");***REMOVED***};
base.TryStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.block,***REMOVED***st,***REMOVED***"Statement");
***REMOVED******REMOVED***if***REMOVED***(node.handler)***REMOVED***{***REMOVED***c(node.handler,***REMOVED***st);***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.finalizer)***REMOVED***{***REMOVED***c(node.finalizer,***REMOVED***st,***REMOVED***"Statement");***REMOVED***}
};
base.CatchClause***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.param)***REMOVED***{***REMOVED***c(node.param,***REMOVED***st,***REMOVED***"Pattern");***REMOVED***}
***REMOVED******REMOVED***c(node.body,***REMOVED***st,***REMOVED***"Statement");
};
base.WhileStatement***REMOVED***=***REMOVED***base.DoWhileStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.test,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.body,***REMOVED***st,***REMOVED***"Statement");
};
base.ForStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.init)***REMOVED***{***REMOVED***c(node.init,***REMOVED***st,***REMOVED***"ForInit");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.test)***REMOVED***{***REMOVED***c(node.test,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.update)***REMOVED***{***REMOVED***c(node.update,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***c(node.body,***REMOVED***st,***REMOVED***"Statement");
};
base.ForInStatement***REMOVED***=***REMOVED***base.ForOfStatement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.left,***REMOVED***st,***REMOVED***"ForInit");
***REMOVED******REMOVED***c(node.right,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.body,***REMOVED***st,***REMOVED***"Statement");
};
base.ForInit***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{***REMOVED***c(node,***REMOVED***st);***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{***REMOVED***c(node,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
};
base.DebuggerStatement***REMOVED***=***REMOVED***ignore;

base.FunctionDeclaration***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***return***REMOVED***c(node,***REMOVED***st,***REMOVED***"Function");***REMOVED***};
base.VariableDeclaration***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.declarations;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***decl***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(decl,***REMOVED***st);
***REMOVED******REMOVED***}
};
base.VariableDeclarator***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.id,***REMOVED***st,***REMOVED***"Pattern");
***REMOVED******REMOVED***if***REMOVED***(node.init)***REMOVED***{***REMOVED***c(node.init,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
};

base.Function***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.id)***REMOVED***{***REMOVED***c(node.id,***REMOVED***st,***REMOVED***"Pattern");***REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.params;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***param***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(param,***REMOVED***st,***REMOVED***"Pattern");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***c(node.body,***REMOVED***st,***REMOVED***node.expression***REMOVED***?***REMOVED***"Expression"***REMOVED***:***REMOVED***"Statement");
};

base.Pattern***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***c(node,***REMOVED***st,***REMOVED***"VariablePattern");***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"MemberExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***c(node,***REMOVED***st,***REMOVED***"MemberPattern");***REMOVED***}
***REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***c(node,***REMOVED***st);***REMOVED***}
};
base.VariablePattern***REMOVED***=***REMOVED***ignore;
base.MemberPattern***REMOVED***=***REMOVED***skipThrough;
base.RestElement***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***return***REMOVED***c(node.argument,***REMOVED***st,***REMOVED***"Pattern");***REMOVED***};
base.ArrayPattern***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.elements;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elt***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elt)***REMOVED***{***REMOVED***c(elt,***REMOVED***st,***REMOVED***"Pattern");***REMOVED***}
***REMOVED******REMOVED***}
};
base.ObjectPattern***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.properties;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"Property")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.computed)***REMOVED***{***REMOVED***c(prop.key,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c(prop.value,***REMOVED***st,***REMOVED***"Pattern");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"RestElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c(prop.argument,***REMOVED***st,***REMOVED***"Pattern");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

base.Expression***REMOVED***=***REMOVED***skipThrough;
base.ThisExpression***REMOVED***=***REMOVED***base.Super***REMOVED***=***REMOVED***base.MetaProperty***REMOVED***=***REMOVED***ignore;
base.ArrayExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.elements;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elt***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elt)***REMOVED***{***REMOVED***c(elt,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***}
};
base.ObjectExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.properties;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(prop,***REMOVED***st);
***REMOVED******REMOVED***}
};
base.FunctionExpression***REMOVED***=***REMOVED***base.ArrowFunctionExpression***REMOVED***=***REMOVED***base.FunctionDeclaration;
base.SequenceExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.expressions;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***expr***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(expr,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***}
};
base.TemplateLiteral***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.quasis;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quasi***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(quasi,***REMOVED***st);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i$1***REMOVED***=***REMOVED***0,***REMOVED***list$1***REMOVED***=***REMOVED***node.expressions;***REMOVED***i$1***REMOVED***<***REMOVED***list$1.length;***REMOVED***i$1***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***expr***REMOVED***=***REMOVED***list$1[i$1];

***REMOVED******REMOVED******REMOVED******REMOVED***c(expr,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***}
};
base.TemplateElement***REMOVED***=***REMOVED***ignore;
base.UnaryExpression***REMOVED***=***REMOVED***base.UpdateExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.argument,***REMOVED***st,***REMOVED***"Expression");
};
base.BinaryExpression***REMOVED***=***REMOVED***base.LogicalExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.left,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.right,***REMOVED***st,***REMOVED***"Expression");
};
base.AssignmentExpression***REMOVED***=***REMOVED***base.AssignmentPattern***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.left,***REMOVED***st,***REMOVED***"Pattern");
***REMOVED******REMOVED***c(node.right,***REMOVED***st,***REMOVED***"Expression");
};
base.ConditionalExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.test,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.consequent,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.alternate,***REMOVED***st,***REMOVED***"Expression");
};
base.NewExpression***REMOVED***=***REMOVED***base.CallExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.callee,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***if***REMOVED***(node.arguments)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.arguments;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***arg***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c(arg,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***}
};
base.MemberExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.object,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***if***REMOVED***(node.computed)***REMOVED***{***REMOVED***c(node.property,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
};
base.ExportNamedDeclaration***REMOVED***=***REMOVED***base.ExportDefaultDeclaration***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.declaration)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***c(node.declaration,***REMOVED***st,***REMOVED***node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***||***REMOVED***node.declaration.id***REMOVED***?***REMOVED***"Statement"***REMOVED***:***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.source)***REMOVED***{***REMOVED***c(node.source,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
};
base.ExportAllDeclaration***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.exported)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***c(node.exported,***REMOVED***st);***REMOVED***}
***REMOVED******REMOVED***c(node.source,***REMOVED***st,***REMOVED***"Expression");
};
base.ImportDeclaration***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.specifiers;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spec***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(spec,***REMOVED***st);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***c(node.source,***REMOVED***st,***REMOVED***"Expression");
};
base.ImportExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.source,***REMOVED***st,***REMOVED***"Expression");
};
base.ImportSpecifier***REMOVED***=***REMOVED***base.ImportDefaultSpecifier***REMOVED***=***REMOVED***base.ImportNamespaceSpecifier***REMOVED***=***REMOVED***base.Identifier***REMOVED***=***REMOVED***base.PrivateIdentifier***REMOVED***=***REMOVED***base.Literal***REMOVED***=***REMOVED***ignore;

base.TaggedTemplateExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***c(node.tag,***REMOVED***st,***REMOVED***"Expression");
***REMOVED******REMOVED***c(node.quasi,***REMOVED***st,***REMOVED***"Expression");
};
base.ClassDeclaration***REMOVED***=***REMOVED***base.ClassExpression***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{***REMOVED***return***REMOVED***c(node,***REMOVED***st,***REMOVED***"Class");***REMOVED***};
base.Class***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.id)***REMOVED***{***REMOVED***c(node.id,***REMOVED***st,***REMOVED***"Pattern");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.superClass)***REMOVED***{***REMOVED***c(node.superClass,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***c(node.body,***REMOVED***st);
};
base.ClassBody***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.body;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elt***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***c(elt,***REMOVED***st);
***REMOVED******REMOVED***}
};
base.MethodDefinition***REMOVED***=***REMOVED***base.PropertyDefinition***REMOVED***=***REMOVED***base.Property***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***st,***REMOVED***c)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.computed)***REMOVED***{***REMOVED***c(node.key,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.value)***REMOVED***{***REMOVED***c(node.value,***REMOVED***st,***REMOVED***"Expression");***REMOVED***}
};

const***REMOVED***ArrowFunctionExpression$1***REMOVED***=***REMOVED***'ArrowFunctionExpression';
const***REMOVED***BinaryExpression$1***REMOVED***=***REMOVED***'BinaryExpression';
const***REMOVED***BlockStatement$1***REMOVED***=***REMOVED***'BlockStatement';
const***REMOVED***CallExpression$1***REMOVED***=***REMOVED***'CallExpression';
const***REMOVED***ChainExpression$1***REMOVED***=***REMOVED***'ChainExpression';
const***REMOVED***ConditionalExpression$1***REMOVED***=***REMOVED***'ConditionalExpression';
const***REMOVED***ExportDefaultDeclaration$1***REMOVED***=***REMOVED***'ExportDefaultDeclaration';
const***REMOVED***ExportNamedDeclaration$1***REMOVED***=***REMOVED***'ExportNamedDeclaration';
const***REMOVED***ExpressionStatement$1***REMOVED***=***REMOVED***'ExpressionStatement';
const***REMOVED***FunctionDeclaration$1***REMOVED***=***REMOVED***'FunctionDeclaration';
const***REMOVED***Identifier$1***REMOVED***=***REMOVED***'Identifier';
const***REMOVED***LogicalExpression$1***REMOVED***=***REMOVED***'LogicalExpression';
const***REMOVED***NewExpression$1***REMOVED***=***REMOVED***'NewExpression';
const***REMOVED***Program$1***REMOVED***=***REMOVED***'Program';
const***REMOVED***Property$1***REMOVED***=***REMOVED***'Property';
const***REMOVED***ReturnStatement$1***REMOVED***=***REMOVED***'ReturnStatement';
const***REMOVED***SequenceExpression$1***REMOVED***=***REMOVED***'SequenceExpression';
const***REMOVED***VariableDeclarator$1***REMOVED***=***REMOVED***'VariableDeclarator';
const***REMOVED***VariableDeclaration$1***REMOVED***=***REMOVED***'VariableDeclaration';

//***REMOVED***this***REMOVED***looks***REMOVED***ridiculous,***REMOVED***but***REMOVED***it***REMOVED***prevents***REMOVED***sourcemap***REMOVED***tooling***REMOVED***from***REMOVED***mistaking
//***REMOVED***this***REMOVED***for***REMOVED***an***REMOVED***actual***REMOVED***sourceMappingURL
let***REMOVED***SOURCEMAPPING_URL***REMOVED***=***REMOVED***'sourceMa';
SOURCEMAPPING_URL***REMOVED***+=***REMOVED***'ppingURL';
const***REMOVED***whiteSpaceNoNewline***REMOVED***=***REMOVED***'[***REMOVED***\\f\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]';
const***REMOVED***SOURCEMAPPING_URL_RE***REMOVED***=***REMOVED***new***REMOVED***RegExp(`^#${whiteSpaceNoNewline}+${SOURCEMAPPING_URL}=.+`);

const***REMOVED***ANNOTATION_KEY***REMOVED***=***REMOVED***'_rollupAnnotations';
const***REMOVED***INVALID_COMMENT_KEY***REMOVED***=***REMOVED***'_rollupRemoved';
function***REMOVED***handlePureAnnotationsOfNode(node,***REMOVED***state,***REMOVED***type***REMOVED***=***REMOVED***node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***annotations,***REMOVED***code***REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***comment***REMOVED***=***REMOVED***annotations[state.annotationIndex];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(comment***REMOVED***&&***REMOVED***node.start***REMOVED***>=***REMOVED***comment.end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markPureNode(node,***REMOVED***comment,***REMOVED***code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comment***REMOVED***=***REMOVED***annotations[++state.annotationIndex];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comment***REMOVED***&&***REMOVED***comment.end***REMOVED***<=***REMOVED***node.end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base[type](node,***REMOVED***state,***REMOVED***handlePureAnnotationsOfNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((comment***REMOVED***=***REMOVED***annotations[state.annotationIndex])***REMOVED***&&***REMOVED***comment.end***REMOVED***<=***REMOVED***node.end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++state.annotationIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotateNode(node,***REMOVED***comment,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***neitherWithespaceNorBrackets***REMOVED***=***REMOVED***/[^\s(]/g;
const***REMOVED***noWhitespace***REMOVED***=***REMOVED***/\S/g;
function***REMOVED***markPureNode(node,***REMOVED***comment,***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***annotatedNodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***invalidAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***codeInBetween***REMOVED***=***REMOVED***code.slice(comment.end,***REMOVED***node.start);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doesNotMatchOutsideComment(codeInBetween,***REMOVED***neitherWithespaceNorBrackets))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentStart***REMOVED***=***REMOVED***node.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotatedNodes.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***ExpressionStatement$1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***ChainExpression$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.expression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***SequenceExpression$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***there***REMOVED***are***REMOVED***parentheses,***REMOVED***the***REMOVED***annotation***REMOVED***would***REMOVED***apply***REMOVED***to***REMOVED***the***REMOVED***entire***REMOVED***expression
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doesNotMatchOutsideComment(code.slice(parentStart,***REMOVED***node.start),***REMOVED***noWhitespace))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.expressions[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidAnnotation***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***ConditionalExpression$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***there***REMOVED***are***REMOVED***parentheses,***REMOVED***the***REMOVED***annotation***REMOVED***would***REMOVED***apply***REMOVED***to***REMOVED***the***REMOVED***entire***REMOVED***expression
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doesNotMatchOutsideComment(code.slice(parentStart,***REMOVED***node.start),***REMOVED***noWhitespace))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.test;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidAnnotation***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***LogicalExpression$1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***BinaryExpression$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***there***REMOVED***are***REMOVED***parentheses,***REMOVED***the***REMOVED***annotation***REMOVED***would***REMOVED***apply***REMOVED***to***REMOVED***the***REMOVED***entire***REMOVED***expression
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doesNotMatchOutsideComment(code.slice(parentStart,***REMOVED***node.start),***REMOVED***noWhitespace))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidAnnotation***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***ExportNamedDeclaration$1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***ExportDefaultDeclaration$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***VariableDeclaration$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.kind***REMOVED***===***REMOVED***'const')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***jsdoc***REMOVED***only***REMOVED***applies***REMOVED***to***REMOVED***the***REMOVED***first***REMOVED***declaration
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***declaration.declarations[0].init;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidAnnotation***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***VariableDeclarator$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.init;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***FunctionDeclaration$1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***ArrowFunctionExpression$1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***CallExpression$1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***NewExpression$1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidAnnotation***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidAnnotation***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(invalidAnnotation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotateNode(node,***REMOVED***comment,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***annotatedNodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotateNode(node,***REMOVED***comment,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***doesNotMatchOutsideComment(code,***REMOVED***forbiddenChars)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nextMatch;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((nextMatch***REMOVED***=***REMOVED***forbiddenChars.exec(code))***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextMatch[0]***REMOVED***===***REMOVED***'/')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***charCodeAfterSlash***REMOVED***=***REMOVED***code.charCodeAt(forbiddenChars.lastIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(charCodeAfterSlash***REMOVED***===***REMOVED***42***REMOVED***/*"*"*/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forbiddenChars.lastIndex***REMOVED***=***REMOVED***code.indexOf('*/',***REMOVED***forbiddenChars.lastIndex***REMOVED***+***REMOVED***1)***REMOVED***+***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(charCodeAfterSlash***REMOVED***===***REMOVED***47***REMOVED***/*"/"*/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forbiddenChars.lastIndex***REMOVED***=***REMOVED***code.indexOf('\n',***REMOVED***forbiddenChars.lastIndex***REMOVED***+***REMOVED***1)***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forbiddenChars.lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
}
const***REMOVED***annotationsRegexes***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***['pure',***REMOVED***/[#@]__PURE__/],
***REMOVED******REMOVED******REMOVED******REMOVED***['noSideEffects',***REMOVED***/[#@]__NO_SIDE_EFFECTS__/]
];
function***REMOVED***addAnnotations(comments,***REMOVED***esTreeAst,***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***annotations***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceMappingComments***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***comment***REMOVED***of***REMOVED***comments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[annotationType,***REMOVED***regex]***REMOVED***of***REMOVED***annotationsRegexes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(regex.test(comment.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotations.push({***REMOVED***...comment,***REMOVED***annotationType***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(SOURCEMAPPING_URL_RE.test(comment.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingComments.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***comment***REMOVED***of***REMOVED***sourceMappingComments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotateNode(esTreeAst,***REMOVED***comment,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***handlePureAnnotationsOfNode(esTreeAst,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotationIndex:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotations,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
function***REMOVED***annotateNode(node,***REMOVED***comment,***REMOVED***valid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***valid***REMOVED***?***REMOVED***ANNOTATION_KEY***REMOVED***:***REMOVED***INVALID_COMMENT_KEY;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***property***REMOVED***=***REMOVED***node[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node[key]***REMOVED***=***REMOVED***[comment];
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***keys***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***this***REMOVED***should***REMOVED***be***REMOVED***removed***REMOVED***once***REMOVED***ImportExpression***REMOVED***follows***REMOVED***official***REMOVED***ESTree
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED***specs***REMOVED***with***REMOVED***"null"***REMOVED***as***REMOVED***default
***REMOVED******REMOVED******REMOVED******REMOVED***ImportExpression:***REMOVED***['arguments'],
***REMOVED******REMOVED******REMOVED******REMOVED***Literal:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***Program:***REMOVED***['body']
};
function***REMOVED***getAndCreateKeys(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***keys[esTreeNode.type]***REMOVED***=***REMOVED***Object.keys(esTreeNode).filter(key***REMOVED***=>***REMOVED***typeof***REMOVED***esTreeNode[key]***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***key.charCodeAt(0)***REMOVED***!==***REMOVED***95***REMOVED***/****REMOVED***_***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***keys[esTreeNode.type];
}

const***REMOVED***INCLUDE_PARAMETERS***REMOVED***=***REMOVED***'variables';
class***REMOVED***NodeBase***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(esTreeNode,***REMOVED***parent,***REMOVED***parentScope,***REMOVED***keepEsTreeNode***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Nodes***REMOVED***can***REMOVED***apply***REMOVED***custom***REMOVED***deoptimizations***REMOVED***once***REMOVED***they***REMOVED***become***REMOVED***part***REMOVED***of***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***executed***REMOVED***code.***REMOVED***To***REMOVED***do***REMOVED***this,***REMOVED***they***REMOVED***must***REMOVED***initialize***REMOVED***this***REMOVED***as***REMOVED***false,***REMOVED***implement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***applyDeoptimizations***REMOVED***and***REMOVED***call***REMOVED***this***REMOVED***from***REMOVED***include***REMOVED***and***REMOVED***hasEffects***REMOVED***if***REMOVED***they***REMOVED***have
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***custom***REMOVED***handlers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Nodes***REMOVED***can***REMOVED***opt-in***REMOVED***to***REMOVED***keep***REMOVED***the***REMOVED***AST***REMOVED***if***REMOVED***needed***REMOVED***during***REMOVED***the***REMOVED***build***REMOVED***pipeline.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Avoid***REMOVED***true***REMOVED***when***REMOVED***possible***REMOVED***as***REMOVED***large***REMOVED***AST***REMOVED***takes***REMOVED***up***REMOVED***memory.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.esTreeNode***REMOVED***=***REMOVED***keepEsTreeNode***REMOVED***?***REMOVED***esTreeNode***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.keys***REMOVED***=***REMOVED***keys[esTreeNode.type]***REMOVED***||***REMOVED***getAndCreateKeys(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***parent.context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.createScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.initialise();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.magicString.addSourcemapLocation(this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.magicString.addSourcemapLocation(this.end);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addExportedVariables(_variables,***REMOVED***_exportNamesByVariable)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Override***REMOVED***this***REMOVED***to***REMOVED***bind***REMOVED***assignments***REMOVED***to***REMOVED***variables***REMOVED***and***REMOVED***do***REMOVED***any***REMOVED***initialisations
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***that***REMOVED***require***REMOVED***the***REMOVED***scopes***REMOVED***to***REMOVED***be***REMOVED***populated***REMOVED***with***REMOVED***variables.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***this.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child?.bind();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.bind();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Override***REMOVED***if***REMOVED***this***REMOVED***node***REMOVED***should***REMOVED***receive***REMOVED***a***REMOVED***different***REMOVED***scope***REMOVED***than***REMOVED***the***REMOVED***parent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***scope.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***parentScope;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***this.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child?.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(value.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsAsAssignmentTarget(context,***REMOVED***_checkAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***this.assignmentInteraction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively,***REMOVED***_options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***this.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeAsAssignmentTarget(context,***REMOVED***includeChildrenRecursively,***REMOVED***_deoptimizeAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Override***REMOVED***to***REMOVED***perform***REMOVED***special***REMOVED***initialisation***REMOVED***steps***REMOVED***after***REMOVED***the***REMOVED***scope***REMOVED***is
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***initialised
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***insertSemicolon(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original[this.end***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***';')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***';');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode,***REMOVED***keepEsTreeNodeKeys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***value]***REMOVED***of***REMOVED***Object.entries(esTreeNode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***That***REMOVED***way,***REMOVED***we***REMOVED***can***REMOVED***override***REMOVED***this***REMOVED***function***REMOVED***to***REMOVED***add***REMOVED***custom***REMOVED***initialisation***REMOVED***and***REMOVED***then***REMOVED***call***REMOVED***super.parseNode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasOwnProperty(key))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key.charCodeAt(0)***REMOVED***===***REMOVED***95***REMOVED***/****REMOVED***_***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***ANNOTATION_KEY)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***annotations***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.annotations***REMOVED***=***REMOVED***annotations;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.context.options.treeshake.annotations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.annotationNoSideEffects***REMOVED***=***REMOVED***annotations.some(comment***REMOVED***=>***REMOVED***comment.annotationType***REMOVED***===***REMOVED***'noSideEffects');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.annotationPure***REMOVED***=***REMOVED***annotations.some(comment***REMOVED***=>***REMOVED***comment.annotationType***REMOVED***===***REMOVED***'pure');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***INVALID_COMMENT_KEY)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***start,***REMOVED***end***REMOVED***}***REMOVED***of***REMOVED***value)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.magicString.remove(start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***'object'***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this[key]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this[key].push(child***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***new***REMOVED***(this.context.getNodeConstructor(child.type))(child,***REMOVED***this,***REMOVED***this.scope,***REMOVED***keepEsTreeNodeKeys?.includes(key)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this[key]***REMOVED***=***REMOVED***new***REMOVED***(this.context.getNodeConstructor(value.type))(value,***REMOVED***this,***REMOVED***this.scope,***REMOVED***keepEsTreeNodeKeys?.includes(key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***this.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child?.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setAssignedValue(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assignmentInteraction***REMOVED***=***REMOVED***{***REMOVED***args:***REMOVED***[null,***REMOVED***value],***REMOVED***type:***REMOVED***INTERACTION_ASSIGNED***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***shouldBeIncluded(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.included***REMOVED***||***REMOVED***(!context.brokenFlow***REMOVED***&&***REMOVED***this.hasEffects(createHasEffectsContext()));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Just***REMOVED***deoptimize***REMOVED***everything***REMOVED***by***REMOVED***default***REMOVED***so***REMOVED***that***REMOVED***when***REMOVED***e.g.***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***track
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***something***REMOVED***properly,***REMOVED***it***REMOVED***is***REMOVED***deoptimized.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@protected
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***this.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child?.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***SpreadElement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***[UnknownKey,***REMOVED***...path],***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***propertyReadSideEffects***REMOVED***}***REMOVED***=***REMOVED***this.context.options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.argument.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(propertyReadSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(propertyReadSideEffects***REMOVED***===***REMOVED***'always'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.hasEffectsOnInteractionAtPath(UNKNOWN_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_ACCESS,***REMOVED***context))));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Only***REMOVED***properties***REMOVED***of***REMOVED***properties***REMOVED***of***REMOVED***the***REMOVED***argument***REMOVED***could***REMOVED***become***REMOVED***subject***REMOVED***to***REMOVED***reassignment
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***will***REMOVED***also***REMOVED***reassign***REMOVED***the***REMOVED***return***REMOVED***values***REMOVED***of***REMOVED***iterators
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.deoptimizePath([UnknownKey,***REMOVED***UnknownKey]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***Method***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(description)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.description***REMOVED***=***REMOVED***description;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath({***REMOVED***args,***REMOVED***type***REMOVED***},***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.description.mutatesSelfAsArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[0]?.deoptimizePath(UNKNOWN_INTEGER_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***{***REMOVED***args***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.description.returnsPrimitive***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.description.returns***REMOVED***===***REMOVED***'self'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***args[0]***REMOVED***||***REMOVED***UNKNOWN_EXPRESSION
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.description.returns()),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***(type***REMOVED***===***REMOVED***INTERACTION_ACCESSED***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***args***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.description.mutatesSelfAsArray***REMOVED***===***REMOVED***true***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[0]?.hasEffectsOnInteractionAtPath(UNKNOWN_INTEGER_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_ASSIGNMENT,***REMOVED***context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.description.callsArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argumentIndex***REMOVED***of***REMOVED***this.description.callsArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(args[argumentIndex***REMOVED***+***REMOVED***1]?.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_CALL,***REMOVED***context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***METHOD_RETURNS_BOOLEAN***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_LITERAL_BOOLEAN
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_RETURNS_STRING***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_LITERAL_STRING
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_RETURNS_NUMBER***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_LITERAL_NUMBER
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_RETURNS_UNKNOWN***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_EXPRESSION
***REMOVED******REMOVED******REMOVED******REMOVED***})
];

const***REMOVED***INTEGER_REG_EXP***REMOVED***=***REMOVED***/^\d+$/;
class***REMOVED***ObjectEntity***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***a***REMOVED***PropertyMap***REMOVED***is***REMOVED***used,***REMOVED***this***REMOVED***will***REMOVED***be***REMOVED***taken***REMOVED***as***REMOVED***propertiesAndGettersByKey
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***we***REMOVED***assume***REMOVED***there***REMOVED***are***REMOVED***no***REMOVED***setters***REMOVED***or***REMOVED***getters
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(properties,***REMOVED***prototypeExpression,***REMOVED***immutable***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prototypeExpression***REMOVED***=***REMOVED***prototypeExpression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.immutable***REMOVED***=***REMOVED***immutable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.additionalExpressionsToBeDeoptimized***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allProperties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedPaths***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimizedByKey***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.gettersByKey***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasLostTrack***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedInteger***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedProperty***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertiesAndGettersByKey***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertiesAndSettersByKey***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.settersByKey***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unknownIntegerProps***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unmatchableGetters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unmatchablePropertiesAndGetters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unmatchableSetters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(properties))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buildPropertyMaps(properties);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertiesAndGettersByKey***REMOVED***=***REMOVED***this.propertiesAndSettersByKey***REMOVED***=***REMOVED***properties;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***propertiesForKey***REMOVED***of***REMOVED***Object.values(properties))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allProperties.push(...propertiesForKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeAllProperties(noAccessors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDeoptimized***REMOVED***=***REMOVED***this.hasLostTrack***REMOVED***||***REMOVED***this.hasUnknownDeoptimizedProperty;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noAccessors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedProperty***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasLostTrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***properties***REMOVED***of***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...Object.values(this.propertiesAndGettersByKey),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...Object.values(this.settersByKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***While***REMOVED***the***REMOVED***prototype***REMOVED***itself***REMOVED***cannot***REMOVED***be***REMOVED***mutated,***REMOVED***each***REMOVED***property***REMOVED***can
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prototypeExpression?.deoptimizePath([UnknownKey,***REMOVED***UnknownKey]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizeCachedEntities();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[key,***REMOVED***...subPath]***REMOVED***=***REMOVED***path;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***args,***REMOVED***type***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasLostTrack***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***single***REMOVED***paths***REMOVED***that***REMOVED***are***REMOVED***deoptimized***REMOVED***will***REMOVED***not***REMOVED***become***REMOVED***getters***REMOVED***or***REMOVED***setters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***((type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***1)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.hasUnknownDeoptimizedProperty***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***this.deoptimizedPaths[key]))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[propertiesForExactMatchByKey,***REMOVED***relevantPropertiesByKey,***REMOVED***relevantUnmatchableProperties]***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertiesAndGettersByKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertiesAndGettersByKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unmatchablePropertiesAndGetters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***type***REMOVED***===***REMOVED***INTERACTION_ACCESSED
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[this.propertiesAndGettersByKey,***REMOVED***this.gettersByKey,***REMOVED***this.unmatchableGetters]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[this.propertiesAndSettersByKey,***REMOVED***this.settersByKey,***REMOVED***this.unmatchableSetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propertiesForExactMatchByKey[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***properties***REMOVED***=***REMOVED***relevantPropertiesByKey[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***subPath,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.immutable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.additionalExpressionsToBeDeoptimized.add(argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***relevantUnmatchableProperties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***subPath,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(INTEGER_REG_EXP.test(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.unknownIntegerProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***subPath,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***properties***REMOVED***of***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...Object.values(relevantPropertiesByKey),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relevantUnmatchableProperties
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***subPath,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.unknownIntegerProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***subPath,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.immutable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.additionalExpressionsToBeDeoptimized.add(argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prototypeExpression?.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeIntegerProperties()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasLostTrack***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedProperty***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedInteger)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedInteger***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***propertiesAndGetters]***REMOVED***of***REMOVED***Object.entries(this.propertiesAndGettersByKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(INTEGER_REG_EXP.test(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***propertiesAndGetters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizeCachedIntegerEntities();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Assumption:***REMOVED***If***REMOVED***only***REMOVED***a***REMOVED***specific***REMOVED***path***REMOVED***is***REMOVED***deoptimized,***REMOVED***no***REMOVED***accessors***REMOVED***are***REMOVED***created
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasLostTrack***REMOVED***||***REMOVED***this.immutable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***path[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***UnknownInteger)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.deoptimizeIntegerProperties();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.deoptimizeAllProperties(key***REMOVED***===***REMOVED***UnknownNonAccessorKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimizedPaths[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedPaths[key]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***only***REMOVED***deoptimizeCache***REMOVED***exact***REMOVED***matches***REMOVED***as***REMOVED***in***REMOVED***all***REMOVED***other***REMOVED***cases,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***return***REMOVED***a***REMOVED***literal***REMOVED***value***REMOVED***or***REMOVED***return***REMOVED***expression
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionsToBeDeoptimized***REMOVED***=***REMOVED***this.expressionsToBeDeoptimizedByKey[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subPath***REMOVED***=***REMOVED***path.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***UNKNOWN_PATH***REMOVED***:***REMOVED***path.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***typeof***REMOVED***key***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(this.propertiesAndGettersByKey[key]***REMOVED***||***REMOVED***this.unmatchablePropertiesAndGetters),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(this.settersByKey[key]***REMOVED***||***REMOVED***this.unmatchableSetters)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.allProperties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizePath(subPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prototypeExpression?.deoptimizePath(path.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***[...path,***REMOVED***UnknownKey]***REMOVED***:***REMOVED***path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownTruthyValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***path[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionAtPath***REMOVED***=***REMOVED***this.getMemberExpressionAndTrackDeopt(key,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expressionAtPath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expressionAtPath.getLiteralValueAtPath(path.slice(1),***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prototypeExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.prototypeExpression.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[key,***REMOVED***...subPath]***REMOVED***=***REMOVED***path;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionAtPath***REMOVED***=***REMOVED***this.getMemberExpressionAndTrackDeopt(key,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expressionAtPath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expressionAtPath.getReturnExpressionWhenCalledAtPath(subPath,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prototypeExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.prototypeExpression.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[key,***REMOVED***...subPath]***REMOVED***=***REMOVED***path;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subPath.length***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionAtPath***REMOVED***=***REMOVED***this.getMemberExpression(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expressionAtPath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expressionAtPath.hasEffectsOnInteractionAtPath(subPath,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prototypeExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.prototypeExpression.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***UnknownNonAccessorKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasLostTrack)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[propertiesAndAccessorsByKey,***REMOVED***accessorsByKey,***REMOVED***unmatchableAccessors]***REMOVED***=***REMOVED***interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[this.propertiesAndGettersByKey,***REMOVED***this.gettersByKey,***REMOVED***this.unmatchableGetters]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[this.propertiesAndSettersByKey,***REMOVED***this.settersByKey,***REMOVED***this.unmatchableSetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propertiesAndAccessorsByKey[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessors***REMOVED***=***REMOVED***accessorsByKey[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***accessor***REMOVED***of***REMOVED***accessors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessor.hasEffectsOnInteractionAtPath(subPath,***REMOVED***interaction,***REMOVED***context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***accessor***REMOVED***of***REMOVED***unmatchableAccessors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessor.hasEffectsOnInteractionAtPath(subPath,***REMOVED***interaction,***REMOVED***context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***accessors***REMOVED***of***REMOVED***[...Object.values(accessorsByKey),***REMOVED***unmatchableAccessors])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***accessor***REMOVED***of***REMOVED***accessors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessor.hasEffectsOnInteractionAtPath(subPath,***REMOVED***interaction,***REMOVED***context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prototypeExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.prototypeExpression.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***buildPropertyMaps(properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***allProperties,***REMOVED***propertiesAndGettersByKey,***REMOVED***propertiesAndSettersByKey,***REMOVED***settersByKey,***REMOVED***gettersByKey,***REMOVED***unknownIntegerProps,***REMOVED***unmatchablePropertiesAndGetters,***REMOVED***unmatchableGetters,***REMOVED***unmatchableSetters***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unmatchablePropertiesAndSetters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***properties.length***REMOVED***-***REMOVED***1;***REMOVED***index***REMOVED***>=***REMOVED***0;***REMOVED***index--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***key,***REMOVED***kind,***REMOVED***property***REMOVED***}***REMOVED***=***REMOVED***properties[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allProperties.push(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***'set')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!propertiesAndSettersByKey[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertiesAndSettersByKey[key]***REMOVED***=***REMOVED***[property,***REMOVED***...unmatchablePropertiesAndSetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***settersByKey[key]***REMOVED***=***REMOVED***[property,***REMOVED***...unmatchableSetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***'get')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!propertiesAndGettersByKey[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertiesAndGettersByKey[key]***REMOVED***=***REMOVED***[property,***REMOVED***...unmatchablePropertiesAndGetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***gettersByKey[key]***REMOVED***=***REMOVED***[property,***REMOVED***...unmatchableGetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!propertiesAndSettersByKey[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertiesAndSettersByKey[key]***REMOVED***=***REMOVED***[property,***REMOVED***...unmatchablePropertiesAndSetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!propertiesAndGettersByKey[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertiesAndGettersByKey[key]***REMOVED***=***REMOVED***[property,***REMOVED***...unmatchablePropertiesAndGetters];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***UnknownInteger)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unknownIntegerProps.push(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***'set')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmatchableSetters.push(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***'get')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmatchableGetters.push(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***!==***REMOVED***'get')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmatchablePropertiesAndSetters.push(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***!==***REMOVED***'set')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmatchablePropertiesAndGetters.push(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCachedEntities()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expressionsToBeDeoptimized***REMOVED***of***REMOVED***Object.values(this.expressionsToBeDeoptimizedByKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.additionalExpressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCachedIntegerEntities()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***expressionsToBeDeoptimized]***REMOVED***of***REMOVED***Object.entries(this.expressionsToBeDeoptimizedByKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(INTEGER_REG_EXP.test(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.additionalExpressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizePath(UNKNOWN_INTEGER_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getMemberExpression(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasLostTrack***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasUnknownDeoptimizedProperty***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***key***REMOVED***!==***REMOVED***'string'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.hasUnknownDeoptimizedInteger***REMOVED***&&***REMOVED***INTEGER_REG_EXP.test(key))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedPaths[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***properties***REMOVED***=***REMOVED***this.propertiesAndGettersByKey[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties?.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***properties[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unmatchablePropertiesAndGetters.length***REMOVED***>***REMOVED***0***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.unknownIntegerProps.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***INTEGER_REG_EXP.test(key)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getMemberExpressionAndTrackDeopt(key,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***this.getMemberExpression(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(expression***REMOVED***===***REMOVED***UNKNOWN_EXPRESSION***REMOVED***||***REMOVED***this.immutable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionsToBeDeoptimized***REMOVED***=***REMOVED***(this.expressionsToBeDeoptimizedByKey[key]***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimizedByKey[key]***REMOVED***||***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***isInteger***REMOVED***=***REMOVED***(property)***REMOVED***=>***REMOVED***typeof***REMOVED***property***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***/^\d+$/.test(property);
//***REMOVED***This***REMOVED***makes***REMOVED***sure***REMOVED***unknown***REMOVED***properties***REMOVED***are***REMOVED***not***REMOVED***handled***REMOVED***as***REMOVED***"undefined"***REMOVED***but***REMOVED***as
//***REMOVED***"unknown"***REMOVED***but***REMOVED***without***REMOVED***access***REMOVED***side***REMOVED***effects.***REMOVED***An***REMOVED***exception***REMOVED***is***REMOVED***done***REMOVED***for***REMOVED***numeric
//***REMOVED***properties***REMOVED***as***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***expect***REMOVED***new***REMOVED***builtin***REMOVED***properties***REMOVED***to***REMOVED***be***REMOVED***numbers,***REMOVED***this
//***REMOVED***will***REMOVED***improve***REMOVED***tree-shaking***REMOVED***for***REMOVED***out-of-bounds***REMOVED***array***REMOVED***properties
const***REMOVED***OBJECT_PROTOTYPE_FALLBACK***REMOVED***=***REMOVED***new***REMOVED***(class***REMOVED***ObjectPrototypeFallbackExpression***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***!isInteger(path[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***ignore***REMOVED***number***REMOVED***properties***REMOVED***as***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***expect***REMOVED***new***REMOVED***properties***REMOVED***to***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***numbers***REMOVED***and***REMOVED***also***REMOVED***want***REMOVED***to***REMOVED***keep***REMOVED***handling***REMOVED***out-of-bound***REMOVED***array***REMOVED***elements***REMOVED***as
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"undefined"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***isInteger(path[0])***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***INTERACTION_CALLED;
***REMOVED******REMOVED******REMOVED******REMOVED***}
})();
const***REMOVED***OBJECT_PROTOTYPE***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity({
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***hasOwnProperty:***REMOVED***METHOD_RETURNS_BOOLEAN,
***REMOVED******REMOVED******REMOVED******REMOVED***isPrototypeOf:***REMOVED***METHOD_RETURNS_BOOLEAN,
***REMOVED******REMOVED******REMOVED******REMOVED***propertyIsEnumerable:***REMOVED***METHOD_RETURNS_BOOLEAN,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleString:***REMOVED***METHOD_RETURNS_STRING,
***REMOVED******REMOVED******REMOVED******REMOVED***toString:***REMOVED***METHOD_RETURNS_STRING,
***REMOVED******REMOVED******REMOVED******REMOVED***valueOf:***REMOVED***METHOD_RETURNS_UNKNOWN
},***REMOVED***OBJECT_PROTOTYPE_FALLBACK,***REMOVED***true);

const***REMOVED***NEW_ARRAY_PROPERTIES***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***key:***REMOVED***UnknownInteger,***REMOVED***kind:***REMOVED***'init',***REMOVED***property:***REMOVED***UNKNOWN_EXPRESSION***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***key:***REMOVED***'length',***REMOVED***kind:***REMOVED***'init',***REMOVED***property:***REMOVED***UNKNOWN_LITERAL_NUMBER***REMOVED***}
];
const***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***'deopt-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_LITERAL_BOOLEAN
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***'deopt-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_LITERAL_NUMBER
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***()***REMOVED***=>***REMOVED***new***REMOVED***ObjectEntity(NEW_ARRAY_PROPERTIES,***REMOVED***ARRAY_PROTOTYPE),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***'deopt-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***()***REMOVED***=>***REMOVED***new***REMOVED***ObjectEntity(NEW_ARRAY_PROPERTIES,***REMOVED***ARRAY_PROTOTYPE),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***'deopt-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***()***REMOVED***=>***REMOVED***new***REMOVED***ObjectEntity(NEW_ARRAY_PROPERTIES,***REMOVED***ARRAY_PROTOTYPE),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_MUTATES_SELF_RETURNS_NUMBER***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_LITERAL_NUMBER
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_MUTATES_SELF_RETURNS_UNKNOWN***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_EXPRESSION
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_DEOPTS_SELF_RETURNS_UNKNOWN***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***'deopt-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_EXPRESSION
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***'deopt-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***UNKNOWN_EXPRESSION
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_MUTATES_SELF_RETURNS_SELF***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***'self',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Method({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsArgs:***REMOVED***[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mutatesSelfAsArray:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***'self',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnsPrimitive:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})
];
const***REMOVED***ARRAY_PROTOTYPE***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity({
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***assume***REMOVED***that***REMOVED***accessors***REMOVED***have***REMOVED***effects***REMOVED***as***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***track***REMOVED***the***REMOVED***accessed***REMOVED***value***REMOVED***afterwards
***REMOVED******REMOVED******REMOVED******REMOVED***at:***REMOVED***METHOD_DEOPTS_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***concat:***REMOVED***METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***copyWithin:***REMOVED***METHOD_MUTATES_SELF_RETURNS_SELF,
***REMOVED******REMOVED******REMOVED******REMOVED***entries:***REMOVED***METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***every:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,
***REMOVED******REMOVED******REMOVED******REMOVED***fill:***REMOVED***METHOD_MUTATES_SELF_RETURNS_SELF,
***REMOVED******REMOVED******REMOVED******REMOVED***filter:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***find:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***findIndex:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,
***REMOVED******REMOVED******REMOVED******REMOVED***findLast:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***findLastIndex:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,
***REMOVED******REMOVED******REMOVED******REMOVED***flat:***REMOVED***METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***flatMap:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***forEach:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***includes:***REMOVED***METHOD_RETURNS_BOOLEAN,
***REMOVED******REMOVED******REMOVED******REMOVED***indexOf:***REMOVED***METHOD_RETURNS_NUMBER,
***REMOVED******REMOVED******REMOVED******REMOVED***join:***REMOVED***METHOD_RETURNS_STRING,
***REMOVED******REMOVED******REMOVED******REMOVED***keys:***REMOVED***METHOD_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***lastIndexOf:***REMOVED***METHOD_RETURNS_NUMBER,
***REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***pop:***REMOVED***METHOD_MUTATES_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***push:***REMOVED***METHOD_MUTATES_SELF_RETURNS_NUMBER,
***REMOVED******REMOVED******REMOVED******REMOVED***reduce:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***reduceRight:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***reverse:***REMOVED***METHOD_MUTATES_SELF_RETURNS_SELF,
***REMOVED******REMOVED******REMOVED******REMOVED***shift:***REMOVED***METHOD_MUTATES_SELF_RETURNS_UNKNOWN,
***REMOVED******REMOVED******REMOVED******REMOVED***slice:***REMOVED***METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***some:***REMOVED***METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,
***REMOVED******REMOVED******REMOVED******REMOVED***sort:***REMOVED***METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF,
***REMOVED******REMOVED******REMOVED******REMOVED***splice:***REMOVED***METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleString:***REMOVED***METHOD_RETURNS_STRING,
***REMOVED******REMOVED******REMOVED******REMOVED***toString:***REMOVED***METHOD_RETURNS_STRING,
***REMOVED******REMOVED******REMOVED******REMOVED***unshift:***REMOVED***METHOD_MUTATES_SELF_RETURNS_NUMBER,
***REMOVED******REMOVED******REMOVED******REMOVED***values:***REMOVED***METHOD_DEOPTS_SELF_RETURNS_UNKNOWN
},***REMOVED***OBJECT_PROTOTYPE,***REMOVED***true);

class***REMOVED***ArrayExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.objectEntity***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasSpread***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***this.elements.length;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***element***REMOVED***=***REMOVED***this.elements[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***&&***REMOVED***(hasSpread***REMOVED***||***REMOVED***element***REMOVED***instanceof***REMOVED***SpreadElement))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasSpread***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getObjectEntity()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.objectEntity***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.objectEntity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***properties***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***key:***REMOVED***'length',***REMOVED***kind:***REMOVED***'init',***REMOVED***property:***REMOVED***UNKNOWN_LITERAL_NUMBER***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasSpread***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***this.elements.length;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***element***REMOVED***=***REMOVED***this.elements[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasSpread***REMOVED***||***REMOVED***element***REMOVED***instanceof***REMOVED***SpreadElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasSpread***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.unshift({***REMOVED***key:***REMOVED***UnknownInteger,***REMOVED***kind:***REMOVED***'init',***REMOVED***property:***REMOVED***element***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(element)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key:***REMOVED***String(index),***REMOVED***kind:***REMOVED***'init',***REMOVED***property:***REMOVED***element***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key:***REMOVED***String(index),***REMOVED***kind:***REMOVED***'init',***REMOVED***property:***REMOVED***UNDEFINED_EXPRESSION***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.objectEntity***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity(properties,***REMOVED***ARRAY_PROTOTYPE));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ArrayPattern***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***addExportedVariables(variables,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***this.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element?.addExportedVariables(variables,***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***declare(kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variables***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***this.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variables.push(...element.declare(kind,***REMOVED***UNKNOWN_EXPRESSION));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variables;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Patterns***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***deoptimized***REMOVED***at***REMOVED***the***REMOVED***empty***REMOVED***path***REMOVED***at***REMOVED***the***REMOVED***moment
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***this.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element?.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Patterns***REMOVED***are***REMOVED***only***REMOVED***checked***REMOVED***at***REMOVED***the***REMOVED***emtpy***REMOVED***path***REMOVED***at***REMOVED***the***REMOVED***moment
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(_path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***this.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element?.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***interaction,***REMOVED***context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markDeclarationReached()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***this.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element?.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***LocalVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(name,***REMOVED***declarator,***REMOVED***init,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.calledFromTryStatement***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.additionalInitializers***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarations***REMOVED***=***REMOVED***declarator***REMOVED***?***REMOVED***[declarator]***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationTracker***REMOVED***=***REMOVED***context.deoptimizationTracker;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module***REMOVED***=***REMOVED***context.module;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addDeclaration(identifier,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarations.push(identifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.markInitializersForDeoptimization().push(init);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***consolidateInitializers()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.additionalInitializers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***initializer***REMOVED***of***REMOVED***this.additionalInitializers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initializer.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.additionalInitializers***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recursionTracker.withTrackedEntityAtPath(path,***REMOVED***this.init,***REMOVED***()***REMOVED***=>***REMOVED***this.init.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker),***REMOVED***undefined);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path,***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isReassigned)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isReassigned***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionsToBeDeoptimized***REMOVED***=***REMOVED***this.expressionsToBeDeoptimized;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***recursionTracker.withTrackedEntityAtPath(path,***REMOVED***this.init,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.init.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***UnknownValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***recursionTracker.withTrackedEntityAtPath(path,***REMOVED***this.init,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.init.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***UNKNOWN_RETURN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(interaction.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ACCESSED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!context.accessed.trackEntityAtPathAndGetIfTracked(path,***REMOVED***this)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ASSIGNED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.included)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!context.assigned.trackEntityAtPathAndGetIfTracked(path,***REMOVED***this)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_CALLED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!(interaction.withNew***REMOVED***?***REMOVED***context.instantiated***REMOVED***:***REMOVED***context.called).trackEntityAtPathAndGetIfTracked(path,***REMOVED***interaction.args,***REMOVED***this)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declaration***REMOVED***of***REMOVED***this.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***node***REMOVED***is***REMOVED***a***REMOVED***default***REMOVED***export,***REMOVED***it***REMOVED***can***REMOVED***save***REMOVED***a***REMOVED***tree-shaking***REMOVED***run***REMOVED***to***REMOVED***include***REMOVED***the***REMOVED***full***REMOVED***declaration***REMOVED***now
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!declaration.included)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.include(createInclusionContext(),***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***node***REMOVED***=***REMOVED***declaration.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!node.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***do***REMOVED***not***REMOVED***want***REMOVED***to***REMOVED***properly***REMOVED***include***REMOVED***parents***REMOVED***in***REMOVED***case***REMOVED***they***REMOVED***are***REMOVED***part***REMOVED***of***REMOVED***a***REMOVED***dead***REMOVED***branch
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***which***REMOVED***case***REMOVED***.include()***REMOVED***might***REMOVED***pull***REMOVED***in***REMOVED***more***REMOVED***dead***REMOVED***code
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***Program$1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isReassigned***REMOVED***||***REMOVED***context.includedCallArguments.has(this.init))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedCallArguments.add(this.init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedCallArguments.delete(this.init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markCalledFromTryStatement()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.calledFromTryStatement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markInitializersForDeoptimization()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.additionalInitializers***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.additionalInitializers***REMOVED***=***REMOVED***[this.init];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init***REMOVED***=***REMOVED***UNKNOWN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isReassigned***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.additionalInitializers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***mergeDeclarations(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***declarations***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declaration***REMOVED***of***REMOVED***variable.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarations.push(declaration);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***additionalInitializers***REMOVED***=***REMOVED***this.markInitializersForDeoptimization();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***additionalInitializers.push(variable.init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.additionalInitializers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***initializer***REMOVED***of***REMOVED***variable.additionalInitializers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***additionalInitializers.push(initializer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***MAX_TRACKED_INTERACTIONS***REMOVED***=***REMOVED***20;
const***REMOVED***NO_INTERACTIONS***REMOVED***=***REMOVED***EMPTY_ARRAY;
const***REMOVED***UNKNOWN_DEOPTIMIZED_FIELD***REMOVED***=***REMOVED***new***REMOVED***Set([UnknownKey]);
const***REMOVED***EMPTY_PATH_TRACKER***REMOVED***=***REMOVED***new***REMOVED***PathTracker();
const***REMOVED***UNKNOWN_DEOPTIMIZED_ENTITY***REMOVED***=***REMOVED***new***REMOVED***Set([UNKNOWN_EXPRESSION]);
class***REMOVED***ParameterVariable***REMOVED***extends***REMOVED***LocalVariable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(name,***REMOVED***declarator,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(name,***REMOVED***declarator,***REMOVED***UNKNOWN_EXPRESSION,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationInteractions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizations***REMOVED***=***REMOVED***new***REMOVED***PathTracker();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedFields***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entitiesToBeDeoptimized***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addEntityToBeDeoptimized(entity)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(entity***REMOVED***===***REMOVED***UNKNOWN_EXPRESSION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***As***REMOVED***unknown***REMOVED***expressions***REMOVED***fully***REMOVED***deoptimize***REMOVED***all***REMOVED***interactions,***REMOVED***we***REMOVED***can***REMOVED***clear
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***interaction***REMOVED***cache***REMOVED***at***REMOVED***this***REMOVED***point***REMOVED***provided***REMOVED***we***REMOVED***keep***REMOVED***this***REMOVED***optimization
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***mind***REMOVED***when***REMOVED***adding***REMOVED***new***REMOVED***interactions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.entitiesToBeDeoptimized.has(UNKNOWN_EXPRESSION))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entitiesToBeDeoptimized.add(UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***interaction***REMOVED***}***REMOVED***of***REMOVED***this.deoptimizationInteractions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationInteractions***REMOVED***=***REMOVED***NO_INTERACTIONS;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.deoptimizedFields.has(UnknownKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***means***REMOVED***that***REMOVED***we***REMOVED***already***REMOVED***deoptimized***REMOVED***all***REMOVED***interactions***REMOVED***and***REMOVED***no***REMOVED***longer
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***track***REMOVED***them
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!this.entitiesToBeDeoptimized.has(entity))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entitiesToBeDeoptimized.add(entity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***field***REMOVED***of***REMOVED***this.deoptimizedFields)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity.deoptimizePath([field]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***interaction,***REMOVED***path***REMOVED***}***REMOVED***of***REMOVED***this.deoptimizationInteractions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***For***REMOVED***performance***REMOVED***reasons,***REMOVED***we***REMOVED***fully***REMOVED***deoptimize***REMOVED***all***REMOVED***deeper***REMOVED***interactions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>=***REMOVED***2***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entitiesToBeDeoptimized.has(UNKNOWN_EXPRESSION)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationInteractions.length***REMOVED***>=***REMOVED***MAX_TRACKED_INTERACTIONS***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(path.length***REMOVED***===***REMOVED***1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.deoptimizedFields.has(UnknownKey)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***this.deoptimizedFields.has(path[0])))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimizations.trackEntityAtPathAndGetIfTracked(path,***REMOVED***interaction.args))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entity***REMOVED***of***REMOVED***this.entitiesToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.entitiesToBeDeoptimized.has(UNKNOWN_EXPRESSION))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationInteractions.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***interaction,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***this.deoptimizedFields.has(UnknownKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***path[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.deoptimizedFields.has(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedFields.add(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entity***REMOVED***of***REMOVED***this.entitiesToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***do***REMOVED***not***REMOVED***need***REMOVED***a***REMOVED***recursion***REMOVED***tracker***REMOVED***here***REMOVED***as***REMOVED***we***REMOVED***already***REMOVED***track***REMOVED***whether
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***field***REMOVED***is***REMOVED***deoptimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity.deoptimizePath([key]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***UnknownKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***save***REMOVED***some***REMOVED***memory
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationInteractions***REMOVED***=***REMOVED***NO_INTERACTIONS;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizations***REMOVED***=***REMOVED***EMPTY_PATH_TRACKER;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedFields***REMOVED***=***REMOVED***UNKNOWN_DEOPTIMIZED_FIELD;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entitiesToBeDeoptimized***REMOVED***=***REMOVED***UNKNOWN_DEOPTIMIZED_ENTITY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***deoptimize***REMOVED***everything***REMOVED***that***REMOVED***is***REMOVED***called***REMOVED***as***REMOVED***that***REMOVED***will***REMOVED***trivially***REMOVED***deoptimize
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***corresponding***REMOVED***return***REMOVED***expressions***REMOVED***as***REMOVED***well***REMOVED***and***REMOVED***avoid***REMOVED***badly***REMOVED***performing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***complicated***REMOVED***alternatives
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!this.deoptimizedFields.has(path[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizePath([path[0]]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***getSafeName(baseName,***REMOVED***usedNames,***REMOVED***forbiddenNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***safeName***REMOVED***=***REMOVED***baseName;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***count***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(usedNames.has(safeName)***REMOVED***||***REMOVED***RESERVED_NAMES$1.has(safeName)***REMOVED***||***REMOVED***forbiddenNames?.has(safeName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safeName***REMOVED***=***REMOVED***`${baseName}$${toBase64(count++)}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add(safeName);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***safeName;
}

let***REMOVED***Scope$1***REMOVED***=***REMOVED***class***REMOVED***Scope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.children***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***_isHoisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***identifier.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***variable***REMOVED***=***REMOVED***this.variables.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.addDeclaration(identifier,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***new***REMOVED***LocalVariable(identifier.name,***REMOVED***identifier,***REMOVED***init***REMOVED***||***REMOVED***UNDEFINED_EXPRESSION,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***contains(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variables.has(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findVariable(_name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Internal***REMOVED***Error:***REMOVED***findVariable***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***implemented***REMOVED***by***REMOVED***a***REMOVED***subclass');
***REMOVED******REMOVED******REMOVED******REMOVED***}
};

class***REMOVED***ChildScope***REMOVED***extends***REMOVED***Scope$1***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedOutsideVariables***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.children.push(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addAccessedDynamicImport(importExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.accessedDynamicImports***REMOVED***||***REMOVED***(this.accessedDynamicImports***REMOVED***=***REMOVED***new***REMOVED***Set())).add(importExpression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent***REMOVED***instanceof***REMOVED***ChildScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.addAccessedDynamicImport(importExpression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addAccessedGlobals(globals,***REMOVED***accessedGlobalsByScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessedGlobals***REMOVED***=***REMOVED***accessedGlobalsByScope.get(this)***REMOVED***||***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***globals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedGlobals.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedGlobalsByScope.set(this,***REMOVED***accessedGlobals);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent***REMOVED***instanceof***REMOVED***ChildScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.addAccessedGlobals(globals,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addNamespaceMemberAccess(name,***REMOVED***variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedOutsideVariables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.addNamespaceMemberAccess(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addReturnExpression(expression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***instanceof***REMOVED***ChildScope***REMOVED***&&***REMOVED***this.parent.addReturnExpression(expression);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addUsedOutsideNames(usedNames,***REMOVED***format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***this.accessedOutsideVariables.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add(variable.getBaseVariableName());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'system'***REMOVED***&&***REMOVED***exportNamesByVariable.has(variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add('exports');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessedGlobals***REMOVED***=***REMOVED***accessedGlobalsByScope.get(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***accessedGlobals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***contains(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variables.has(name)***REMOVED***||***REMOVED***this.parent.contains(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deconflict(format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedNames***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addUsedOutsideNames(usedNames,***REMOVED***format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.accessedDynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***importExpression***REMOVED***of***REMOVED***this.accessedDynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importExpression.inlineNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add(importExpression.inlineNamespace.getBaseVariableName());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[name,***REMOVED***variable]***REMOVED***of***REMOVED***this.variables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.included***REMOVED***||***REMOVED***variable.alwaysRendered)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***getSafeName(name,***REMOVED***usedNames,***REMOVED***variable.forbiddenNames));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***scope***REMOVED***of***REMOVED***this.children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.deconflict(format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findLexicalBoundary()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.findLexicalBoundary();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findVariable(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***knownVariable***REMOVED***=***REMOVED***this.variables.get(name)***REMOVED***||***REMOVED***this.accessedOutsideVariables.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(knownVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***knownVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.parent.findVariable(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedOutsideVariables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ParameterScope***REMOVED***extends***REMOVED***ChildScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(parent,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parameters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasRest***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hoistedBodyVarScope***REMOVED***=***REMOVED***new***REMOVED***ChildScope(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***parameter***REMOVED***to***REMOVED***this***REMOVED***scope.***REMOVED***Parameters***REMOVED***must***REMOVED***be***REMOVED***added***REMOVED***in***REMOVED***the***REMOVED***correct
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***order,***REMOVED***i.e.***REMOVED***from***REMOVED***left***REMOVED***to***REMOVED***right.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***addParameterDeclaration(identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***name***REMOVED***}***REMOVED***=***REMOVED***identifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***new***REMOVED***ParameterVariable(name,***REMOVED***identifier,***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localVariable***REMOVED***=***REMOVED***this.hoistedBodyVarScope.variables.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(localVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hoistedBodyVarScope.variables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.mergeDeclarations(localVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addParameterVariables(parameters,***REMOVED***hasRest)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parameters***REMOVED***=***REMOVED***parameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameterList***REMOVED***of***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameter***REMOVED***of***REMOVED***parameterList)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameter.alwaysRendered***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasRest***REMOVED***=***REMOVED***hasRest;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***calledFromTryStatement***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***argumentIncluded***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***restParameter***REMOVED***=***REMOVED***this.hasRest***REMOVED***&&***REMOVED***this.parameters[this.parameters.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***checkedArgument***REMOVED***of***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkedArgument***REMOVED***instanceof***REMOVED***SpreadElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***parameters.length***REMOVED***-***REMOVED***1;***REMOVED***index***REMOVED***>=***REMOVED***0;***REMOVED***index--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parameterVariables***REMOVED***=***REMOVED***this.parameters[index]***REMOVED***||***REMOVED***restParameter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***argument***REMOVED***=***REMOVED***parameters[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parameterVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***calledFromTryStatement***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parameterVariables.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***handle***REMOVED***empty***REMOVED***destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argumentIncluded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***parameterVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argumentIncluded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.calledFromTryStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***calledFromTryStatement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!argumentIncluded***REMOVED***&&***REMOVED***argument.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argumentIncluded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argumentIncluded)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.include(context,***REMOVED***calledFromTryStatement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ReturnValueScope***REMOVED***extends***REMOVED***ParameterScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpressions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addReturnExpression(expression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpressions.push(expression);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.returnExpression***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.updateReturnExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.returnExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***updateReturnExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.returnExpressions.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***this.returnExpressions[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***UNKNOWN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.returnExpressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

/*****REMOVED***@typedef***REMOVED***{***REMOVED***import('estree').Node}***REMOVED***Node***REMOVED****/
/*****REMOVED***@typedef***REMOVED***{Node***REMOVED***|***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***type:***REMOVED***'PropertyDefinition';
***REMOVED*******REMOVED******REMOVED******REMOVED***computed:***REMOVED***boolean;
***REMOVED*******REMOVED******REMOVED******REMOVED***value:***REMOVED***Node
***REMOVED*******REMOVED***}}***REMOVED***NodeWithPropertyDefinition***REMOVED****/

/**
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{NodeWithPropertyDefinition}***REMOVED***node
***REMOVED*******REMOVED***@param***REMOVED***{NodeWithPropertyDefinition}***REMOVED***parent
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}
***REMOVED****/
function***REMOVED***is_reference***REMOVED***(node,***REMOVED***parent)***REMOVED***{
	if***REMOVED***(node.type***REMOVED***===***REMOVED***'MemberExpression')***REMOVED***{
		return***REMOVED***!node.computed***REMOVED***&&***REMOVED***is_reference(node.object,***REMOVED***node);
	}

	if***REMOVED***(node.type***REMOVED***===***REMOVED***'Identifier')***REMOVED***{
		if***REMOVED***(!parent)***REMOVED***return***REMOVED***true;

		switch***REMOVED***(parent.type)***REMOVED***{
			//***REMOVED***disregard***REMOVED***`bar`***REMOVED***in***REMOVED***`foo.bar`
			case***REMOVED***'MemberExpression':***REMOVED***return***REMOVED***parent.computed***REMOVED***||***REMOVED***node***REMOVED***===***REMOVED***parent.object;

			//***REMOVED***disregard***REMOVED***the***REMOVED***`foo`***REMOVED***in***REMOVED***`class***REMOVED***{foo(){}}`***REMOVED***but***REMOVED***keep***REMOVED***it***REMOVED***in***REMOVED***`class***REMOVED***{[foo](){}}`
			case***REMOVED***'MethodDefinition':***REMOVED***return***REMOVED***parent.computed;

			//***REMOVED***disregard***REMOVED***the***REMOVED***`foo`***REMOVED***in***REMOVED***`class***REMOVED***{foo=bar}`***REMOVED***but***REMOVED***keep***REMOVED***it***REMOVED***in***REMOVED***`class***REMOVED***{[foo]=bar}`***REMOVED***and***REMOVED***`class***REMOVED***{bar=foo}`
			case***REMOVED***'PropertyDefinition':***REMOVED***return***REMOVED***parent.computed***REMOVED***||***REMOVED***node***REMOVED***===***REMOVED***parent.value;

			//***REMOVED***disregard***REMOVED***the***REMOVED***`bar`***REMOVED***in***REMOVED***`{***REMOVED***bar:***REMOVED***foo***REMOVED***}`,***REMOVED***but***REMOVED***keep***REMOVED***it***REMOVED***in***REMOVED***`{***REMOVED***[bar]:***REMOVED***foo***REMOVED***}`
			case***REMOVED***'Property':***REMOVED***return***REMOVED***parent.computed***REMOVED***||***REMOVED***node***REMOVED***===***REMOVED***parent.value;

			//***REMOVED***disregard***REMOVED***the***REMOVED***`bar`***REMOVED***in***REMOVED***`export***REMOVED***{***REMOVED***foo***REMOVED***as***REMOVED***bar***REMOVED***}`***REMOVED***or
			//***REMOVED***the***REMOVED***foo***REMOVED***in***REMOVED***`import***REMOVED***{***REMOVED***foo***REMOVED***as***REMOVED***bar***REMOVED***}`
			case***REMOVED***'ExportSpecifier':
			case***REMOVED***'ImportSpecifier':***REMOVED***return***REMOVED***node***REMOVED***===***REMOVED***parent.local;

			//***REMOVED***disregard***REMOVED***the***REMOVED***`foo`***REMOVED***in***REMOVED***`foo:***REMOVED***while***REMOVED***(...)***REMOVED***{***REMOVED***...***REMOVED***break***REMOVED***foo;***REMOVED***...***REMOVED***continue***REMOVED***foo;}`
			case***REMOVED***'LabeledStatement':
			case***REMOVED***'BreakStatement':
			case***REMOVED***'ContinueStatement':***REMOVED***return***REMOVED***false;
			default:***REMOVED***return***REMOVED***true;
		}
	}

	return***REMOVED***false;
}

const***REMOVED***PureFunctionKey***REMOVED***=***REMOVED***Symbol('PureFunction');
const***REMOVED***getPureFunctions***REMOVED***=***REMOVED***({***REMOVED***treeshake***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pureFunctions***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***functionName***REMOVED***of***REMOVED***treeshake***REMOVED***?***REMOVED***treeshake.manualPureFunctions***REMOVED***:***REMOVED***[])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentFunctions***REMOVED***=***REMOVED***pureFunctions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***pathSegment***REMOVED***of***REMOVED***functionName.split('.'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentFunctions***REMOVED***=***REMOVED***currentFunctions[pathSegment]***REMOVED***||***REMOVED***(currentFunctions[pathSegment]***REMOVED***=***REMOVED***Object.create(null));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentFunctions[PureFunctionKey]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pureFunctions;
};

/****REMOVED***eslint***REMOVED***sort-keys:***REMOVED***"off"***REMOVED****/
const***REMOVED***ValueProperties***REMOVED***=***REMOVED***Symbol('Value***REMOVED***Properties');
const***REMOVED***getTruthyLiteralValue***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***UnknownTruthyValue;
const***REMOVED***returnFalse***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***false;
const***REMOVED***returnTrue***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***true;
const***REMOVED***PURE***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall:***REMOVED***doNothing,
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue:***REMOVED***getTruthyLiteralValue,
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***returnFalse
};
const***REMOVED***IMPURE***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall:***REMOVED***doNothing,
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue:***REMOVED***getTruthyLiteralValue,
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***returnTrue
};
const***REMOVED***PURE_WITH_ARRAY***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall:***REMOVED***doNothing,
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue:***REMOVED***getTruthyLiteralValue,
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled({***REMOVED***args***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***args.length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***!(args[1]***REMOVED***instanceof***REMOVED***ArrayExpression);
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***GETTER_ACCESS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall:***REMOVED***doNothing,
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue:***REMOVED***getTruthyLiteralValue,
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled({***REMOVED***args***REMOVED***},***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[_thisArgument,***REMOVED***firstArgument]***REMOVED***=***REMOVED***args;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!(firstArgument***REMOVED***instanceof***REMOVED***ExpressionEntity)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstArgument.hasEffectsOnInteractionAtPath(UNKNOWN_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_ACCESS,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
//***REMOVED***We***REMOVED***use***REMOVED***shortened***REMOVED***variables***REMOVED***to***REMOVED***reduce***REMOVED***file***REMOVED***size***REMOVED***here
/****REMOVED***OBJECT***REMOVED****/
const***REMOVED***O***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE
};
/****REMOVED***PURE***REMOVED***FUNCTION***REMOVED****/
const***REMOVED***PF***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE
};
/****REMOVED***PURE***REMOVED***FUNCTION***REMOVED***IF***REMOVED***FIRST***REMOVED***ARG***REMOVED***DOES***REMOVED***NOT***REMOVED***CONTAIN***REMOVED***A***REMOVED***GETTER***REMOVED****/
const***REMOVED***PF_NO_GETTER***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***GETTER_ACCESS
};
/****REMOVED***FUNCTION***REMOVED***THAT***REMOVED***MUTATES***REMOVED***FIRST***REMOVED***ARG***REMOVED***WITHOUT***REMOVED***TRIGGERING***REMOVED***ACCESSORS***REMOVED****/
const***REMOVED***MUTATES_ARG_WITHOUT_ACCESSOR***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall({***REMOVED***args:***REMOVED***[,***REMOVED***firstArgument]***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstArgument?.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue:***REMOVED***getTruthyLiteralValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled({***REMOVED***args***REMOVED***},***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(args.length***REMOVED***<=***REMOVED***1***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[1].hasEffectsOnInteractionAtPath(UNKNOWN_NON_ACCESSOR_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_ASSIGNMENT,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
/****REMOVED***CONSTRUCTOR***REMOVED****/
const***REMOVED***C***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
};
/****REMOVED***PURE***REMOVED***CONSTRUCTOR***REMOVED****/
const***REMOVED***PC***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
};
const***REMOVED***PC_WITH_ARRAY***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE_WITH_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
};
const***REMOVED***ARRAY_TYPE***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***of:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
};
const***REMOVED***INTL_MEMBER***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED***supportedLocalesOf:***REMOVED***PC
};
const***REMOVED***knownGlobals***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Placeholders***REMOVED***for***REMOVED***global***REMOVED***objects***REMOVED***to***REMOVED***avoid***REMOVED***shape***REMOVED***mutations
***REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***globalThis:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***self:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***window:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Common***REMOVED***globals
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED***Array:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isArray:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***of:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***ArrayBuffer:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isView:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***Atomics:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***BigInt:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BigInt64Array:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BigUint64Array:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Boolean:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***constructor:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DataView:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***Date:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***now:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parse:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***UTC:***REMOVED***PF
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decodeURI:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***decodeURIComponent:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***encodeURI:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***encodeURIComponent:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***Error:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***escape:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***eval:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***EvalError:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***Float32Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Float64Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Function:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***hasOwnProperty:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Infinity:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Int16Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Int32Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Int8Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***isFinite:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***isNaN:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***isPrototypeOf:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***JSON:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Map:***REMOVED***PC_WITH_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***Math:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***abs:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acos:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acosh:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***asin:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***asinh:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atan:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atan2:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atanh:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cbrt:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ceil:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clz32:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cos:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cosh:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expm1:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***floor:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fround:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hypot:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imul:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log10:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log1p:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log2:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***max:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***min:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pow:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***random:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***round:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sign:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sin:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sinh:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sqrt:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tan:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tanh:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trunc:***REMOVED***PF
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***NaN:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Number:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFinite:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isInteger:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isNaN:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isSafeInteger:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parseFloat:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parseInt:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***Object:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***create:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Technically***REMOVED***those***REMOVED***can***REMOVED***throw***REMOVED***in***REMOVED***certain***REMOVED***situations,***REMOVED***but***REMOVED***we***REMOVED***ignore***REMOVED***this***REMOVED***as
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***code***REMOVED***that***REMOVED***relies***REMOVED***on***REMOVED***this***REMOVED***will***REMOVED***hopefully***REMOVED***wrap***REMOVED***this***REMOVED***in***REMOVED***a***REMOVED***try-catch,***REMOVED***which
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***deoptimizes***REMOVED***everything***REMOVED***anyway
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defineProperty:***REMOVED***MUTATES_ARG_WITHOUT_ACCESSOR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defineProperties:***REMOVED***MUTATES_ARG_WITHOUT_ACCESSOR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***freeze:***REMOVED***MUTATES_ARG_WITHOUT_ACCESSOR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOwnPropertyDescriptor:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOwnPropertyDescriptors:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOwnPropertyNames:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOwnPropertySymbols:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getPrototypeOf:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasOwn:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isExtensible:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFrozen:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isSealed:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keys:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromEntries:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entries:***REMOVED***PF_NO_GETTER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***values:***REMOVED***PF_NO_GETTER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***parseFloat:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***parseInt:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***Promise:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***all:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allSettled:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***any:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***race:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve:***REMOVED***O
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***propertyIsEnumerable:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Proxy:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***RangeError:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***ReferenceError:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***Reflect:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***RegExp:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***Set:***REMOVED***PC_WITH_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***SharedArrayBuffer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***String:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromCharCode:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromCodePoint:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw:***REMOVED***PF
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***Symbol:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***PURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyFor:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toStringTag:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall:***REMOVED***doNothing,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***SymbolToStringTag;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***returnTrue
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***SyntaxError:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***toLocaleString:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***toString:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***TypeError:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***Uint16Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Uint32Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Uint8Array:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***Uint8ClampedArray:***REMOVED***ARRAY_TYPE,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Technically,***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***global,***REMOVED***but***REMOVED***it***REMOVED***needs***REMOVED***special***REMOVED***handling
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***undefined:***REMOVED***?,
***REMOVED******REMOVED******REMOVED******REMOVED***unescape:***REMOVED***PF,
***REMOVED******REMOVED******REMOVED******REMOVED***URIError:***REMOVED***PC,
***REMOVED******REMOVED******REMOVED******REMOVED***valueOf:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***WeakMap:***REMOVED***PC_WITH_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***WeakSet:***REMOVED***PC_WITH_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Additional***REMOVED***globals***REMOVED***shared***REMOVED***by***REMOVED***Node***REMOVED***and***REMOVED***Browser***REMOVED***that***REMOVED***are***REMOVED***not***REMOVED***strictly***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***language
***REMOVED******REMOVED******REMOVED******REMOVED***clearInterval:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***clearTimeout:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***console:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assert:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clear:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***countReset:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debug:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dir:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirxml:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exception:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***group:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groupCollapsed:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groupEnd:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***info:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***table:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeLog:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trace:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn:***REMOVED***C
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***Intl:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Collator:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***DateTimeFormat:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***DisplayNames:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ListFormat:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Locale:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***NumberFormat:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***PluralRules:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***RelativeTimeFormat:***REMOVED***INTL_MEMBER,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Segmenter:***REMOVED***INTL_MEMBER
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***setInterval:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***setTimeout:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextDecoder:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextEncoder:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***URL:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***IMPURE,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***canParse:***REMOVED***PF
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***URLSearchParams:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Browser***REMOVED***specific***REMOVED***globals
***REMOVED******REMOVED******REMOVED******REMOVED***AbortController:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AbortSignal:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***addEventListener:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***alert:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***AnalyserNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Animation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AnimationEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***applicationCache:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ApplicationCache:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ApplicationCacheErrorEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***atob:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Attr:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Audio:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioBuffer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioBufferSourceNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioContext:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioDestinationNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioListener:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioParam:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioProcessingEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioScheduledSourceNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***AudioWorkletNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BarProp:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BaseAudioContext:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BatteryManager:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BeforeUnloadEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BiquadFilterNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Blob:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***BlobEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***blur:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***BroadcastChannel:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***btoa:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ByteLengthQueuingStrategy:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Cache:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***caches:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***CacheStorage:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***cancelAnimationFrame:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***cancelIdleCallback:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***CanvasCaptureMediaStreamTrack:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CanvasGradient:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CanvasPattern:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CanvasRenderingContext2D:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ChannelMergerNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ChannelSplitterNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CharacterData:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***clientInformation:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ClipboardEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***close:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***closed:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***CloseEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Comment:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CompositionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***confirm:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ConstantSourceNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ConvolverNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CountQueuingStrategy:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***createImageBitmap:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Credential:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CredentialsContainer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***crypto:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Crypto:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CryptoKey:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSS:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSConditionRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSFontFaceRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSGroupingRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSImportRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSKeyframeRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSKeyframesRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSMediaRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSNamespaceRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSPageRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSRuleList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSStyleDeclaration:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSStyleRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSStyleSheet:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CSSSupportsRule:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***CustomElementRegistry:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***customElements:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***CustomEvent:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[ValueProperties]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnCall({***REMOVED***args***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[2]?.deoptimizePath(['detail']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValue:***REMOVED***getTruthyLiteralValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsWhenCalled:***REMOVED***returnFalse
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype:***REMOVED***O
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***DataTransfer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DataTransferItem:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DataTransferItemList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***defaultstatus:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***defaultStatus:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***DelayNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DeviceMotionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DeviceOrientationEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***devicePixelRatio:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***dispatchEvent:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***document:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Document:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DocumentFragment:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DocumentType:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMError:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMException:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMImplementation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMMatrix:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMMatrixReadOnly:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMParser:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMPoint:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMPointReadOnly:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMQuad:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMRect:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMRectReadOnly:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMStringList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMStringMap:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DOMTokenList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DragEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***DynamicsCompressorNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Element:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ErrorEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Event:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***EventSource:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***EventTarget:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***fetch:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***File:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***FileList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***FileReader:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***find:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***focus:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***FocusEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***FontFace:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***FontFaceSetLoadEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***FormData:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***frames:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***GainNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Gamepad:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***GamepadButton:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***GamepadEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***getComputedStyle:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***getSelection:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***HashChangeEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Headers:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***history:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***History:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLAllCollection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLAnchorElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLAreaElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLAudioElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLBaseElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLBodyElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLBRElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLButtonElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLCanvasElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLCollection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLContentElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDataElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDataListElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDetailsElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDialogElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDirectoryElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDivElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDListElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLDocument:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLEmbedElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLFieldSetElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLFontElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLFormControlsCollection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLFormElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLFrameElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLFrameSetElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLHeadElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLHeadingElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLHRElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLHtmlElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLIFrameElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLImageElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLInputElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLLabelElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLLegendElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLLIElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLLinkElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLMapElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLMarqueeElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLMediaElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLMenuElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLMetaElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLMeterElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLModElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLObjectElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLOListElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLOptGroupElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLOptionElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLOptionsCollection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLOutputElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLParagraphElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLParamElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLPictureElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLPreElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLProgressElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLQuoteElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLScriptElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLSelectElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLShadowElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLSlotElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLSourceElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLSpanElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLStyleElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTableCaptionElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTableCellElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTableColElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTableElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTableRowElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTableSectionElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTemplateElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTextAreaElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTimeElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTitleElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLTrackElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLUListElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLUnknownElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLVideoElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBCursor:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBCursorWithValue:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBDatabase:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBFactory:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBIndex:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBKeyRange:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBObjectStore:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBOpenDBRequest:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBRequest:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBTransaction:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IDBVersionChangeEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IdleDeadline:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IIRFilterNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Image:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ImageBitmap:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ImageBitmapRenderingContext:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ImageCapture:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ImageData:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***indexedDB:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***innerHeight:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***innerWidth:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***InputEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IntersectionObserver:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***IntersectionObserverEntry:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***isSecureContext:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***KeyboardEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***KeyframeEffect:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***length:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***localStorage:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***location:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Location:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***locationbar:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***matchMedia:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaDeviceInfo:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaDevices:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaElementAudioSourceNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaEncryptedEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaError:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaKeyMessageEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaKeySession:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaKeyStatusMap:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaKeySystemAccess:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaQueryList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaQueryListEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaRecorder:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaSettingsRange:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaSource:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaStream:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaStreamAudioDestinationNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaStreamAudioSourceNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaStreamEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaStreamTrack:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MediaStreamTrackEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***menubar:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***MessageChannel:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MessageEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MessagePort:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIAccess:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIConnectionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIInput:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIInputMap:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIMessageEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIOutput:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIOutputMap:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MIDIPort:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MimeType:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MimeTypeArray:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MouseEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***moveBy:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***moveTo:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***MutationEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MutationObserver:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***MutationRecord:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***NamedNodeMap:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***NavigationPreloadManager:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***navigator:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Navigator:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***NetworkInformation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Node:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***NodeFilter:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***NodeIterator:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***NodeList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Notification:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***OfflineAudioCompletionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***OfflineAudioContext:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***offscreenBuffering:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***OffscreenCanvas:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***open:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***openDatabase:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Option:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***origin:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***OscillatorNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***outerHeight:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***outerWidth:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***PageTransitionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***pageXOffset:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***pageYOffset:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***PannerNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***parent:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Path2D:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PaymentAddress:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PaymentRequest:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PaymentRequestUpdateEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PaymentResponse:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***performance:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Performance:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceEntry:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceLongTaskTiming:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceMark:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceMeasure:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceNavigation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceNavigationTiming:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceObserver:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceObserverEntryList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformancePaintTiming:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceResourceTiming:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PerformanceTiming:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PeriodicWave:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Permissions:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PermissionStatus:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***personalbar:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***PhotoCapabilities:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Plugin:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PluginArray:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PointerEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PopStateEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***postMessage:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Presentation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationAvailability:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationConnection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationConnectionAvailableEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationConnectionCloseEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationConnectionList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationReceiver:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PresentationRequest:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***print:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ProcessingInstruction:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ProgressEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PromiseRejectionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***prompt:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***PushManager:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PushSubscription:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***PushSubscriptionOptions:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***queueMicrotask:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***RadioNodeList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Range:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ReadableStream:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RemotePlayback:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***removeEventListener:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Request:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***requestAnimationFrame:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***requestIdleCallback:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***resizeBy:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ResizeObserver:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ResizeObserverEntry:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***resizeTo:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Response:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCCertificate:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCDataChannel:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCDataChannelEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCDtlsTransport:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCIceCandidate:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCIceTransport:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCPeerConnection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCPeerConnectionIceEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCRtpReceiver:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCRtpSender:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCSctpTransport:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCSessionDescription:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCStatsReport:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***RTCTrackEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***screen:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Screen:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***screenLeft:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ScreenOrientation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***screenTop:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***screenX:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***screenY:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ScriptProcessorNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***scroll:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***scrollbars:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***scrollBy:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***scrollTo:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***scrollX:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***scrollY:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***SecurityPolicyViolationEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Selection:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ServiceWorker:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ServiceWorkerContainer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ServiceWorkerRegistration:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***sessionStorage:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***ShadowRoot:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SharedWorker:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SourceBuffer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SourceBufferList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***speechSynthesis:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***SpeechSynthesisEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SpeechSynthesisUtterance:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***StaticRange:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***status:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***statusbar:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***StereoPannerNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***stop:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Storage:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***StorageEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***StorageManager:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***styleMedia:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***StyleSheet:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***StyleSheetList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SubtleCrypto:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAngle:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedAngle:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedBoolean:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedEnumeration:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedInteger:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedLength:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedLengthList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedNumber:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedNumberList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedPreserveAspectRatio:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedRect:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedString:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimatedTransformList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimateElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimateMotionElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimateTransformElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGAnimationElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGCircleElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGClipPathElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGComponentTransferFunctionElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGDefsElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGDescElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGDiscardElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGEllipseElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEBlendElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEColorMatrixElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEComponentTransferElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFECompositeElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEConvolveMatrixElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEDiffuseLightingElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEDisplacementMapElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEDistantLightElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEDropShadowElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEFloodElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEFuncAElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEFuncBElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEFuncGElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEFuncRElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEGaussianBlurElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEImageElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEMergeElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEMergeNodeElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEMorphologyElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEOffsetElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFEPointLightElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFESpecularLightingElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFESpotLightElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFETileElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFETurbulenceElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGFilterElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGForeignObjectElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGGElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGGeometryElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGGradientElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGGraphicsElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGImageElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGLength:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGLengthList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGLinearGradientElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGLineElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGMarkerElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGMaskElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGMatrix:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGMetadataElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGMPathElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGNumber:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGNumberList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPathElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPatternElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPoint:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPointList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPolygonElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPolylineElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGPreserveAspectRatio:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGRadialGradientElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGRect:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGRectElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGScriptElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGSetElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGStopElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGStringList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGStyleElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGSVGElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGSwitchElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGSymbolElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTextContentElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTextElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTextPathElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTextPositioningElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTitleElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTransform:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTransformList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGTSpanElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGUnitTypes:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGUseElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***SVGViewElement:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TaskAttributionTiming:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Text:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextMetrics:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextTrack:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextTrackCue:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextTrackCueList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TextTrackList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TimeRanges:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***toolbar:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***Touch:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TouchEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TouchList:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TrackEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TransitionEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***TreeWalker:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***UIEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***ValidityState:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***visualViewport:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***VisualViewport:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***VTTCue:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WaveShaperNode:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebAssembly:***REMOVED***O,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGL2RenderingContext:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLActiveInfo:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLBuffer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLContextEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLFramebuffer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLProgram:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLQuery:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLRenderbuffer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLRenderingContext:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLSampler:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLShader:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLShaderPrecisionFormat:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLSync:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLTexture:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLTransformFeedback:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLUniformLocation:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebGLVertexArrayObject:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WebSocket:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WheelEvent:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Window:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***Worker:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***WritableStream:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XMLDocument:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XMLHttpRequest:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XMLHttpRequestEventTarget:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XMLHttpRequestUpload:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XMLSerializer:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XPathEvaluator:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XPathExpression:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XPathResult:***REMOVED***C,
***REMOVED******REMOVED******REMOVED******REMOVED***XSLTProcessor:***REMOVED***C
};
for***REMOVED***(const***REMOVED***global***REMOVED***of***REMOVED***['window',***REMOVED***'global',***REMOVED***'self',***REMOVED***'globalThis'])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***knownGlobals[global]***REMOVED***=***REMOVED***knownGlobals;
}
function***REMOVED***getGlobalAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentGlobal***REMOVED***=***REMOVED***knownGlobals;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***pathSegment***REMOVED***of***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***pathSegment***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentGlobal***REMOVED***=***REMOVED***currentGlobal[pathSegment];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!currentGlobal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***currentGlobal[ValueProperties];
}

class***REMOVED***GlobalVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***we***REMOVED***use***REMOVED***live-bindings***REMOVED***for***REMOVED***globals***REMOVED***as***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***know***REMOVED***if***REMOVED***they***REMOVED***have
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***been***REMOVED***reassigned
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isReassigned***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(interaction.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***While***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***point***REMOVED***in***REMOVED***testing***REMOVED***these***REMOVED***cases***REMOVED***as***REMOVED***at***REMOVED***the***REMOVED***moment,***REMOVED***they
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***are***REMOVED***also***REMOVED***covered***REMOVED***via***REMOVED***other***REMOVED***means,***REMOVED***we***REMOVED***keep***REMOVED***them***REMOVED***for***REMOVED***completeness
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ACCESSED:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ASSIGNED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!getGlobalAtPath([this.name,***REMOVED***...path].slice(0,***REMOVED***-1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_CALLED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalAtPath***REMOVED***=***REMOVED***getGlobalAtPath([this.name,***REMOVED***...path]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globalAtPath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalAtPath.deoptimizeArgumentsOnCall(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***_recursionTracker,***REMOVED***_origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalAtPath***REMOVED***=***REMOVED***getGlobalAtPath([this.name,***REMOVED***...path]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globalAtPath***REMOVED***?***REMOVED***globalAtPath.getLiteralValue()***REMOVED***:***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(interaction.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ACCESSED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Technically,***REMOVED***"undefined"***REMOVED***is***REMOVED***a***REMOVED***global***REMOVED***variable***REMOVED***of***REMOVED***sorts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.name***REMOVED***!==***REMOVED***'undefined'***REMOVED***&&***REMOVED***!getGlobalAtPath([this.name]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!getGlobalAtPath([this.name,***REMOVED***...path].slice(0,***REMOVED***-1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ASSIGNED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_CALLED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalAtPath***REMOVED***=***REMOVED***getGlobalAtPath([this.name,***REMOVED***...path]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!globalAtPath***REMOVED***||***REMOVED***globalAtPath.hasEffectsWhenCalled(interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***tdzVariableKinds***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***class:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***const:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***let:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***var:***REMOVED***true
};
class***REMOVED***Identifier***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isTDZAccess***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addExportedVariables(variables,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNamesByVariable.has(this.variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variables.push(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.variable***REMOVED***&&***REMOVED***is_reference(this,***REMOVED***this.parent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***this.scope.findVariable(this.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.addReference(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***declare(kind,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeshake***REMOVED***}***REMOVED***=***REMOVED***this.context.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'var':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***this.scope.addDeclaration(this,***REMOVED***this.context,***REMOVED***init,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(treeshake***REMOVED***&&***REMOVED***treeshake.correctVarValueBeforeDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Necessary***REMOVED***to***REMOVED***make***REMOVED***sure***REMOVED***the***REMOVED***init***REMOVED***is***REMOVED***deoptimized.***REMOVED***We***REMOVED***cannot***REMOVED***call***REMOVED***deoptimizePath***REMOVED***here.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.markInitializersForDeoptimization();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'function':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***strict***REMOVED***mode,***REMOVED***functions***REMOVED***are***REMOVED***only***REMOVED***hoisted***REMOVED***within***REMOVED***a***REMOVED***scope***REMOVED***but***REMOVED***not***REMOVED***across***REMOVED***block***REMOVED***scopes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***this.scope.addDeclaration(this,***REMOVED***this.context,***REMOVED***init,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'let':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'const':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'class':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***this.scope.addDeclaration(this,***REMOVED***this.context,***REMOVED***init,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'parameter':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***this.scope.addParameterDeclaration(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***istanbul***REMOVED***ignore***REMOVED***next***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***istanbul***REMOVED***ignore***REMOVED***next***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Internal***REMOVED***Error:***REMOVED***Unexpected***REMOVED***identifier***REMOVED***kind***REMOVED***${kind}.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.kind***REMOVED***=***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[(this.variable***REMOVED***=***REMOVED***variable)];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***!this.scope.contains(this.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.disallowImportReassignment();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***keep***REMOVED***conditional***REMOVED***chaining***REMOVED***because***REMOVED***an***REMOVED***unknown***REMOVED***Node***REMOVED***could***REMOVED***have***REMOVED***an
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Identifier***REMOVED***as***REMOVED***property***REMOVED***that***REMOVED***might***REMOVED***be***REMOVED***deoptimized***REMOVED***by***REMOVED***default
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable?.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getVariableRespectingTDZ().getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[expression,***REMOVED***isPure]***REMOVED***=***REMOVED***this.getVariableRespectingTDZ().getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[expression,***REMOVED***isPure***REMOVED***||***REMOVED***this.isPureFunction(path)];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isPossibleTDZ()***REMOVED***&&***REMOVED***this.variable.kind***REMOVED***!==***REMOVED***'var')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.context.options.treeshake.unknownGlobalSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***instanceof***REMOVED***GlobalVariable***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.isPureFunction(EMPTY_PATH)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_ACCESS,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(interaction.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ACCESSED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.variable***REMOVED***!==***REMOVED***null***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.isPureFunction(path)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ASSIGNED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(path.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***this.getVariableRespectingTDZ()***REMOVED***:***REMOVED***this.variable).hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_CALLED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!this.isPureFunction(path)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isPossibleTDZ()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***return***REMOVED***cached***REMOVED***value***REMOVED***to***REMOVED***avoid***REMOVED***issues***REMOVED***with***REMOVED***the***REMOVED***next***REMOVED***tree-shaking***REMOVED***pass
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isTDZAccess***REMOVED***!==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isTDZAccess;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.variable***REMOVED***instanceof***REMOVED***LocalVariable***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.kind***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.kind***REMOVED***in***REMOVED***tdzVariableKinds***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***ignore***REMOVED***possible***REMOVED***TDZs***REMOVED***due***REMOVED***to***REMOVED***circular***REMOVED***module***REMOVED***dependencies***REMOVED***as
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***otherwise***REMOVED***we***REMOVED***get***REMOVED***many***REMOVED***false***REMOVED***positives
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.module***REMOVED***===***REMOVED***this.context.module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.isTDZAccess***REMOVED***=***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***decl_id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable.declarations***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.declarations.length***REMOVED***===***REMOVED***1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(decl_id***REMOVED***=***REMOVED***this.variable.declarations[0])***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.start***REMOVED***<***REMOVED***decl_id.start***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closestParentFunctionOrProgram(this)***REMOVED***===***REMOVED***closestParentFunctionOrProgram(decl_id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***variable***REMOVED***accessed***REMOVED***before***REMOVED***its***REMOVED***declaration
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***function***REMOVED***or***REMOVED***at***REMOVED***top***REMOVED***level***REMOVED***of***REMOVED***module
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.isTDZAccess***REMOVED***=***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.variable.initReached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Either***REMOVED***a***REMOVED***const/let***REMOVED***TDZ***REMOVED***violation***REMOVED***or
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***var***REMOVED***use***REMOVED***before***REMOVED***declaration***REMOVED***was***REMOVED***encountered.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.isTDZAccess***REMOVED***=***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.isTDZAccess***REMOVED***=***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markDeclarationReached()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.initReached***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***{***REMOVED***snippets:***REMOVED***{***REMOVED***getPropertyAccess***REMOVED***},***REMOVED***useOriginalName***REMOVED***},***REMOVED***{***REMOVED***renderedParentType,***REMOVED***isCalleeOfRenderedParent,***REMOVED***isShorthandProperty***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.variable.getName(getPropertyAccess,***REMOVED***useOriginalName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***this.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***this.end,***REMOVED***name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contentOnly:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***storeName:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isShorthandProperty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(this.start,***REMOVED***`${this.name}:***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***strict***REMOVED***mode,***REMOVED***any***REMOVED***variable***REMOVED***named***REMOVED***"eval"***REMOVED***must***REMOVED***be***REMOVED***the***REMOVED***actual***REMOVED***"eval"***REMOVED***function
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***'eval'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedParentType***REMOVED***===***REMOVED***CallExpression$1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCalleeOfRenderedParent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(this.start,***REMOVED***'0,***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable***REMOVED***instanceof***REMOVED***LocalVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.consolidateInitializers();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***disallowImportReassignment()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.context.error(logIllegalImportReassignment(this.name,***REMOVED***this.context.module.id),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getVariableRespectingTDZ()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isPossibleTDZ())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isPureFunction(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentPureFunction***REMOVED***=***REMOVED***this.context.manualPureFunctions[this.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***segment***REMOVED***of***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentPureFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentPureFunction[PureFunctionKey])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentPureFunction***REMOVED***=***REMOVED***currentPureFunction[segment];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***currentPureFunction?.[PureFunctionKey];
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***closestParentFunctionOrProgram(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(node***REMOVED***&&***REMOVED***!/^Program|Function/.test(node.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***one***REMOVED***of:***REMOVED***ArrowFunctionExpression,***REMOVED***FunctionDeclaration,***REMOVED***FunctionExpression***REMOVED***or***REMOVED***Program
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
}

function***REMOVED***treeshakeNode(node,***REMOVED***code,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code.remove(start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.annotations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***annotation***REMOVED***of***REMOVED***node.annotations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(annotation.start***REMOVED***<***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(annotation.start,***REMOVED***annotation.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***removeAnnotations(node,***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.annotations***REMOVED***&&***REMOVED***node.parent.type***REMOVED***===***REMOVED***ExpressionStatement$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.annotations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***annotation***REMOVED***of***REMOVED***node.annotations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(annotation.start,***REMOVED***annotation.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***NO_SEMICOLON***REMOVED***=***REMOVED***{***REMOVED***isNoStatement:***REMOVED***true***REMOVED***};
//***REMOVED***This***REMOVED***assumes***REMOVED***there***REMOVED***are***REMOVED***only***REMOVED***white-space***REMOVED***and***REMOVED***comments***REMOVED***between***REMOVED***start***REMOVED***and***REMOVED***the***REMOVED***string***REMOVED***we***REMOVED***are***REMOVED***looking***REMOVED***for
function***REMOVED***findFirstOccurrenceOutsideComment(code,***REMOVED***searchString,***REMOVED***start***REMOVED***=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***searchPos,***REMOVED***charCodeAfterSlash;
***REMOVED******REMOVED******REMOVED******REMOVED***searchPos***REMOVED***=***REMOVED***code.indexOf(searchString,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***code.indexOf('/',***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***===***REMOVED***-1***REMOVED***||***REMOVED***start***REMOVED***>=***REMOVED***searchPos)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchPos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***charCodeAfterSlash***REMOVED***=***REMOVED***code.charCodeAt(++start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***With***REMOVED***our***REMOVED***assumption,***REMOVED***'/'***REMOVED***always***REMOVED***starts***REMOVED***a***REMOVED***comment.***REMOVED***Determine***REMOVED***comment***REMOVED***type:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***charCodeAfterSlash***REMOVED***===***REMOVED***47***REMOVED***/*"/"*/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***code.indexOf('\n',***REMOVED***start)***REMOVED***+***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***code.indexOf('*/',***REMOVED***start)***REMOVED***+***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***>***REMOVED***searchPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchPos***REMOVED***=***REMOVED***code.indexOf(searchString,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***NON_WHITESPACE***REMOVED***=***REMOVED***/\S/g;
function***REMOVED***findNonWhiteSpace(code,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***NON_WHITESPACE.lastIndex***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***NON_WHITESPACE.exec(code);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.index;
}
//***REMOVED***This***REMOVED***assumes***REMOVED***"code"***REMOVED***only***REMOVED***contains***REMOVED***white-space***REMOVED***and***REMOVED***comments
//***REMOVED***Returns***REMOVED***position***REMOVED***of***REMOVED***line-comment***REMOVED***if***REMOVED***applicable
function***REMOVED***findFirstLineBreakOutsideComment(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lineBreakPos,***REMOVED***charCodeAfterSlash,***REMOVED***start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***lineBreakPos***REMOVED***=***REMOVED***code.indexOf('\n',***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***code.indexOf('/',***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***===***REMOVED***-1***REMOVED***||***REMOVED***start***REMOVED***>***REMOVED***lineBreakPos)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[lineBreakPos,***REMOVED***lineBreakPos***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***With***REMOVED***our***REMOVED***assumption,***REMOVED***'/'***REMOVED***always***REMOVED***starts***REMOVED***a***REMOVED***comment.***REMOVED***Determine***REMOVED***comment***REMOVED***type:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***charCodeAfterSlash***REMOVED***=***REMOVED***code.charCodeAt(start***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(charCodeAfterSlash***REMOVED***===***REMOVED***47***REMOVED***/*"/"*/)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[start,***REMOVED***lineBreakPos***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***code.indexOf('*/',***REMOVED***start***REMOVED***+***REMOVED***3)***REMOVED***+***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***>***REMOVED***lineBreakPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakPos***REMOVED***=***REMOVED***code.indexOf('\n',***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***renderStatementList(statements,***REMOVED***code,***REMOVED***start,***REMOVED***end,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentNode,***REMOVED***currentNodeStart,***REMOVED***currentNodeNeedsBoundaries,***REMOVED***nextNodeStart;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nextNode***REMOVED***=***REMOVED***statements[0];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nextNodeNeedsBoundaries***REMOVED***=***REMOVED***!nextNode.included***REMOVED***||***REMOVED***nextNode.needsBoundaries;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextNodeNeedsBoundaries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNodeStart***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***+***REMOVED***findFirstLineBreakOutsideComment(code.original.slice(start,***REMOVED***nextNode.start))[1];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***nextIndex***REMOVED***=***REMOVED***1;***REMOVED***nextIndex***REMOVED***<=***REMOVED***statements.length;***REMOVED***nextIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNode***REMOVED***=***REMOVED***nextNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNodeStart***REMOVED***=***REMOVED***nextNodeStart;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNodeNeedsBoundaries***REMOVED***=***REMOVED***nextNodeNeedsBoundaries;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode***REMOVED***=***REMOVED***statements[nextIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNodeNeedsBoundaries***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***false***REMOVED***:***REMOVED***!nextNode.included***REMOVED***||***REMOVED***nextNode.needsBoundaries;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentNodeNeedsBoundaries***REMOVED***||***REMOVED***nextNodeNeedsBoundaries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNodeStart***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNode.end***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***findFirstLineBreakOutsideComment(code.original.slice(currentNode.end,***REMOVED***nextNode***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***end***REMOVED***:***REMOVED***nextNode.start))[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentNode.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNodeNeedsBoundaries
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***currentNode.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***nextNodeStart,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***currentNodeStart
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***currentNode.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeshakeNode(currentNode,***REMOVED***code,***REMOVED***currentNodeStart,***REMOVED***nextNodeStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNode.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
//***REMOVED***This***REMOVED***assumes***REMOVED***that***REMOVED***the***REMOVED***first***REMOVED***character***REMOVED***is***REMOVED***not***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***first***REMOVED***node
function***REMOVED***getCommaSeparatedNodesWithBoundaries(nodes,***REMOVED***code,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***splitUpNodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***node,***REMOVED***nextNodeStart,***REMOVED***contentEnd,***REMOVED***char;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***separator***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***nextNode***REMOVED***of***REMOVED***nodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separator***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.end***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***findFirstOccurrenceOutsideComment(code.original.slice(node.end,***REMOVED***nextNode.start),***REMOVED***',');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNodeStart***REMOVED***=***REMOVED***contentEnd***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separator***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***1***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***findFirstLineBreakOutsideComment(code.original.slice(separator***REMOVED***+***REMOVED***1,***REMOVED***nextNode.start))[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(((char***REMOVED***=***REMOVED***code.original.charCodeAt(nextNodeStart)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***char***REMOVED***===***REMOVED***32***REMOVED***/*"***REMOVED***"*/***REMOVED***||***REMOVED***char***REMOVED***===***REMOVED***9***REMOVED***/*"\t"*/***REMOVED***||***REMOVED***char***REMOVED***===***REMOVED***10***REMOVED***/*"\n"*/***REMOVED***||***REMOVED***char***REMOVED***===***REMOVED***13)***REMOVED***/*"\r"*/)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNodeStart++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***splitUpNodes.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contentEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***nextNodeStart,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separator,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***nextNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***nextNodeStart;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***splitUpNodes.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contentEnd:***REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separator:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***splitUpNodes;
}
//***REMOVED***This***REMOVED***assumes***REMOVED***there***REMOVED***are***REMOVED***only***REMOVED***white-space***REMOVED***and***REMOVED***comments***REMOVED***between***REMOVED***start***REMOVED***and***REMOVED***end
function***REMOVED***removeLineBreaks(code,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[removeStart,***REMOVED***removeEnd]***REMOVED***=***REMOVED***findFirstLineBreakOutsideComment(code.original.slice(start,***REMOVED***end));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removeStart***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(start***REMOVED***+***REMOVED***removeStart,***REMOVED***(start***REMOVED***+=***REMOVED***removeEnd));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***BlockScope***REMOVED***extends***REMOVED***ChildScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***isHoisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isHoisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.parent.addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***isHoisted);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Necessary***REMOVED***to***REMOVED***make***REMOVED***sure***REMOVED***the***REMOVED***init***REMOVED***is***REMOVED***deoptimized***REMOVED***for***REMOVED***conditional***REMOVED***declarations.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***cannot***REMOVED***call***REMOVED***deoptimizePath***REMOVED***here.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.markInitializersForDeoptimization();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ExpressionStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.directive***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.directive***REMOVED***!==***REMOVED***'use***REMOVED***strict'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.type***REMOVED***===***REMOVED***Program$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.log(LOGLEVEL_WARN,***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***is***REMOVED***necessary,***REMOVED***because***REMOVED***either***REMOVED***way***REMOVED***(deleting***REMOVED***or***REMOVED***not)***REMOVED***can***REMOVED***lead***REMOVED***to***REMOVED***errors.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logModuleLevelDirective(this.directive,***REMOVED***this.context.module.id),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.included)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.insertSemicolon(code);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***shouldBeIncluded(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.directive***REMOVED***&&***REMOVED***this.directive***REMOVED***!==***REMOVED***'use***REMOVED***strict')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.type***REMOVED***!==***REMOVED***Program$1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.shouldBeIncluded(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***BlockStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.directlyIncluded***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addImplicitReturnExpressionToScope()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastStatement***REMOVED***=***REMOVED***this.body[this.body.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!lastStatement***REMOVED***||***REMOVED***lastStatement.type***REMOVED***!==***REMOVED***ReturnStatement$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addReturnExpression(UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***this.parent.preventChildBlockScope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***parentScope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***new***REMOVED***BlockScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.deoptimizeBody)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.brokenFlow)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.deoptimizeBody***REMOVED***&&***REMOVED***this.directlyIncluded))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.directlyIncluded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.deoptimizeBody)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeChildrenRecursively***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***node.shouldBeIncluded(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstBodyStatement***REMOVED***=***REMOVED***this.body[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizeBody***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstBodyStatement***REMOVED***instanceof***REMOVED***ExpressionStatement***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstBodyStatement.directive***REMOVED***===***REMOVED***'use***REMOVED***asm';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderStatementList(this.body,***REMOVED***code,***REMOVED***this.start***REMOVED***+***REMOVED***1,***REMOVED***this.end***REMOVED***-***REMOVED***1,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***RestElement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationInit***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addExportedVariables(variables,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.addExportedVariables(variables,***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***declare(kind,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationInit***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.argument.declare(kind,***REMOVED***UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.argument.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(path.length***REMOVED***>***REMOVED***0***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markDeclarationReached()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.declarationInit***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationInit.deoptimizePath([UnknownKey,***REMOVED***UnknownKey]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***FunctionBase***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.objectEntity***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedReturn***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***parameters***REMOVED***}***REMOVED***=***REMOVED***this.scope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***args***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasRest***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***position***REMOVED***=***REMOVED***0;***REMOVED***position***REMOVED***<***REMOVED***args.length***REMOVED***-***REMOVED***1;***REMOVED***position++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parameter***REMOVED***=***REMOVED***this.params[position];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Only***REMOVED***the***REMOVED***"this"***REMOVED***argument***REMOVED***arg[0]***REMOVED***can***REMOVED***be***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***argument***REMOVED***=***REMOVED***args[position***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasRest***REMOVED***||***REMOVED***parameter***REMOVED***instanceof***REMOVED***RestElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasRest***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(parameter***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameters[position][0].addEntityToBeDeoptimized(argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addArgumentToBeDeoptimized(argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(parameter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addArgumentToBeDeoptimized(argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***path[0]***REMOVED***===***REMOVED***UnknownKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***reassignment***REMOVED***of***REMOVED***UNKNOWN_PATH***REMOVED***is***REMOVED***considered***REMOVED***equivalent***REMOVED***to***REMOVED***having***REMOVED***lost***REMOVED***track
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***which***REMOVED***means***REMOVED***the***REMOVED***return***REMOVED***expression***REMOVED***and***REMOVED***parameters***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***reassigned
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameterList***REMOVED***of***REMOVED***this.scope.parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameter***REMOVED***of***REMOVED***parameterList)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameter.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.async)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimizedReturn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedReturn***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.scope.getReturnExpression(),***REMOVED***false];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***interaction.type***REMOVED***!==***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.annotationNoSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.async)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***propertyReadSideEffects***REMOVED***}***REMOVED***=***REMOVED***this.context.options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***returnExpression***REMOVED***=***REMOVED***this.scope.getReturnExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(returnExpression.hasEffectsOnInteractionAtPath(['then'],***REMOVED***NODE_INTERACTION_UNKNOWN_CALL,***REMOVED***context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(propertyReadSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(propertyReadSideEffects***REMOVED***===***REMOVED***'always'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnExpression.hasEffectsOnInteractionAtPath(['then'],***REMOVED***NODE_INTERACTION_UNKNOWN_ACCESS,***REMOVED***context))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameter***REMOVED***of***REMOVED***this.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parameter.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addParameterVariables(this.params.map(parameter***REMOVED***=>***REMOVED***parameter.declare('parameter',***REMOVED***UNKNOWN_EXPRESSION)),***REMOVED***this.params[this.params.length***REMOVED***-***REMOVED***1]***REMOVED***instanceof***REMOVED***RestElement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body***REMOVED***instanceof***REMOVED***BlockStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.addImplicitReturnExpressionToScope();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addReturnExpression(this.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esTreeNode.body.type***REMOVED***===***REMOVED***BlockStatement$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body***REMOVED***=***REMOVED***new***REMOVED***BlockStatement(esTreeNode.body,***REMOVED***this,***REMOVED***this.scope.hoistedBodyVarScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addArgumentToBeDeoptimized(_argument)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}
FunctionBase.prototype.preventChildBlockScope***REMOVED***=***REMOVED***true;

class***REMOVED***ArrowFunctionExpression***REMOVED***extends***REMOVED***FunctionBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.objectEntity***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***ReturnValueScope(parentScope,***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.annotationNoSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***ignore,***REMOVED***brokenFlow***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignore***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***breaks:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continues:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labels:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnYield:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignore***REMOVED***=***REMOVED***ignore;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameter***REMOVED***of***REMOVED***this.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(parameter***REMOVED***instanceof***REMOVED***Identifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameter.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getObjectEntity()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.objectEntity***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.objectEntity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.objectEntity***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity([],***REMOVED***OBJECT_PROTOTYPE));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***getSystemExportStatement(exportedVariables,***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***snippets:***REMOVED***{***REMOVED***_,***REMOVED***getObject,***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***},***REMOVED***modifier***REMOVED***=***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportedVariables.length***REMOVED***===***REMOVED***1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportNamesByVariable.get(exportedVariables[0]).length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***exportedVariables[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`exports('${exportNamesByVariable.get(variable)}',${_}${variable.getName(getPropertyAccess)}${modifier})`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***exportedVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***exportNamesByVariable.get(variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fields.push([exportName,***REMOVED***variable.getName(getPropertyAccess)***REMOVED***+***REMOVED***modifier]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`exports(${getObject(fields,***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***null***REMOVED***})})`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***renderSystemExportExpression(exportedVariable,***REMOVED***expressionStart,***REMOVED***expressionEnd,***REMOVED***code,***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***snippets:***REMOVED***{***REMOVED***_***REMOVED***}***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(expressionStart,***REMOVED***`exports('${exportNamesByVariable.get(exportedVariable)}',${_}`);
***REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(expressionEnd,***REMOVED***')');
}
function***REMOVED***renderSystemExportFunction(exportedVariables,***REMOVED***expressionStart,***REMOVED***expressionEnd,***REMOVED***needsParens,***REMOVED***code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnIifeLeft***REMOVED***}***REMOVED***=***REMOVED***options.snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(expressionStart,***REMOVED***getDirectReturnIifeLeft(['v'],***REMOVED***`${getSystemExportStatement(exportedVariables,***REMOVED***options)},${_}v`,***REMOVED***{***REMOVED***needsArrowReturnParens:***REMOVED***true,***REMOVED***needsWrappedFunction:***REMOVED***needsParens***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(expressionEnd,***REMOVED***')');
}
function***REMOVED***renderSystemExportSequenceAfterExpression(exportedVariable,***REMOVED***expressionStart,***REMOVED***expressionEnd,***REMOVED***needsParens,***REMOVED***code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***=***REMOVED***options.snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(expressionEnd,***REMOVED***`,${_}${getSystemExportStatement([exportedVariable],***REMOVED***options)},${_}${exportedVariable.getName(getPropertyAccess)}`);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsParens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(expressionStart,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(expressionEnd,***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***renderSystemExportSequenceBeforeExpression(exportedVariable,***REMOVED***expressionStart,***REMOVED***expressionEnd,***REMOVED***needsParens,***REMOVED***code,***REMOVED***options,***REMOVED***modifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_***REMOVED***}***REMOVED***=***REMOVED***options.snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(expressionStart,***REMOVED***`${getSystemExportStatement([exportedVariable],***REMOVED***options,***REMOVED***modifier)},${_}`);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsParens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(expressionStart,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(expressionEnd,***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ObjectPattern***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***addExportedVariables(variables,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.type***REMOVED***===***REMOVED***Property$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.value.addExportedVariables(variables,***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.argument.addExportedVariables(variables,***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***declare(kind,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variables***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variables.push(...property.declare(kind,***REMOVED***init));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variables;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***At***REMOVED***the***REMOVED***moment,***REMOVED***this***REMOVED***is***REMOVED***only***REMOVED***triggered***REMOVED***for***REMOVED***assignment***REMOVED***left-hand***REMOVED***sides,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***where***REMOVED***the***REMOVED***path***REMOVED***is***REMOVED***empty
***REMOVED******REMOVED******REMOVED******REMOVED***_path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***interaction,***REMOVED***context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markDeclarationReached()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***AssignmentExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***deoptimized,***REMOVED***left,***REMOVED***operator,***REMOVED***right***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***MemberExpressions***REMOVED***do***REMOVED***not***REMOVED***access***REMOVED***the***REMOVED***property***REMOVED***before***REMOVED***assignments***REMOVED***if***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***operator***REMOVED***is***REMOVED***'='.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(right.hasEffects(context)***REMOVED***||***REMOVED***left.hasEffectsAsAssignmentTarget(context,***REMOVED***operator***REMOVED***!==***REMOVED***'='));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.right.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***deoptimized,***REMOVED***left,***REMOVED***right,***REMOVED***operator***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***operator***REMOVED***!==***REMOVED***'='***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.included***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.hasEffectsAsAssignmentTarget(createHasEffectsContext(),***REMOVED***false))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.includeAsAssignmentTarget(context,***REMOVED***includeChildrenRecursively,***REMOVED***operator***REMOVED***!==***REMOVED***'=');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.setAssignedValue(this.right);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***preventASI,***REMOVED***renderedParentType,***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***left,***REMOVED***right,***REMOVED***start,***REMOVED***end,***REMOVED***parent***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inclusionStart***REMOVED***=***REMOVED***findNonWhiteSpace(code.original,***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'=',***REMOVED***left.end)***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(start,***REMOVED***inclusionStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preventASI)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeLineBreaks(code,***REMOVED***inclusionStart,***REMOVED***right.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedParentType:***REMOVED***renderedParentType***REMOVED***||***REMOVED***parent.type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement:***REMOVED***renderedSurroundingElement***REMOVED***||***REMOVED***parent.type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.format***REMOVED***===***REMOVED***'system')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***left.variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportNames***REMOVED***=***REMOVED***options.exportNamesByVariable.get(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNames.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportExpression(variable,***REMOVED***start,***REMOVED***end,***REMOVED***code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportSequenceAfterExpression(variable,***REMOVED***start,***REMOVED***end,***REMOVED***parent.type***REMOVED***!==***REMOVED***ExpressionStatement$1,***REMOVED***code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***systemPatternExports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.addExportedVariables(systemPatternExports,***REMOVED***options.exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(systemPatternExports.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportFunction(systemPatternExports,***REMOVED***start,***REMOVED***end,***REMOVED***renderedSurroundingElement***REMOVED***===***REMOVED***ExpressionStatement$1,***REMOVED***code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left.included***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***instanceof***REMOVED***ObjectPattern***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(renderedSurroundingElement***REMOVED***===***REMOVED***ExpressionStatement$1***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement***REMOVED***===***REMOVED***ArrowFunctionExpression$1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(start,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(end,***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***AssignmentPattern***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***addExportedVariables(variables,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.addExportedVariables(variables,***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***declare(kind,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.left.declare(kind,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.left.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(path.length***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***this.left.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markDeclarationReached()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***isShorthandProperty***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.render(code,***REMOVED***options,***REMOVED***{***REMOVED***isShorthandProperty***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ArgumentsVariable***REMOVED***extends***REMOVED***LocalVariable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super('arguments',***REMOVED***null,***REMOVED***UNKNOWN_EXPRESSION,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedArguments***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addArgumentToBeDeoptimized(argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedArguments.push(argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***this.deoptimizedArguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizedArguments.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ThisVariable***REMOVED***extends***REMOVED***ParameterVariable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super('this',***REMOVED***null,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(context.replacedVariableInits.get(this)***REMOVED***||***REMOVED***UNKNOWN_EXPRESSION).hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***FunctionScope***REMOVED***extends***REMOVED***ReturnValueScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(parent,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(parent,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set('arguments',***REMOVED***(this.argumentsVariable***REMOVED***=***REMOVED***new***REMOVED***ArgumentsVariable(context)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set('this',***REMOVED***(this.thisVariable***REMOVED***=***REMOVED***new***REMOVED***ThisVariable(context)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findLexicalBoundary()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argumentsVariable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!argument.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***FunctionNode***REMOVED***extends***REMOVED***FunctionBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.objectEntity***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***FunctionScope(parentScope,***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.constructedEntity***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity(Object.create(null),***REMOVED***OBJECT_PROTOTYPE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***makes***REMOVED***sure***REMOVED***that***REMOVED***all***REMOVED***deoptimizations***REMOVED***of***REMOVED***"this"***REMOVED***are***REMOVED***applied***REMOVED***to***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***constructed***REMOVED***entity.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.thisVariable.addEntityToBeDeoptimized(this.constructedEntity);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***interaction.args[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***args[0]***REMOVED***is***REMOVED***the***REMOVED***"this"***REMOVED***argument
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.thisVariable.addEntityToBeDeoptimized(interaction.args[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.annotationNoSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!this.id?.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.annotationNoSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***thisInit***REMOVED***=***REMOVED***context.replacedVariableInits.get(this.scope.thisVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.replacedVariableInits.set(this.scope.thisVariable,***REMOVED***interaction.withNew***REMOVED***?***REMOVED***this.constructedEntity***REMOVED***:***REMOVED***UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow,***REMOVED***ignore,***REMOVED***replacedVariableInits***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignore***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***breaks:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continues:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labels:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnYield:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this:***REMOVED***interaction.withNew
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(thisInit)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacedVariableInits.set(this.scope.thisVariable,***REMOVED***thisInit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacedVariableInits.delete(this.scope.thisVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignore***REMOVED***=***REMOVED***ignore;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id?.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasArguments***REMOVED***=***REMOVED***this.scope.argumentsVariable.included;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***parameter***REMOVED***of***REMOVED***this.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(parameter***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***||***REMOVED***hasArguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameter.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.initialise();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id?.declare('function',***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addArgumentToBeDeoptimized(argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.argumentsVariable.addArgumentToBeDeoptimized(argument);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getObjectEntity()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.objectEntity***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.objectEntity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.objectEntity***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***'prototype',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***'init',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***new***REMOVED***ObjectEntity([],***REMOVED***OBJECT_PROTOTYPE)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],***REMOVED***OBJECT_PROTOTYPE));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***AwaitExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkTopLevelAwait:***REMOVED***if***REMOVED***(!this.context.usesTopLevelAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parent***REMOVED***=***REMOVED***this.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***instanceof***REMOVED***FunctionNode***REMOVED***||***REMOVED***parent***REMOVED***instanceof***REMOVED***ArrowFunctionExpression)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***checkTopLevelAwait;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***((parent***REMOVED***=***REMOVED***parent.parent));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.usesTopLevelAwait***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***binaryOperators***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'!=':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***!=***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'!==':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***!==***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'%':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***%***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'&':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***&***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'*':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED*******REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***At***REMOVED***the***REMOVED***moment,***REMOVED***"**"***REMOVED***will***REMOVED***be***REMOVED***transpiled***REMOVED***to***REMOVED***Math.pow
***REMOVED******REMOVED******REMOVED******REMOVED***'**':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED********REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'+':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***+***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'-':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***-***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'/':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***/***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'<':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***<***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'<<':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***<<***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'<=':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***<=***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'==':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***==***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'===':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***===***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'>':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***>***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'>=':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***>=***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'>>':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***>>***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'>>>':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***>>>***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'^':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***^***REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED***'|':***REMOVED***(left,***REMOVED***right)***REMOVED***=>***REMOVED***left***REMOVED***|***REMOVED***right
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***use***REMOVED***the***REMOVED***fallback***REMOVED***for***REMOVED***cases***REMOVED***where***REMOVED***we***REMOVED***return***REMOVED***something***REMOVED***unknown
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in:***REMOVED***()***REMOVED***=>***REMOVED***UnknownValue,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***instanceof:***REMOVED***()***REMOVED***=>***REMOVED***UnknownValue,
};
class***REMOVED***BinaryExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***leftValue***REMOVED***=***REMOVED***this.left.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***leftValue***REMOVED***===***REMOVED***'symbol')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rightValue***REMOVED***=***REMOVED***this.right.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***rightValue***REMOVED***===***REMOVED***'symbol')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operatorFunction***REMOVED***=***REMOVED***binaryOperators[this.operator];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!operatorFunction)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***operatorFunction(leftValue,***REMOVED***rightValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***support***REMOVED***some***REMOVED***implicit***REMOVED***type***REMOVED***coercion***REMOVED***runtime***REMOVED***errors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.operator***REMOVED***===***REMOVED***'+'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***instanceof***REMOVED***ExpressionStatement***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this)***REMOVED***===***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***BreakStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.label)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.ignore.labels.has(this.label.name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedLabels.add(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.ignore.breaks)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.label)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.label.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedLabels.add(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***renderCallArguments(code,***REMOVED***options,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.arguments.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.arguments[node.arguments.length***REMOVED***-***REMOVED***1].included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***node.arguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastIncludedIndex***REMOVED***=***REMOVED***node.arguments.length***REMOVED***-***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(lastIncludedIndex***REMOVED***>=***REMOVED***0***REMOVED***&&***REMOVED***!node.arguments[lastIncludedIndex].included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastIncludedIndex--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastIncludedIndex***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<=***REMOVED***lastIncludedIndex;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments[index].render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(findFirstOccurrenceOutsideComment(code.original,***REMOVED***',',***REMOVED***node.arguments[lastIncludedIndex].end),***REMOVED***node.end***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(findFirstOccurrenceOutsideComment(code.original,***REMOVED***'(',***REMOVED***node.callee.end)***REMOVED***+***REMOVED***1,***REMOVED***node.end***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***Literal***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***unknown***REMOVED***literals***REMOVED***can***REMOVED***also***REMOVED***be***REMOVED***null***REMOVED***but***REMOVED***do***REMOVED***not***REMOVED***start***REMOVED***with***REMOVED***an***REMOVED***"n"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.value***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***this.context.code.charCodeAt(this.start)***REMOVED***!==***REMOVED***110)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***this.value***REMOVED***===***REMOVED***'bigint'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***support***REMOVED***shims***REMOVED***for***REMOVED***regular***REMOVED***expressions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.code.charCodeAt(this.start)***REMOVED***===***REMOVED***47)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***!==***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMemberReturnExpressionWhenCalled(this.members,***REMOVED***path[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(interaction.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ACCESSED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***(this.value***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_ASSIGNED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***INTERACTION_CALLED:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.included***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value***REMOVED***instanceof***REMOVED***RegExp***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.value.global***REMOVED***||***REMOVED***this.value.sticky))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(path.length***REMOVED***!==***REMOVED***1***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasMemberEffectWhenCalled(this.members,***REMOVED***path[0],***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.members***REMOVED***=***REMOVED***getLiteralMembersForValue(this.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***esTreeNode.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regex***REMOVED***=***REMOVED***esTreeNode.regex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.value***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.indentExclusionRanges.push([this.start***REMOVED***+***REMOVED***1,***REMOVED***this.end***REMOVED***-***REMOVED***1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

//***REMOVED***To***REMOVED***avoid***REMOVED***infinite***REMOVED***recursions
const***REMOVED***MAX_PATH_DEPTH***REMOVED***=***REMOVED***7;
function***REMOVED***getResolvablePropertyKey(memberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memberExpression.computed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***getResolvableComputedPropertyKey(memberExpression.property)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***memberExpression.property.name;
}
function***REMOVED***getResolvableComputedPropertyKey(propertyKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propertyKey***REMOVED***instanceof***REMOVED***Literal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(propertyKey.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
}
function***REMOVED***getPathIfNotComputed(memberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextPathKey***REMOVED***=***REMOVED***memberExpression.propertyKey;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***object***REMOVED***=***REMOVED***memberExpression.object;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***nextPathKey***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(object***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***key:***REMOVED***object.name,***REMOVED***pos:***REMOVED***object.start***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***key:***REMOVED***nextPathKey,***REMOVED***pos:***REMOVED***memberExpression.property.start***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(object***REMOVED***instanceof***REMOVED***MemberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentPath***REMOVED***=***REMOVED***getPathIfNotComputed(object);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(parentPath***REMOVED***&&***REMOVED***[...parentPath,***REMOVED***{***REMOVED***key:***REMOVED***nextPathKey,***REMOVED***pos:***REMOVED***memberExpression.property.start***REMOVED***}]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
}
function***REMOVED***getStringFromPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***pathString***REMOVED***=***REMOVED***path[0].key;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***1;***REMOVED***index***REMOVED***<***REMOVED***path.length;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pathString***REMOVED***+=***REMOVED***'.'***REMOVED***+***REMOVED***path[index].key;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pathString;
}
class***REMOVED***MemberExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assignmentDeoptimized***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.bound***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isUndefined***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.bound***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***path***REMOVED***=***REMOVED***getPathIfNotComputed(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***baseVariable***REMOVED***=***REMOVED***path***REMOVED***&&***REMOVED***this.scope.findVariable(path[0].key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(baseVariable?.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolvedVariable***REMOVED***=***REMOVED***resolveNamespaceVariables(baseVariable,***REMOVED***path.slice(1),***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resolvedVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.bind();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(resolvedVariable***REMOVED***===***REMOVED***'undefined')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isUndefined***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***resolvedVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addNamespaceMemberAccess(getStringFromPath(path),***REMOVED***resolvedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.bind();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!this.isUndefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***<***REMOVED***MAX_PATH_DEPTH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***[this.getPropertyKey(),***REMOVED***...path],***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***expressionsToBeDeoptimized,***REMOVED***object***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertyKey***REMOVED***=***REMOVED***UnknownKey;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***object.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.disallowNamespaceReassignment();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!this.isUndefined***REMOVED***&&***REMOVED***path.length***REMOVED***<***REMOVED***MAX_PATH_DEPTH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propertyKey***REMOVED***=***REMOVED***this.getPropertyKey();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.deoptimizePath([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyKey***REMOVED***===***REMOVED***UnknownKey***REMOVED***?***REMOVED***UnknownNonAccessorKey***REMOVED***:***REMOVED***propertyKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...path
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variable.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUndefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.propertyKey***REMOVED***!==***REMOVED***UnknownKey***REMOVED***&&***REMOVED***path.length***REMOVED***<***REMOVED***MAX_PATH_DEPTH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.object.getLiteralValueAtPath([this.getPropertyKey(),***REMOVED***...path],***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variable.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUndefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[UNDEFINED_EXPRESSION,***REMOVED***false];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.propertyKey***REMOVED***!==***REMOVED***UnknownKey***REMOVED***&&***REMOVED***path.length***REMOVED***<***REMOVED***MAX_PATH_DEPTH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.object.getReturnExpressionWhenCalledAtPath([this.getPropertyKey(),***REMOVED***...path],***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.property.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasAccessEffect(context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsAsAssignmentTarget(context,***REMOVED***checkAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkAccess***REMOVED***&&***REMOVED***!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.assignmentDeoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyAssignmentDeoptimization();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.property.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(checkAccess***REMOVED***&&***REMOVED***this.hasAccessEffect(context))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***this.assignmentInteraction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variable.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUndefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***<***REMOVED***MAX_PATH_DEPTH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.object.hasEffectsOnInteractionAtPath([this.getPropertyKey(),***REMOVED***...path],***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeProperties(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeAsAssignmentTarget(context,***REMOVED***includeChildrenRecursively,***REMOVED***deoptimizeAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.assignmentDeoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyAssignmentDeoptimization();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deoptimizeAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeProperties(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertyKey***REMOVED***=***REMOVED***getResolvablePropertyKey(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessInteraction***REMOVED***=***REMOVED***{***REMOVED***args:***REMOVED***[this.object],***REMOVED***type:***REMOVED***INTERACTION_ACCESSED***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isSkippedAsOptional(origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!this.variable***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.isUndefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.object.isSkippedAsOptional?.(origin)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.optional***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***origin)***REMOVED***==***REMOVED***null)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedParentType,***REMOVED***isCalleeOfRenderedParent,***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable***REMOVED***||***REMOVED***this.isUndefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***snippets:***REMOVED***{***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***replacement***REMOVED***=***REMOVED***this.variable***REMOVED***?***REMOVED***this.variable.getName(getPropertyAccess)***REMOVED***:***REMOVED***'undefined';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedParentType***REMOVED***&&***REMOVED***isCalleeOfRenderedParent)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacement***REMOVED***=***REMOVED***'0,***REMOVED***'***REMOVED***+***REMOVED***replacement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***this.end,***REMOVED***replacement,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contentOnly:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***storeName:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedParentType***REMOVED***&&***REMOVED***isCalleeOfRenderedParent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(this.start,***REMOVED***'0,***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.property.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setAssignedValue(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assignmentInteraction***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[this.object,***REMOVED***value],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_ASSIGNED
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***propertyReadSideEffects***REMOVED***}***REMOVED***=***REMOVED***this.context.options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Namespaces***REMOVED***are***REMOVED***not***REMOVED***bound***REMOVED***and***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***deoptimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.bound***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(this.variable***REMOVED***||***REMOVED***this.isUndefined))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propertyKey***REMOVED***=***REMOVED***this.getPropertyKey();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.deoptimizeArgumentsOnInteractionAtPath(this.accessInteraction,***REMOVED***[propertyKey],***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyAssignmentDeoptimization()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assignmentDeoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***propertyReadSideEffects***REMOVED***}***REMOVED***=***REMOVED***this.context.options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Namespaces***REMOVED***are***REMOVED***not***REMOVED***bound***REMOVED***and***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***deoptimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.bound***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(this.variable***REMOVED***||***REMOVED***this.isUndefined))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.deoptimizeArgumentsOnInteractionAtPath(this.assignmentInteraction,***REMOVED***[this.getPropertyKey()],***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***disallowNamespaceReassignment()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.object***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.scope.findVariable(this.object.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.log(LOGLEVEL_WARN,***REMOVED***logIllegalImportReassignment(this.object.name,***REMOVED***this.context.module.id),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getPropertyKey()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.propertyKey***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.propertyKey***REMOVED***=***REMOVED***UnknownKey;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.property.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.propertyKey***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***===***REMOVED***SymbolToStringTag
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'symbol'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***UnknownKey
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***String(value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.propertyKey;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasAccessEffect(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***propertyReadSideEffects***REMOVED***}***REMOVED***=***REMOVED***this.context.options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!(this.variable***REMOVED***||***REMOVED***this.isUndefined)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(propertyReadSideEffects***REMOVED***===***REMOVED***'always'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.hasEffectsOnInteractionAtPath([this.getPropertyKey()],***REMOVED***this.accessInteraction,***REMOVED***context)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeProperties(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.property.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***resolveNamespaceVariables(baseVariable,***REMOVED***path,***REMOVED***astContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***baseVariable;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!baseVariable.isNamespace***REMOVED***||***REMOVED***baseVariable***REMOVED***instanceof***REMOVED***ExternalVariable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportName***REMOVED***=***REMOVED***path[0].key;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***baseVariable.context.traceExport(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***baseVariable.context.fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***astContext.log(LOGLEVEL_WARN,***REMOVED***logMissingExport(exportName,***REMOVED***astContext.module.id,***REMOVED***fileName),***REMOVED***path[0].pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'undefined';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveNamespaceVariables(variable,***REMOVED***path.slice(1),***REMOVED***astContext);
}

class***REMOVED***CallExpressionBase***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizableDependentExpressions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***args***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[returnExpression,***REMOVED***isPure]***REMOVED***=***REMOVED***this.getReturnExpression(recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPure)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deoptimizedExpressions***REMOVED***=***REMOVED***args.filter(expression***REMOVED***=>***REMOVED***!!expression***REMOVED***&&***REMOVED***expression***REMOVED***!==***REMOVED***UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deoptimizedExpressions.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(returnExpression***REMOVED***===***REMOVED***UNKNOWN_EXPRESSION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***deoptimizedExpressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recursionTracker.withTrackedEntityAtPath(path,***REMOVED***returnExpression,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***deoptimizedExpressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.add(expression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnExpression.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.returnExpression?.[0]***REMOVED***!==***REMOVED***UNKNOWN_EXPRESSION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***deoptimizableDependentExpressions,***REMOVED***expressionsToBeDeoptimized***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***EMPTY_SET;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizableDependentExpressions***REMOVED***=***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***deoptimizableDependentExpressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path,***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[returnExpression]***REMOVED***=***REMOVED***this.getReturnExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(returnExpression***REMOVED***!==***REMOVED***UNKNOWN_EXPRESSION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnExpression.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[returnExpression]***REMOVED***=***REMOVED***this.getReturnExpression(recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(returnExpression***REMOVED***===***REMOVED***UNKNOWN_EXPRESSION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***recursionTracker.withTrackedEntityAtPath(path,***REMOVED***returnExpression,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizableDependentExpressions.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnExpression.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***UnknownValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***returnExpression***REMOVED***=***REMOVED***this.getReturnExpression(recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(returnExpression[0]***REMOVED***===***REMOVED***UNKNOWN_EXPRESSION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnExpression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***recursionTracker.withTrackedEntityAtPath(path,***REMOVED***returnExpression,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizableDependentExpressions.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[expression,***REMOVED***isPure]***REMOVED***=***REMOVED***returnExpression[0].getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[expression,***REMOVED***isPure***REMOVED***||***REMOVED***returnExpression[1]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***UNKNOWN_RETURN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***args,***REMOVED***withNew***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((withNew***REMOVED***?***REMOVED***context.instantiated***REMOVED***:***REMOVED***context.called).trackEntityAtPathAndGetIfTracked(path,***REMOVED***args,***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***((type***REMOVED***===***REMOVED***INTERACTION_ASSIGNED
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***context.assigned
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***context.accessed).trackEntityAtPathAndGetIfTracked(path,***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[returnExpression,***REMOVED***isPure]***REMOVED***=***REMOVED***this.getReturnExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***((type***REMOVED***===***REMOVED***INTERACTION_ASSIGNED***REMOVED***||***REMOVED***!isPure)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnExpression.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***CallExpression***REMOVED***extends***REMOVED***CallExpressionBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.bind();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.callee***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.scope.findVariable(this.callee.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.log(LOGLEVEL_WARN,***REMOVED***logCannotCallNamespace(this.callee.name),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.callee.name***REMOVED***===***REMOVED***'eval')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.log(LOGLEVEL_WARN,***REMOVED***logEval(this.context.module.id),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.interaction***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee***REMOVED***instanceof***REMOVED***MemberExpression***REMOVED***&&***REMOVED***!this.callee.variable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.callee.object
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...this.arguments
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***this.arguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.annotationPure)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.callee.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***this.interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***===***REMOVED***INCLUDE_PARAMETERS***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee***REMOVED***instanceof***REMOVED***Identifier***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.variable.markCalledFromTryStatement();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.includeCallArguments(context,***REMOVED***this.arguments);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isSkippedAsOptional(origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.callee.isSkippedAsOptional?.(origin)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.optional***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***origin)***REMOVED***==***REMOVED***null));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCalleeOfRenderedParent:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderCallArguments(code,***REMOVED***options,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.deoptimizeArgumentsOnInteractionAtPath(this.interaction,***REMOVED***EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpression(recursionTracker***REMOVED***=***REMOVED***SHARED_RECURSION_TRACKER)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.returnExpression***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.returnExpression***REMOVED***=***REMOVED***this.callee.getReturnExpressionWhenCalledAtPath(EMPTY_PATH,***REMOVED***this.interaction,***REMOVED***recursionTracker,***REMOVED***this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.returnExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***CatchScope***REMOVED***extends***REMOVED***ParameterScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***isHoisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingParameter***REMOVED***=***REMOVED***this.variables.get(identifier.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingParameter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***While***REMOVED***we***REMOVED***still***REMOVED***create***REMOVED***a***REMOVED***hoisted***REMOVED***declaration,***REMOVED***the***REMOVED***initializer***REMOVED***goes***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***parameter.***REMOVED***Note***REMOVED***that***REMOVED***technically,***REMOVED***the***REMOVED***declaration***REMOVED***now***REMOVED***belongs***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***two***REMOVED***variables,***REMOVED***which***REMOVED***is***REMOVED***not***REMOVED***correct***REMOVED***but***REMOVED***should***REMOVED***not***REMOVED***cause***REMOVED***issues.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.addDeclaration(identifier,***REMOVED***context,***REMOVED***UNDEFINED_EXPRESSION,***REMOVED***isHoisted);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingParameter.addDeclaration(identifier,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***existingParameter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***isHoisted);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***CatchClause***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***CatchScope(parentScope,***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Parameters***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***declared***REMOVED***first***REMOVED***as***REMOVED***the***REMOVED***logic***REMOVED***is***REMOVED***that***REMOVED***initializers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***of***REMOVED***hoisted***REMOVED***body***REMOVED***variables***REMOVED***are***REMOVED***associated***REMOVED***with***REMOVED***parameters***REMOVED***of***REMOVED***the***REMOVED***same
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***name***REMOVED***instead***REMOVED***of***REMOVED***the***REMOVED***variable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***param***REMOVED***}***REMOVED***=***REMOVED***esTreeNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.param***REMOVED***=***REMOVED***new***REMOVED***(this.context.getNodeConstructor(param.type))(param,***REMOVED***this,***REMOVED***this.scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.param.declare('parameter',***REMOVED***UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ChainExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***deoptimizations***REMOVED***are***REMOVED***not***REMOVED***relevant***REMOVED***as***REMOVED***we***REMOVED***are***REMOVED***not***REMOVED***caching***REMOVED***values
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.expression.isSkippedAsOptional(origin))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expression.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.expression.isSkippedAsOptional(this))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expression.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ClassBodyScope***REMOVED***extends***REMOVED***ChildScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(parent,***REMOVED***classNode,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set('this',***REMOVED***(this.thisVariable***REMOVED***=***REMOVED***new***REMOVED***LocalVariable('this',***REMOVED***null,***REMOVED***classNode,***REMOVED***context)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.instanceScope***REMOVED***=***REMOVED***new***REMOVED***ChildScope(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.instanceScope.variables.set('this',***REMOVED***new***REMOVED***ThisVariable(context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findLexicalBoundary()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ClassBody***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***ClassBodyScope(parentScope,***REMOVED***this.parent,***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.scope.thisVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***definition***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definition.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***(this.body***REMOVED***=***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***definition***REMOVED***of***REMOVED***esTreeNode.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body.push(new***REMOVED***(this.context.getNodeConstructor(definition.type))(definition,***REMOVED***this,***REMOVED***definition.static***REMOVED***?***REMOVED***this.scope***REMOVED***:***REMOVED***this.scope.instanceScope));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***MethodBase***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedValue***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED***REMOVED***&&***REMOVED***this.kind***REMOVED***===***REMOVED***'get'***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value.deoptimizeArgumentsOnInteractionAtPath({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***interaction.args,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***EMPTY_PATH,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_ASSIGNED***REMOVED***&&***REMOVED***this.kind***REMOVED***===***REMOVED***'set'***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value.deoptimizeArgumentsOnInteractionAtPath({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***interaction.args,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***EMPTY_PATH,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getAccessedValue()[0].deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***As***REMOVED***getter***REMOVED***properties***REMOVED***directly***REMOVED***receive***REMOVED***their***REMOVED***values***REMOVED***from***REMOVED***fixed***REMOVED***function
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***expressions,***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***known***REMOVED***situation***REMOVED***where***REMOVED***a***REMOVED***getter***REMOVED***is***REMOVED***deoptimized.
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getAccessedValue()[0].deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getAccessedValue()[0].getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getAccessedValue()[0].getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.key.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.kind***REMOVED***===***REMOVED***'get'***REMOVED***&&***REMOVED***interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***interaction.args,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***setters***REMOVED***are***REMOVED***only***REMOVED***called***REMOVED***for***REMOVED***empty***REMOVED***paths
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.kind***REMOVED***===***REMOVED***'set'***REMOVED***&&***REMOVED***interaction.type***REMOVED***===***REMOVED***INTERACTION_ASSIGNED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***interaction.args,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getAccessedValue()[0].hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getAccessedValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.accessedValue***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.kind***REMOVED***===***REMOVED***'get')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedValue***REMOVED***=***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.accessedValue***REMOVED***=***REMOVED***this.value.getReturnExpressionWhenCalledAtPath(EMPTY_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_CALL,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.accessedValue***REMOVED***=***REMOVED***[this.value,***REMOVED***false]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.accessedValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***MethodDefinition***REMOVED***extends***REMOVED***MethodBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***ObjectMember***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(object,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object***REMOVED***=***REMOVED***object;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***[this.key,***REMOVED***...path],***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.object.deoptimizePath([this.key,***REMOVED***...path]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.object.getLiteralValueAtPath([this.key,***REMOVED***...path],***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.object.getReturnExpressionWhenCalledAtPath([this.key,***REMOVED***...path],***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.object.hasEffectsOnInteractionAtPath([this.key,***REMOVED***...path],***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ClassNode***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.objectEntity***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***ChildScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizeAllProperties();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***initEffect***REMOVED***=***REMOVED***this.superClass?.hasEffects(context)***REMOVED***||***REMOVED***this.body.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id?.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***initEffect***REMOVED***||***REMOVED***super.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***!interaction.withNew***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.classConstructor***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.superClass?.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.classConstructor.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.getObjectEntity().hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.superClass?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id?.declare('class',***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***method***REMOVED***of***REMOVED***this.body.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method***REMOVED***instanceof***REMOVED***MethodDefinition***REMOVED***&&***REMOVED***method.kind***REMOVED***===***REMOVED***'constructor')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classConstructor***REMOVED***=***REMOVED***method;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classConstructor***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***definition***REMOVED***of***REMOVED***this.body.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(definition.static***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(definition***REMOVED***instanceof***REMOVED***MethodDefinition***REMOVED***&&***REMOVED***definition.kind***REMOVED***===***REMOVED***'constructor')))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Calls***REMOVED***to***REMOVED***methods***REMOVED***are***REMOVED***not***REMOVED***tracked,***REMOVED***ensure***REMOVED***that***REMOVED***the***REMOVED***return***REMOVED***value***REMOVED***is***REMOVED***deoptimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definition.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getObjectEntity()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.objectEntity***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.objectEntity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***staticProperties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicMethods***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***definition***REMOVED***of***REMOVED***this.body.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***properties***REMOVED***=***REMOVED***definition.static***REMOVED***?***REMOVED***staticProperties***REMOVED***:***REMOVED***dynamicMethods;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***definitionKind***REMOVED***=***REMOVED***definition.kind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Note***REMOVED***that***REMOVED***class***REMOVED***fields***REMOVED***do***REMOVED***not***REMOVED***end***REMOVED***up***REMOVED***on***REMOVED***the***REMOVED***prototype
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties***REMOVED***===***REMOVED***dynamicMethods***REMOVED***&&***REMOVED***!definitionKind)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***definitionKind***REMOVED***===***REMOVED***'set'***REMOVED***||***REMOVED***definitionKind***REMOVED***===***REMOVED***'get'***REMOVED***?***REMOVED***definitionKind***REMOVED***:***REMOVED***'init';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(definition.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keyValue***REMOVED***=***REMOVED***definition.key.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***keyValue***REMOVED***===***REMOVED***'symbol')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key:***REMOVED***UnknownKey,***REMOVED***kind,***REMOVED***property:***REMOVED***definition***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***String(keyValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definition.key***REMOVED***instanceof***REMOVED***Identifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***definition.key.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***String(definition.key.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key,***REMOVED***kind,***REMOVED***property:***REMOVED***definition***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***staticProperties.unshift({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***'prototype',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***'init',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***new***REMOVED***ObjectEntity(dynamicMethods,***REMOVED***this.superClass***REMOVED***?***REMOVED***new***REMOVED***ObjectMember(this.superClass,***REMOVED***'prototype')***REMOVED***:***REMOVED***OBJECT_PROTOTYPE)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.objectEntity***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity(staticProperties,***REMOVED***this.superClass***REMOVED***||***REMOVED***OBJECT_PROTOTYPE));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ClassDeclaration***REMOVED***extends***REMOVED***ClassNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.initialise();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.id***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.variable.isId***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esTreeNode.id***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id***REMOVED***=***REMOVED***new***REMOVED***Identifier(esTreeNode.id,***REMOVED***this,***REMOVED***this.scope.parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***format,***REMOVED***snippets:***REMOVED***{***REMOVED***_,***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***variable,***REMOVED***name***REMOVED***}***REMOVED***=***REMOVED***this.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'system'***REMOVED***&&***REMOVED***exportNamesByVariable.has(variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***`${_}${getSystemExportStatement([variable],***REMOVED***options)};`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedVariable***REMOVED***=***REMOVED***variable.getName(getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedVariable***REMOVED***!==***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.superClass?.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.render(code,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***useOriginalName:***REMOVED***(_variable)***REMOVED***=>***REMOVED***_variable***REMOVED***===***REMOVED***variable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(this.start,***REMOVED***`let***REMOVED***${renderedVariable}${_}=${_}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.end,***REMOVED***';');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***id,***REMOVED***scope***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***name,***REMOVED***variable***REMOVED***}***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***accessedVariable***REMOVED***of***REMOVED***scope.accessedOutsideVariables.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedVariable***REMOVED***!==***REMOVED***variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedVariable.forbidName(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ClassExpression***REMOVED***extends***REMOVED***ClassNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedSurroundingElement***REMOVED***===***REMOVED***ExpressionStatement$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(this.start,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.end,***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***MultiExpression***REMOVED***extends***REMOVED***ExpressionEntity***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(expressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressions***REMOVED***=***REMOVED***expressions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.expressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***MultiExpression(this.expressions.map(expression***REMOVED***=>***REMOVED***expression.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)[0])),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.expressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expression.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ConditionalExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isBranchResolutionAnalysed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.usedBranch***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.usedBranch***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unusedBranch***REMOVED***=***REMOVED***this.usedBranch***REMOVED***===***REMOVED***this.consequent***REMOVED***?***REMOVED***this.alternate***REMOVED***:***REMOVED***this.consequent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.usedBranch***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unusedBranch.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***expressionsToBeDeoptimized***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedBranch.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***MultiExpression([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)[0]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.consequent.hasEffects(context)***REMOVED***||***REMOVED***this.alternate.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.consequent.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***this.test.shouldBeIncluded(context)***REMOVED***||***REMOVED***usedBranch***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedBranch.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeCallArguments(context,***REMOVED***parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedBranch.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.includeCallArguments(context,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***isCalleeOfRenderedParent,***REMOVED***preventASI,***REMOVED***renderedParentType,***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***colonPos***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***':',***REMOVED***this.consequent.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inclusionStart***REMOVED***=***REMOVED***findNonWhiteSpace(code.original,***REMOVED***(this.consequent.included
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'?',***REMOVED***this.test.end)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***colonPos)***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preventASI)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeLineBreaks(code,***REMOVED***inclusionStart,***REMOVED***usedBranch.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***inclusionStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.consequent.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(colonPos,***REMOVED***this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeAnnotations(this,***REMOVED***code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedBranch.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCalleeOfRenderedParent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preventASI:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedParentType:***REMOVED***renderedParentType***REMOVED***||***REMOVED***this.parent.type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement:***REMOVED***renderedSurroundingElement***REMOVED***||***REMOVED***this.parent.type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getUsedBranch()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isBranchResolutionAnalysed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.usedBranch;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isBranchResolutionAnalysed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***testValue***REMOVED***=***REMOVED***this.test.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***testValue***REMOVED***===***REMOVED***'symbol'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(this.usedBranch***REMOVED***=***REMOVED***testValue***REMOVED***?***REMOVED***this.consequent***REMOVED***:***REMOVED***this.alternate);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ContinueStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.label)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.ignore.labels.has(this.label.name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedLabels.add(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.ignore.continues)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasContinue***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.label)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.label.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedLabels.add(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasContinue***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***hasLoopBodyEffects(context,***REMOVED***body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow,***REMOVED***hasBreak,***REMOVED***hasContinue,***REMOVED***ignore***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***breaks,***REMOVED***continues***REMOVED***}***REMOVED***=***REMOVED***ignore;
***REMOVED******REMOVED******REMOVED******REMOVED***ignore.breaks***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***ignore.continues***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasContinue***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(body.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***ignore.breaks***REMOVED***=***REMOVED***breaks;
***REMOVED******REMOVED******REMOVED******REMOVED***ignore.continues***REMOVED***=***REMOVED***continues;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***hasBreak;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasContinue***REMOVED***=***REMOVED***hasContinue;
***REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***includeLoopBody(context,***REMOVED***body,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow,***REMOVED***hasBreak,***REMOVED***hasContinue***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasContinue***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***body.include(context,***REMOVED***includeChildrenRecursively,***REMOVED***{***REMOVED***asSingleStatement:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***hasBreak;
***REMOVED******REMOVED******REMOVED******REMOVED***context.hasContinue***REMOVED***=***REMOVED***hasContinue;
***REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
}

class***REMOVED***DoWhileStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasLoopBodyEffects(context,***REMOVED***this.body);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeLoopBody(context,***REMOVED***this.body,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***EmptyStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ExportAllDeclaration***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.addExport(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***_options,***REMOVED***nodeRenderOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(nodeRenderOptions.start,***REMOVED***nodeRenderOptions.end);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}
ExportAllDeclaration.prototype.needsBoundaries***REMOVED***=***REMOVED***true;

class***REMOVED***FunctionDeclaration***REMOVED***extends***REMOVED***FunctionNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.initialise();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.id***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.variable.isId***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esTreeNode.id***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id***REMOVED***=***REMOVED***new***REMOVED***Identifier(esTreeNode.id,***REMOVED***this,***REMOVED***this.scope.parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

//***REMOVED***The***REMOVED***header***REMOVED***ends***REMOVED***at***REMOVED***the***REMOVED***first***REMOVED***non-white-space***REMOVED***after***REMOVED***"default"
function***REMOVED***getDeclarationStart(code,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***findNonWhiteSpace(code,***REMOVED***findFirstOccurrenceOutsideComment(code,***REMOVED***'default',***REMOVED***start)***REMOVED***+***REMOVED***7);
}
function***REMOVED***getFunctionIdInsertPosition(code,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarationEnd***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code,***REMOVED***'function',***REMOVED***start)***REMOVED***+***REMOVED***'function'.length;
***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***code.slice(declarationEnd,***REMOVED***findFirstOccurrenceOutsideComment(code,***REMOVED***'(',***REMOVED***declarationEnd));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***generatorStarPos***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code,***REMOVED***'*');
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(generatorStarPos***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declarationEnd;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declarationEnd***REMOVED***+***REMOVED***generatorStarPos***REMOVED***+***REMOVED***1;
}
class***REMOVED***ExportDefaultDeclaration***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***this.declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(declaration.id***REMOVED***&&***REMOVED***declaration.id.name)***REMOVED***||***REMOVED***this.declaration.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***this.scope.addExportDefaultDeclaration(this.declarationName***REMOVED***||***REMOVED***this.context.getModuleName(),***REMOVED***this,***REMOVED***this.context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.addExport(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***nodeRenderOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***start,***REMOVED***end***REMOVED***}***REMOVED***=***REMOVED***nodeRenderOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarationStart***REMOVED***=***REMOVED***getDeclarationStart(code.original,***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.declaration***REMOVED***instanceof***REMOVED***FunctionDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderNamedDeclaration(code,***REMOVED***declarationStart,***REMOVED***this.declaration.id***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***getFunctionIdInsertPosition(code.original,***REMOVED***declarationStart)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.declaration***REMOVED***instanceof***REMOVED***ClassDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderNamedDeclaration(code,***REMOVED***declarationStart,***REMOVED***this.declaration.id***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'class',***REMOVED***start)***REMOVED***+***REMOVED***'class'.length
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.variable.getOriginalVariable()***REMOVED***!==***REMOVED***this.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Remove***REMOVED***altogether***REMOVED***to***REMOVED***prevent***REMOVED***re-declaring***REMOVED***the***REMOVED***same***REMOVED***variable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeshakeNode(this,***REMOVED***code,***REMOVED***start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderVariableDeclaration(code,***REMOVED***declarationStart,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***declarationStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declaration.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement:***REMOVED***ExpressionStatement$1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original[this.end***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***';')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***';');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declaration.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderNamedDeclaration(code,***REMOVED***declarationStart,***REMOVED***idInsertPosition,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***format,***REMOVED***snippets:***REMOVED***{***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.variable.getName(getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Remove***REMOVED***`export***REMOVED***default`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***declarationStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idInsertPosition***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(idInsertPosition,***REMOVED***`***REMOVED***${name}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'system'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declaration***REMOVED***instanceof***REMOVED***ClassDeclaration***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportNamesByVariable.has(this.variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***`***REMOVED***${getSystemExportStatement([this.variable],***REMOVED***options)};`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderVariableDeclaration(code,***REMOVED***declarationStart,***REMOVED***{***REMOVED***format,***REMOVED***exportNamesByVariable,***REMOVED***snippets:***REMOVED***{***REMOVED***cnst,***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasTrailingSemicolon***REMOVED***=***REMOVED***code.original.charCodeAt(this.end***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***59;***REMOVED***/*";"*/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***systemExportNames***REMOVED***=***REMOVED***format***REMOVED***===***REMOVED***'system'***REMOVED***&&***REMOVED***exportNamesByVariable.get(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(systemExportNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***declarationStart,***REMOVED***`${cnst}***REMOVED***${this.variable.getName(getPropertyAccess)}***REMOVED***=***REMOVED***exports('${systemExportNames[0]}',***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(hasTrailingSemicolon***REMOVED***?***REMOVED***this.end***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***this.end,***REMOVED***')'***REMOVED***+***REMOVED***(hasTrailingSemicolon***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***';'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***declarationStart,***REMOVED***`${cnst}***REMOVED***${this.variable.getName(getPropertyAccess)}***REMOVED***=***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasTrailingSemicolon)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***';');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
ExportDefaultDeclaration.prototype.needsBoundaries***REMOVED***=***REMOVED***true;

class***REMOVED***ExportNamedDeclaration***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Do***REMOVED***not***REMOVED***bind***REMOVED***specifiers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declaration?.bind();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!this.declaration?.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.addExport(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***nodeRenderOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***start,***REMOVED***end***REMOVED***}***REMOVED***=***REMOVED***nodeRenderOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.declaration***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***this.declaration.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declaration.render(code,***REMOVED***options,***REMOVED***{***REMOVED***end,***REMOVED***start***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}
ExportNamedDeclaration.prototype.needsBoundaries***REMOVED***=***REMOVED***true;

class***REMOVED***ExportSpecifier***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***ForInStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***BlockScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***body,***REMOVED***deoptimized,***REMOVED***left,***REMOVED***right***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left.hasEffectsAsAssignmentTarget(context,***REMOVED***false)***REMOVED***||***REMOVED***right.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasLoopBodyEffects(context,***REMOVED***body);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***body,***REMOVED***deoptimized,***REMOVED***left,***REMOVED***right***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.includeAsAssignmentTarget(context,***REMOVED***includeChildrenRecursively***REMOVED***||***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeLoopBody(context,***REMOVED***body,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.setAssignedValue(UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***handle***REMOVED***no***REMOVED***space***REMOVED***between***REMOVED***"in"***REMOVED***and***REMOVED***the***REMOVED***right***REMOVED***side
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.charCodeAt(this.right.start***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***110***REMOVED***/****REMOVED***n***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.right.start,***REMOVED***'***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ForOfStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***BlockScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Placeholder***REMOVED***until***REMOVED***proper***REMOVED***Symbol.Iterator***REMOVED***support
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***body,***REMOVED***deoptimized,***REMOVED***left,***REMOVED***right***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.includeAsAssignmentTarget(context,***REMOVED***includeChildrenRecursively***REMOVED***||***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeLoopBody(context,***REMOVED***body,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.setAssignedValue(UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***handle***REMOVED***no***REMOVED***space***REMOVED***between***REMOVED***"of"***REMOVED***and***REMOVED***the***REMOVED***right***REMOVED***side
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.charCodeAt(this.right.start***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***102***REMOVED***/****REMOVED***f***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.right.start,***REMOVED***'***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ForStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***BlockScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.init?.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test?.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.update?.hasEffects(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasLoopBodyEffects(context,***REMOVED***this.body);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init?.include(context,***REMOVED***includeChildrenRecursively,***REMOVED***{***REMOVED***asSingleStatement:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.update?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeLoopBody(context,***REMOVED***this.body,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.init?.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test?.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.update?.render(code,***REMOVED***options,***REMOVED***NO_SEMICOLON);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***FunctionExpression***REMOVED***extends***REMOVED***FunctionNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedSurroundingElement***REMOVED***===***REMOVED***ExpressionStatement$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(this.start,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.end,***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***TrackingScope***REMOVED***extends***REMOVED***BlockScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hoistedDeclarations***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***isHoisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hoistedDeclarations.push(identifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.addDeclaration(identifier,***REMOVED***context,***REMOVED***init,***REMOVED***isHoisted);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***unset***REMOVED***=***REMOVED***Symbol('unset');
class***REMOVED***IfStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.testValue***REMOVED***=***REMOVED***unset;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.testValue***REMOVED***=***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test.hasEffects(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***testValue***REMOVED***=***REMOVED***this.getTestValue();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***testValue***REMOVED***===***REMOVED***'symbol')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.consequent.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consequentBrokenFlow***REMOVED***=***REMOVED***context.brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alternate***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alternate.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***context.brokenFlow***REMOVED***&&***REMOVED***consequentBrokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***testValue***REMOVED***?***REMOVED***this.consequent.hasEffects(context)***REMOVED***:***REMOVED***!!this.alternate?.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeRecursively(includeChildrenRecursively,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***testValue***REMOVED***=***REMOVED***this.getTestValue();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***testValue***REMOVED***===***REMOVED***'symbol')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeUnknownTest(context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeKnownTest(context,***REMOVED***testValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequentScope***REMOVED***=***REMOVED***new***REMOVED***TrackingScope(this.scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent***REMOVED***=***REMOVED***new***REMOVED***(this.context.getNodeConstructor(esTreeNode.consequent.type))(esTreeNode.consequent,***REMOVED***this,***REMOVED***this.consequentScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esTreeNode.alternate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternateScope***REMOVED***=***REMOVED***new***REMOVED***TrackingScope(this.scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate***REMOVED***=***REMOVED***new***REMOVED***(this.context.getNodeConstructor(esTreeNode.alternate.type))(esTreeNode.alternate,***REMOVED***this,***REMOVED***this.alternateScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***snippets:***REMOVED***{***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Note***REMOVED***that***REMOVED***unknown***REMOVED***test***REMOVED***values***REMOVED***are***REMOVED***always***REMOVED***included
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***testValue***REMOVED***=***REMOVED***this.getTestValue();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hoistedDeclarations***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***includesIfElse***REMOVED***=***REMOVED***this.test.included;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noTreeshake***REMOVED***=***REMOVED***!this.context.options.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includesIfElse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***this.consequent.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.consequent.included***REMOVED***&&***REMOVED***(noTreeshake***REMOVED***||***REMOVED***typeof***REMOVED***testValue***REMOVED***===***REMOVED***'symbol'***REMOVED***||***REMOVED***testValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.consequent.start,***REMOVED***this.consequent.end,***REMOVED***includesIfElse***REMOVED***?***REMOVED***';'***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistedDeclarations.push(...this.consequentScope.hoistedDeclarations);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alternate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alternate.included***REMOVED***&&***REMOVED***(noTreeshake***REMOVED***||***REMOVED***typeof***REMOVED***testValue***REMOVED***===***REMOVED***'symbol'***REMOVED***||***REMOVED***!testValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includesIfElse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.charCodeAt(this.alternate.start***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***101)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.alternate.start,***REMOVED***'***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.consequent.end,***REMOVED***this.alternate.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includesIfElse***REMOVED***&&***REMOVED***this.shouldKeepAlternateBranch())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.alternate.start,***REMOVED***this.end,***REMOVED***';');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.consequent.end,***REMOVED***this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistedDeclarations.push(...this.alternateScope.hoistedDeclarations);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderHoistedDeclarations(hoistedDeclarations,***REMOVED***code,***REMOVED***getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getTestValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.testValue***REMOVED***===***REMOVED***unset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.testValue***REMOVED***=***REMOVED***this.test.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.testValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeKnownTest(context,***REMOVED***testValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(testValue***REMOVED***&&***REMOVED***this.consequent.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.include(context,***REMOVED***false,***REMOVED***{***REMOVED***asSingleStatement:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!testValue***REMOVED***&&***REMOVED***this.alternate?.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.include(context,***REMOVED***false,***REMOVED***{***REMOVED***asSingleStatement:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeRecursively(includeChildrenRecursively,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeUnknownTest(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***consequentBrokenFlow***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.consequent.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.consequent.include(context,***REMOVED***false,***REMOVED***{***REMOVED***asSingleStatement:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consequentBrokenFlow***REMOVED***=***REMOVED***context.brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alternate?.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternate.include(context,***REMOVED***false,***REMOVED***{***REMOVED***asSingleStatement:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***context.brokenFlow***REMOVED***&&***REMOVED***consequentBrokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderHoistedDeclarations(hoistedDeclarations,***REMOVED***code,***REMOVED***getPropertyAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hoistedVariables***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...new***REMOVED***Set(hoistedDeclarations.map(identifier***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***identifier.variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable.included***REMOVED***?***REMOVED***variable.getName(getPropertyAccess)***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(Boolean)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(',***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hoistedVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentType***REMOVED***=***REMOVED***this.parent.type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needsBraces***REMOVED***=***REMOVED***parentType***REMOVED***!==***REMOVED***Program$1***REMOVED***&&***REMOVED***parentType***REMOVED***!==***REMOVED***BlockStatement$1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependRight(this.start,***REMOVED***`${needsBraces***REMOVED***?***REMOVED***'{***REMOVED***'***REMOVED***:***REMOVED***''}var***REMOVED***${hoistedVariables};***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsBraces)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***`***REMOVED***}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***shouldKeepAlternateBranch()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentParent***REMOVED***=***REMOVED***this.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentParent***REMOVED***instanceof***REMOVED***IfStatement***REMOVED***&&***REMOVED***currentParent.alternate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentParent***REMOVED***instanceof***REMOVED***BlockStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentParent***REMOVED***=***REMOVED***currentParent.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(currentParent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ImportAttribute***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
}

class***REMOVED***ImportDeclaration***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Do***REMOVED***not***REMOVED***bind***REMOVED***specifiers***REMOVED***or***REMOVED***assertions
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.addImport(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***_options,***REMOVED***nodeRenderOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(nodeRenderOptions.start,***REMOVED***nodeRenderOptions.end);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}
ImportDeclaration.prototype.needsBoundaries***REMOVED***=***REMOVED***true;

class***REMOVED***ImportDefaultSpecifier***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

const***REMOVED***INTEROP_DEFAULT_VARIABLE***REMOVED***=***REMOVED***'_interopDefault';
const***REMOVED***INTEROP_DEFAULT_COMPAT_VARIABLE***REMOVED***=***REMOVED***'_interopDefaultCompat';
const***REMOVED***INTEROP_NAMESPACE_VARIABLE***REMOVED***=***REMOVED***'_interopNamespace';
const***REMOVED***INTEROP_NAMESPACE_COMPAT_VARIABLE***REMOVED***=***REMOVED***'_interopNamespaceCompat';
const***REMOVED***INTEROP_NAMESPACE_DEFAULT_VARIABLE***REMOVED***=***REMOVED***'_interopNamespaceDefault';
const***REMOVED***INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE***REMOVED***=***REMOVED***'_interopNamespaceDefaultOnly';
const***REMOVED***MERGE_NAMESPACES_VARIABLE***REMOVED***=***REMOVED***'_mergeNamespaces';
const***REMOVED***DOCUMENT_CURRENT_SCRIPT***REMOVED***=***REMOVED***'_documentCurrentScript';
const***REMOVED***defaultInteropHelpersByInteropType***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***auto:***REMOVED***INTEROP_DEFAULT_VARIABLE,
***REMOVED******REMOVED******REMOVED******REMOVED***compat:***REMOVED***INTEROP_DEFAULT_COMPAT_VARIABLE,
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***defaultOnly:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***esModule:***REMOVED***null
};
const***REMOVED***isDefaultAProperty***REMOVED***=***REMOVED***(interopType,***REMOVED***externalLiveBindings)***REMOVED***=>***REMOVED***interopType***REMOVED***===***REMOVED***'esModule'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(externalLiveBindings***REMOVED***&&***REMOVED***(interopType***REMOVED***===***REMOVED***'auto'***REMOVED***||***REMOVED***interopType***REMOVED***===***REMOVED***'compat'));
const***REMOVED***namespaceInteropHelpersByInteropType***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***auto:***REMOVED***INTEROP_NAMESPACE_VARIABLE,
***REMOVED******REMOVED******REMOVED******REMOVED***compat:***REMOVED***INTEROP_NAMESPACE_COMPAT_VARIABLE,
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***INTEROP_NAMESPACE_DEFAULT_VARIABLE,
***REMOVED******REMOVED******REMOVED******REMOVED***defaultOnly:***REMOVED***INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE,
***REMOVED******REMOVED******REMOVED******REMOVED***esModule:***REMOVED***null
};
const***REMOVED***canDefaultBeTakenFromNamespace***REMOVED***=***REMOVED***(interopType,***REMOVED***externalLiveBindings)***REMOVED***=>***REMOVED***interopType***REMOVED***!==***REMOVED***'esModule'***REMOVED***&&***REMOVED***isDefaultAProperty(interopType,***REMOVED***externalLiveBindings);
const***REMOVED***getHelpersBlock***REMOVED***=***REMOVED***(additionalHelpers,***REMOVED***accessedGlobals,***REMOVED***indent,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedHelpers***REMOVED***=***REMOVED***new***REMOVED***Set(additionalHelpers);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***HELPER_NAMES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobals.has(variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedHelpers.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***HELPER_NAMES.map(variable***REMOVED***=>***REMOVED***usedHelpers.has(variable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***HELPER_GENERATORS[variable](indent,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***usedHelpers)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'').join('');
};
const***REMOVED***HELPER_GENERATORS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[DOCUMENT_CURRENT_SCRIPT](_t,***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`var${_}${DOCUMENT_CURRENT_SCRIPT}${_}=${_}typeof${_}document${_}!==${_}'undefined'${_}?${_}document.currentScript${_}:${_}null;${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[INTEROP_DEFAULT_COMPAT_VARIABLE](_t,***REMOVED***snippets,***REMOVED***liveBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['e'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***INTEROP_DEFAULT_COMPAT_VARIABLE
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`${left}${getIsCompatNamespace(snippets)}${_}?${_}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${liveBindings***REMOVED***?***REMOVED***getDefaultLiveBinding(snippets)***REMOVED***:***REMOVED***getDefaultStatic(snippets)}${right}${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[INTEROP_DEFAULT_VARIABLE](_t,***REMOVED***snippets,***REMOVED***liveBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['e'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***INTEROP_DEFAULT_VARIABLE
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`${left}e${_}&&${_}e.__esModule${_}?${_}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${liveBindings***REMOVED***?***REMOVED***getDefaultLiveBinding(snippets)***REMOVED***:***REMOVED***getDefaultStatic(snippets)}${right}${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[INTEROP_NAMESPACE_COMPAT_VARIABLE](t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***usedHelpers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['e'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***INTEROP_NAMESPACE_COMPAT_VARIABLE
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${left}${getIsCompatNamespace(snippets)}${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`function***REMOVED***${INTEROP_NAMESPACE_COMPAT_VARIABLE}(e)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}if${_}(${getIsCompatNamespace(snippets)})${_}return***REMOVED***e;${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createNamespaceObject(t,***REMOVED***t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`}${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE](_t,***REMOVED***snippets,***REMOVED***_liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***getDirectReturnFunction,***REMOVED***getObject,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['e'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${left}${getFrozen(freeze,***REMOVED***getWithToStringTag(namespaceToStringTag,***REMOVED***getObject([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***['__proto__',***REMOVED***'null'],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***['default',***REMOVED***'e']
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***null***REMOVED***}),***REMOVED***snippets))}${right}${n}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[INTEROP_NAMESPACE_DEFAULT_VARIABLE](t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`function***REMOVED***${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createNamespaceObject(t,***REMOVED***t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`}${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[INTEROP_NAMESPACE_VARIABLE](t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***usedHelpers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['e'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***INTEROP_NAMESPACE_VARIABLE
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${left}e${_}&&${_}e.__esModule${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`function***REMOVED***${INTEROP_NAMESPACE_VARIABLE}(e)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}if${_}(e${_}&&${_}e.__esModule)${_}return***REMOVED***e;${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createNamespaceObject(t,***REMOVED***t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`}${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***[MERGE_NAMESPACES_VARIABLE](t,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useForEach***REMOVED***=***REMOVED***cnst***REMOVED***===***REMOVED***'var'***REMOVED***&&***REMOVED***liveBindings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`function***REMOVED***${MERGE_NAMESPACES_VARIABLE}(n,***REMOVED***m)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${loopOverNamespaces(`{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!(k***REMOVED***in***REMOVED***n))${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(liveBindings
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***useForEach
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***copyOwnPropertyLiveBinding
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***copyPropertyLiveBinding
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***copyPropertyStatic)(t,***REMOVED***t***REMOVED***+***REMOVED***t***REMOVED***+***REMOVED***t***REMOVED***+***REMOVED***t,***REMOVED***snippets)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${t}}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}}`,***REMOVED***useForEach,***REMOVED***t,***REMOVED***snippets)}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}return***REMOVED***${getFrozen(freeze,***REMOVED***getWithToStringTag(namespaceToStringTag,***REMOVED***'n',***REMOVED***snippets))};${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`}${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***getDefaultLiveBinding***REMOVED***=***REMOVED***({***REMOVED***_,***REMOVED***getObject***REMOVED***})***REMOVED***=>***REMOVED***`e${_}:${_}${getObject([['default',***REMOVED***'e']],***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***null***REMOVED***})}`;
const***REMOVED***getDefaultStatic***REMOVED***=***REMOVED***({***REMOVED***_,***REMOVED***getPropertyAccess***REMOVED***})***REMOVED***=>***REMOVED***`e${getPropertyAccess('default')}${_}:${_}e`;
const***REMOVED***getIsCompatNamespace***REMOVED***=***REMOVED***({***REMOVED***_***REMOVED***})***REMOVED***=>***REMOVED***`e${_}&&${_}typeof***REMOVED***e${_}===${_}'object'${_}&&${_}'default'${_}in***REMOVED***e`;
const***REMOVED***createNamespaceObject***REMOVED***=***REMOVED***(t,***REMOVED***index,***REMOVED***snippets,***REMOVED***liveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getObject,***REMOVED***getPropertyAccess,***REMOVED***n,***REMOVED***s***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***copyProperty***REMOVED***=***REMOVED***`{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(liveBindings***REMOVED***?***REMOVED***copyNonDefaultOwnPropertyLiveBinding***REMOVED***:***REMOVED***copyPropertyStatic)(t,***REMOVED***index***REMOVED***+***REMOVED***t***REMOVED***+***REMOVED***t,***REMOVED***snippets)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}}`;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`${index}${cnst}***REMOVED***n${_}=${_}Object.create(null${namespaceToStringTag
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`,${_}{${_}[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}${_}}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***''});${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}if${_}(e)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}${loopOverKeys(copyProperty,***REMOVED***!liveBindings,***REMOVED***snippets)}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}n${getPropertyAccess('default')}${_}=${_}e;${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}return***REMOVED***${getFrozen(freeze,***REMOVED***'n')}${s}${n}`);
};
const***REMOVED***loopOverKeys***REMOVED***=***REMOVED***(body,***REMOVED***allowVariableLoopVariable,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getFunctionIntro,***REMOVED***s***REMOVED***})***REMOVED***=>***REMOVED***cnst***REMOVED***!==***REMOVED***'var'***REMOVED***||***REMOVED***allowVariableLoopVariable
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`for${_}(${cnst}***REMOVED***k***REMOVED***in***REMOVED***e)${_}${body}`
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`Object.keys(e).forEach(${getFunctionIntro(['k'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})}${body})${s}`;
const***REMOVED***loopOverNamespaces***REMOVED***=***REMOVED***(body,***REMOVED***useForEach,***REMOVED***t,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getDirectReturnFunction,***REMOVED***getFunctionIntro,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(useForEach)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['e'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***{***REMOVED***base:***REMOVED***t,***REMOVED***t***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`m.forEach(${left}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`e${_}&&${_}typeof***REMOVED***e${_}!==${_}'string'${_}&&${_}!Array.isArray(e)${_}&&${_}Object.keys(e).forEach(${getFunctionIntro(['k'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}${body})${right});`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`for${_}(var***REMOVED***i${_}=${_}0;${_}i${_}<${_}m.length;${_}i++)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${cnst}***REMOVED***e${_}=${_}m[i];${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}if${_}(typeof***REMOVED***e${_}!==${_}'string'${_}&&${_}!Array.isArray(e))${_}{${_}for${_}(${cnst}***REMOVED***k***REMOVED***in***REMOVED***e)${_}${body}${_}}${n}${t}}`);
};
const***REMOVED***copyNonDefaultOwnPropertyLiveBinding***REMOVED***=***REMOVED***(t,***REMOVED***index,***REMOVED***snippets)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`${index}if${_}(k${_}!==${_}'default')${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***copyOwnPropertyLiveBinding(t,***REMOVED***index***REMOVED***+***REMOVED***t,***REMOVED***snippets)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}}${n}`);
};
const***REMOVED***copyOwnPropertyLiveBinding***REMOVED***=***REMOVED***(t,***REMOVED***index,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`${index}${cnst}***REMOVED***d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}enumerable:${_}true,${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}get:${_}${left}e[k]${right}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}});${n}`);
};
const***REMOVED***copyPropertyLiveBinding***REMOVED***=***REMOVED***(t,***REMOVED***index,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`${index}${cnst}***REMOVED***d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}if${_}(d)${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}${t}enumerable:${_}true,${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}${t}get:${_}${left}e[k]${right}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}${t}});${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${index}}${n}`);
};
const***REMOVED***copyPropertyStatic***REMOVED***=***REMOVED***(_t,***REMOVED***index,***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***`${index}n[k]${_}=${_}e[k];${n}`;
const***REMOVED***getFrozen***REMOVED***=***REMOVED***(freeze,***REMOVED***fragment)***REMOVED***=>***REMOVED***freeze***REMOVED***?***REMOVED***`Object.freeze(${fragment})`***REMOVED***:***REMOVED***fragment;
const***REMOVED***getWithToStringTag***REMOVED***=***REMOVED***(namespaceToStringTag,***REMOVED***fragment,***REMOVED***{***REMOVED***_,***REMOVED***getObject***REMOVED***})***REMOVED***=>***REMOVED***namespaceToStringTag
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`Object.defineProperty(${fragment},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***fragment;
const***REMOVED***HELPER_NAMES***REMOVED***=***REMOVED***Object.keys(HELPER_GENERATORS);
function***REMOVED***getToStringTagValue(getObject)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getObject([['value',***REMOVED***"'Module'"]],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***});
}

function***REMOVED***isReassignedExportsMember(variable,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(variable.renderBaseName***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***exportNamesByVariable.has(variable)***REMOVED***&&***REMOVED***variable.isReassigned);
}

class***REMOVED***VariableDeclarator***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***declareDeclarator(kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.declare(kind,***REMOVED***this.init***REMOVED***||***REMOVED***UNDEFINED_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***initEffect***REMOVED***=***REMOVED***this.init?.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***initEffect***REMOVED***||***REMOVED***this.id.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***deoptimized,***REMOVED***id,***REMOVED***init***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***id.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***snippets:***REMOVED***{***REMOVED***_,***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***end,***REMOVED***id,***REMOVED***init,***REMOVED***start***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderId***REMOVED***=***REMOVED***id.included;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operatorPos***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'=',***REMOVED***id.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(start,***REMOVED***findNonWhiteSpace(code.original,***REMOVED***operatorPos***REMOVED***+***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id***REMOVED***instanceof***REMOVED***Identifier***REMOVED***&&***REMOVED***init***REMOVED***instanceof***REMOVED***ClassExpression***REMOVED***&&***REMOVED***!init.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedVariable***REMOVED***=***REMOVED***id.variable.getName(getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedVariable***REMOVED***!==***REMOVED***id.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(init.start***REMOVED***+***REMOVED***5,***REMOVED***`***REMOVED***${id.name}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init.render(code,***REMOVED***options,***REMOVED***renderId***REMOVED***?***REMOVED***BLANK***REMOVED***:***REMOVED***{***REMOVED***renderedSurroundingElement:***REMOVED***ExpressionStatement$1***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(id***REMOVED***instanceof***REMOVED***Identifier***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isReassignedExportsMember(id.variable,***REMOVED***exportNamesByVariable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(end,***REMOVED***`${_}=${_}void***REMOVED***0`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***id,***REMOVED***init***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(init***REMOVED***&&***REMOVED***id***REMOVED***instanceof***REMOVED***Identifier***REMOVED***&&***REMOVED***init***REMOVED***instanceof***REMOVED***ClassExpression***REMOVED***&&***REMOVED***!init.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***name,***REMOVED***variable***REMOVED***}***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***accessedVariable***REMOVED***of***REMOVED***init.scope.accessedOutsideVariables.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedVariable***REMOVED***!==***REMOVED***variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedVariable.forbidName(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

//***REMOVED***TODO***REMOVED***once***REMOVED***ImportExpression***REMOVED***follows***REMOVED***official***REMOVED***ESTree***REMOVED***specs***REMOVED***with***REMOVED***"null"***REMOVED***as
//***REMOVED******REMOVED***default,***REMOVED***keys.ts***REMOVED***should***REMOVED***be***REMOVED***updated
class***REMOVED***ImportExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inlineNamespace***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assertions***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.mechanism***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespaceExportName***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resolution***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resolutionString***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Do***REMOVED***not***REMOVED***bind***REMOVED***assertions
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source.bind();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Get***REMOVED***imported***REMOVED***variables***REMOVED***for***REMOVED***deterministic***REMOVED***usage,***REMOVED***valid***REMOVED***cases***REMOVED***are:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`const***REMOVED***{***REMOVED***foo***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('bar')`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`(await***REMOVED***import('bar')).foo`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`import('bar').then(({***REMOVED***foo***REMOVED***})***REMOVED***=>***REMOVED***{})`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***empty***REMOVED***array***REMOVED***if***REMOVED***it's***REMOVED***side-effect***REMOVED***only***REMOVED***import.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***undefined***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***fully***REMOVED***deterministic.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***getDeterministicImportedNames()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parent1***REMOVED***=***REMOVED***this.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Side-effect***REMOVED***only:***REMOVED***import('bar')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent1***REMOVED***instanceof***REMOVED***ExpressionStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent1***REMOVED***instanceof***REMOVED***AwaitExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parent2***REMOVED***=***REMOVED***parent1.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Side-effect***REMOVED***only:***REMOVED***await***REMOVED***import('bar')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent2***REMOVED***instanceof***REMOVED***ExpressionStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Case***REMOVED***1:***REMOVED***const***REMOVED***{***REMOVED***foo***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('bar')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent2***REMOVED***instanceof***REMOVED***VariableDeclarator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***parent2.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration***REMOVED***instanceof***REMOVED***ObjectPattern
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***getDeterministicObjectDestructure(declaration)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Case***REMOVED***2:***REMOVED***(await***REMOVED***import('bar')).foo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent2***REMOVED***instanceof***REMOVED***MemberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***parent2.property;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parent2.computed***REMOVED***&&***REMOVED***id***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[id.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Case***REMOVED***3:***REMOVED***import('bar').then(({***REMOVED***foo***REMOVED***})***REMOVED***=>***REMOVED***{})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent1***REMOVED***instanceof***REMOVED***MemberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***callExpression***REMOVED***=***REMOVED***parent1.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***property***REMOVED***=***REMOVED***parent1.property;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(callExpression***REMOVED***instanceof***REMOVED***CallExpression)***REMOVED***||***REMOVED***!(property***REMOVED***instanceof***REMOVED***Identifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberName***REMOVED***=***REMOVED***property.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***side-effect***REMOVED***only,***REMOVED***when***REMOVED***only***REMOVED***chaining***REMOVED***.catch***REMOVED***or***REMOVED***.finally
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callExpression.parent***REMOVED***instanceof***REMOVED***ExpressionStatement***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***['catch',***REMOVED***'finally'].includes(memberName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(memberName***REMOVED***!==***REMOVED***'then')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Side-effect***REMOVED***only:***REMOVED***import('bar').then()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callExpression.arguments.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***argument***REMOVED***=***REMOVED***callExpression.arguments[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callExpression.arguments.length***REMOVED***!==***REMOVED***1***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(argument***REMOVED***instanceof***REMOVED***ArrowFunctionExpression***REMOVED***||***REMOVED***argument***REMOVED***instanceof***REMOVED***FunctionExpression))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Side-effect***REMOVED***only:***REMOVED***import('bar').then(()***REMOVED***=>***REMOVED***{})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.params.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***argument.params[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.params.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***declaration***REMOVED***instanceof***REMOVED***ObjectPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getDeterministicObjectDestructure(declaration);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeDynamicImport(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addAccessedDynamicImport(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.addDynamicImport(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Keep***REMOVED***the***REMOVED***source***REMOVED***AST***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***by***REMOVED***renderDynamicImport
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode,***REMOVED***['source']);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***snippets:***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***getObject,***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inlineNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***this.end,***REMOVED***`Promise.resolve().then(${left}${this.inlineNamespace.getName(getPropertyAccess)}${right})`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.mechanism)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'(',***REMOVED***this.start***REMOVED***+***REMOVED***6)***REMOVED***+***REMOVED***1,***REMOVED***this.mechanism.left);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.end***REMOVED***-***REMOVED***1,***REMOVED***this.end,***REMOVED***this.mechanism.right);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.resolutionString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.source.start,***REMOVED***this.source.end,***REMOVED***this.resolutionString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespaceExportName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(['n'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.end,***REMOVED***`.then(${left}n.${this.namespaceExportName}${right})`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.assertions***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.arguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.source.end,***REMOVED***this.end***REMOVED***-***REMOVED***1,***REMOVED***'',***REMOVED***{***REMOVED***contentOnly:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end***REMOVED***-***REMOVED***1,***REMOVED***`,${_}${getObject([['assert',***REMOVED***this.assertions]],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setExternalResolution(exportMode,***REMOVED***resolution,***REMOVED***options,***REMOVED***snippets,***REMOVED***pluginDriver,***REMOVED***accessedGlobalsByScope,***REMOVED***resolutionString,***REMOVED***namespaceExportName,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***format***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inlineNamespace***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resolution***REMOVED***=***REMOVED***resolution;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resolutionString***REMOVED***=***REMOVED***resolutionString;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespaceExportName***REMOVED***=***REMOVED***namespaceExportName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assertions***REMOVED***=***REMOVED***assertions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessedGlobals***REMOVED***=***REMOVED***[...(accessedImportGlobals[format]***REMOVED***||***REMOVED***[])];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***helper;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***helper,***REMOVED***mechanism:***REMOVED***this.mechanism***REMOVED***}***REMOVED***=***REMOVED***this.getDynamicImportMechanismAndHelper(resolution,***REMOVED***exportMode,***REMOVED***options,***REMOVED***snippets,***REMOVED***pluginDriver));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(helper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedGlobals.push(helper);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobals.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addAccessedGlobals(accessedGlobals,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setInternalResolution(inlineNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inlineNamespace***REMOVED***=***REMOVED***inlineNamespace;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getDynamicImportMechanismAndHelper(resolution,***REMOVED***exportMode,***REMOVED***{***REMOVED***compact,***REMOVED***dynamicImportFunction,***REMOVED***dynamicImportInCjs,***REMOVED***format,***REMOVED***generatedCode:***REMOVED***{***REMOVED***arrowFunctions***REMOVED***},***REMOVED***interop***REMOVED***},***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***getDirectReturnIifeLeft***REMOVED***},***REMOVED***pluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mechanism***REMOVED***=***REMOVED***pluginDriver.hookFirstSync('renderDynamicImport',***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customResolution:***REMOVED***typeof***REMOVED***this.resolution***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***this.resolution***REMOVED***:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleId:***REMOVED***this.context.module.id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***targetModuleId:***REMOVED***this.resolution***REMOVED***&&***REMOVED***typeof***REMOVED***this.resolution***REMOVED***!==***REMOVED***'string'***REMOVED***?***REMOVED***this.resolution.id***REMOVED***:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mechanism)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***helper:***REMOVED***null,***REMOVED***mechanism***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDynamicTarget***REMOVED***=***REMOVED***!this.resolution***REMOVED***||***REMOVED***typeof***REMOVED***this.resolution***REMOVED***===***REMOVED***'string';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(format)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'cjs':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dynamicImportInCjs***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!resolution***REMOVED***||***REMOVED***typeof***REMOVED***resolution***REMOVED***===***REMOVED***'string'***REMOVED***||***REMOVED***resolution***REMOVED***instanceof***REMOVED***ExternalModule))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***helper:***REMOVED***null,***REMOVED***mechanism:***REMOVED***null***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***helper***REMOVED***=***REMOVED***getInteropHelper(resolution,***REMOVED***exportMode,***REMOVED***interop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***left***REMOVED***=***REMOVED***`require(`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***right***REMOVED***=***REMOVED***`)`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(helper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***`/*#__PURE__*/${helper}(${left}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right***REMOVED***+=***REMOVED***')';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[functionLeft,***REMOVED***functionRight]***REMOVED***=***REMOVED***getDirectReturnFunction([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***`Promise.resolve().then(${functionLeft}${left}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right***REMOVED***+=***REMOVED***`${functionRight})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!arrowFunctions***REMOVED***&&***REMOVED***hasDynamicTarget)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***getDirectReturnIifeLeft(['t'],***REMOVED***`${left}t${right}`,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsArrowReturnParens:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsWrappedFunction:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right***REMOVED***=***REMOVED***')';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helper,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mechanism:***REMOVED***{***REMOVED***left,***REMOVED***right***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'amd':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolve***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***'c'***REMOVED***:***REMOVED***'resolve';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reject***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***'e'***REMOVED***:***REMOVED***'reject';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***helper***REMOVED***=***REMOVED***getInteropHelper(resolution,***REMOVED***exportMode,***REMOVED***interop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[resolveLeft,***REMOVED***resolveRight]***REMOVED***=***REMOVED***getDirectReturnFunction(['m'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolveNamespace***REMOVED***=***REMOVED***helper
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${resolveLeft}${resolve}(/*#__PURE__*/${helper}(m))${resolveRight}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***resolve;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[handlerLeft,***REMOVED***handlerRight]***REMOVED***=***REMOVED***getDirectReturnFunction([resolve,***REMOVED***reject],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***left***REMOVED***=***REMOVED***`new***REMOVED***Promise(${handlerLeft}require([`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***right***REMOVED***=***REMOVED***`],${_}${resolveNamespace},${_}${reject})${handlerRight})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!arrowFunctions***REMOVED***&&***REMOVED***hasDynamicTarget)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***getDirectReturnIifeLeft(['t'],***REMOVED***`${left}t${right}`,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsArrowReturnParens:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsWrappedFunction:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right***REMOVED***=***REMOVED***')';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helper,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mechanism:***REMOVED***{***REMOVED***left,***REMOVED***right***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'system':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helper:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mechanism:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***'module.import(',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***')'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'es':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dynamicImportFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helper:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mechanism:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***`${dynamicImportFunction}(`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***')'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***helper:***REMOVED***null,***REMOVED***mechanism:***REMOVED***null***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getInteropHelper(resolution,***REMOVED***exportMode,***REMOVED***interop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exportMode***REMOVED***===***REMOVED***'external'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***namespaceInteropHelpersByInteropType[interop(resolution***REMOVED***instanceof***REMOVED***ExternalModule***REMOVED***?***REMOVED***resolution.id***REMOVED***:***REMOVED***null)]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***exportMode***REMOVED***===***REMOVED***'default'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
}
const***REMOVED***accessedImportGlobals***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***['require'],
***REMOVED******REMOVED******REMOVED******REMOVED***cjs:***REMOVED***['require'],
***REMOVED******REMOVED******REMOVED******REMOVED***system:***REMOVED***['module']
};
function***REMOVED***getDeterministicObjectDestructure(objectPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variables***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***objectPattern.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.type***REMOVED***===***REMOVED***'RestElement'***REMOVED***||***REMOVED***property.computed***REMOVED***||***REMOVED***property.key.type***REMOVED***!==***REMOVED***'Identifier')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variables.push(property.key.name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variables;
}

class***REMOVED***ImportNamespaceSpecifier***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***ImportSpecifier***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***LabeledStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***brokenFlow***REMOVED***=***REMOVED***context.brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignore.labels.add(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignore.labels.delete(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.includedLabels.has(this.label.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedLabels.delete(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***brokenFlow***REMOVED***=***REMOVED***context.brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***context.includedLabels.has(this.label.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.label.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.includedLabels.delete(this.label.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.label.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.label.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***findNonWhiteSpace(code.original,***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***':',***REMOVED***this.label.end)***REMOVED***+***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.body.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***LogicalExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***collect***REMOVED***deoptimization***REMOVED***information***REMOVED***if***REMOVED***usedBranch***REMOVED***!==***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isBranchResolutionAnalysed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.usedBranch***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unusedBranch***REMOVED***=***REMOVED***this.usedBranch***REMOVED***===***REMOVED***this.left***REMOVED***?***REMOVED***this.right***REMOVED***:***REMOVED***this.left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.usedBranch***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unusedBranch.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***context,***REMOVED***expressionsToBeDeoptimized***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized***REMOVED***=***REMOVED***EMPTY_ARRAY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***expressionsToBeDeoptimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.deoptimizeCache();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Request***REMOVED***another***REMOVED***pass***REMOVED***because***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***ensure***REMOVED***"include"***REMOVED***runs***REMOVED***again***REMOVED***if
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it***REMOVED***is***REMOVED***rendered
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedBranch.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***MultiExpression([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)[0]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionsToBeDeoptimized.push(origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.left.hasEffects(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getUsedBranch()***REMOVED***!==***REMOVED***this.left)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.right.hasEffects(context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.left.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***usedBranch.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedBranch***REMOVED***=***REMOVED***this.getUsedBranch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(usedBranch***REMOVED***===***REMOVED***this.right***REMOVED***&&***REMOVED***this.left.shouldBeIncluded(context))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!usedBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedBranch.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***isCalleeOfRenderedParent,***REMOVED***preventASI,***REMOVED***renderedParentType,***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.left.included***REMOVED***||***REMOVED***!this.right.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operatorPos***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***this.operator,***REMOVED***this.left.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.right.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***removePos***REMOVED***=***REMOVED***findNonWhiteSpace(code.original,***REMOVED***operatorPos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***removePos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preventASI)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeLineBreaks(code,***REMOVED***removePos,***REMOVED***this.right.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(operatorPos,***REMOVED***this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeAnnotations(this,***REMOVED***code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getUsedBranch().render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCalleeOfRenderedParent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preventASI,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedParentType:***REMOVED***renderedParentType***REMOVED***||***REMOVED***this.parent.type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement:***REMOVED***renderedSurroundingElement***REMOVED***||***REMOVED***this.parent.type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.left.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preventASI,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.right.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getUsedBranch()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isBranchResolutionAnalysed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isBranchResolutionAnalysed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***leftValue***REMOVED***=***REMOVED***this.left.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***leftValue***REMOVED***===***REMOVED***'symbol')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.usedBranch***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.operator***REMOVED***===***REMOVED***'||'***REMOVED***&&***REMOVED***leftValue)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.operator***REMOVED***===***REMOVED***'&&'***REMOVED***&&***REMOVED***!leftValue)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.operator***REMOVED***===***REMOVED***'??'***REMOVED***&&***REMOVED***leftValue***REMOVED***!=***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.left
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.right;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.usedBranch;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***FILE_PREFIX***REMOVED***=***REMOVED***'ROLLUP_FILE_URL_';
const***REMOVED***IMPORT***REMOVED***=***REMOVED***'import';
class***REMOVED***MetaProperty***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.metaProperty***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preliminaryChunkId***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.referenceId***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReferencedFileName(outputPluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***meta:***REMOVED***{***REMOVED***name***REMOVED***},***REMOVED***metaProperty***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***IMPORT***REMOVED***&&***REMOVED***metaProperty?.startsWith(FILE_PREFIX))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***outputPluginDriver.getFileName(metaProperty.slice(FILE_PREFIX.length));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1***REMOVED***||***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.meta.name***REMOVED***===***REMOVED***IMPORT)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.addImportMeta(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parent***REMOVED***=***REMOVED***this.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***metaProperty***REMOVED***=***REMOVED***(this.metaProperty***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***instanceof***REMOVED***MemberExpression***REMOVED***&&***REMOVED***typeof***REMOVED***parent.propertyKey***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***parent.propertyKey
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(metaProperty?.startsWith(FILE_PREFIX))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.referenceId***REMOVED***=***REMOVED***metaProperty.slice(FILE_PREFIX.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***renderOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***format,***REMOVED***pluginDriver,***REMOVED***snippets***REMOVED***}***REMOVED***=***REMOVED***renderOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***context:***REMOVED***{***REMOVED***module***REMOVED***},***REMOVED***meta:***REMOVED***{***REMOVED***name***REMOVED***},***REMOVED***metaProperty,***REMOVED***parent,***REMOVED***preliminaryChunkId,***REMOVED***referenceId,***REMOVED***start,***REMOVED***end***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***id:***REMOVED***moduleId***REMOVED***}***REMOVED***=***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***IMPORT)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkId***REMOVED***=***REMOVED***preliminaryChunkId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(referenceId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***pluginDriver.getFileName(referenceId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***relativePath***REMOVED***=***REMOVED***normalize(node_path.relative(node_path.dirname(chunkId),***REMOVED***fileName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replacement***REMOVED***=***REMOVED***pluginDriver.hookFirstSync('resolveFileUrl',***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***chunkId,***REMOVED***fileName,***REMOVED***format,***REMOVED***moduleId,***REMOVED***referenceId,***REMOVED***relativePath***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])***REMOVED***||***REMOVED***relativeUrlMechanisms[format](relativePath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(parent.start,***REMOVED***parent.end,***REMOVED***replacement,***REMOVED***{***REMOVED***contentOnly:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***replacement***REMOVED***=***REMOVED***pluginDriver.hookFirstSync('resolveImportMeta',***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***metaProperty,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***chunkId,***REMOVED***format,***REMOVED***moduleId***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!replacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacement***REMOVED***=***REMOVED***importMetaMechanisms[format]?.(metaProperty,***REMOVED***{***REMOVED***chunkId,***REMOVED***snippets***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderOptions.accessedDocumentCurrentScript***REMOVED***||***REMOVED***(renderOptions.accessedDocumentCurrentScript***REMOVED***=***REMOVED***formatsMaybeAccessDocumentCurrentScript.includes(format)***REMOVED***&&***REMOVED***replacement***REMOVED***!==***REMOVED***'undefined');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***replacement***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***instanceof***REMOVED***MemberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(parent.start,***REMOVED***parent.end,***REMOVED***replacement,***REMOVED***{***REMOVED***contentOnly:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(start,***REMOVED***end,***REMOVED***replacement,***REMOVED***{***REMOVED***contentOnly:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setResolution(format,***REMOVED***accessedGlobalsByScope,***REMOVED***preliminaryChunkId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preliminaryChunkId***REMOVED***=***REMOVED***preliminaryChunkId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessedGlobals***REMOVED***=***REMOVED***(this.metaProperty?.startsWith(FILE_PREFIX)***REMOVED***?***REMOVED***accessedFileUrlGlobals***REMOVED***:***REMOVED***accessedMetaUrlGlobals)[format];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobals.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addAccessedGlobals(accessedGlobals,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***formatsMaybeAccessDocumentCurrentScript***REMOVED***=***REMOVED***['cjs',***REMOVED***'iife',***REMOVED***'umd'];
const***REMOVED***accessedMetaUrlGlobals***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***['document',***REMOVED***'module',***REMOVED***'URL'],
***REMOVED******REMOVED******REMOVED******REMOVED***cjs:***REMOVED***['document',***REMOVED***'require',***REMOVED***'URL',***REMOVED***DOCUMENT_CURRENT_SCRIPT],
***REMOVED******REMOVED******REMOVED******REMOVED***es:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***iife:***REMOVED***['document',***REMOVED***'URL',***REMOVED***DOCUMENT_CURRENT_SCRIPT],
***REMOVED******REMOVED******REMOVED******REMOVED***system:***REMOVED***['module'],
***REMOVED******REMOVED******REMOVED******REMOVED***umd:***REMOVED***['document',***REMOVED***'require',***REMOVED***'URL',***REMOVED***DOCUMENT_CURRENT_SCRIPT]
};
const***REMOVED***accessedFileUrlGlobals***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***['document',***REMOVED***'require',***REMOVED***'URL'],
***REMOVED******REMOVED******REMOVED******REMOVED***cjs:***REMOVED***['document',***REMOVED***'require',***REMOVED***'URL'],
***REMOVED******REMOVED******REMOVED******REMOVED***es:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***iife:***REMOVED***['document',***REMOVED***'URL'],
***REMOVED******REMOVED******REMOVED******REMOVED***system:***REMOVED***['module',***REMOVED***'URL'],
***REMOVED******REMOVED******REMOVED******REMOVED***umd:***REMOVED***['document',***REMOVED***'require',***REMOVED***'URL']
};
const***REMOVED***getResolveUrl***REMOVED***=***REMOVED***(path,***REMOVED***URL***REMOVED***=***REMOVED***'URL')***REMOVED***=>***REMOVED***`new***REMOVED***${URL}(${path}).href`;
const***REMOVED***getRelativeUrlFromDocument***REMOVED***=***REMOVED***(relativePath,***REMOVED***umd***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***getResolveUrl(`'${escapeId(relativePath)}',***REMOVED***${umd***REMOVED***?***REMOVED***`typeof***REMOVED***document***REMOVED***===***REMOVED***'undefined'***REMOVED***?***REMOVED***location.href***REMOVED***:***REMOVED***`***REMOVED***:***REMOVED***''}document.currentScript***REMOVED***&&***REMOVED***document.currentScript.tagName.toUpperCase()***REMOVED***===***REMOVED***'SCRIPT'***REMOVED***&&***REMOVED***document.currentScript.src***REMOVED***||***REMOVED***document.baseURI`);
const***REMOVED***getGenericImportMetaMechanism***REMOVED***=***REMOVED***(getUrl)***REMOVED***=>***REMOVED***(property,***REMOVED***{***REMOVED***chunkId***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***urlMechanism***REMOVED***=***REMOVED***getUrl(chunkId);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***property***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`({***REMOVED***url:***REMOVED***${urlMechanism}***REMOVED***})`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***property***REMOVED***===***REMOVED***'url'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***urlMechanism
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'undefined';
};
const***REMOVED***getFileUrlFromFullPath***REMOVED***=***REMOVED***(path)***REMOVED***=>***REMOVED***`require('u'***REMOVED***+***REMOVED***'rl').pathToFileURL(${path}).href`;
const***REMOVED***getFileUrlFromRelativePath***REMOVED***=***REMOVED***(path)***REMOVED***=>***REMOVED***getFileUrlFromFullPath(`__dirname***REMOVED***+***REMOVED***'/${path}'`);
const***REMOVED***getUrlFromDocument***REMOVED***=***REMOVED***(chunkId,***REMOVED***umd***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***`${umd***REMOVED***?***REMOVED***`typeof***REMOVED***document***REMOVED***===***REMOVED***'undefined'***REMOVED***?***REMOVED***location.href***REMOVED***:***REMOVED***`***REMOVED***:***REMOVED***''}(${DOCUMENT_CURRENT_SCRIPT}***REMOVED***&&***REMOVED***${DOCUMENT_CURRENT_SCRIPT}.tagName.toUpperCase()***REMOVED***===***REMOVED***'SCRIPT'***REMOVED***&&***REMOVED***${DOCUMENT_CURRENT_SCRIPT}.src***REMOVED***||***REMOVED***new***REMOVED***URL('${escapeId(chunkId)}',***REMOVED***document.baseURI).href)`;
const***REMOVED***relativeUrlMechanisms***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***relativePath***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(relativePath[0]***REMOVED***!==***REMOVED***'.')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relativePath***REMOVED***=***REMOVED***'./'***REMOVED***+***REMOVED***relativePath;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getResolveUrl(`require.toUrl('${relativePath}'),***REMOVED***document.baseURI`);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***cjs:***REMOVED***relativePath***REMOVED***=>***REMOVED***`(typeof***REMOVED***document***REMOVED***===***REMOVED***'undefined'***REMOVED***?***REMOVED***${getFileUrlFromRelativePath(relativePath)}***REMOVED***:***REMOVED***${getRelativeUrlFromDocument(relativePath)})`,
***REMOVED******REMOVED******REMOVED******REMOVED***es:***REMOVED***relativePath***REMOVED***=>***REMOVED***getResolveUrl(`'${relativePath}',***REMOVED***import.meta.url`),
***REMOVED******REMOVED******REMOVED******REMOVED***iife:***REMOVED***relativePath***REMOVED***=>***REMOVED***getRelativeUrlFromDocument(relativePath),
***REMOVED******REMOVED******REMOVED******REMOVED***system:***REMOVED***relativePath***REMOVED***=>***REMOVED***getResolveUrl(`'${relativePath}',***REMOVED***module.meta.url`),
***REMOVED******REMOVED******REMOVED******REMOVED***umd:***REMOVED***relativePath***REMOVED***=>***REMOVED***`(typeof***REMOVED***document***REMOVED***===***REMOVED***'undefined'***REMOVED***&&***REMOVED***typeof***REMOVED***location***REMOVED***===***REMOVED***'undefined'***REMOVED***?***REMOVED***${getFileUrlFromRelativePath(relativePath)}***REMOVED***:***REMOVED***${getRelativeUrlFromDocument(relativePath,***REMOVED***true)})`
};
const***REMOVED***importMetaMechanisms***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***getGenericImportMetaMechanism(()***REMOVED***=>***REMOVED***getResolveUrl(`module.uri,***REMOVED***document.baseURI`)),
***REMOVED******REMOVED******REMOVED******REMOVED***cjs:***REMOVED***getGenericImportMetaMechanism(chunkId***REMOVED***=>***REMOVED***`(typeof***REMOVED***document***REMOVED***===***REMOVED***'undefined'***REMOVED***?***REMOVED***${getFileUrlFromFullPath('__filename')}***REMOVED***:***REMOVED***${getUrlFromDocument(chunkId)})`),
***REMOVED******REMOVED******REMOVED******REMOVED***iife:***REMOVED***getGenericImportMetaMechanism(chunkId***REMOVED***=>***REMOVED***getUrlFromDocument(chunkId)),
***REMOVED******REMOVED******REMOVED******REMOVED***system:***REMOVED***(property,***REMOVED***{***REMOVED***snippets:***REMOVED***{***REMOVED***getPropertyAccess***REMOVED***}***REMOVED***})***REMOVED***=>***REMOVED***property***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***`module.meta`***REMOVED***:***REMOVED***`module.meta${getPropertyAccess(property)}`,
***REMOVED******REMOVED******REMOVED******REMOVED***umd:***REMOVED***getGenericImportMetaMechanism(chunkId***REMOVED***=>***REMOVED***`(typeof***REMOVED***document***REMOVED***===***REMOVED***'undefined'***REMOVED***&&***REMOVED***typeof***REMOVED***location***REMOVED***===***REMOVED***'undefined'***REMOVED***?***REMOVED***${getFileUrlFromFullPath('__filename')}***REMOVED***:***REMOVED***${getUrlFromDocument(chunkId,***REMOVED***true)})`)
};

class***REMOVED***NewExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***this.arguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.annotationPure)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.callee.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***this.interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.includeCallArguments(context,***REMOVED***this.arguments);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.interaction***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[null,***REMOVED***...this.arguments],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderCallArguments(code,***REMOVED***options,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.callee.deoptimizeArgumentsOnInteractionAtPath(this.interaction,***REMOVED***EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ObjectExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.objectEntity***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizeAllProperties();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getObjectEntity().deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getObjectEntity().hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedSurroundingElement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedSurroundingElement***REMOVED***===***REMOVED***ExpressionStatement$1***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement***REMOVED***===***REMOVED***ArrowFunctionExpression$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendRight(this.start,***REMOVED***'(');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.end,***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getObjectEntity()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.objectEntity***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.objectEntity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***prototype***REMOVED***=***REMOVED***OBJECT_PROTOTYPE;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***properties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***this.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property***REMOVED***instanceof***REMOVED***SpreadElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key:***REMOVED***UnknownKey,***REMOVED***kind:***REMOVED***'init',***REMOVED***property***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keyValue***REMOVED***=***REMOVED***property.key.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***keyValue***REMOVED***===***REMOVED***'symbol')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key:***REMOVED***UnknownKey,***REMOVED***kind:***REMOVED***property.kind,***REMOVED***property***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***String(keyValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.key***REMOVED***instanceof***REMOVED***Identifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***property.key.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***String(property.key.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***'__proto__'***REMOVED***&&***REMOVED***property.kind***REMOVED***===***REMOVED***'init')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prototype***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property.value***REMOVED***instanceof***REMOVED***Literal***REMOVED***&&***REMOVED***property.value.value***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***property.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push({***REMOVED***key,***REMOVED***kind:***REMOVED***property.kind,***REMOVED***property***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.objectEntity***REMOVED***=***REMOVED***new***REMOVED***ObjectEntity(properties,***REMOVED***prototype));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***PrivateIdentifier***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
}

class***REMOVED***Program***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasCachedEffect***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasLoggedEffect***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasCachedEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hasCachedEffect***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(this.hasCachedEffect***REMOVED***=***REMOVED***this.hasEffects(createHasEffectsContext()))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.hasCachedEffect;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.hasEffects(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.context.options.experimentalLogSideEffects***REMOVED***&&***REMOVED***!this.hasLoggedEffect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasLoggedEffect***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***code,***REMOVED***log,***REMOVED***module***REMOVED***}***REMOVED***=***REMOVED***this.context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_INFO,***REMOVED***logFirstSideEffect(code,***REMOVED***module.id,***REMOVED***locate(code,***REMOVED***node.start,***REMOVED***{***REMOVED***offsetLine:***REMOVED***1***REMOVED***})),***REMOVED***node.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.hasCachedEffect***REMOVED***=***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***node.shouldBeIncluded(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.startsWith('#!'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***Math.min(code.original.indexOf('\n')***REMOVED***+***REMOVED***1,***REMOVED***this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(0,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Keep***REMOVED***all***REMOVED***consecutive***REMOVED***lines***REMOVED***that***REMOVED***start***REMOVED***with***REMOVED***a***REMOVED***comment
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(code.original[start]***REMOVED***===***REMOVED***'/'***REMOVED***&&***REMOVED***/[*/]/.test(code.original[start***REMOVED***+***REMOVED***1]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstLineBreak***REMOVED***=***REMOVED***findFirstLineBreakOutsideComment(code.original.slice(start,***REMOVED***this.body[0].start));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstLineBreak[0]***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***+=***REMOVED***firstLineBreak[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderStatementList(this.body,***REMOVED***code,***REMOVED***start,***REMOVED***this.end,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***Property***REMOVED***extends***REMOVED***MethodBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationInit***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***declare(kind,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationInit***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value.declare(kind,***REMOVED***UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propertyReadSideEffects***REMOVED***=***REMOVED***this.context.options.treeshake
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.propertyReadSideEffects;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***((this.parent.type***REMOVED***===***REMOVED***'ObjectPattern'***REMOVED***&&***REMOVED***propertyReadSideEffects***REMOVED***===***REMOVED***'always')***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.key.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value.hasEffects(context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***markDeclarationReached()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value.markDeclarationReached();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.shorthand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.key.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value.render(code,***REMOVED***options,***REMOVED***{***REMOVED***isShorthandProperty:***REMOVED***this.shorthand***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.declarationInit***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declarationInit.deoptimizePath([UnknownKey,***REMOVED***UnknownKey]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***PropertyDefinition***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value?.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value?.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.value.getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.value.getReturnExpressionWhenCalledAtPath(path,***REMOVED***interaction,***REMOVED***recursionTracker,***REMOVED***origin)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.key.hasEffects(context)***REMOVED***||***REMOVED***(this.static***REMOVED***&&***REMOVED***!!this.value?.hasEffects(context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!this.value***REMOVED***||***REMOVED***this.value.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
}

class***REMOVED***ReturnStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.ignore.returnYield***REMOVED***||***REMOVED***this.argument?.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.addReturnExpression(this.argument***REMOVED***||***REMOVED***UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.render(code,***REMOVED***options,***REMOVED***{***REMOVED***preventASI:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argument.start***REMOVED***===***REMOVED***this.start***REMOVED***+***REMOVED***6***REMOVED***/****REMOVED***'return'.length***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.start***REMOVED***+***REMOVED***6,***REMOVED***'***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***SequenceExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressions[this.expressions.length***REMOVED***-***REMOVED***1].deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressions[this.expressions.length***REMOVED***-***REMOVED***1].deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expressions[this.expressions.length***REMOVED***-***REMOVED***1].getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.expressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expression.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expressions[this.expressions.length***REMOVED***-***REMOVED***1].hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastExpression***REMOVED***=***REMOVED***this.expressions[this.expressions.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expression***REMOVED***of***REMOVED***this.expressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(expression***REMOVED***===***REMOVED***lastExpression***REMOVED***&&***REMOVED***!(this.parent***REMOVED***instanceof***REMOVED***ExpressionStatement))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.shouldBeIncluded(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***{***REMOVED***renderedParentType,***REMOVED***isCalleeOfRenderedParent,***REMOVED***preventASI***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***includedNodes***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastSeparatorPos***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastNode***REMOVED***=***REMOVED***this.expressions[this.expressions.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***node,***REMOVED***separator,***REMOVED***start,***REMOVED***end***REMOVED***}***REMOVED***of***REMOVED***getCommaSeparatedNodesWithBoundaries(this.expressions,***REMOVED***code,***REMOVED***this.start,***REMOVED***this.end))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeshakeNode(node,***REMOVED***code,***REMOVED***start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedNodes++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastSeparatorPos***REMOVED***=***REMOVED***separator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedNodes***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***preventASI)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeLineBreaks(code,***REMOVED***start,***REMOVED***node.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedNodes***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentType***REMOVED***=***REMOVED***renderedParentType***REMOVED***||***REMOVED***this.parent.type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.render(code,***REMOVED***options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCalleeOfRenderedParent:***REMOVED***isCalleeOfRenderedParent***REMOVED***&&***REMOVED***node***REMOVED***===***REMOVED***lastNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedParentType:***REMOVED***parentType,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedSurroundingElement:***REMOVED***parentType
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastSeparatorPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(lastSeparatorPos,***REMOVED***this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***StaticBlock***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***BlockScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***node.shouldBeIncluded(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.body.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bodyStartPos***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code.original.slice(this.start,***REMOVED***this.end),***REMOVED***'{')***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderStatementList(this.body,***REMOVED***code,***REMOVED***this.start***REMOVED***+***REMOVED***bodyStartPos,***REMOVED***this.end***REMOVED***-***REMOVED***1,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***Super***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***this.scope.findVariable('this');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***SwitchCase***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test?.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.consequent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.brokenFlow)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.consequent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***node.shouldBeIncluded(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***nodeRenderOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.consequent.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test***REMOVED***&&***REMOVED***this.test.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***testEnd***REMOVED***=***REMOVED***this.test
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.test.end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'default',***REMOVED***this.start)***REMOVED***+***REMOVED***7;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consequentStart***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***':',***REMOVED***testEnd)***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderStatementList(this.consequent,***REMOVED***code,***REMOVED***consequentStart,***REMOVED***nodeRenderOptions.end,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
SwitchCase.prototype.needsBoundaries***REMOVED***=***REMOVED***true;

class***REMOVED***SwitchStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createScope(parentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parentScope***REMOVED***=***REMOVED***parentScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***BlockScope(parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.discriminant.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow,***REMOVED***hasBreak,***REMOVED***ignore***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***breaks***REMOVED***}***REMOVED***=***REMOVED***ignore;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ignore.breaks***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***onlyHasBrokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***switchCase***REMOVED***of***REMOVED***this.cases)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(switchCase.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onlyHasBrokenFlow***REMOVED***&&***REMOVED***(onlyHasBrokenFlow***REMOVED***=***REMOVED***context.brokenFlow***REMOVED***&&***REMOVED***!context.hasBreak);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.defaultCase***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***onlyHasBrokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ignore.breaks***REMOVED***=***REMOVED***breaks;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***hasBreak;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.discriminant.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow,***REMOVED***hasBreak***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***onlyHasBrokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isCaseIncluded***REMOVED***=***REMOVED***includeChildrenRecursively***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.defaultCase***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***this.defaultCase***REMOVED***<***REMOVED***this.cases.length***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***caseIndex***REMOVED***=***REMOVED***this.cases.length***REMOVED***-***REMOVED***1;***REMOVED***caseIndex***REMOVED***>=***REMOVED***0;***REMOVED***caseIndex--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***switchCase***REMOVED***=***REMOVED***this.cases[caseIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(switchCase.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCaseIncluded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isCaseIncluded)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasEffectsContext***REMOVED***=***REMOVED***createHasEffectsContext();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsContext.ignore.breaks***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isCaseIncluded***REMOVED***=***REMOVED***switchCase.hasEffects(hasEffectsContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCaseIncluded)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switchCase.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onlyHasBrokenFlow***REMOVED***&&***REMOVED***(onlyHasBrokenFlow***REMOVED***=***REMOVED***context.brokenFlow***REMOVED***&&***REMOVED***!context.hasBreak);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onlyHasBrokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCaseIncluded***REMOVED***&&***REMOVED***this.defaultCase***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***onlyHasBrokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasBreak***REMOVED***=***REMOVED***hasBreak;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***caseIndex***REMOVED***=***REMOVED***0;***REMOVED***caseIndex***REMOVED***<***REMOVED***this.cases.length;***REMOVED***caseIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.cases[caseIndex].test***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.defaultCase***REMOVED***=***REMOVED***caseIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.defaultCase***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.discriminant***REMOVED***=***REMOVED***new***REMOVED***(this.context.getNodeConstructor(esTreeNode.discriminant.type))(esTreeNode.discriminant,***REMOVED***this,***REMOVED***this.parentScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.discriminant.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.cases.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderStatementList(this.cases,***REMOVED***code,***REMOVED***this.cases[0].start,***REMOVED***this.end***REMOVED***-***REMOVED***1,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***TaggedTemplateExpression***REMOVED***extends***REMOVED***CallExpressionBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.bind();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tag.type***REMOVED***===***REMOVED***Identifier$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.tag.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.scope.findVariable(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.log(LOGLEVEL_WARN,***REMOVED***logCannotCallNamespace(name),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***argument***REMOVED***of***REMOVED***this.quasi.expressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.tag.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tag.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***this.interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tag.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.quasi.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tag.includeCallArguments(context,***REMOVED***this.args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[returnExpression]***REMOVED***=***REMOVED***this.getReturnExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!returnExpression.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returnExpression.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.args***REMOVED***=***REMOVED***[UNKNOWN_EXPRESSION,***REMOVED***...this.quasi.expressions];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.interaction***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tag***REMOVED***instanceof***REMOVED***MemberExpression***REMOVED***&&***REMOVED***!this.tag.variable***REMOVED***?***REMOVED***this.tag.object***REMOVED***:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...this.args
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***INTERACTION_CALLED,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withNew:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tag.render(code,***REMOVED***options,***REMOVED***{***REMOVED***isCalleeOfRenderedParent:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.quasi.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tag.deoptimizeArgumentsOnInteractionAtPath(this.interaction,***REMOVED***EMPTY_PATH,***REMOVED***SHARED_RECURSION_TRACKER);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpression(recursionTracker***REMOVED***=***REMOVED***SHARED_RECURSION_TRACKER)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.returnExpression***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.returnExpression***REMOVED***=***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.returnExpression***REMOVED***=***REMOVED***this.tag.getReturnExpressionWhenCalledAtPath(EMPTY_PATH,***REMOVED***this.interaction,***REMOVED***recursionTracker,***REMOVED***this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.returnExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***TemplateElement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Do***REMOVED***not***REMOVED***try***REMOVED***to***REMOVED***bind***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNode(esTreeNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***esTreeNode.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseNode(esTreeNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render()***REMOVED***{***REMOVED***}
}

class***REMOVED***TemplateLiteral***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***this.quasis.length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.quasis[0].value.cooked;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReturnExpressionWhenCalledAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UNKNOWN_RETURN_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMemberReturnExpressionWhenCalled(literalStringMembers,***REMOVED***path[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_ACCESSED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED***REMOVED***&&***REMOVED***path.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasMemberEffectWhenCalled(literalStringMembers,***REMOVED***path[0],***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.indentExclusionRanges.push([this.start,***REMOVED***this.end]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***UndefinedVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super('undefined');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ExportDefaultVariable***REMOVED***extends***REMOVED***LocalVariable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(name,***REMOVED***exportDefaultDeclaration,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(name,***REMOVED***exportDefaultDeclaration,***REMOVED***exportDefaultDeclaration.declaration,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasId***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalId***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalVariable***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***exportDefaultDeclaration.declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((declaration***REMOVED***instanceof***REMOVED***FunctionDeclaration***REMOVED***||***REMOVED***declaration***REMOVED***instanceof***REMOVED***ClassDeclaration)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasId***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalId***REMOVED***=***REMOVED***declaration.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(declaration***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalId***REMOVED***=***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addReference(identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***identifier.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***forbidName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***original***REMOVED***=***REMOVED***this.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(original***REMOVED***===***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.forbidName(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original.forbidName(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getAssignedVariableName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.originalId***REMOVED***&&***REMOVED***this.originalId.name)***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getBaseVariableName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***original***REMOVED***=***REMOVED***this.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***original***REMOVED***===***REMOVED***this***REMOVED***?***REMOVED***super.getBaseVariableName()***REMOVED***:***REMOVED***original.getBaseVariableName();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getDirectOriginalVariable()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.originalId***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.hasId***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(this.originalId.isPossibleTDZ()***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalId.variable.isReassigned***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalId.variable***REMOVED***instanceof***REMOVED***UndefinedVariable***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***avoids***REMOVED***a***REMOVED***circular***REMOVED***dependency
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'syntheticNamespace'***REMOVED***in***REMOVED***this.originalId.variable))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.originalId.variable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getName(getPropertyAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***original***REMOVED***=***REMOVED***this.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***original***REMOVED***===***REMOVED***this
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***super.getName(getPropertyAccess)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***original.getName(getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getOriginalVariable()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.originalVariable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.originalVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/no-this-alias
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***original***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedVariables***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedVariables.add(original);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentVariable***REMOVED***=***REMOVED***original;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original***REMOVED***=***REMOVED***currentVariable.getDirectOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(original***REMOVED***instanceof***REMOVED***ExportDefaultVariable***REMOVED***&&***REMOVED***!checkedVariables.has(original));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.originalVariable***REMOVED***=***REMOVED***original***REMOVED***||***REMOVED***currentVariable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ModuleScope***REMOVED***extends***REMOVED***ChildScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(parent,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set('this',***REMOVED***new***REMOVED***LocalVariable('this',***REMOVED***null,***REMOVED***UNDEFINED_EXPRESSION,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addExportDefaultDeclaration(name,***REMOVED***exportDefaultDeclaration,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***new***REMOVED***ExportDefaultVariable(name,***REMOVED***exportDefaultDeclaration,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set('default',***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addNamespaceMemberAccess()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deconflict(format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***all***REMOVED***module***REMOVED***level***REMOVED***variables***REMOVED***are***REMOVED***already***REMOVED***deconflicted***REMOVED***when***REMOVED***deconflicting***REMOVED***the***REMOVED***chunk
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***scope***REMOVED***of***REMOVED***this.children)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.deconflict(format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findLexicalBoundary()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findVariable(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***knownVariable***REMOVED***=***REMOVED***this.variables.get(name)***REMOVED***||***REMOVED***this.accessedOutsideVariables.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(knownVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***knownVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.context.traceVariable(name)***REMOVED***||***REMOVED***this.parent.findVariable(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***GlobalVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedOutsideVariables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ThisExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bind()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable***REMOVED***=***REMOVED***this.scope.findVariable('this');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variable.deoptimizePath(path);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***interaction.type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.variable.hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alias***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.findLexicalBoundary()***REMOVED***instanceof***REMOVED***ModuleScope***REMOVED***?***REMOVED***this.context.moduleContext***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alias***REMOVED***===***REMOVED***'undefined')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.log(LOGLEVEL_WARN,***REMOVED***logThisIsUndefined(),***REMOVED***this.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.alias***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(this.start,***REMOVED***this.end,***REMOVED***this.alias,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contentOnly:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***storeName:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***ThrowStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.render(code,***REMOVED***options,***REMOVED***{***REMOVED***preventASI:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argument.start***REMOVED***===***REMOVED***this.start***REMOVED***+***REMOVED***5***REMOVED***/****REMOVED***'throw'.length***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.start***REMOVED***+***REMOVED***5,***REMOVED***'***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***TryStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.directlyIncluded***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedLabelsAfterBlock***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***((this.context.options.treeshake.tryCatchDeoptimization
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.block.body.length***REMOVED***>***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.block.hasEffects(context))***REMOVED***||***REMOVED***!!this.finalizer?.hasEffects(context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tryCatchDeoptimization***REMOVED***=***REMOVED***this.context.options.treeshake
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?.tryCatchDeoptimization;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***brokenFlow,***REMOVED***includedLabels***REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.directlyIncluded***REMOVED***||***REMOVED***!tryCatchDeoptimization)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.directlyIncluded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.block.include(context,***REMOVED***tryCatchDeoptimization***REMOVED***?***REMOVED***INCLUDE_PARAMETERS***REMOVED***:***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedLabels.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedLabelsAfterBlock***REMOVED***=***REMOVED***[...includedLabels];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.includedLabelsAfterBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***label***REMOVED***of***REMOVED***this.includedLabelsAfterBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedLabels.add(label);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.handler***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.handler.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.brokenFlow***REMOVED***=***REMOVED***brokenFlow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizer?.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***unaryOperators***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'!':***REMOVED***value***REMOVED***=>***REMOVED***!value,
***REMOVED******REMOVED******REMOVED******REMOVED***'+':***REMOVED***value***REMOVED***=>***REMOVED***+value,
***REMOVED******REMOVED******REMOVED******REMOVED***'-':***REMOVED***value***REMOVED***=>***REMOVED***-value,
***REMOVED******REMOVED******REMOVED******REMOVED***delete:***REMOVED***()***REMOVED***=>***REMOVED***UnknownValue,
***REMOVED******REMOVED******REMOVED******REMOVED***typeof:***REMOVED***value***REMOVED***=>***REMOVED***typeof***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED***void:***REMOVED***()***REMOVED***=>***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED***'~':***REMOVED***value***REMOVED***=>***REMOVED***~value
};
class***REMOVED***UnaryExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path,***REMOVED***recursionTracker,***REMOVED***origin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***argumentValue***REMOVED***=***REMOVED***this.argument.getLiteralValueAtPath(EMPTY_PATH,***REMOVED***recursionTracker,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***argumentValue***REMOVED***===***REMOVED***'symbol')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***unaryOperators[this.operator](argumentValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.operator***REMOVED***===***REMOVED***'typeof'***REMOVED***&&***REMOVED***this.argument***REMOVED***instanceof***REMOVED***Identifier)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.argument.hasEffects(context)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.operator***REMOVED***===***REMOVED***'delete'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH,***REMOVED***NODE_INTERACTION_UNKNOWN_ASSIGNMENT,***REMOVED***context)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED***REMOVED***||***REMOVED***path.length***REMOVED***>***REMOVED***(this.operator***REMOVED***===***REMOVED***'void'***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.operator***REMOVED***===***REMOVED***'delete')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***UnknownNode***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include(context,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***UpdateExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.argument.hasEffectsAsAssignmentTarget(context,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***{***REMOVED***type***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.length***REMOVED***>***REMOVED***1***REMOVED***||***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_ACCESSED;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.includeAsAssignmentTarget(context,***REMOVED***includeChildrenRecursively,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.setAssignedValue(UNKNOWN_EXPRESSION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***format,***REMOVED***snippets:***REMOVED***{***REMOVED***_***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'system')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.argument.variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportNames***REMOVED***=***REMOVED***exportNamesByVariable.get(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prefix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNames.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportExpression(variable,***REMOVED***this.start,***REMOVED***this.end,***REMOVED***code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportSequenceAfterExpression(variable,***REMOVED***this.start,***REMOVED***this.end,***REMOVED***this.parent.type***REMOVED***!==***REMOVED***ExpressionStatement$1,***REMOVED***code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operator***REMOVED***=***REMOVED***this.operator[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportSequenceBeforeExpression(variable,***REMOVED***this.start,***REMOVED***this.end,***REMOVED***this.parent.type***REMOVED***!==***REMOVED***ExpressionStatement$1,***REMOVED***code,***REMOVED***options,***REMOVED***`${_}${operator}${_}1`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argument***REMOVED***instanceof***REMOVED***Identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.scope.findVariable(this.argument.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.isReassigned***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.requestTreeshakingPass();
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***areAllDeclarationsIncludedAndNotExported(declarations,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declarator***REMOVED***of***REMOVED***declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!declarator.id.included)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declarator.id.type***REMOVED***===***REMOVED***Identifier$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNamesByVariable.has(declarator.id.variable))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportedVariables***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarator.id.addExportedVariables(exportedVariables,***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportedVariables.length***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
}
class***REMOVED***VariableDeclaration***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declarator***REMOVED***of***REMOVED***this.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarator.deoptimizePath(EMPTY_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively,***REMOVED***{***REMOVED***asSingleStatement***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declarator***REMOVED***of***REMOVED***this.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeChildrenRecursively***REMOVED***||***REMOVED***declarator.shouldBeIncluded(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarator.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***id,***REMOVED***init***REMOVED***}***REMOVED***=***REMOVED***declarator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(asSingleStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(init***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.included***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!init.included***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(id***REMOVED***instanceof***REMOVED***ObjectPattern***REMOVED***||***REMOVED***id***REMOVED***instanceof***REMOVED***ArrayPattern))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***initialise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declarator***REMOVED***of***REMOVED***this.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarator.declareDeclarator(this.kind);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options,***REMOVED***nodeRenderOptions***REMOVED***=***REMOVED***BLANK)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(areAllDeclarationsIncludedAndNotExported(this.declarations,***REMOVED***options.exportNamesByVariable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declarator***REMOVED***of***REMOVED***this.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarator.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nodeRenderOptions.isNoStatement***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.original.charCodeAt(this.end***REMOVED***-***REMOVED***1)***REMOVED***!==***REMOVED***59***REMOVED***/*";"*/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(this.end,***REMOVED***';');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderReplacedDeclarations(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***applyDeoptimizations()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderDeclarationEnd(code,***REMOVED***separatorString,***REMOVED***lastSeparatorPos,***REMOVED***actualContentEnd,***REMOVED***renderedContentEnd,***REMOVED***systemPatternExports,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.charCodeAt(this.end***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***59***REMOVED***/*";"*/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.end***REMOVED***-***REMOVED***1,***REMOVED***this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separatorString***REMOVED***+=***REMOVED***';';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastSeparatorPos***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(renderedContentEnd,***REMOVED***separatorString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.charCodeAt(actualContentEnd***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***10***REMOVED***/*"\n"*/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(code.original.charCodeAt(this.end)***REMOVED***===***REMOVED***10***REMOVED***/*"\n"*/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.original.charCodeAt(this.end)***REMOVED***===***REMOVED***13)***REMOVED***/*"\r"*/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***actualContentEnd--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code.original.charCodeAt(actualContentEnd)***REMOVED***===***REMOVED***13***REMOVED***/*"\r"*/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***actualContentEnd--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(actualContentEnd***REMOVED***===***REMOVED***lastSeparatorPos***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(lastSeparatorPos,***REMOVED***renderedContentEnd,***REMOVED***separatorString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(lastSeparatorPos,***REMOVED***lastSeparatorPos***REMOVED***+***REMOVED***1,***REMOVED***separatorString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(actualContentEnd,***REMOVED***renderedContentEnd);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(systemPatternExports.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(renderedContentEnd,***REMOVED***`***REMOVED***${getSystemExportStatement(systemPatternExports,***REMOVED***options)};`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderReplacedDeclarations(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***separatedNodes***REMOVED***=***REMOVED***getCommaSeparatedNodesWithBoundaries(this.declarations,***REMOVED***code,***REMOVED***this.start***REMOVED***+***REMOVED***this.kind.length,***REMOVED***this.end***REMOVED***-***REMOVED***(code.original.charCodeAt(this.end***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***59***REMOVED***/*";"*/***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***actualContentEnd,***REMOVED***renderedContentEnd;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedContentEnd***REMOVED***=***REMOVED***findNonWhiteSpace(code.original,***REMOVED***this.start***REMOVED***+***REMOVED***this.kind.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastSeparatorPos***REMOVED***=***REMOVED***renderedContentEnd***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(this.start,***REMOVED***lastSeparatorPos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isInDeclaration***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasRenderedContent***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***separatorString***REMOVED***=***REMOVED***'',***REMOVED***leadingString,***REMOVED***nextSeparatorString;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aggregatedSystemExports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***singleSystemExport***REMOVED***=***REMOVED***gatherSystemExportsAndGetSingleExport(separatedNodes,***REMOVED***options,***REMOVED***aggregatedSystemExports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***node,***REMOVED***start,***REMOVED***separator,***REMOVED***contentEnd,***REMOVED***end***REMOVED***}***REMOVED***of***REMOVED***separatedNodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.remove(start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.render(code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leadingString***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextSeparatorString***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.id.included***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node.id***REMOVED***instanceof***REMOVED***Identifier***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isReassignedExportsMember(node.id.variable,***REMOVED***options.exportNamesByVariable)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasRenderedContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separatorString***REMOVED***+=***REMOVED***';';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isInDeclaration***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(singleSystemExport***REMOVED***&&***REMOVED***singleSystemExport***REMOVED***===***REMOVED***node.id.variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operatorPos***REMOVED***=***REMOVED***findFirstOccurrenceOutsideComment(code.original,***REMOVED***'=',***REMOVED***node.id.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderSystemExportExpression(singleSystemExport,***REMOVED***findNonWhiteSpace(code.original,***REMOVED***operatorPos***REMOVED***+***REMOVED***1),***REMOVED***separator***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***contentEnd***REMOVED***:***REMOVED***separator,***REMOVED***code,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isInDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separatorString***REMOVED***+=***REMOVED***',';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasRenderedContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separatorString***REMOVED***+=***REMOVED***';';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leadingString***REMOVED***+=***REMOVED***`${this.kind}***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isInDeclaration***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedContentEnd***REMOVED***===***REMOVED***lastSeparatorPos***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(lastSeparatorPos,***REMOVED***renderedContentEnd,***REMOVED***separatorString***REMOVED***+***REMOVED***leadingString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.overwrite(lastSeparatorPos,***REMOVED***lastSeparatorPos***REMOVED***+***REMOVED***1,***REMOVED***separatorString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.appendLeft(renderedContentEnd,***REMOVED***leadingString);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***actualContentEnd***REMOVED***=***REMOVED***contentEnd;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedContentEnd***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasRenderedContent***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastSeparatorPos***REMOVED***=***REMOVED***separator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***separatorString***REMOVED***=***REMOVED***nextSeparatorString;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderDeclarationEnd(code,***REMOVED***separatorString,***REMOVED***lastSeparatorPos,***REMOVED***actualContentEnd,***REMOVED***renderedContentEnd,***REMOVED***aggregatedSystemExports,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***gatherSystemExportsAndGetSingleExport(separatedNodes,***REMOVED***options,***REMOVED***aggregatedSystemExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***singleSystemExport***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.format***REMOVED***===***REMOVED***'system')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***node***REMOVED***}***REMOVED***of***REMOVED***separatedNodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.id***REMOVED***instanceof***REMOVED***Identifier***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.init***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aggregatedSystemExports.length***REMOVED***===***REMOVED***0***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.exportNamesByVariable.get(node.id.variable)?.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***singleSystemExport***REMOVED***=***REMOVED***node.id.variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aggregatedSystemExports.push(singleSystemExport);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id.addExportedVariables(aggregatedSystemExports,***REMOVED***options.exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aggregatedSystemExports.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***singleSystemExport***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(singleSystemExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aggregatedSystemExports.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***singleSystemExport;
}

class***REMOVED***WhileStatement***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.test.hasEffects(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasLoopBodyEffects(context,***REMOVED***this.body);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include(context,***REMOVED***includeChildrenRecursively)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.test.include(context,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeLoopBody(context,***REMOVED***this.body,***REMOVED***includeChildrenRecursively);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***YieldExpression***REMOVED***extends***REMOVED***NodeBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.deoptimized)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyDeoptimizations();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!(context.ignore.returnYield***REMOVED***&&***REMOVED***!this.argument?.hasEffects(context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(code,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.argument.render(code,***REMOVED***options,***REMOVED***{***REMOVED***preventASI:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.argument.start***REMOVED***===***REMOVED***this.start***REMOVED***+***REMOVED***5***REMOVED***/****REMOVED***'yield'.length***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.prependLeft(this.start***REMOVED***+***REMOVED***5,***REMOVED***'***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***nodeConstructors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ArrayExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ArrayPattern,
***REMOVED******REMOVED******REMOVED******REMOVED***ArrowFunctionExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***AssignmentExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***AssignmentPattern,
***REMOVED******REMOVED******REMOVED******REMOVED***AwaitExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***BinaryExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***BlockStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***BreakStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***CallExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***CatchClause,
***REMOVED******REMOVED******REMOVED******REMOVED***ChainExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ClassBody,
***REMOVED******REMOVED******REMOVED******REMOVED***ClassDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***ClassExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ConditionalExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ContinueStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***DoWhileStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***EmptyStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***ExportAllDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***ExportDefaultDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***ExportNamedDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***ExportSpecifier,
***REMOVED******REMOVED******REMOVED******REMOVED***ExpressionStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***ForInStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***ForOfStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***ForStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***FunctionDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***FunctionExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***Identifier,
***REMOVED******REMOVED******REMOVED******REMOVED***IfStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***ImportAttribute,
***REMOVED******REMOVED******REMOVED******REMOVED***ImportDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***ImportDefaultSpecifier,
***REMOVED******REMOVED******REMOVED******REMOVED***ImportExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ImportNamespaceSpecifier,
***REMOVED******REMOVED******REMOVED******REMOVED***ImportSpecifier,
***REMOVED******REMOVED******REMOVED******REMOVED***LabeledStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***Literal,
***REMOVED******REMOVED******REMOVED******REMOVED***LogicalExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***MemberExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***MetaProperty,
***REMOVED******REMOVED******REMOVED******REMOVED***MethodDefinition,
***REMOVED******REMOVED******REMOVED******REMOVED***NewExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ObjectExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ObjectPattern,
***REMOVED******REMOVED******REMOVED******REMOVED***PrivateIdentifier,
***REMOVED******REMOVED******REMOVED******REMOVED***Program,
***REMOVED******REMOVED******REMOVED******REMOVED***Property,
***REMOVED******REMOVED******REMOVED******REMOVED***PropertyDefinition,
***REMOVED******REMOVED******REMOVED******REMOVED***RestElement,
***REMOVED******REMOVED******REMOVED******REMOVED***ReturnStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***SequenceExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***SpreadElement,
***REMOVED******REMOVED******REMOVED******REMOVED***StaticBlock,
***REMOVED******REMOVED******REMOVED******REMOVED***Super,
***REMOVED******REMOVED******REMOVED******REMOVED***SwitchCase,
***REMOVED******REMOVED******REMOVED******REMOVED***SwitchStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***TaggedTemplateExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***TemplateElement,
***REMOVED******REMOVED******REMOVED******REMOVED***TemplateLiteral,
***REMOVED******REMOVED******REMOVED******REMOVED***ThisExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***ThrowStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***TryStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***UnaryExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***UnknownNode,
***REMOVED******REMOVED******REMOVED******REMOVED***UpdateExpression,
***REMOVED******REMOVED******REMOVED******REMOVED***VariableDeclaration,
***REMOVED******REMOVED******REMOVED******REMOVED***VariableDeclarator,
***REMOVED******REMOVED******REMOVED******REMOVED***WhileStatement,
***REMOVED******REMOVED******REMOVED******REMOVED***YieldExpression
};

const***REMOVED***MISSING_EXPORT_SHIM_VARIABLE***REMOVED***=***REMOVED***'_missingExportShim';

class***REMOVED***ExportShimVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(MISSING_EXPORT_SHIM_VARIABLE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module***REMOVED***=***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module.needsExportShim***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***NamespaceVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(context.getModuleName());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.memberVariables***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.mergedNamespaces***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.referencedEarly***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.references***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module***REMOVED***=***REMOVED***context.module;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addReference(identifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.references.push(identifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***identifier.name;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path,***REMOVED***recursionTracker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***1***REMOVED***||***REMOVED***(path.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***interaction.type***REMOVED***===***REMOVED***INTERACTION_CALLED))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***path[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getMemberVariables()[key]?.deoptimizeArgumentsOnInteractionAtPath(interaction,***REMOVED***path.slice(1),***REMOVED***recursionTracker);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizeInteraction(interaction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deoptimizePath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***path[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getMemberVariables()[key]?.deoptimizePath(path.slice(1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getLiteralValueAtPath(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path[0]***REMOVED***===***REMOVED***SymbolToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'Module';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***UnknownValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getMemberVariables()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.memberVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.memberVariables;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberVariables***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sortedExports***REMOVED***=***REMOVED***[...this.context.getExports(),***REMOVED***...this.context.getReexports()].sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***sortedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name[0]***REMOVED***!==***REMOVED***'*'***REMOVED***&&***REMOVED***name***REMOVED***!==***REMOVED***this.module.info.syntheticNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportedVariable***REMOVED***=***REMOVED***this.context.traceExport(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportedVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberVariables[name]***REMOVED***=***REMOVED***exportedVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.memberVariables***REMOVED***=***REMOVED***memberVariables);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffectsOnInteractionAtPath(path,***REMOVED***interaction,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type***REMOVED***}***REMOVED***=***REMOVED***interaction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***a***REMOVED***call***REMOVED***anyway
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***INTERACTION_CALLED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***INTERACTION_ASSIGNED;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***path[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberVariable***REMOVED***=***REMOVED***this.getMemberVariables()[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!memberVariable***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberVariable.hasEffectsOnInteractionAtPath(path.slice(1),***REMOVED***interaction,***REMOVED***context));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeAllExports();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prepare(accessedGlobalsByScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.mergedNamespaces.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module.scope.addAccessedGlobals([MERGE_NAMESPACES_VARIABLE],***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderBlock(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exportNamesByVariable,***REMOVED***format,***REMOVED***freeze,***REMOVED***indent:***REMOVED***t,***REMOVED***namespaceToStringTag,***REMOVED***snippets:***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getObject,***REMOVED***getPropertyAccess,***REMOVED***n,***REMOVED***s***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberVariables***REMOVED***=***REMOVED***this.getMemberVariables();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***members***REMOVED***=***REMOVED***Object.entries(memberVariables)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(([_,***REMOVED***variable])***REMOVED***=>***REMOVED***variable.included)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(([name,***REMOVED***variable])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.referencedEarly***REMOVED***||***REMOVED***variable.isReassigned***REMOVED***||***REMOVED***variable***REMOVED***===***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`get***REMOVED***${name}${_}()${_}{${_}return***REMOVED***${variable.getName(getPropertyAccess)}${s}${_}}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[name,***REMOVED***variable.getName(getPropertyAccess)];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members.unshift([null,***REMOVED***`__proto__:${_}null`]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***getObject(members,***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***{***REMOVED***base:***REMOVED***'',***REMOVED***t***REMOVED***}***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.mergedNamespaces.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assignmentArguments***REMOVED***=***REMOVED***this.mergedNamespaces.map(variable***REMOVED***=>***REMOVED***variable.getName(getPropertyAccess));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***`/*#__PURE__*/${MERGE_NAMESPACES_VARIABLE}(${output},${_}[${assignmentArguments.join(`,${_}`)}])`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***helper***REMOVED***to***REMOVED***merge***REMOVED***namespaces***REMOVED***will***REMOVED***also***REMOVED***take***REMOVED***care***REMOVED***of***REMOVED***freezing***REMOVED***and***REMOVED***toStringTag
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***`/*#__PURE__*/Object.defineProperty(${output},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(freeze)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***`/*#__PURE__*/Object.freeze(${output})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.getName(getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***`${cnst}***REMOVED***${name}${_}=${_}${output};`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'system'***REMOVED***&&***REMOVED***exportNamesByVariable.has(this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***+=***REMOVED***`${n}${getSystemExportStatement([this],***REMOVED***options)};`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***output;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderFirst()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.referencedEarly;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setMergedNamespaces(mergedNamespaces)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.mergedNamespaces***REMOVED***=***REMOVED***mergedNamespaces;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleExecIndex***REMOVED***=***REMOVED***this.context.getModuleExecIndex();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***identifier***REMOVED***of***REMOVED***this.references)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(identifier.context.getModuleExecIndex()***REMOVED***<=***REMOVED***moduleExecIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.referencedEarly***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
NamespaceVariable.prototype.isNamespace***REMOVED***=***REMOVED***true;

class***REMOVED***SyntheticNamedExportVariable***REMOVED***extends***REMOVED***Variable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(context,***REMOVED***name,***REMOVED***syntheticNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.baseVariable***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.module***REMOVED***=***REMOVED***context.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.syntheticNamespace***REMOVED***=***REMOVED***syntheticNamespace;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getBaseVariable()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.baseVariable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.baseVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***baseVariable***REMOVED***=***REMOVED***this.syntheticNamespace;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(baseVariable***REMOVED***instanceof***REMOVED***ExportDefaultVariable***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseVariable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(baseVariable***REMOVED***instanceof***REMOVED***ExportDefaultVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***original***REMOVED***=***REMOVED***baseVariable.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(original***REMOVED***===***REMOVED***baseVariable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseVariable***REMOVED***=***REMOVED***original;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(baseVariable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseVariable***REMOVED***=***REMOVED***baseVariable.syntheticNamespace;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.baseVariable***REMOVED***=***REMOVED***baseVariable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getBaseVariableName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.syntheticNamespace.getBaseVariableName();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getName(getPropertyAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${this.syntheticNamespace.getName(getPropertyAccess)}${getPropertyAccess(this.name)}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.included***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.includeVariableInModule(this.syntheticNamespace);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setRenderNames(baseName,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.setRenderNames(baseName,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***sourceMapCache***REMOVED***=***REMOVED***new***REMOVED***WeakMap();
/**
***REMOVED*******REMOVED***This***REMOVED***clears***REMOVED***the***REMOVED***decoded***REMOVED***array***REMOVED***and***REMOVED***falls***REMOVED***back***REMOVED***to***REMOVED***the***REMOVED***encoded***REMOVED***string***REMOVED***form.
***REMOVED*******REMOVED***Sourcemap***REMOVED***mappings***REMOVED***arrays***REMOVED***can***REMOVED***be***REMOVED***very***REMOVED***large***REMOVED***and***REMOVED***holding***REMOVED***on***REMOVED***to***REMOVED***them***REMOVED***for***REMOVED***longer
***REMOVED*******REMOVED***than***REMOVED***is***REMOVED***necessary***REMOVED***leads***REMOVED***to***REMOVED***poor***REMOVED***heap***REMOVED***utilization.
***REMOVED****/
function***REMOVED***resetCacheToEncoded(cache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache.encodedMappings***REMOVED***===***REMOVED***undefined***REMOVED***&&***REMOVED***cache.decodedMappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache.encodedMappings***REMOVED***=***REMOVED***encode(cache.decodedMappings);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***cache.decodedMappings***REMOVED***=***REMOVED***undefined;
}
function***REMOVED***resetSourcemapCache(map,***REMOVED***sourcemapChain)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***sourceMapCache.get(map);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetCacheToEncoded(cache);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!sourcemapChain)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***map***REMOVED***of***REMOVED***sourcemapChain)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map.missing)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetSourcemapCache(map);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***decodedSourcemap(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!map)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***map***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map***REMOVED***=***REMOVED***JSON.parse(map);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!map.mappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version:***REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalMappings***REMOVED***=***REMOVED***map.mappings;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAlreadyDecoded***REMOVED***=***REMOVED***Array.isArray(originalMappings);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decodedMappings:***REMOVED***isAlreadyDecoded***REMOVED***?***REMOVED***originalMappings***REMOVED***:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***encodedMappings:***REMOVED***isAlreadyDecoded***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***originalMappings
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decodedMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...map,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***By***REMOVED***moving***REMOVED***mappings***REMOVED***behind***REMOVED***an***REMOVED***accessor,***REMOVED***we***REMOVED***can***REMOVED***avoid***REMOVED***unneeded***REMOVED***computation***REMOVED***for***REMOVED***cases
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***where***REMOVED***the***REMOVED***mappings***REMOVED***field***REMOVED***is***REMOVED***never***REMOVED***actually***REMOVED***accessed.***REMOVED***This***REMOVED***appears***REMOVED***to***REMOVED***greatly***REMOVED***reduce
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***overhead***REMOVED***of***REMOVED***sourcemap***REMOVED***decoding***REMOVED***in***REMOVED***terms***REMOVED***of***REMOVED***both***REMOVED***compute***REMOVED***time***REMOVED***and***REMOVED***memory***REMOVED***usage.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***mappings()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache.decodedMappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cache.decodedMappings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***decodedMappings***REMOVED***doesn't***REMOVED***exist***REMOVED***then***REMOVED***encodedMappings***REMOVED***should.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***only***REMOVED***scenario***REMOVED***where***REMOVED***cache.encodedMappings***REMOVED***should***REMOVED***be***REMOVED***undefined***REMOVED***is***REMOVED***if***REMOVED***the***REMOVED***map
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***was***REMOVED***constructed***REMOVED***from***REMOVED***was***REMOVED***already***REMOVED***decoded,***REMOVED***or***REMOVED***if***REMOVED***mappings***REMOVED***was***REMOVED***set***REMOVED***to***REMOVED***a***REMOVED***new
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***decoded***REMOVED***string.***REMOVED***In***REMOVED***either***REMOVED***case,***REMOVED***this***REMOVED***line***REMOVED***shouldn't***REMOVED***get***REMOVED***hit.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache.decodedMappings***REMOVED***=***REMOVED***cache.encodedMappings***REMOVED***?***REMOVED***decode(cache.encodedMappings)***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache.encodedMappings***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cache.decodedMappings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMapCache.set(decodedMap,***REMOVED***cache);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***decodedMap;
}

function***REMOVED***getId(m)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***m.id;
}

function***REMOVED***getOriginalLocation(sourcemapChain,***REMOVED***location)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filteredSourcemapChain***REMOVED***=***REMOVED***sourcemapChain.filter((sourcemap)***REMOVED***=>***REMOVED***!sourcemap.missing);
***REMOVED******REMOVED******REMOVED******REMOVED***traceSourcemap:***REMOVED***while***REMOVED***(filteredSourcemapChain.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemap***REMOVED***=***REMOVED***filteredSourcemapChain.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***sourcemap.mappings[location.line***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(line)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filteredLine***REMOVED***=***REMOVED***line.filter((segment)***REMOVED***=>***REMOVED***segment.length***REMOVED***>***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastSegment***REMOVED***=***REMOVED***filteredLine[filteredLine.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***segment***REMOVED***of***REMOVED***filteredLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment[0]***REMOVED***>=***REMOVED***location.column***REMOVED***||***REMOVED***segment***REMOVED***===***REMOVED***lastSegment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***segment[3],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***segment[2]***REMOVED***+***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue***REMOVED***traceSourcemap;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Can't***REMOVED***resolve***REMOVED***original***REMOVED***location***REMOVED***of***REMOVED***error.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***location;
}

function***REMOVED***getAssertionsFromImportExpression(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertProperty***REMOVED***=***REMOVED***node.arguments?.[0]?.properties.find((property)***REMOVED***=>***REMOVED***getPropertyKey(property)***REMOVED***===***REMOVED***'assert')?.value;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!assertProperty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_OBJECT;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertFields***REMOVED***=***REMOVED***assertProperty.properties
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(property***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***getPropertyKey(property);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***key***REMOVED***===***REMOVED***'string'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***property.value.value***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[key,***REMOVED***property.value.value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter((property)***REMOVED***=>***REMOVED***!!property);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(assertFields.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.fromEntries(assertFields);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_OBJECT;
}
const***REMOVED***getPropertyKey***REMOVED***=***REMOVED***(property)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***property.key;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key***REMOVED***&&***REMOVED***(key.name***REMOVED***||***REMOVED***key.value);
};
function***REMOVED***getAssertionsFromImportExportDeclaration(assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assertions?.length
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***Object.fromEntries(assertions.map(assertion***REMOVED***=>***REMOVED***[getPropertyKey(assertion),***REMOVED***assertion.value.value]))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***EMPTY_OBJECT;
}
function***REMOVED***doAssertionsDiffer(assertionA,***REMOVED***assertionB)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keysA***REMOVED***=***REMOVED***Object.keys(assertionA);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(keysA.length***REMOVED***!==***REMOVED***Object.keys(assertionB).length***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keysA.some(key***REMOVED***=>***REMOVED***assertionA[key]***REMOVED***!==***REMOVED***assertionB[key]));
}

let***REMOVED***timers***REMOVED***=***REMOVED***new***REMOVED***Map();
function***REMOVED***getPersistedLabel(label,***REMOVED***level)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(level)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***1:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`#***REMOVED***${label}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***2:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`##***REMOVED***${label}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***3:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***label;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${'***REMOVED******REMOVED***'.repeat(level***REMOVED***-***REMOVED***4)}-***REMOVED***${label}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***timeStartImpl(label,***REMOVED***level***REMOVED***=***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***label***REMOVED***=***REMOVED***getPersistedLabel(label,***REMOVED***level);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startMemory***REMOVED***=***REMOVED***process$1.memoryUsage().heapUsed;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startTime***REMOVED***=***REMOVED***node_perf_hooks.performance.now();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***timer***REMOVED***=***REMOVED***timers.get(label);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(timer***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timers.set(label,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memory:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMemory,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startTime,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***totalMemory:***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer.startMemory***REMOVED***=***REMOVED***startMemory;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer.startTime***REMOVED***=***REMOVED***startTime;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***timeEndImpl(label,***REMOVED***level***REMOVED***=***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***label***REMOVED***=***REMOVED***getPersistedLabel(label,***REMOVED***level);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***timer***REMOVED***=***REMOVED***timers.get(label);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(timer***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentMemory***REMOVED***=***REMOVED***process$1.memoryUsage().heapUsed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer.memory***REMOVED***+=***REMOVED***currentMemory***REMOVED***-***REMOVED***timer.startMemory;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer.time***REMOVED***+=***REMOVED***node_perf_hooks.performance.now()***REMOVED***-***REMOVED***timer.startTime;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer.totalMemory***REMOVED***=***REMOVED***Math.max(timer.totalMemory,***REMOVED***currentMemory);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getTimings()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newTimings***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[label,***REMOVED***{***REMOVED***memory,***REMOVED***time,***REMOVED***totalMemory***REMOVED***}]***REMOVED***of***REMOVED***timers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newTimings[label]***REMOVED***=***REMOVED***[time,***REMOVED***memory,***REMOVED***totalMemory];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***newTimings;
}
let***REMOVED***timeStart***REMOVED***=***REMOVED***doNothing;
let***REMOVED***timeEnd***REMOVED***=***REMOVED***doNothing;
const***REMOVED***TIMED_PLUGIN_HOOKS***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***'augmentChunkHash',
***REMOVED******REMOVED******REMOVED******REMOVED***'buildEnd',
***REMOVED******REMOVED******REMOVED******REMOVED***'buildStart',
***REMOVED******REMOVED******REMOVED******REMOVED***'generateBundle',
***REMOVED******REMOVED******REMOVED******REMOVED***'load',
***REMOVED******REMOVED******REMOVED******REMOVED***'moduleParsed',
***REMOVED******REMOVED******REMOVED******REMOVED***'options',
***REMOVED******REMOVED******REMOVED******REMOVED***'outputOptions',
***REMOVED******REMOVED******REMOVED******REMOVED***'renderChunk',
***REMOVED******REMOVED******REMOVED******REMOVED***'renderDynamicImport',
***REMOVED******REMOVED******REMOVED******REMOVED***'renderStart',
***REMOVED******REMOVED******REMOVED******REMOVED***'resolveDynamicImport',
***REMOVED******REMOVED******REMOVED******REMOVED***'resolveFileUrl',
***REMOVED******REMOVED******REMOVED******REMOVED***'resolveId',
***REMOVED******REMOVED******REMOVED******REMOVED***'resolveImportMeta',
***REMOVED******REMOVED******REMOVED******REMOVED***'shouldTransformCachedModule',
***REMOVED******REMOVED******REMOVED******REMOVED***'transform',
***REMOVED******REMOVED******REMOVED******REMOVED***'writeBundle'
];
function***REMOVED***getPluginWithTimers(plugin,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(plugin._hasTimer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***plugin;
***REMOVED******REMOVED******REMOVED******REMOVED***plugin._hasTimer***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***hook***REMOVED***of***REMOVED***TIMED_PLUGIN_HOOKS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook***REMOVED***in***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***timerLabel***REMOVED***=***REMOVED***`plugin***REMOVED***${index}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(plugin.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timerLabel***REMOVED***+=***REMOVED***`***REMOVED***(${plugin.name})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timerLabel***REMOVED***+=***REMOVED***`***REMOVED***-***REMOVED***${hook}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***function***REMOVED***(...parameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart(timerLabel,***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***hookFunction.apply(this,***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd(timerLabel,***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hookFunction;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***plugin[hook].handler***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hookFunction***REMOVED***=***REMOVED***plugin[hook].handler;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin[hook].handler***REMOVED***=***REMOVED***handler;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hookFunction***REMOVED***=***REMOVED***plugin[hook];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin[hook]***REMOVED***=***REMOVED***handler;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***plugin;
}
function***REMOVED***initialiseTimers(inputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inputOptions.perf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timers***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart***REMOVED***=***REMOVED***timeStartImpl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd***REMOVED***=***REMOVED***timeEndImpl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputOptions.plugins***REMOVED***=***REMOVED***inputOptions.plugins.map(getPluginWithTimers);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart***REMOVED***=***REMOVED***doNothing;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd***REMOVED***=***REMOVED***doNothing;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***markModuleAndImpureDependenciesAsExecuted(baseModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***baseModule.isExecuted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modules***REMOVED***=***REMOVED***[baseModule];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***visitedModules***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***[...module.dependencies,***REMOVED***...module.implicitlyLoadedBefore])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(dependency***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!dependency.isExecuted***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(dependency.info.moduleSideEffects***REMOVED***||***REMOVED***module.implicitlyLoadedBefore.has(dependency))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!visitedModules.has(dependency.id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.isExecuted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***visitedModules.add(dependency.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules.push(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***MISSING_EXPORT_SHIM_DESCRIPTION***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***identifier:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***localName:***REMOVED***MISSING_EXPORT_SHIM_VARIABLE
};
function***REMOVED***getVariableForExportNameRecursive(target,***REMOVED***name,***REMOVED***importerForSideEffects,***REMOVED***isExportAllSearch,***REMOVED***searchedNamesAndModules***REMOVED***=***REMOVED***new***REMOVED***Map())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***searchedModules***REMOVED***=***REMOVED***searchedNamesAndModules.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(searchedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(searchedModules.has(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isExportAllSearch***REMOVED***?***REMOVED***[null]***REMOVED***:***REMOVED***error(logCircularReexport(name,***REMOVED***target.id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchedModules.add(target);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchedNamesAndModules.set(name,***REMOVED***new***REMOVED***Set([target]));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target.getVariableForExportName(name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importerForSideEffects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isExportAllSearch,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchedNamesAndModules
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
function***REMOVED***getAndExtendSideEffectModules(variable,***REMOVED***module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sideEffectModules***REMOVED***=***REMOVED***getOrCreate(module.sideEffectDependenciesByVariable,***REMOVED***variable,***REMOVED***(getNewSet));
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentVariable***REMOVED***=***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***referencedVariables***REMOVED***=***REMOVED***new***REMOVED***Set([currentVariable]);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importingModule***REMOVED***=***REMOVED***currentVariable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentVariable***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentVariable***REMOVED***instanceof***REMOVED***ExportDefaultVariable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***currentVariable.getDirectOriginalVariable()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***currentVariable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***currentVariable.syntheticNamespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!currentVariable***REMOVED***||***REMOVED***referencedVariables.has(currentVariable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referencedVariables.add(currentVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sideEffectModules.add(importingModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalSideEffects***REMOVED***=***REMOVED***importingModule.sideEffectDependenciesByVariable.get(currentVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***originalSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sideEffectModules.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sideEffectModules;
}
class***REMOVED***Module***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(graph,***REMOVED***id,***REMOVED***options,***REMOVED***isEntry,***REMOVED***moduleSideEffects,***REMOVED***syntheticNamedExports,***REMOVED***meta,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph***REMOVED***=***REMOVED***graph;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.alternativeReexportModules***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.chunkFileNames***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.chunkNames***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cycles***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicImporters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicImports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.execIndex***REMOVED***=***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitlyLoadedAfter***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitlyLoadedBefore***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importDescriptions***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importMetas***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importedFromNotTreeshaken***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedDynamicImporters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedImports***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isExecuted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isUserDefinedEntryPoint***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.needsExportShim***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sideEffectDependenciesByVariable***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sourcesWithAssertions***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allExportNames***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ast***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportAllModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportAllSources***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportNamesByVariable***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportShimVariable***REMOVED***=***REMOVED***new***REMOVED***ExportShimVariable(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespaceReexportsByName***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reexportDescriptions***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.relevantDependencies***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.syntheticExports***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.syntheticNamespace***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.transformDependencies***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.transitiveReexports***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.excludeFromSourcemap***REMOVED***=***REMOVED***/\0/.test(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***options.moduleContext(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preserveSignature***REMOVED***=***REMOVED***this.options.preserveEntrySignatures;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/no-this-alias
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dynamicImports,***REMOVED***dynamicImporters,***REMOVED***exportAllSources,***REMOVED***exports,***REMOVED***implicitlyLoadedAfter,***REMOVED***implicitlyLoadedBefore,***REMOVED***importers,***REMOVED***reexportDescriptions,***REMOVED***sourcesWithAssertions***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.info***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***dynamicallyImportedIdResolutions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dynamicImports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(({***REMOVED***argument***REMOVED***})***REMOVED***=>***REMOVED***typeof***REMOVED***argument***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***module.resolvedIds[argument])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(Boolean);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***dynamicallyImportedIds()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***cannot***REMOVED***use***REMOVED***this.dynamicDependencies***REMOVED***because***REMOVED***this***REMOVED***is***REMOVED***needed***REMOVED***before
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***dynamicDependencies***REMOVED***are***REMOVED***populated
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dynamicImports.map(({***REMOVED***id***REMOVED***})***REMOVED***=>***REMOVED***id).filter((id)***REMOVED***=>***REMOVED***id***REMOVED***!=***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***dynamicImporters()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dynamicImporters.sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***exportedBindings()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBindings***REMOVED***=***REMOVED***{***REMOVED***'.':***REMOVED***[...exports.keys()]***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[name,***REMOVED***{***REMOVED***source***REMOVED***}]***REMOVED***of***REMOVED***reexportDescriptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(exportBindings[source]***REMOVED***??***REMOVED***(exportBindings[source]***REMOVED***=***REMOVED***[])).push(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***source***REMOVED***of***REMOVED***exportAllSources)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(exportBindings[source]***REMOVED***??***REMOVED***(exportBindings[source]***REMOVED***=***REMOVED***[])).push('*');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exportBindings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***exports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...exports.keys(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...reexportDescriptions.keys(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...[...exportAllSources].map(()***REMOVED***=>***REMOVED***'*')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***hasDefaultExport()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***information***REMOVED***is***REMOVED***only***REMOVED***valid***REMOVED***after***REMOVED***parsing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!module.ast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module.exports.has('default')***REMOVED***||***REMOVED***reexportDescriptions.has('default');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***hasModuleSideEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation('Accessing***REMOVED***ModuleInfo.hasModuleSideEffects***REMOVED***from***REMOVED***plugins***REMOVED***is***REMOVED***deprecated.***REMOVED***Please***REMOVED***use***REMOVED***ModuleInfo.moduleSideEffects***REMOVED***instead.',***REMOVED***URL_THIS_GETMODULEINFO,***REMOVED***true,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.moduleSideEffects;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***implicitlyLoadedAfterOneOf()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array.from(implicitlyLoadedAfter,***REMOVED***getId).sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***implicitlyLoadedBefore()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array.from(implicitlyLoadedBefore,***REMOVED***getId).sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***importedIdResolutions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array.from(sourcesWithAssertions.keys(),***REMOVED***source***REMOVED***=>***REMOVED***module.resolvedIds[source]).filter(Boolean);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***importedIds()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***cannot***REMOVED***use***REMOVED***this.dependencies***REMOVED***because***REMOVED***this***REMOVED***is***REMOVED***needed***REMOVED***before
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***dependencies***REMOVED***are***REMOVED***populated
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array.from(sourcesWithAssertions.keys(),***REMOVED***source***REMOVED***=>***REMOVED***module.resolvedIds[source]?.id).filter(Boolean);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***importers()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***importers.sort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEntry,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isExternal:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***isIncluded()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(graph.phase***REMOVED***!==***REMOVED***BuildPhase.GENERATE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module.isIncluded();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{***REMOVED***...meta***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamedExports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Hide***REMOVED***the***REMOVED***deprecated***REMOVED***key***REMOVED***so***REMOVED***that***REMOVED***it***REMOVED***only***REMOVED***warns***REMOVED***when***REMOVED***accessed***REMOVED***explicitly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(this.info,***REMOVED***'hasModuleSideEffects',***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***basename()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***node_path.basename(this.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extension***REMOVED***=***REMOVED***node_path.extname(this.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***makeLegal(extension***REMOVED***?***REMOVED***base.slice(0,***REMOVED***-extension.length)***REMOVED***:***REMOVED***base);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***bindReferences()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ast.bind();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***error(properties,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addLocationToLogProps(properties,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(properties);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***sum***REMOVED***up***REMOVED***the***REMOVED***length***REMOVED***of***REMOVED***all***REMOVED***ast***REMOVED***nodes***REMOVED***that***REMOVED***are***REMOVED***included
***REMOVED******REMOVED******REMOVED******REMOVED***estimateSize()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***size***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***this.ast.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***size***REMOVED***+=***REMOVED***node.end***REMOVED***-***REMOVED***node.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getAllExportNames()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.allExportNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.allExportNames;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allExportNames***REMOVED***=***REMOVED***new***REMOVED***Set([...this.exports.keys(),***REMOVED***...this.reexportDescriptions.keys()]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.exportAllModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allExportNames.add(`*${module.id}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***module.getAllExportNames())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***'default')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allExportNames.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***do***REMOVED***not***REMOVED***count***REMOVED***the***REMOVED***synthetic***REMOVED***namespace***REMOVED***as***REMOVED***a***REMOVED***regular***REMOVED***export***REMOVED***to***REMOVED***hide***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***from***REMOVED***entry***REMOVED***signatures***REMOVED***and***REMOVED***namespace***REMOVED***objects
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.info.syntheticNamedExports***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allExportNames.delete(this.info.syntheticNamedExports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.allExportNames;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getDependenciesToBeIncluded()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.relevantDependencies)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.relevantDependencies;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.relevantDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***necessaryDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alwaysCheckedDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencyVariables***REMOVED***=***REMOVED***new***REMOVED***Set(this.includedImports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.info.isEntry***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedDynamicImporters.length***REMOVED***>***REMOVED***0***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace.included***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitlyLoadedAfter.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***[...this.getReexports(),***REMOVED***...this.getExports()])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[exportedVariable]***REMOVED***=***REMOVED***this.getVariableForExportName(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportedVariable?.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencyVariables.add(exportedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***variable***REMOVED***of***REMOVED***dependencyVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sideEffectDependencies***REMOVED***=***REMOVED***this.sideEffectDependenciesByVariable.get(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sideEffectDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***sideEffectDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alwaysCheckedDependencies.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***variable.getBaseVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***ExportDefaultVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***variable.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***necessaryDependencies.add(variable.module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.treeshake***REMOVED***||***REMOVED***this.info.moduleSideEffects***REMOVED***===***REMOVED***'no-treeshake')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***this.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.relevantDependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addRelevantSideEffectDependencies(this.relevantDependencies,***REMOVED***necessaryDependencies,***REMOVED***alwaysCheckedDependencies);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***necessaryDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.relevantDependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.relevantDependencies;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getExportNamesByVariable()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.exportNamesByVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportNamesByVariable***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***this.getAllExportNames())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[tracedVariable]***REMOVED***=***REMOVED***this.getVariableForExportName(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tracedVariable***REMOVED***instanceof***REMOVED***ExportDefaultVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tracedVariable***REMOVED***=***REMOVED***tracedVariable.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tracedVariable***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(tracedVariable.included***REMOVED***||***REMOVED***tracedVariable***REMOVED***instanceof***REMOVED***ExternalVariable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingExportNames***REMOVED***=***REMOVED***exportNamesByVariable.get(tracedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingExportNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingExportNames.push(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportNamesByVariable.set(tracedVariable,***REMOVED***[exportName]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.exportNamesByVariable***REMOVED***=***REMOVED***exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getExports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...this.exports.keys()];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReexports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.transitiveReexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.transitiveReexports;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***avoid***REMOVED***infinite***REMOVED***recursion***REMOVED***when***REMOVED***using***REMOVED***circular***REMOVED***`export***REMOVED*******REMOVED***from***REMOVED***X`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.transitiveReexports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reexports***REMOVED***=***REMOVED***new***REMOVED***Set(this.reexportDescriptions.keys());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.exportAllModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexports.add(`*${module.id}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***[...module.getReexports(),***REMOVED***...module.getExports()])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***'default')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexports.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.transitiveReexports***REMOVED***=***REMOVED***[...reexports]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getRenderedExports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***only***REMOVED***direct***REMOVED***exports***REMOVED***are***REMOVED***counted***REMOVED***here,***REMOVED***not***REMOVED***reexports***REMOVED***at***REMOVED***all
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedExports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***removedExports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***this.exports.keys())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[variable]***REMOVED***=***REMOVED***this.getVariableForExportName(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(variable***REMOVED***&&***REMOVED***variable.included***REMOVED***?***REMOVED***renderedExports***REMOVED***:***REMOVED***removedExports).push(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***removedExports,***REMOVED***renderedExports***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getSyntheticNamespace()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.syntheticNamespace***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.syntheticNamespace***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[this.syntheticNamespace]***REMOVED***=***REMOVED***this.getVariableForExportName(typeof***REMOVED***this.info.syntheticNamedExports***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.info.syntheticNamedExports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'default',***REMOVED***{***REMOVED***onlyExplicit:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.syntheticNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logSyntheticNamedExportsNeedNamespaceExport(this.id,***REMOVED***this.info.syntheticNamedExports));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.syntheticNamespace;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getVariableForExportName(name,***REMOVED***{***REMOVED***importerForSideEffects,***REMOVED***isExportAllSearch,***REMOVED***onlyExplicit,***REMOVED***searchedNamesAndModules***REMOVED***}***REMOVED***=***REMOVED***EMPTY_OBJECT)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name[0]***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED*******REMOVED***from***REMOVED***'./other'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.namespace];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED*******REMOVED***from***REMOVED***'external'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***this.graph.modulesById.get(name.slice(1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module.getVariableForExportName('*');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***{***REMOVED***foo***REMOVED***}***REMOVED***from***REMOVED***'./other'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reexportDeclaration***REMOVED***=***REMOVED***this.reexportDescriptions.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexportDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[variable]***REMOVED***=***REMOVED***getVariableForExportNameRecursive(reexportDeclaration.module,***REMOVED***reexportDeclaration.localName,***REMOVED***importerForSideEffects,***REMOVED***false,***REMOVED***searchedNamesAndModules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error(logMissingExport(reexportDeclaration.localName,***REMOVED***this.id,***REMOVED***reexportDeclaration.module.id),***REMOVED***reexportDeclaration.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importerForSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setAlternativeExporterIfCyclic(variable,***REMOVED***importerForSideEffects,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.info.moduleSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable,***REMOVED***variable,***REMOVED***(getNewSet)).add(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[variable];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportDeclaration***REMOVED***=***REMOVED***this.exports.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportDeclaration***REMOVED***===***REMOVED***MISSING_EXPORT_SHIM_DESCRIPTION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.exportShimVariable];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***exportDeclaration.localName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.traceVariable(name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importerForSideEffects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchedNamesAndModules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importerForSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setAlternativeExporterIfCyclic(variable,***REMOVED***importerForSideEffects,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable,***REMOVED***variable,***REMOVED***(getNewSet)).add(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[variable];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(onlyExplicit)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[null];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundNamespaceReexport***REMOVED***=***REMOVED***this.namespaceReexportsByName.get(name)***REMOVED***??
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getVariableFromNamespaceReexports(name,***REMOVED***importerForSideEffects,***REMOVED***searchedNamesAndModules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespaceReexportsByName.set(name,***REMOVED***foundNamespaceReexport);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundNamespaceReexport[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***foundNamespaceReexport;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.info.syntheticNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(this.syntheticExports,***REMOVED***name,***REMOVED***()***REMOVED***=>***REMOVED***new***REMOVED***SyntheticNamedExportVariable(this.astContext,***REMOVED***name,***REMOVED***this.getSyntheticNamespace()))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***don't***REMOVED***want***REMOVED***to***REMOVED***create***REMOVED***shims***REMOVED***when***REMOVED***we***REMOVED***are***REMOVED***just
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***probing***REMOVED***export***REMOVED*******REMOVED***modules***REMOVED***for***REMOVED***exports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isExportAllSearch***REMOVED***&&***REMOVED***this.options.shimMissingExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.shimMissingExport(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.exportShimVariable];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[null];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasEffects()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.info.moduleSideEffects***REMOVED***===***REMOVED***'no-treeshake'***REMOVED***||***REMOVED***this.ast.hasCachedEffects();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***include()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***createInclusionContext();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.ast.shouldBeIncluded(context))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ast.include(context,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeAllExports(includeNamespaceMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isExecuted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markModuleAndImpureDependenciesAsExecuted(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.needsTreeshakingPass***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***this.exports.keys())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeNamespaceMembers***REMOVED***||***REMOVED***exportName***REMOVED***!==***REMOVED***this.info.syntheticNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.getVariableForExportName(exportName)[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeVariable(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***this.getReexports())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[variable]***REMOVED***=***REMOVED***this.getVariableForExportName(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeVariable(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***ExternalVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.module.reexported***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeNamespaceMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace.setMergedNamespaces(this.includeAndGetAdditionalMergedNamespaces());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeAllInBundle()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ast.include(createInclusionContext(),***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeAllExports(false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeExportsByNames(names)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isExecuted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markModuleAndImpureDependenciesAsExecuted(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.needsTreeshakingPass***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***includeNamespaceMembers***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***names)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.getVariableForExportName(name)[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.deoptimizePath(UNKNOWN_PATH);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeVariable(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.exports.has(name)***REMOVED***&&***REMOVED***!this.reexportDescriptions.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeNamespaceMembers***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includeNamespaceMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace.setMergedNamespaces(this.includeAndGetAdditionalMergedNamespaces());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isIncluded()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Modules***REMOVED***where***REMOVED***this.ast***REMOVED***is***REMOVED***missing***REMOVED***have***REMOVED***been***REMOVED***loaded***REMOVED***via***REMOVED***this.load***REMOVED***and***REMOVED***are
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***not***REMOVED***yet***REMOVED***fully***REMOVED***processed,***REMOVED***hence***REMOVED***they***REMOVED***cannot***REMOVED***be***REMOVED***included.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.ast***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.ast.included***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace.included***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importedFromNotTreeshaken***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportShimVariable.included));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***linkImports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addModulesToImportDescriptions(this.importDescriptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addModulesToImportDescriptions(this.reexportDescriptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***externalExportAllModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***source***REMOVED***of***REMOVED***this.exportAllSources)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***this.graph.modulesById.get(this.resolvedIds[source].id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalExportAllModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportAllModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportAllModules.push(...externalExportAllModules);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***log(level,***REMOVED***properties,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addLocationToLogProps(properties,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(level,***REMOVED***properties);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***render(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***this.magicString.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ast.render(source,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source.trim();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***usesTopLevelAwait***REMOVED***}***REMOVED***=***REMOVED***this.astContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(usesTopLevelAwait***REMOVED***&&***REMOVED***options.format***REMOVED***!==***REMOVED***'es'***REMOVED***&&***REMOVED***options.format***REMOVED***!==***REMOVED***'system')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidFormatForTopLevelAwait(this.id,***REMOVED***options.format));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***source,***REMOVED***usesTopLevelAwait***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setSource({***REMOVED***ast,***REMOVED***code,***REMOVED***customTransformCache,***REMOVED***originalCode,***REMOVED***originalSourcemap,***REMOVED***resolvedIds,***REMOVED***sourcemapChain,***REMOVED***transformDependencies,***REMOVED***transformFiles,***REMOVED***...moduleOptions***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('generate***REMOVED***ast',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.info.code***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalCode***REMOVED***=***REMOVED***originalCode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***call***REMOVED***decodedSourcemap***REMOVED***on***REMOVED***the***REMOVED***input***REMOVED***in***REMOVED***case***REMOVED***they***REMOVED***were***REMOVED***hydrated***REMOVED***from***REMOVED***json***REMOVED***in***REMOVED***the***REMOVED***cache***REMOVED***and***REMOVED***don't
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***have***REMOVED***the***REMOVED***lazy***REMOVED***evaluation***REMOVED***cache***REMOVED***configured.***REMOVED***Right***REMOVED***now***REMOVED***this***REMOVED***isn't***REMOVED***enforced***REMOVED***by***REMOVED***the***REMOVED***type***REMOVED***system***REMOVED***because***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***RollupCache***REMOVED***stores***REMOVED***`ExistingDecodedSourcemap`***REMOVED***instead***REMOVED***of***REMOVED***`ExistingRawSourcemap`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.originalSourcemap***REMOVED***=***REMOVED***decodedSourcemap(originalSourcemap);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sourcemapChain***REMOVED***=***REMOVED***sourcemapChain.map(mapOrMissing***REMOVED***=>***REMOVED***mapOrMissing.missing***REMOVED***?***REMOVED***mapOrMissing***REMOVED***:***REMOVED***decodedSourcemap(mapOrMissing));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***coming***REMOVED***from***REMOVED***cache***REMOVED***and***REMOVED***this***REMOVED***value***REMOVED***is***REMOVED***already***REMOVED***fully***REMOVED***decoded,***REMOVED***we***REMOVED***want***REMOVED***to***REMOVED***re-encode***REMOVED***here***REMOVED***to***REMOVED***save***REMOVED***memory.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetSourcemapCache(this.originalSourcemap,***REMOVED***this.sourcemapChain);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transformFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.transformFiles***REMOVED***=***REMOVED***transformFiles;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.transformDependencies***REMOVED***=***REMOVED***transformDependencies;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.customTransformCache***REMOVED***=***REMOVED***customTransformCache;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.updateOptions(moduleOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleAst***REMOVED***=***REMOVED***ast***REMOVED***??***REMOVED***this.tryParse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('generate***REMOVED***ast',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('analyze***REMOVED***ast',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resolvedIds***REMOVED***=***REMOVED***resolvedIds***REMOVED***??***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***By***REMOVED***default,***REMOVED***`id`***REMOVED***is***REMOVED***the***REMOVED***file***REMOVED***name.***REMOVED***Custom***REMOVED***resolvers***REMOVED***and***REMOVED***loaders
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***change***REMOVED***that,***REMOVED***but***REMOVED***it***REMOVED***makes***REMOVED***sense***REMOVED***to***REMOVED***use***REMOVED***it***REMOVED***for***REMOVED***the***REMOVED***source***REMOVED***file***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***this.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.magicString***REMOVED***=***REMOVED***new***REMOVED***MagicString(code,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***(this.excludeFromSourcemap***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***fileName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indentExclusionRanges:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.astContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addDynamicImport:***REMOVED***this.addDynamicImport.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addExport:***REMOVED***this.addExport.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImport:***REMOVED***this.addImport.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImportMeta:***REMOVED***this.addImportMeta.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deoptimizationTracker:***REMOVED***this.graph.deoptimizationTracker,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***this.error.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getExports:***REMOVED***this.getExports.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getModuleExecIndex:***REMOVED***()***REMOVED***=>***REMOVED***this.execIndex,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getModuleName:***REMOVED***this.basename.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getNodeConstructor:***REMOVED***(name)***REMOVED***=>***REMOVED***nodeConstructors[name]***REMOVED***||***REMOVED***nodeConstructors.UnknownNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getReexports:***REMOVED***this.getReexports.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importDescriptions:***REMOVED***this.importDescriptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeAllExports:***REMOVED***()***REMOVED***=>***REMOVED***this.includeAllExports(true),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeDynamicImport:***REMOVED***this.includeDynamicImport.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includeVariableInModule:***REMOVED***this.includeVariableInModule.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log:***REMOVED***this.log.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString:***REMOVED***this.magicString,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualPureFunctions:***REMOVED***this.graph.pureFunctions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleContext:***REMOVED***this.context,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***this.options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requestTreeshakingPass:***REMOVED***()***REMOVED***=>***REMOVED***(this.graph.needsTreeshakingPass***REMOVED***=***REMOVED***true),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traceExport:***REMOVED***(name)***REMOVED***=>***REMOVED***this.getVariableForExportName(name)[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traceVariable:***REMOVED***this.traceVariable.bind(this),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usesTopLevelAwait:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***ModuleScope(this.graph.scope,***REMOVED***this.astContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace***REMOVED***=***REMOVED***new***REMOVED***NamespaceVariable(this.astContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ast***REMOVED***=***REMOVED***new***REMOVED***Program(moduleAst,***REMOVED***{***REMOVED***context:***REMOVED***this.astContext,***REMOVED***type:***REMOVED***'Module'***REMOVED***},***REMOVED***this.scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Assign***REMOVED***AST***REMOVED***directly***REMOVED***if***REMOVED***has***REMOVED***existing***REMOVED***one***REMOVED***as***REMOVED***there's***REMOVED***no***REMOVED***way***REMOVED***to***REMOVED***drop***REMOVED***it***REMOVED***from***REMOVED***memory.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***cache***REMOVED***is***REMOVED***enabled,***REMOVED***also***REMOVED***assign***REMOVED***directly***REMOVED***as***REMOVED***otherwise***REMOVED***it***REMOVED***takes***REMOVED***more***REMOVED***CPU***REMOVED***and***REMOVED***memory***REMOVED***to***REMOVED***re-compute.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ast***REMOVED***||***REMOVED***this.options.cache***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.info.ast***REMOVED***=***REMOVED***moduleAst;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***lazy***REMOVED***and***REMOVED***apply***REMOVED***LRU***REMOVED***cache***REMOVED***to***REMOVED***not***REMOVED***hog***REMOVED***the***REMOVED***memory
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(this.info,***REMOVED***'ast',***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.graph.astLru.has(fileName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.graph.astLru.get(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsedAst***REMOVED***=***REMOVED***this.tryParse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.astLru.set(fileName,***REMOVED***parsedAst);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parsedAst;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('analyze***REMOVED***ast',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***toJSON()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertions:***REMOVED***this.info.assertions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***this.info.ast,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***this.info.code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customTransformCache:***REMOVED***this.customTransformCache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies:***REMOVED***Array.from(this.dependencies,***REMOVED***getId),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***this.id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***this.info.meta,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***this.info.moduleSideEffects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalCode:***REMOVED***this.originalCode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalSourcemap:***REMOVED***this.originalSourcemap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedIds:***REMOVED***this.resolvedIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapChain:***REMOVED***this.sourcemapChain,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamedExports:***REMOVED***this.info.syntheticNamedExports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transformDependencies:***REMOVED***this.transformDependencies,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transformFiles:***REMOVED***this.transformFiles
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***traceVariable(name,***REMOVED***{***REMOVED***importerForSideEffects,***REMOVED***isExportAllSearch,***REMOVED***searchedNamesAndModules***REMOVED***}***REMOVED***=***REMOVED***EMPTY_OBJECT)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localVariable***REMOVED***=***REMOVED***this.scope.variables.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(localVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importDescription***REMOVED***=***REMOVED***this.importDescriptions.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importDescription)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***otherModule***REMOVED***=***REMOVED***importDescription.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(otherModule***REMOVED***instanceof***REMOVED***Module***REMOVED***&&***REMOVED***importDescription.name***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***otherModule.namespace;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[declaration]***REMOVED***=***REMOVED***getVariableForExportNameRecursive(otherModule,***REMOVED***importDescription.name,***REMOVED***importerForSideEffects***REMOVED***||***REMOVED***this,***REMOVED***isExportAllSearch,***REMOVED***searchedNamesAndModules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error(logMissingExport(importDescription.name,***REMOVED***this.id,***REMOVED***otherModule.id),***REMOVED***importDescription.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***updateOptions({***REMOVED***meta,***REMOVED***moduleSideEffects,***REMOVED***syntheticNamedExports***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moduleSideEffects***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.info.moduleSideEffects***REMOVED***=***REMOVED***moduleSideEffects;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(syntheticNamedExports***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.info.syntheticNamedExports***REMOVED***=***REMOVED***syntheticNamedExports;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(meta***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this.info.meta,***REMOVED***meta);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addDynamicImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***argument***REMOVED***=***REMOVED***node.source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument***REMOVED***instanceof***REMOVED***TemplateLiteral)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.quasis.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***argument.quasis[0].value.cooked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument***REMOVED***=***REMOVED***argument.quasis[0].value.cooked;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(argument***REMOVED***instanceof***REMOVED***Literal***REMOVED***&&***REMOVED***typeof***REMOVED***argument.value***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument***REMOVED***=***REMOVED***argument.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicImports.push({***REMOVED***argument,***REMOVED***id:***REMOVED***null,***REMOVED***node,***REMOVED***resolution:***REMOVED***null***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addExport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***instanceof***REMOVED***ExportDefaultDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***default***REMOVED***foo;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.set('default',***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifier:***REMOVED***node.variable.getAssignedVariableName(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName:***REMOVED***'default'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node***REMOVED***instanceof***REMOVED***ExportAllDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***node.source.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addSource(source,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.exported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED*******REMOVED***as***REMOVED***name***REMOVED***from***REMOVED***'./other'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***node.exported.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reexportDescriptions.set(name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName:***REMOVED***'*',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***node.start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED*******REMOVED***from***REMOVED***'./other'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportAllSources.add(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node.source***REMOVED***instanceof***REMOVED***Literal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***{***REMOVED***name***REMOVED***}***REMOVED***from***REMOVED***'./other'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***node.source.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addSource(source,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***exported,***REMOVED***local,***REMOVED***start***REMOVED***}***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***exported***REMOVED***instanceof***REMOVED***Literal***REMOVED***?***REMOVED***exported.value***REMOVED***:***REMOVED***exported.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reexportDescriptions.set(name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName:***REMOVED***local***REMOVED***instanceof***REMOVED***Literal***REMOVED***?***REMOVED***local.value***REMOVED***:***REMOVED***local.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node.declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***node.declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration***REMOVED***instanceof***REMOVED***VariableDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***var***REMOVED***{***REMOVED***foo,***REMOVED***bar***REMOVED***}***REMOVED***=***REMOVED***...
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***var***REMOVED***foo***REMOVED***=***REMOVED***1,***REMOVED***bar***REMOVED***=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declarator***REMOVED***of***REMOVED***declaration.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***localName***REMOVED***of***REMOVED***extractAssignedNames(declarator.id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.set(localName,***REMOVED***{***REMOVED***identifier:***REMOVED***null,***REMOVED***localName***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***function***REMOVED***foo***REMOVED***()***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localName***REMOVED***=***REMOVED***declaration.id.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.set(localName,***REMOVED***{***REMOVED***identifier:***REMOVED***null,***REMOVED***localName***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***{***REMOVED***foo,***REMOVED***bar,***REMOVED***baz***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***local,***REMOVED***exported***REMOVED***}***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***except***REMOVED***for***REMOVED***reexports,***REMOVED***local***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***Identifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localName***REMOVED***=***REMOVED***local.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportedName***REMOVED***=***REMOVED***exported***REMOVED***instanceof***REMOVED***Identifier***REMOVED***?***REMOVED***exported.name***REMOVED***:***REMOVED***exported.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.set(exportedName,***REMOVED***{***REMOVED***identifier:***REMOVED***null,***REMOVED***localName***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***node.source.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addSource(source,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***specifier***REMOVED***instanceof***REMOVED***ImportDefaultSpecifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***'default'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***specifier***REMOVED***instanceof***REMOVED***ImportNamespaceSpecifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***'*'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***specifier.imported***REMOVED***instanceof***REMOVED***Identifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***specifier.imported.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***specifier.imported.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importDescriptions.set(specifier.local.name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***specifier.start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addImportMeta(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importMetas.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addLocationToLogProps(properties,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.id***REMOVED***=***REMOVED***this.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.pos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***code***REMOVED***=***REMOVED***this.info.code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***location***REMOVED***=***REMOVED***locate(code,***REMOVED***pos,***REMOVED***{***REMOVED***offsetLine:***REMOVED***1***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(location)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***column,***REMOVED***line***REMOVED***}***REMOVED***=***REMOVED***location;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***column,***REMOVED***line***REMOVED***}***REMOVED***=***REMOVED***getOriginalLocation(this.sourcemapChain,***REMOVED***{***REMOVED***column,***REMOVED***line***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***this.originalCode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logInvalidSourcemapForError(error_,***REMOVED***this.id,***REMOVED***column,***REMOVED***line,***REMOVED***pos));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***augmentCodeLocation(properties,***REMOVED***{***REMOVED***column,***REMOVED***line***REMOVED***},***REMOVED***code,***REMOVED***this.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addModulesToImportDescriptions(importDescription)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***importDescription.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***id***REMOVED***}***REMOVED***=***REMOVED***this.resolvedIds[specifier.source];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.module***REMOVED***=***REMOVED***this.graph.modulesById.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addRelevantSideEffectDependencies(relevantDependencies,***REMOVED***necessaryDependencies,***REMOVED***alwaysCheckedDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handledDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***addSideEffectDependencies***REMOVED***=***REMOVED***(possibleDependencies)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***possibleDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(handledDependencies.has(dependency))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handledDependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(necessaryDependencies.has(dependency))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relevantDependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(dependency.info.moduleSideEffects***REMOVED***||***REMOVED***alwaysCheckedDependencies.has(dependency)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency***REMOVED***instanceof***REMOVED***ExternalModule***REMOVED***||***REMOVED***dependency.hasEffects())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relevantDependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSideEffectDependencies(dependency.dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSideEffectDependencies(this.dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSideEffectDependencies(alwaysCheckedDependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addSource(source,***REMOVED***declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsedAssertions***REMOVED***=***REMOVED***getAssertionsFromImportExportDeclaration(declaration.assertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingAssertions***REMOVED***=***REMOVED***this.sourcesWithAssertions.get(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingAssertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doAssertionsDiffer(existingAssertions,***REMOVED***parsedAssertions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log(LOGLEVEL_WARN,***REMOVED***logInconsistentImportAssertions(existingAssertions,***REMOVED***parsedAssertions,***REMOVED***source,***REMOVED***this.id),***REMOVED***declaration.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sourcesWithAssertions.set(source,***REMOVED***parsedAssertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getVariableFromNamespaceReexports(name,***REMOVED***importerForSideEffects,***REMOVED***searchedNamesAndModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***foundSyntheticDeclaration***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundInternalDeclarations***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundExternalDeclarations***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.exportAllModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Synthetic***REMOVED***namespaces***REMOVED***should***REMOVED***not***REMOVED***hide***REMOVED***"regular"***REMOVED***exports***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.info.syntheticNamedExports***REMOVED***===***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[variable,***REMOVED***indirectExternal]***REMOVED***=***REMOVED***getVariableForExportNameRecursive(module,***REMOVED***name,***REMOVED***importerForSideEffects,***REMOVED***true,***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***are***REMOVED***creating***REMOVED***a***REMOVED***copy***REMOVED***to***REMOVED***handle***REMOVED***the***REMOVED***case***REMOVED***where***REMOVED***the***REMOVED***same***REMOVED***binding***REMOVED***is
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***imported***REMOVED***through***REMOVED***different***REMOVED***namespace***REMOVED***reexports***REMOVED***gracefully
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***copyNameToModulesMap(searchedNamesAndModules));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule***REMOVED***||***REMOVED***indirectExternal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***foundExternalDeclarations.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!foundSyntheticDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***foundSyntheticDeclaration***REMOVED***=***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***foundInternalDeclarations.set(variable,***REMOVED***module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundInternalDeclarations.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundDeclarationList***REMOVED***=***REMOVED***[...foundInternalDeclarations];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedDeclaration***REMOVED***=***REMOVED***foundDeclarationList[0][0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundDeclarationList.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[usedDeclaration];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logNamespaceConflict(name,***REMOVED***this.id,***REMOVED***foundDeclarationList.map(([,***REMOVED***module])***REMOVED***=>***REMOVED***module.id)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***we***REMOVED***are***REMOVED***pretending***REMOVED***it***REMOVED***was***REMOVED***not***REMOVED***found***REMOVED***while***REMOVED***it***REMOVED***should***REMOVED***behave***REMOVED***like***REMOVED***"undefined"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[null];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundExternalDeclarations.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundDeclarationList***REMOVED***=***REMOVED***[...foundExternalDeclarations];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedDeclaration***REMOVED***=***REMOVED***foundDeclarationList[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundDeclarationList.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logAmbiguousExternalNamespaces(name,***REMOVED***this.id,***REMOVED***usedDeclaration.module.id,***REMOVED***foundDeclarationList.map(declaration***REMOVED***=>***REMOVED***declaration.module.id)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[usedDeclaration,***REMOVED***true];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundSyntheticDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[foundSyntheticDeclaration];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[null];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeAndGetAdditionalMergedNamespaces()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***externalNamespaces***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***syntheticNamespaces***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***[this,***REMOVED***...this.exportAllModules])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[externalVariable]***REMOVED***=***REMOVED***module.getVariableForExportName('*');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalVariable.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedImports.add(externalVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalNamespaces.add(externalVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(module.info.syntheticNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***syntheticNamespace***REMOVED***=***REMOVED***module.getSyntheticNamespace();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamespace.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedImports.add(syntheticNamespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamespaces.add(syntheticNamespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...syntheticNamespaces,***REMOVED***...externalNamespaces];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeDynamicImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolution***REMOVED***=***REMOVED***this.dynamicImports.find(dynamicImport***REMOVED***=>***REMOVED***dynamicImport.node***REMOVED***===***REMOVED***node).resolution;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolution***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution.includedDynamicImporters.push(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedNames***REMOVED***=***REMOVED***this.options.treeshake
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***node.getDeterministicImportedNames()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importedNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution.includeExportsByNames(importedNames);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution.includeAllExports(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeVariable(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variableModule***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variableModule***REMOVED***instanceof***REMOVED***Module***REMOVED***&&***REMOVED***variableModule***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getAndExtendSideEffectModules(variable,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.needsTreeshakingPass***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variableModule***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variableModule.isExecuted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markModuleAndImpureDependenciesAsExecuted(variableModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variableModule***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sideEffectModules***REMOVED***=***REMOVED***getAndExtendSideEffectModules(variable,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***sideEffectModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!module.isExecuted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markModuleAndImpureDependenciesAsExecuted(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeVariableInModule(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeVariable(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variableModule***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variableModule***REMOVED***&&***REMOVED***variableModule***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedImports.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***shimMissingExport(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logShimmedExport(this.id,***REMOVED***name));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.set(name,***REMOVED***MISSING_EXPORT_SHIM_DESCRIPTION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***tryParse()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.graph.contextParse(this.info.code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error(logParseError(error_,***REMOVED***this.id),***REMOVED***error_.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
//***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***cyclic***REMOVED***import***REMOVED***in***REMOVED***the***REMOVED***reexport***REMOVED***chain,***REMOVED***we***REMOVED***should***REMOVED***not
//***REMOVED***import***REMOVED***from***REMOVED***the***REMOVED***original***REMOVED***module***REMOVED***but***REMOVED***from***REMOVED***the***REMOVED***cyclic***REMOVED***module***REMOVED***to***REMOVED***not
//***REMOVED***mess***REMOVED***up***REMOVED***execution***REMOVED***order.
function***REMOVED***setAlternativeExporterIfCyclic(variable,***REMOVED***importer,***REMOVED***reexporter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.module***REMOVED***instanceof***REMOVED***Module***REMOVED***&&***REMOVED***variable.module***REMOVED***!==***REMOVED***reexporter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exporterCycles***REMOVED***=***REMOVED***variable.module.cycles;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exporterCycles.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importerCycles***REMOVED***=***REMOVED***reexporter.cycles;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***cycleSymbol***REMOVED***of***REMOVED***importerCycles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exporterCycles.has(cycleSymbol))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importer.alternativeReexportModules.set(variable,***REMOVED***reexporter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***copyNameToModulesMap***REMOVED***=***REMOVED***(searchedNamesAndModules)***REMOVED***=>***REMOVED***searchedNamesAndModules***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***Map(Array.from(searchedNamesAndModules,***REMOVED***([name,***REMOVED***modules])***REMOVED***=>***REMOVED***[name,***REMOVED***new***REMOVED***Set(modules)]));

function***REMOVED***removeJsExtension(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***name.endsWith('.js')***REMOVED***?***REMOVED***name.slice(0,***REMOVED***-3)***REMOVED***:***REMOVED***name;
}

function***REMOVED***getCompleteAmdId(options,***REMOVED***chunkId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.autoId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${options.basePath***REMOVED***?***REMOVED***options.basePath***REMOVED***+***REMOVED***'/'***REMOVED***:***REMOVED***''}${removeJsExtension(chunkId)}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.id***REMOVED***??***REMOVED***'';
}

function***REMOVED***getExportBlock$1(exports,***REMOVED***dependencies,***REMOVED***namedExportsMode,***REMOVED***interop,***REMOVED***snippets,***REMOVED***t,***REMOVED***externalLiveBindings,***REMOVED***mechanism***REMOVED***=***REMOVED***'return***REMOVED***')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***getFunctionIntro,***REMOVED***getPropertyAccess,***REMOVED***n,***REMOVED***s***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!namedExportsMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${n}${n}${mechanism}${getSingleDefaultExport(exports,***REMOVED***dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***getPropertyAccess)};`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exportBlock***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***defaultVariableName,***REMOVED***importPath,***REMOVED***isChunk,***REMOVED***name,***REMOVED***namedExportsMode:***REMOVED***depNamedExportsMode,***REMOVED***namespaceVariableName,***REMOVED***reexports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports***REMOVED***&&***REMOVED***namedExportsMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.reexported***REMOVED***!==***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importName***REMOVED***=***REMOVED***getReexportedImportName(name,***REMOVED***specifier.imported,***REMOVED***depNamedExportsMode,***REMOVED***isChunk,***REMOVED***defaultVariableName,***REMOVED***namespaceVariableName,***REMOVED***interop,***REMOVED***importPath,***REMOVED***externalLiveBindings,***REMOVED***getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportBlock)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.imported***REMOVED***!==***REMOVED***'*'***REMOVED***&&***REMOVED***specifier.needsLiveBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Object.defineProperty(exports,${_}'${specifier.reexported}',${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}enumerable:${_}true,${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}get:${_}${left}${importName}${right}${n}});`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=***REMOVED***`exports${getPropertyAccess(specifier.reexported)}${_}=${_}${importName};`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***exported,***REMOVED***local***REMOVED***}***REMOVED***of***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lhs***REMOVED***=***REMOVED***`exports${getPropertyAccess(exported)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rhs***REMOVED***=***REMOVED***local;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lhs***REMOVED***!==***REMOVED***rhs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportBlock)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=***REMOVED***`${lhs}${_}=${_}${rhs};`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***name,***REMOVED***reexports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports***REMOVED***&&***REMOVED***namedExportsMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.reexported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportBlock)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***copyPropertyIfNecessary***REMOVED***=***REMOVED***`{${n}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!Object.prototype.hasOwnProperty.call(exports,${_}k))${_}${getDefineProperty(name,***REMOVED***specifier.needsLiveBinding,***REMOVED***t,***REMOVED***snippets)}${s}${n}}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock***REMOVED***+=***REMOVED***`Object.keys(${name}).forEach(${getFunctionIntro(['k'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}${copyPropertyIfNecessary});`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${n}${n}${exportBlock}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
}
function***REMOVED***getSingleDefaultExport(exports,***REMOVED***dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***getPropertyAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exports.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exports[0].local;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***defaultVariableName,***REMOVED***importPath,***REMOVED***isChunk,***REMOVED***name,***REMOVED***namedExportsMode:***REMOVED***depNamedExportsMode,***REMOVED***namespaceVariableName,***REMOVED***reexports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getReexportedImportName(name,***REMOVED***reexports[0].imported,***REMOVED***depNamedExportsMode,***REMOVED***isChunk,***REMOVED***defaultVariableName,***REMOVED***namespaceVariableName,***REMOVED***interop,***REMOVED***importPath,***REMOVED***externalLiveBindings,***REMOVED***getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getReexportedImportName(moduleVariableName,***REMOVED***imported,***REMOVED***depNamedExportsMode,***REMOVED***isChunk,***REMOVED***defaultVariableName,***REMOVED***namespaceVariableName,***REMOVED***interop,***REMOVED***moduleId,***REMOVED***externalLiveBindings,***REMOVED***getPropertyAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleInterop***REMOVED***=***REMOVED***interop(moduleId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variableName***REMOVED***=***REMOVED***defaultInteropHelpersByInteropType[moduleInterop]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***defaultVariableName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***moduleVariableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isDefaultAProperty(moduleInterop,***REMOVED***externalLiveBindings)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${variableName}${getPropertyAccess('default')}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***variableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***depNamedExportsMode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${moduleVariableName}${getPropertyAccess('default')}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***moduleVariableName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(isChunk***REMOVED***?***REMOVED***!depNamedExportsMode***REMOVED***:***REMOVED***namespaceInteropHelpersByInteropType[interop(moduleId)])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***namespaceVariableName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***moduleVariableName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${moduleVariableName}${getPropertyAccess(imported)}`;
}
function***REMOVED***getEsModuleValue(getObject)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getObject([['value',***REMOVED***'true']],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
function***REMOVED***getNamespaceMarkers(hasNamedExports,***REMOVED***addEsModule,***REMOVED***addNamespaceToStringTag,***REMOVED***{***REMOVED***_,***REMOVED***getObject***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addEsModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addNamespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Object.defineProperties(exports,${_}${getObject([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***['__esModule',***REMOVED***getEsModuleValue(getObject)],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[null,***REMOVED***`[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}`]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})});`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Object.defineProperty(exports,${_}'__esModule',${_}${getEsModuleValue(getObject)});`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addNamespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Object.defineProperty(exports,${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)});`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
}
const***REMOVED***getDefineProperty***REMOVED***=***REMOVED***(name,***REMOVED***needsLiveBinding,***REMOVED***t,***REMOVED***{***REMOVED***_,***REMOVED***getDirectReturnFunction,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsLiveBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`Object.defineProperty(exports,${_}k,${_}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}enumerable:${_}true,${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}get:${_}${left}${name}[k]${right}${n}${t}})`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`exports[k]${_}=${_}${name}[k]`;
};

function***REMOVED***getInteropBlock(dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***accessedGlobals,***REMOVED***indent,***REMOVED***snippets)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***neededInteropHelpers***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***interopStatements***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***addInteropStatement***REMOVED***=***REMOVED***(helperVariableName,***REMOVED***helper,***REMOVED***dependencyVariableName)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***neededInteropHelpers.add(helper);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***interopStatements.push(`${cnst}***REMOVED***${helperVariableName}${_}=${_}/*#__PURE__*/${helper}(${dependencyVariableName});`);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***defaultVariableName,***REMOVED***imports,***REMOVED***importPath,***REMOVED***isChunk,***REMOVED***name,***REMOVED***namedExportsMode,***REMOVED***namespaceVariableName,***REMOVED***reexports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***imported,***REMOVED***reexported***REMOVED***}***REMOVED***of***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(imports***REMOVED***||***REMOVED***[]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(reexports***REMOVED***||***REMOVED***[])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***===***REMOVED***'*'***REMOVED***&&***REMOVED***reexported***REMOVED***!==***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!namedExportsMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addInteropStatement(namespaceVariableName,***REMOVED***INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleInterop***REMOVED***=***REMOVED***interop(importPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasDefault***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasNamespace***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***imported,***REMOVED***reexported***REMOVED***}***REMOVED***of***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(imports***REMOVED***||***REMOVED***[]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(reexports***REMOVED***||***REMOVED***[])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***helper;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***variableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasDefault)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDefault***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultVariableName***REMOVED***!==***REMOVED***namespaceVariableName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variableName***REMOVED***=***REMOVED***defaultVariableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helper***REMOVED***=***REMOVED***defaultInteropHelpersByInteropType[moduleInterop];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(imported***REMOVED***===***REMOVED***'*'***REMOVED***&&***REMOVED***reexported***REMOVED***!==***REMOVED***'*'***REMOVED***&&***REMOVED***!hasNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasNamespace***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helper***REMOVED***=***REMOVED***namespaceInteropHelpersByInteropType[moduleInterop];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variableName***REMOVED***=***REMOVED***namespaceVariableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(helper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addInteropStatement(variableName,***REMOVED***helper,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${getHelpersBlock(neededInteropHelpers,***REMOVED***accessedGlobals,***REMOVED***indent,***REMOVED***snippets,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)}${interopStatements.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***`${interopStatements.join(n)}${n}${n}`***REMOVED***:***REMOVED***''}`;
}

function***REMOVED***addJsExtension(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***name.endsWith('.js')***REMOVED***?***REMOVED***name***REMOVED***:***REMOVED***name***REMOVED***+***REMOVED***'.js';
}

//***REMOVED***AMD***REMOVED***resolution***REMOVED***will***REMOVED***only***REMOVED***respect***REMOVED***the***REMOVED***AMD***REMOVED***baseUrl***REMOVED***if***REMOVED***the***REMOVED***.js***REMOVED***extension***REMOVED***is***REMOVED***omitted.
//***REMOVED***The***REMOVED***assumption***REMOVED***is***REMOVED***that***REMOVED***this***REMOVED***makes***REMOVED***sense***REMOVED***for***REMOVED***all***REMOVED***relative***REMOVED***ids:
//***REMOVED***https://requirejs.org/docs/api.html#jsfiles
function***REMOVED***updateExtensionForRelativeAmdId(id,***REMOVED***forceJsExtensionForImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id[0]***REMOVED***!==***REMOVED***'.')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***forceJsExtensionForImports***REMOVED***?***REMOVED***addJsExtension(id)***REMOVED***:***REMOVED***removeJsExtension(id);
}

const***REMOVED***require$$0***REMOVED***=***REMOVED***[
	"assert",
	"async_hooks",
	"buffer",
	"child_process",
	"cluster",
	"console",
	"constants",
	"crypto",
	"dgram",
	"diagnostics_channel",
	"dns",
	"domain",
	"events",
	"fs",
	"http",
	"http2",
	"https",
	"inspector",
	"module",
	"net",
	"os",
	"path",
	"perf_hooks",
	"process",
	"punycode",
	"querystring",
	"readline",
	"repl",
	"stream",
	"string_decoder",
	"timers",
	"tls",
	"trace_events",
	"tty",
	"url",
	"util",
	"v8",
	"vm",
	"wasi",
	"worker_threads",
	"zlib"
];

var***REMOVED***_static***REMOVED***=***REMOVED***require$$0;

const***REMOVED***builtinModules***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(_static);

const***REMOVED***nodeBuiltins***REMOVED***=***REMOVED***new***REMOVED***Set([
***REMOVED******REMOVED******REMOVED******REMOVED***...builtinModules,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***remove***REMOVED***once***REMOVED***builtin-modules***REMOVED***includes***REMOVED***PR:***REMOVED***https://github.com/sindresorhus/builtin-modules/pull/17
***REMOVED******REMOVED******REMOVED******REMOVED***'assert/strict',
***REMOVED******REMOVED******REMOVED******REMOVED***'dns/promises',
***REMOVED******REMOVED******REMOVED******REMOVED***'fs/promises',
***REMOVED******REMOVED******REMOVED******REMOVED***'path/posix',
***REMOVED******REMOVED******REMOVED******REMOVED***'path/win32',
***REMOVED******REMOVED******REMOVED******REMOVED***'readline/promises',
***REMOVED******REMOVED******REMOVED******REMOVED***'stream/consumers',
***REMOVED******REMOVED******REMOVED******REMOVED***'stream/promises',
***REMOVED******REMOVED******REMOVED******REMOVED***'stream/web',
***REMOVED******REMOVED******REMOVED******REMOVED***'timers/promises',
***REMOVED******REMOVED******REMOVED******REMOVED***'util/types'
]);
function***REMOVED***warnOnBuiltins(log,***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***externalBuiltins***REMOVED***=***REMOVED***dependencies
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(({***REMOVED***importPath***REMOVED***})***REMOVED***=>***REMOVED***importPath)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(importPath***REMOVED***=>***REMOVED***nodeBuiltins.has(importPath)***REMOVED***||***REMOVED***importPath.startsWith('node:'));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(externalBuiltins.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logMissingNodeBuiltins(externalBuiltins));
}

function***REMOVED***amd(magicString,***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***dependencies,***REMOVED***exports,***REMOVED***hasDefaultExport,***REMOVED***hasExports,***REMOVED***id,***REMOVED***indent:***REMOVED***t,***REMOVED***intro,***REMOVED***isEntryFacade,***REMOVED***isModuleFacade,***REMOVED***namedExportsMode,***REMOVED***log,***REMOVED***outro,***REMOVED***snippets***REMOVED***},***REMOVED***{***REMOVED***amd,***REMOVED***esModule,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***interop,***REMOVED***namespaceToStringTag,***REMOVED***strict***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warnOnBuiltins(log,***REMOVED***dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deps***REMOVED***=***REMOVED***dependencies.map(m***REMOVED***=>***REMOVED***`'${updateExtensionForRelativeAmdId(m.importPath,***REMOVED***amd.forceJsExtensionForImports)}'`);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parameters***REMOVED***=***REMOVED***dependencies.map(m***REMOVED***=>***REMOVED***m.name);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***n,***REMOVED***getNonArrowFunctionIntro,***REMOVED***_***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namedExportsMode***REMOVED***&&***REMOVED***hasExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameters.unshift(`exports`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deps.unshift(`'exports'`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobals.has('require'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameters.unshift('require');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deps.unshift(`'require'`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobals.has('module'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameters.unshift('module');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deps.unshift(`'module'`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***completeAmdId***REMOVED***=***REMOVED***getCompleteAmdId(amd,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defineParameters***REMOVED***=***REMOVED***(completeAmdId***REMOVED***?***REMOVED***`'${completeAmdId}',${_}`***REMOVED***:***REMOVED***``)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(deps.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***`[${deps.join(`,${_}`)}],${_}`***REMOVED***:***REMOVED***``);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useStrict***REMOVED***=***REMOVED***strict***REMOVED***?***REMOVED***`${_}'use***REMOVED***strict';`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(`${intro}${getInteropBlock(dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***accessedGlobals,***REMOVED***t,***REMOVED***snippets)}`);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBlock***REMOVED***=***REMOVED***getExportBlock$1(exports,***REMOVED***dependencies,***REMOVED***namedExportsMode,***REMOVED***interop,***REMOVED***snippets,***REMOVED***t,***REMOVED***externalLiveBindings);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***namespaceMarkers***REMOVED***=***REMOVED***getNamespaceMarkers(namedExportsMode***REMOVED***&&***REMOVED***hasExports,***REMOVED***isEntryFacade***REMOVED***&&***REMOVED***(esModule***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***(esModule***REMOVED***===***REMOVED***'if-default-prop'***REMOVED***&&***REMOVED***hasDefaultExport)),***REMOVED***isModuleFacade***REMOVED***&&***REMOVED***namespaceToStringTag,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceMarkers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceMarkers***REMOVED***=***REMOVED***n***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***namespaceMarkers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***magicString
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(`${exportBlock}${namespaceMarkers}${outro}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.indent(t)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***factory***REMOVED***function***REMOVED***should***REMOVED***be***REMOVED***wrapped***REMOVED***by***REMOVED***parentheses***REMOVED***to***REMOVED***avoid***REMOVED***lazy***REMOVED***parsing,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***cf.***REMOVED***https://v8.dev/blog/preparser#pife
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.prepend(`${amd.define}(${defineParameters}(${getNonArrowFunctionIntro(parameters,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})}{${useStrict}${n}${n}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(`${n}${n}}));`);
}

function***REMOVED***cjs(magicString,***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***dependencies,***REMOVED***exports,***REMOVED***hasDefaultExport,***REMOVED***hasExports,***REMOVED***indent:***REMOVED***t,***REMOVED***intro,***REMOVED***isEntryFacade,***REMOVED***isModuleFacade,***REMOVED***namedExportsMode,***REMOVED***outro,***REMOVED***snippets***REMOVED***},***REMOVED***{***REMOVED***compact,***REMOVED***esModule,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***interop,***REMOVED***namespaceToStringTag,***REMOVED***strict***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useStrict***REMOVED***=***REMOVED***strict***REMOVED***?***REMOVED***`'use***REMOVED***strict';${n}${n}`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***namespaceMarkers***REMOVED***=***REMOVED***getNamespaceMarkers(namedExportsMode***REMOVED***&&***REMOVED***hasExports,***REMOVED***isEntryFacade***REMOVED***&&***REMOVED***(esModule***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***(esModule***REMOVED***===***REMOVED***'if-default-prop'***REMOVED***&&***REMOVED***hasDefaultExport)),***REMOVED***isModuleFacade***REMOVED***&&***REMOVED***namespaceToStringTag,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceMarkers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceMarkers***REMOVED***+=***REMOVED***n***REMOVED***+***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importBlock***REMOVED***=***REMOVED***getImportBlock$1(dependencies,***REMOVED***snippets,***REMOVED***compact);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***interopBlock***REMOVED***=***REMOVED***getInteropBlock(dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***accessedGlobals,***REMOVED***t,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(`${useStrict}${intro}${namespaceMarkers}${importBlock}${interopBlock}`);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBlock***REMOVED***=***REMOVED***getExportBlock$1(exports,***REMOVED***dependencies,***REMOVED***namedExportsMode,***REMOVED***interop,***REMOVED***snippets,***REMOVED***t,***REMOVED***externalLiveBindings,***REMOVED***`module.exports${_}=${_}`);
***REMOVED******REMOVED******REMOVED******REMOVED***magicString.append(`${exportBlock}${outro}`);
}
function***REMOVED***getImportBlock$1(dependencies,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***n***REMOVED***},***REMOVED***compact)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***importBlock***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***definingVariable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***importPath,***REMOVED***name,***REMOVED***reexports,***REMOVED***imports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!reexports***REMOVED***&&***REMOVED***!imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock***REMOVED***+=***REMOVED***compact***REMOVED***&&***REMOVED***!definingVariable***REMOVED***?***REMOVED***','***REMOVED***:***REMOVED***`;${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definingVariable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock***REMOVED***+=***REMOVED***`require('${importPath}')`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock***REMOVED***+=***REMOVED***compact***REMOVED***&&***REMOVED***definingVariable***REMOVED***?***REMOVED***','***REMOVED***:***REMOVED***`${importBlock***REMOVED***?***REMOVED***`;${n}`***REMOVED***:***REMOVED***''}${cnst}***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definingVariable***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock***REMOVED***+=***REMOVED***`${name}${_}=${_}require('${importPath}')`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${importBlock};${n}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
}

function***REMOVED***es(magicString,***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***indent:***REMOVED***t,***REMOVED***intro,***REMOVED***outro,***REMOVED***dependencies,***REMOVED***exports,***REMOVED***snippets***REMOVED***},***REMOVED***{***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importBlock***REMOVED***=***REMOVED***getImportBlock(dependencies,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importBlock.length***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***intro***REMOVED***+=***REMOVED***importBlock.join(n)***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED***intro***REMOVED***+=***REMOVED***getHelpersBlock(null,***REMOVED***accessedGlobals,***REMOVED***t,***REMOVED***snippets,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(intro)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(intro);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBlock***REMOVED***=***REMOVED***getExportBlock(exports,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportBlock.length***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.append(n***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***exportBlock.join(n).trim());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(outro)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.append(outro);
***REMOVED******REMOVED******REMOVED******REMOVED***magicString.trim();
}
function***REMOVED***getImportBlock(dependencies,***REMOVED***{***REMOVED***_***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importBlock***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***importPath,***REMOVED***reexports,***REMOVED***imports,***REMOVED***name,***REMOVED***assertions***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertion***REMOVED***=***REMOVED***assertions***REMOVED***?***REMOVED***`${_}assert${_}${assertions}`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pathWithAssertion***REMOVED***=***REMOVED***`'${importPath}'${assertion};`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!reexports***REMOVED***&&***REMOVED***!imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`import${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***defaultImport***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***starImport***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedNames***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.imported***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultImport***REMOVED***=***REMOVED***specifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(specifier.imported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starImport***REMOVED***=***REMOVED***specifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedNames.push(specifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(starImport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`import${_}*${_}as***REMOVED***${starImport.local}***REMOVED***from${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultImport***REMOVED***&&***REMOVED***importedNames.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`import***REMOVED***${defaultImport.local}***REMOVED***from${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(importedNames.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`import***REMOVED***${defaultImport***REMOVED***?***REMOVED***`${defaultImport.local},${_}`***REMOVED***:***REMOVED***''}{${_}${importedNames
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(specifier***REMOVED***=>***REMOVED***specifier.imported***REMOVED***===***REMOVED***specifier.local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***specifier.imported
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${specifier.imported}***REMOVED***as***REMOVED***${specifier.local}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***starExport***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***namespaceReexports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***namedReexports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.reexported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starExport***REMOVED***=***REMOVED***specifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(specifier.imported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceReexports.push(specifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namedReexports.push(specifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(starExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`export${_}*${_}from${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceReexports.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!imports***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!imports.some(specifier***REMOVED***=>***REMOVED***specifier.imported***REMOVED***===***REMOVED***'*'***REMOVED***&&***REMOVED***specifier.local***REMOVED***===***REMOVED***name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`import${_}*${_}as***REMOVED***${name}***REMOVED***from${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***namespaceReexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`export${_}{${_}${name***REMOVED***===***REMOVED***specifier.reexported***REMOVED***?***REMOVED***name***REMOVED***:***REMOVED***`${name}***REMOVED***as***REMOVED***${specifier.reexported}`}***REMOVED***};`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namedReexports.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBlock.push(`export${_}{${_}${namedReexports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(specifier***REMOVED***=>***REMOVED***specifier.imported***REMOVED***===***REMOVED***specifier.reexported
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***specifier.imported
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${specifier.imported}***REMOVED***as***REMOVED***${specifier.reexported}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***importBlock;
}
function***REMOVED***getExportBlock(exports,***REMOVED***{***REMOVED***_,***REMOVED***cnst***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBlock***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportDeclaration***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.expression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock.push(`${cnst}***REMOVED***${specifier.local}${_}=${_}${specifier.expression};`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportDeclaration.push(specifier.exported***REMOVED***===***REMOVED***specifier.local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***specifier.local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${specifier.local}***REMOVED***as***REMOVED***${specifier.exported}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportDeclaration.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportBlock.push(`export${_}{${_}${exportDeclaration.join(`,${_}`)}${_}};`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exportBlock;
}

const***REMOVED***keypath***REMOVED***=***REMOVED***(keypath,***REMOVED***getPropertyAccess)***REMOVED***=>***REMOVED***keypath.split('.').map(getPropertyAccess).join('');

function***REMOVED***setupNamespace(name,***REMOVED***root,***REMOVED***globals,***REMOVED***{***REMOVED***_,***REMOVED***getPropertyAccess,***REMOVED***s***REMOVED***},***REMOVED***compact)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parts***REMOVED***=***REMOVED***name.split('.');
***REMOVED******REMOVED******REMOVED******REMOVED***parts[0]***REMOVED***=***REMOVED***(typeof***REMOVED***globals***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***globals(parts[0])***REMOVED***:***REMOVED***globals[parts[0]])***REMOVED***||***REMOVED***parts[0];
***REMOVED******REMOVED******REMOVED******REMOVED***parts.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***propertyPath***REMOVED***=***REMOVED***root;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(parts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(part***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyPath***REMOVED***+=***REMOVED***getPropertyAccess(part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}${s}`;
***REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(compact***REMOVED***?***REMOVED***','***REMOVED***:***REMOVED***'\n')***REMOVED***+***REMOVED***(compact***REMOVED***&&***REMOVED***parts.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***';'***REMOVED***:***REMOVED***'\n'));
}
function***REMOVED***assignToDeepVariable(deepName,***REMOVED***root,***REMOVED***globals,***REMOVED***assignment,***REMOVED***{***REMOVED***_,***REMOVED***getPropertyAccess***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parts***REMOVED***=***REMOVED***deepName.split('.');
***REMOVED******REMOVED******REMOVED******REMOVED***parts[0]***REMOVED***=***REMOVED***(typeof***REMOVED***globals***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***globals(parts[0])***REMOVED***:***REMOVED***globals[parts[0]])***REMOVED***||***REMOVED***parts[0];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***parts.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***propertyPath***REMOVED***=***REMOVED***root;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***deepAssignment***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...parts.map(part***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyPath***REMOVED***+=***REMOVED***getPropertyAccess(part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${propertyPath}${getPropertyAccess(last)}`
***REMOVED******REMOVED******REMOVED******REMOVED***].join(`,${_}`)***REMOVED***+***REMOVED***`${_}=${_}${assignment}`;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parts.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deepAssignment***REMOVED***=***REMOVED***`(${deepAssignment})`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***deepAssignment;
}

function***REMOVED***trimEmptyImports(dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***index***REMOVED***=***REMOVED***dependencies.length;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(index--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***imports,***REMOVED***reexports***REMOVED***}***REMOVED***=***REMOVED***dependencies[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imports***REMOVED***||***REMOVED***reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dependencies.slice(0,***REMOVED***index***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
}

function***REMOVED***iife(magicString,***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***dependencies,***REMOVED***exports,***REMOVED***hasDefaultExport,***REMOVED***hasExports,***REMOVED***indent:***REMOVED***t,***REMOVED***intro,***REMOVED***namedExportsMode,***REMOVED***log,***REMOVED***outro,***REMOVED***snippets***REMOVED***},***REMOVED***{***REMOVED***compact,***REMOVED***esModule,***REMOVED***extend,***REMOVED***freeze,***REMOVED***externalLiveBindings,***REMOVED***globals,***REMOVED***interop,***REMOVED***name,***REMOVED***namespaceToStringTag,***REMOVED***strict***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getNonArrowFunctionIntro,***REMOVED***getPropertyAccess,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isNamespaced***REMOVED***=***REMOVED***name***REMOVED***&&***REMOVED***name.includes('.');
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useVariableAssignment***REMOVED***=***REMOVED***!extend***REMOVED***&&***REMOVED***!isNamespaced;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***&&***REMOVED***useVariableAssignment***REMOVED***&&***REMOVED***!isLegal(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logIllegalIdentifierAsName(name));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***warnOnBuiltins(log,***REMOVED***dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***external***REMOVED***=***REMOVED***trimEmptyImports(dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deps***REMOVED***=***REMOVED***external.map(dep***REMOVED***=>***REMOVED***dep.globalName***REMOVED***||***REMOVED***'null');
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parameters***REMOVED***=***REMOVED***external.map(m***REMOVED***=>***REMOVED***m.name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasExports***REMOVED***&&***REMOVED***!name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logMissingNameOptionForIifeExport());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namedExportsMode***REMOVED***&&***REMOVED***hasExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extend)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deps.unshift(`this${keypath(name,***REMOVED***getPropertyAccess)}${_}=${_}this${keypath(name,***REMOVED***getPropertyAccess)}${_}||${_}{}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameters.unshift('exports');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deps.unshift('{}');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parameters.unshift('exports');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useStrict***REMOVED***=***REMOVED***strict***REMOVED***?***REMOVED***`${t}'use***REMOVED***strict';${n}`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***interopBlock***REMOVED***=***REMOVED***getInteropBlock(dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***accessedGlobals,***REMOVED***t,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(`${intro}${interopBlock}`);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***wrapperIntro***REMOVED***=***REMOVED***`(${getNonArrowFunctionIntro(parameters,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})}{${n}${useStrict}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***&&***REMOVED***!(extend***REMOVED***&&***REMOVED***namedExportsMode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapperIntro***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(useVariableAssignment***REMOVED***?***REMOVED***`var***REMOVED***${name}`***REMOVED***:***REMOVED***`this${keypath(name,***REMOVED***getPropertyAccess)}`)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${_}=${_}${wrapperIntro}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNamespaced)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapperIntro***REMOVED***=***REMOVED***setupNamespace(name,***REMOVED***'this',***REMOVED***globals,***REMOVED***snippets,***REMOVED***compact)***REMOVED***+***REMOVED***wrapperIntro;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***wrapperOutro***REMOVED***=***REMOVED***`${n}${n}})(${deps.join(`,${_}`)});`;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasExports***REMOVED***&&***REMOVED***!extend***REMOVED***&&***REMOVED***namedExportsMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapperOutro***REMOVED***=***REMOVED***`${n}${n}${t}return***REMOVED***exports;${wrapperOutro}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBlock***REMOVED***=***REMOVED***getExportBlock$1(exports,***REMOVED***dependencies,***REMOVED***namedExportsMode,***REMOVED***interop,***REMOVED***snippets,***REMOVED***t,***REMOVED***externalLiveBindings);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***namespaceMarkers***REMOVED***=***REMOVED***getNamespaceMarkers(namedExportsMode***REMOVED***&&***REMOVED***hasExports,***REMOVED***esModule***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***(esModule***REMOVED***===***REMOVED***'if-default-prop'***REMOVED***&&***REMOVED***hasDefaultExport),***REMOVED***namespaceToStringTag,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceMarkers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceMarkers***REMOVED***=***REMOVED***n***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***namespaceMarkers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***magicString
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(`${exportBlock}${namespaceMarkers}${outro}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.indent(t)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.prepend(wrapperIntro)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(wrapperOutro);
}

function***REMOVED***system(magicString,***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***dependencies,***REMOVED***exports,***REMOVED***hasExports,***REMOVED***indent:***REMOVED***t,***REMOVED***intro,***REMOVED***snippets,***REMOVED***outro,***REMOVED***usesTopLevelAwait***REMOVED***},***REMOVED***{***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***name,***REMOVED***namespaceToStringTag,***REMOVED***strict,***REMOVED***systemNullSetters***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***getFunctionIntro,***REMOVED***getNonArrowFunctionIntro,***REMOVED***n,***REMOVED***s***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***importBindings,***REMOVED***setters,***REMOVED***starExcludes***REMOVED***}***REMOVED***=***REMOVED***analyzeDependencies(dependencies,***REMOVED***exports,***REMOVED***t,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***registeredName***REMOVED***=***REMOVED***name***REMOVED***?***REMOVED***`'${name}',${_}`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrapperParameters***REMOVED***=***REMOVED***accessedGlobals.has('module')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***['exports',***REMOVED***'module']
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***hasExports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***['exports']
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***factory***REMOVED***function***REMOVED***should***REMOVED***be***REMOVED***wrapped***REMOVED***by***REMOVED***parentheses***REMOVED***to***REMOVED***avoid***REMOVED***lazy***REMOVED***parsing,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***cf.***REMOVED***https://v8.dev/blog/preparser#pife
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***wrapperStart***REMOVED***=***REMOVED***`System.register(${registeredName}[`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.map(({***REMOVED***importPath***REMOVED***})***REMOVED***=>***REMOVED***`'${importPath}'`).join(`,${_}`)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`],${_}(${getNonArrowFunctionIntro(wrapperParameters,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}{${n}${t}${strict***REMOVED***?***REMOVED***"'use***REMOVED***strict';"***REMOVED***:***REMOVED***''}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getStarExcludesBlock(starExcludes,***REMOVED***t,***REMOVED***snippets)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getImportBindingsBlock(importBindings,***REMOVED***t,***REMOVED***snippets)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${n}${t}return${_}{${setters.length***REMOVED***>***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${n}${t}${t}setters:${_}[${setters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(setter***REMOVED***=>***REMOVED***setter
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${getFunctionIntro(['module'],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}{${n}${t}${t}${t}${setter}${n}${t}${t}}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***systemNullSetters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`null`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${getFunctionIntro([],***REMOVED***{***REMOVED***isAsync:***REMOVED***false,***REMOVED***name:***REMOVED***null***REMOVED***})}{}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(`,${_}`)}],`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***''}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***wrapperStart***REMOVED***+=***REMOVED***`${t}${t}execute:${_}(${getNonArrowFunctionIntro([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***usesTopLevelAwait,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***})}{${n}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrapperEnd***REMOVED***=***REMOVED***`${t}${t}})${n}${t}}${s}${n}}));`;
***REMOVED******REMOVED******REMOVED******REMOVED***magicString
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.prepend(intro***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getHelpersBlock(null,***REMOVED***accessedGlobals,***REMOVED***t,***REMOVED***snippets,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getHoistedExportsBlock(exports,***REMOVED***t,***REMOVED***snippets))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(`${outro}${n}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getSyntheticExportsBlock(exports,***REMOVED***t,***REMOVED***snippets)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getMissingExportsBlock(exports,***REMOVED***t,***REMOVED***snippets))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.indent(`${t}${t}${t}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(wrapperEnd)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.prepend(wrapperStart);
}
function***REMOVED***analyzeDependencies(dependencies,***REMOVED***exports,***REMOVED***t,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getObject,***REMOVED***getPropertyAccess,***REMOVED***n***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importBindings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setters***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***starExcludes***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***imports,***REMOVED***reexports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setter***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importBindings.push(specifier.local);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.imported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setter.push(`${specifier.local}${_}=${_}module;`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setter.push(`${specifier.local}${_}=${_}module${getPropertyAccess(specifier.imported)};`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reexportedNames***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasStarReexport***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***imported,***REMOVED***reexported***REMOVED***}***REMOVED***of***REMOVED***reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexported***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasStarReexport***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexportedNames.push([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexported,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***===***REMOVED***'*'***REMOVED***?***REMOVED***'module'***REMOVED***:***REMOVED***`module${getPropertyAccess(imported)}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexportedNames.length***REMOVED***>***REMOVED***1***REMOVED***||***REMOVED***hasStarReexport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportMapping***REMOVED***=***REMOVED***getObject(reexportedNames,***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***null***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasStarReexport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!starExcludes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starExcludes***REMOVED***=***REMOVED***getStarExcludes({***REMOVED***dependencies,***REMOVED***exports***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setter.push(`${cnst}***REMOVED***setter${_}=${_}${exportMapping};`,***REMOVED***`for${_}(${cnst}***REMOVED***name***REMOVED***in***REMOVED***module)${_}{`,***REMOVED***`${t}if${_}(!_starExcludes[name])${_}setter[name]${_}=${_}module[name];`,***REMOVED***'}',***REMOVED***'exports(setter);');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setter.push(`exports(${exportMapping});`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[key,***REMOVED***value]***REMOVED***=***REMOVED***reexportedNames[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setter.push(`exports('${key}',${_}${value});`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setters.push(setter.join(`${n}${t}${t}${t}`));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***importBindings,***REMOVED***setters,***REMOVED***starExcludes***REMOVED***};
}
const***REMOVED***getStarExcludes***REMOVED***=***REMOVED***({***REMOVED***dependencies,***REMOVED***exports***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***starExcludes***REMOVED***=***REMOVED***new***REMOVED***Set(exports.map(expt***REMOVED***=>***REMOVED***expt.exported));
***REMOVED******REMOVED******REMOVED******REMOVED***starExcludes.add('default');
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***reexports***REMOVED***}***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***reexport***REMOVED***of***REMOVED***reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexport.reexported***REMOVED***!==***REMOVED***'*')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starExcludes.add(reexport.reexported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***starExcludes;
};
const***REMOVED***getStarExcludesBlock***REMOVED***=***REMOVED***(starExcludes,***REMOVED***t,***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getObject,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***starExcludes
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${n}${t}${cnst}***REMOVED***_starExcludes${_}=${_}${getObject([...starExcludes].map(property***REMOVED***=>***REMOVED***[property,***REMOVED***'1']),***REMOVED***{***REMOVED***lineBreakIndent:***REMOVED***{***REMOVED***base:***REMOVED***t,***REMOVED***t***REMOVED***}***REMOVED***})};`
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'';
const***REMOVED***getImportBindingsBlock***REMOVED***=***REMOVED***(importBindings,***REMOVED***t,***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***})***REMOVED***=>***REMOVED***(importBindings.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***`${n}${t}var***REMOVED***${importBindings.join(`,${_}`)};`***REMOVED***:***REMOVED***'');
const***REMOVED***getHoistedExportsBlock***REMOVED***=***REMOVED***(exports,***REMOVED***t,***REMOVED***snippets)***REMOVED***=>***REMOVED***getExportsBlock(exports.filter(expt***REMOVED***=>***REMOVED***expt.hoisted).map(expt***REMOVED***=>***REMOVED***({***REMOVED***name:***REMOVED***expt.exported,***REMOVED***value:***REMOVED***expt.local***REMOVED***})),***REMOVED***t,***REMOVED***snippets);
function***REMOVED***getExportsBlock(exports,***REMOVED***t,***REMOVED***{***REMOVED***_,***REMOVED***n***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exports.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exports.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`exports('${exports[0].name}',${_}${exports[0].value});${n}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(`exports({${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.map(({***REMOVED***name,***REMOVED***value***REMOVED***})***REMOVED***=>***REMOVED***`${t}${name}:${_}${value}`).join(`,${n}`)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${n}});${n}${n}`);
}
const***REMOVED***getSyntheticExportsBlock***REMOVED***=***REMOVED***(exports,***REMOVED***t,***REMOVED***snippets)***REMOVED***=>***REMOVED***getExportsBlock(exports
***REMOVED******REMOVED******REMOVED******REMOVED***.filter(expt***REMOVED***=>***REMOVED***expt.expression)
***REMOVED******REMOVED******REMOVED******REMOVED***.map(expt***REMOVED***=>***REMOVED***({***REMOVED***name:***REMOVED***expt.exported,***REMOVED***value:***REMOVED***expt.local***REMOVED***})),***REMOVED***t,***REMOVED***snippets);
const***REMOVED***getMissingExportsBlock***REMOVED***=***REMOVED***(exports,***REMOVED***t,***REMOVED***snippets)***REMOVED***=>***REMOVED***getExportsBlock(exports
***REMOVED******REMOVED******REMOVED******REMOVED***.filter(expt***REMOVED***=>***REMOVED***expt.local***REMOVED***===***REMOVED***MISSING_EXPORT_SHIM_VARIABLE)
***REMOVED******REMOVED******REMOVED******REMOVED***.map(expt***REMOVED***=>***REMOVED***({***REMOVED***name:***REMOVED***expt.exported,***REMOVED***value:***REMOVED***MISSING_EXPORT_SHIM_VARIABLE***REMOVED***})),***REMOVED***t,***REMOVED***snippets);

function***REMOVED***globalProperty(name,***REMOVED***globalVariable,***REMOVED***getPropertyAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'null';
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${globalVariable}${keypath(name,***REMOVED***getPropertyAccess)}`;
}
function***REMOVED***safeAccess(name,***REMOVED***globalVariable,***REMOVED***{***REMOVED***_,***REMOVED***getPropertyAccess***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***propertyPath***REMOVED***=***REMOVED***globalVariable;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.split('.')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(part***REMOVED***=>***REMOVED***(propertyPath***REMOVED***+=***REMOVED***getPropertyAccess(part)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(`${_}&&${_}`);
}
function***REMOVED***umd(magicString,***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***dependencies,***REMOVED***exports,***REMOVED***hasDefaultExport,***REMOVED***hasExports,***REMOVED***id,***REMOVED***indent:***REMOVED***t,***REMOVED***intro,***REMOVED***namedExportsMode,***REMOVED***log,***REMOVED***outro,***REMOVED***snippets***REMOVED***},***REMOVED***{***REMOVED***amd,***REMOVED***compact,***REMOVED***esModule,***REMOVED***extend,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***interop,***REMOVED***name,***REMOVED***namespaceToStringTag,***REMOVED***globals,***REMOVED***noConflict,***REMOVED***strict***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***getFunctionIntro,***REMOVED***getNonArrowFunctionIntro,***REMOVED***getPropertyAccess,***REMOVED***n,***REMOVED***s***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***factoryVariable***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***'f'***REMOVED***:***REMOVED***'factory';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalVariable***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***'g'***REMOVED***:***REMOVED***'global';
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasExports***REMOVED***&&***REMOVED***!name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logMissingNameOptionForUmdExport());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***warnOnBuiltins(log,***REMOVED***dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***amdDeps***REMOVED***=***REMOVED***dependencies.map(m***REMOVED***=>***REMOVED***`'${updateExtensionForRelativeAmdId(m.importPath,***REMOVED***amd.forceJsExtensionForImports)}'`);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cjsDeps***REMOVED***=***REMOVED***dependencies.map(m***REMOVED***=>***REMOVED***`require('${m.importPath}')`);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trimmedImports***REMOVED***=***REMOVED***trimEmptyImports(dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalDeps***REMOVED***=***REMOVED***trimmedImports.map(module***REMOVED***=>***REMOVED***globalProperty(module.globalName,***REMOVED***globalVariable,***REMOVED***getPropertyAccess));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***factoryParameters***REMOVED***=***REMOVED***trimmedImports.map(m***REMOVED***=>***REMOVED***m.name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namedExportsMode***REMOVED***&&***REMOVED***(hasExports***REMOVED***||***REMOVED***noConflict))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***amdDeps.unshift(`'exports'`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cjsDeps.unshift(`exports`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalDeps.unshift(assignToDeepVariable(name,***REMOVED***globalVariable,***REMOVED***globals,***REMOVED***`${extend***REMOVED***?***REMOVED***`${globalProperty(name,***REMOVED***globalVariable,***REMOVED***getPropertyAccess)}${_}||${_}`***REMOVED***:***REMOVED***''}{}`,***REMOVED***snippets));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***factoryParameters.unshift('exports');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***completeAmdId***REMOVED***=***REMOVED***getCompleteAmdId(amd,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***amdParameters***REMOVED***=***REMOVED***(completeAmdId***REMOVED***?***REMOVED***`'${completeAmdId}',${_}`***REMOVED***:***REMOVED***``)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(amdDeps.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***`[${amdDeps.join(`,${_}`)}],${_}`***REMOVED***:***REMOVED***``);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***define***REMOVED***=***REMOVED***amd.define;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cjsExport***REMOVED***=***REMOVED***!namedExportsMode***REMOVED***&&***REMOVED***hasExports***REMOVED***?***REMOVED***`module.exports${_}=${_}`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useStrict***REMOVED***=***REMOVED***strict***REMOVED***?***REMOVED***`${_}'use***REMOVED***strict';${n}`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***iifeExport;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noConflict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noConflictExportsVariable***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***'e'***REMOVED***:***REMOVED***'exports';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***factory;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!namedExportsMode***REMOVED***&&***REMOVED***hasExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***factory***REMOVED***=***REMOVED***`${cnst}***REMOVED***${noConflictExportsVariable}${_}=${_}${assignToDeepVariable(name,***REMOVED***globalVariable,***REMOVED***globals,***REMOVED***`${factoryVariable}(${globalDeps.join(`,${_}`)})`,***REMOVED***snippets)};`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***globalDeps.shift();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***factory***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${cnst}***REMOVED***${noConflictExportsVariable}${_}=${_}${module};${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${factoryVariable}(${[noConflictExportsVariable,***REMOVED***...globalDeps].join(`,${_}`)});`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***iifeExport***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`(${getFunctionIntro([],***REMOVED***{***REMOVED***isAsync:***REMOVED***false,***REMOVED***name:***REMOVED***null***REMOVED***})}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${cnst}***REMOVED***current${_}=${_}${safeAccess(name,***REMOVED***globalVariable,***REMOVED***snippets)};${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${factory}${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${t}${noConflictExportsVariable}.noConflict${_}=${_}${getFunctionIntro([],***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}{${_}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${globalProperty(name,***REMOVED***globalVariable,***REMOVED***getPropertyAccess)}${_}=${_}current;${_}return***REMOVED***${noConflictExportsVariable}${s}${_}};${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}})()`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***iifeExport***REMOVED***=***REMOVED***`${factoryVariable}(${globalDeps.join(`,${_}`)})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!namedExportsMode***REMOVED***&&***REMOVED***hasExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***iifeExport***REMOVED***=***REMOVED***assignToDeepVariable(name,***REMOVED***globalVariable,***REMOVED***globals,***REMOVED***iifeExport,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***iifeNeedsGlobal***REMOVED***=***REMOVED***hasExports***REMOVED***||***REMOVED***(noConflict***REMOVED***&&***REMOVED***namedExportsMode)***REMOVED***||***REMOVED***globalDeps.length***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrapperParameters***REMOVED***=***REMOVED***[factoryVariable];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(iifeNeedsGlobal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapperParameters.unshift(globalVariable);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalArgument***REMOVED***=***REMOVED***iifeNeedsGlobal***REMOVED***?***REMOVED***`this,${_}`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***iifeStart***REMOVED***=***REMOVED***iifeNeedsGlobal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`(${globalVariable}${_}=${_}typeof***REMOVED***globalThis${_}!==${_}'undefined'${_}?${_}globalThis${_}:${_}${globalVariable}${_}||${_}self,${_}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***iifeEnd***REMOVED***=***REMOVED***iifeNeedsGlobal***REMOVED***?***REMOVED***')'***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cjsIntro***REMOVED***=***REMOVED***iifeNeedsGlobal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${t}typeof***REMOVED***exports${_}===${_}'object'${_}&&${_}typeof***REMOVED***module${_}!==${_}'undefined'${_}?`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${_}${cjsExport}${factoryVariable}(${cjsDeps.join(`,${_}`)})${_}:${n}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrapperIntro***REMOVED***=***REMOVED***`(${getNonArrowFunctionIntro(wrapperParameters,***REMOVED***{***REMOVED***isAsync:***REMOVED***false,***REMOVED***name:***REMOVED***null***REMOVED***})}{${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cjsIntro***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}typeof***REMOVED***${define}${_}===${_}'function'${_}&&${_}${define}.amd${_}?${_}${define}(${amdParameters}${factoryVariable})${_}:${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${t}${iifeStart}${iifeExport}${iifeEnd};${n}`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***factory***REMOVED***function***REMOVED***should***REMOVED***be***REMOVED***wrapped***REMOVED***by***REMOVED***parentheses***REMOVED***to***REMOVED***avoid***REMOVED***lazy***REMOVED***parsing,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***cf.***REMOVED***https://v8.dev/blog/preparser#pife
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`})(${globalArgument}(${getNonArrowFunctionIntro(factoryParameters,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}{${useStrict}${n}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrapperOutro***REMOVED***=***REMOVED***n***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***'}));';
***REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(`${intro}${getInteropBlock(dependencies,***REMOVED***interop,***REMOVED***externalLiveBindings,***REMOVED***freeze,***REMOVED***namespaceToStringTag,***REMOVED***accessedGlobals,***REMOVED***t,***REMOVED***snippets)}`);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportBlock***REMOVED***=***REMOVED***getExportBlock$1(exports,***REMOVED***dependencies,***REMOVED***namedExportsMode,***REMOVED***interop,***REMOVED***snippets,***REMOVED***t,***REMOVED***externalLiveBindings);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***namespaceMarkers***REMOVED***=***REMOVED***getNamespaceMarkers(namedExportsMode***REMOVED***&&***REMOVED***hasExports,***REMOVED***esModule***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***(esModule***REMOVED***===***REMOVED***'if-default-prop'***REMOVED***&&***REMOVED***hasDefaultExport),***REMOVED***namespaceToStringTag,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceMarkers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceMarkers***REMOVED***=***REMOVED***n***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***namespaceMarkers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***magicString
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(`${exportBlock}${namespaceMarkers}${outro}`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.trim()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.indent(t)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.append(wrapperOutro)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.prepend(wrapperIntro);
}

const***REMOVED***finalisers***REMOVED***=***REMOVED***{***REMOVED***amd,***REMOVED***cjs,***REMOVED***es,***REMOVED***iife,***REMOVED***system,***REMOVED***umd***REMOVED***};

const***REMOVED***concatSeparator***REMOVED***=***REMOVED***(out,***REMOVED***next)***REMOVED***=>***REMOVED***(next***REMOVED***?***REMOVED***`${out}\n${next}`***REMOVED***:***REMOVED***out);
const***REMOVED***concatDblSeparator***REMOVED***=***REMOVED***(out,***REMOVED***next)***REMOVED***=>***REMOVED***(next***REMOVED***?***REMOVED***`${out}\n\n${next}`***REMOVED***:***REMOVED***out);
async***REMOVED***function***REMOVED***createAddons(options,***REMOVED***outputPluginDriver,***REMOVED***chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[banner,***REMOVED***footer,***REMOVED***intro,***REMOVED***outro]***REMOVED***=***REMOVED***await***REMOVED***Promise.all([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputPluginDriver.hookReduceValue('banner',***REMOVED***options.banner(chunk),***REMOVED***[chunk],***REMOVED***concatSeparator),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputPluginDriver.hookReduceValue('footer',***REMOVED***options.footer(chunk),***REMOVED***[chunk],***REMOVED***concatSeparator),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputPluginDriver.hookReduceValue('intro',***REMOVED***options.intro(chunk),***REMOVED***[chunk],***REMOVED***concatDblSeparator),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputPluginDriver.hookReduceValue('outro',***REMOVED***options.outro(chunk),***REMOVED***[chunk],***REMOVED***concatDblSeparator)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(intro)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***intro***REMOVED***+=***REMOVED***'\n\n';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(outro)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outro***REMOVED***=***REMOVED***`\n\n${outro}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(banner)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***banner***REMOVED***+=***REMOVED***'\n';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(footer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***footer***REMOVED***=***REMOVED***'\n'***REMOVED***+***REMOVED***footer;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***banner,***REMOVED***footer,***REMOVED***intro,***REMOVED***outro***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAddonNotGenerated(error_.message,***REMOVED***error_.hook,***REMOVED***error_.plugin));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***deconflictImportsOther,
***REMOVED******REMOVED******REMOVED******REMOVED***cjs:***REMOVED***deconflictImportsOther,
***REMOVED******REMOVED******REMOVED******REMOVED***es:***REMOVED***deconflictImportsEsmOrSystem,
***REMOVED******REMOVED******REMOVED******REMOVED***iife:***REMOVED***deconflictImportsOther,
***REMOVED******REMOVED******REMOVED******REMOVED***system:***REMOVED***deconflictImportsEsmOrSystem,
***REMOVED******REMOVED******REMOVED******REMOVED***umd:***REMOVED***deconflictImportsOther
};
function***REMOVED***deconflictChunk(modules,***REMOVED***dependenciesToBeDeconflicted,***REMOVED***imports,***REMOVED***usedNames,***REMOVED***format,***REMOVED***interop,***REMOVED***preserveModules,***REMOVED***externalLiveBindings,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***syntheticExports,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope,***REMOVED***includedNamespaces)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reversedModules***REMOVED***=***REMOVED***[...modules].reverse();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***reversedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.scope.addUsedOutsideNames(usedNames,***REMOVED***format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deconflictTopLevelVariables(usedNames,***REMOVED***reversedModules,***REMOVED***includedNamespaces);
***REMOVED******REMOVED******REMOVED******REMOVED***DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT[format](usedNames,***REMOVED***imports,***REMOVED***dependenciesToBeDeconflicted,***REMOVED***interop,***REMOVED***preserveModules,***REMOVED***externalLiveBindings,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***syntheticExports);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***reversedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.scope.deconflict(format,***REMOVED***exportNamesByVariable,***REMOVED***accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***deconflictImportsEsmOrSystem(usedNames,***REMOVED***imports,***REMOVED***dependenciesToBeDeconflicted,***REMOVED***_interop,***REMOVED***preserveModules,***REMOVED***_externalLiveBindings,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***syntheticExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***is***REMOVED***needed***REMOVED***for***REMOVED***namespace***REMOVED***reexports
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***dependenciesToBeDeconflicted.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveModules***REMOVED***||***REMOVED***dependency***REMOVED***instanceof***REMOVED***ExternalChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.variableName***REMOVED***=***REMOVED***getSafeName(dependency.suggestedVariableName,***REMOVED***usedNames,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***variable.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.isNamespace***REMOVED***&&***REMOVED***(preserveModules***REMOVED***||***REMOVED***module***REMOVED***instanceof***REMOVED***ExternalModule))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***externalChunkByModule.get(module)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***chunkByModule.get(module)).variableName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule***REMOVED***&&***REMOVED***name***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***getSafeName([...module.exportedVariables].some(([exportedVariable,***REMOVED***exportedName])***REMOVED***=>***REMOVED***exportedName***REMOVED***===***REMOVED***'*'***REMOVED***&&***REMOVED***exportedVariable.included)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***module.suggestedVariableName***REMOVED***+***REMOVED***'__default'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***module.suggestedVariableName,***REMOVED***usedNames,***REMOVED***variable.forbiddenNames));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***getSafeName(name,***REMOVED***usedNames,***REMOVED***variable.forbiddenNames));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***syntheticExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***getSafeName(variable.name,***REMOVED***usedNames,***REMOVED***variable.forbiddenNames));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***deconflictImportsOther(usedNames,***REMOVED***imports,***REMOVED***{***REMOVED***deconflictedDefault,***REMOVED***deconflictedNamespace,***REMOVED***dependencies***REMOVED***},***REMOVED***interop,***REMOVED***preserveModules,***REMOVED***externalLiveBindings,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.variableName***REMOVED***=***REMOVED***getSafeName(chunk.suggestedVariableName,***REMOVED***usedNames,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***deconflictedNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.namespaceVariableName***REMOVED***=***REMOVED***getSafeName(`${chunk.suggestedVariableName}__namespace`,***REMOVED***usedNames,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***externalModule***REMOVED***of***REMOVED***deconflictedDefault)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalModule.defaultVariableName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deconflictedNamespace.has(externalModule)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***canDefaultBeTakenFromNamespace(interop(externalModule.id),***REMOVED***externalLiveBindings)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***externalModule.namespaceVariableName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***getSafeName(`${externalModule.suggestedVariableName}__default`,***REMOVED***usedNames,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***externalChunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***variable.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleInterop***REMOVED***=***REMOVED***interop(module.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variableName***REMOVED***=***REMOVED***defaultInteropHelpersByInteropType[moduleInterop]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chunk.defaultVariableName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***chunk.variableName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDefaultAProperty(moduleInterop,***REMOVED***externalLiveBindings))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(variableName,***REMOVED***'default');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***variableName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***namespaceInteropHelpersByInteropType[interop(module.id)]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chunk.namespaceVariableName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***chunk.variableName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***second***REMOVED***parameter***REMOVED***is***REMOVED***`null`,***REMOVED***it***REMOVED***uses***REMOVED***its***REMOVED***"name"***REMOVED***for***REMOVED***the***REMOVED***property***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(chunk.variableName,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***chunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveModules***REMOVED***&&***REMOVED***variable.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***chunk.exportMode***REMOVED***===***REMOVED***'default'***REMOVED***?***REMOVED***chunk.namespaceVariableName***REMOVED***:***REMOVED***chunk.variableName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(chunk.exportMode***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***chunk.variableName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(chunk.variableName,***REMOVED***chunk.getVariableExportName(variable));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***deconflictTopLevelVariables(usedNames,***REMOVED***modules,***REMOVED***includedNamespaces)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***module.scope.variables.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.included***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***will***REMOVED***only***REMOVED***happen***REMOVED***for***REMOVED***exports***REMOVED***in***REMOVED***some***REMOVED***formats
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(variable.renderBaseName***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(variable***REMOVED***instanceof***REMOVED***ExportDefaultVariable***REMOVED***&&***REMOVED***variable.getOriginalVariable()***REMOVED***!==***REMOVED***variable)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.setRenderNames(null,***REMOVED***getSafeName(variable.name,***REMOVED***usedNames,***REMOVED***variable.forbiddenNames));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedNamespaces.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***namespace***REMOVED***=***REMOVED***module.namespace;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace.setRenderNames(null,***REMOVED***getSafeName(namespace.name,***REMOVED***usedNames,***REMOVED***namespace.forbiddenNames));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***assignExportsToMangledNames(exports,***REMOVED***exportsByName,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nameIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[exportName]***REMOVED***=***REMOVED***variable.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportsByName.has(exportName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportName***REMOVED***=***REMOVED***toBase64(++nameIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***skip***REMOVED***past***REMOVED***leading***REMOVED***number***REMOVED***identifiers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportName.charCodeAt(0)***REMOVED***===***REMOVED***49***REMOVED***/****REMOVED***'1'***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nameIndex***REMOVED***+=***REMOVED***9***REMOVED*******REMOVED***64***REMOVED********REMOVED***(exportName.length***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportName***REMOVED***=***REMOVED***toBase64(nameIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(RESERVED_NAMES$1.has(exportName)***REMOVED***||***REMOVED***exportsByName.has(exportName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportsByName.set(exportName,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportNamesByVariable.set(variable,***REMOVED***[exportName]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***assignExportsToNames(exports,***REMOVED***exportsByName,***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nameIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exportName***REMOVED***=***REMOVED***variable.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(exportsByName.has(exportName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportName***REMOVED***=***REMOVED***variable.name***REMOVED***+***REMOVED***'$'***REMOVED***+***REMOVED***++nameIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportsByName.set(exportName,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportNamesByVariable.set(variable,***REMOVED***[exportName]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***getExportMode(chunk,***REMOVED***{***REMOVED***exports:***REMOVED***exportMode,***REMOVED***name,***REMOVED***format***REMOVED***},***REMOVED***facadeModuleId,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportKeys***REMOVED***=***REMOVED***chunk.getExportNames();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportMode***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportKeys.length***REMOVED***!==***REMOVED***1***REMOVED***||***REMOVED***exportKeys[0]***REMOVED***!==***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logIncompatibleExportOptionValue('default',***REMOVED***exportKeys,***REMOVED***facadeModuleId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(exportMode***REMOVED***===***REMOVED***'none'***REMOVED***&&***REMOVED***exportKeys.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logIncompatibleExportOptionValue('none',***REMOVED***exportKeys,***REMOVED***facadeModuleId));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportMode***REMOVED***===***REMOVED***'auto')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportKeys.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportMode***REMOVED***=***REMOVED***'none';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(exportKeys.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***exportKeys[0]***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportMode***REMOVED***=***REMOVED***'default';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***!==***REMOVED***'es'***REMOVED***&&***REMOVED***format***REMOVED***!==***REMOVED***'system'***REMOVED***&&***REMOVED***exportKeys.includes('default'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logMixedExport(facadeModuleId,***REMOVED***name));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportMode***REMOVED***=***REMOVED***'named';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exportMode;
}

function***REMOVED***guessIndentString(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lines***REMOVED***=***REMOVED***code.split('\n');
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tabbed***REMOVED***=***REMOVED***lines.filter(line***REMOVED***=>***REMOVED***/^\t+/.test(line));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***spaced***REMOVED***=***REMOVED***lines.filter(line***REMOVED***=>***REMOVED***/^***REMOVED***{2,}/.test(line));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tabbed.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***spaced.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***More***REMOVED***lines***REMOVED***tabbed***REMOVED***than***REMOVED***spaced?***REMOVED***Assume***REMOVED***tabs,***REMOVED***and
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***default***REMOVED***to***REMOVED***tabs***REMOVED***in***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***a***REMOVED***tie***REMOVED***(or***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***go***REMOVED***on)
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tabbed.length***REMOVED***>=***REMOVED***spaced.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'\t';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Otherwise,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***guess***REMOVED***the***REMOVED***multiple
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***min***REMOVED***=***REMOVED***spaced.reduce((previous,***REMOVED***current)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***numberSpaces***REMOVED***=***REMOVED***/^***REMOVED***+/.exec(current)[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Math.min(numberSpaces,***REMOVED***previous);
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***Infinity);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'***REMOVED***'.repeat(min);
}
function***REMOVED***getIndentString(modules,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.indent***REMOVED***!==***REMOVED***true)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.indent;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***indent***REMOVED***=***REMOVED***guessIndentString(module.originalCode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(indent***REMOVED***!==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***indent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'\t';
}

function***REMOVED***getStaticDependencies(chunk,***REMOVED***orderedModules,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***staticDependencyBlocks***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handledDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***modulePos***REMOVED***=***REMOVED***orderedModules.length***REMOVED***-***REMOVED***1;***REMOVED***modulePos***REMOVED***>=***REMOVED***0;***REMOVED***modulePos--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***orderedModules[modulePos];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!handledDependencies.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***staticDependencies***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addStaticDependencies(module,***REMOVED***staticDependencies,***REMOVED***handledDependencies,***REMOVED***chunk,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***staticDependencyBlocks.unshift(staticDependencies);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***block***REMOVED***of***REMOVED***staticDependencyBlocks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***block)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dependencies;
}
function***REMOVED***addStaticDependencies(module,***REMOVED***staticDependencies,***REMOVED***handledModules,***REMOVED***chunk,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***module.getDependenciesToBeIncluded();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***staticDependencies.push(externalChunkByModule.get(dependency));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencyChunk***REMOVED***=***REMOVED***chunkByModule.get(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependencyChunk***REMOVED***!==***REMOVED***chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***staticDependencies.push(dependencyChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!handledModules.has(dependency))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handledModules.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addStaticDependencies(dependency,***REMOVED***staticDependencies,***REMOVED***handledModules,***REMOVED***chunk,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***NON_ASSET_EXTENSIONS***REMOVED***=***REMOVED***new***REMOVED***Set([
***REMOVED******REMOVED******REMOVED******REMOVED***'.js',
***REMOVED******REMOVED******REMOVED******REMOVED***'.jsx',
***REMOVED******REMOVED******REMOVED******REMOVED***'.ts',
***REMOVED******REMOVED******REMOVED******REMOVED***'.tsx',
***REMOVED******REMOVED******REMOVED******REMOVED***'.mjs',
***REMOVED******REMOVED******REMOVED******REMOVED***'.mts',
***REMOVED******REMOVED******REMOVED******REMOVED***'.cjs',
***REMOVED******REMOVED******REMOVED******REMOVED***'.cts'
]);
function***REMOVED***getGlobalName(chunk,***REMOVED***globals,***REMOVED***hasExports,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalName***REMOVED***=***REMOVED***typeof***REMOVED***globals***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***globals(chunk.id)***REMOVED***:***REMOVED***globals[chunk.id];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globalName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globalName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logMissingGlobalName(chunk.id,***REMOVED***chunk.variableName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***chunk.variableName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
class***REMOVED***Chunk***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(orderedModules,***REMOVED***inputOptions,***REMOVED***outputOptions,***REMOVED***unsetOptions,***REMOVED***pluginDriver,***REMOVED***modulesById,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***facadeChunkByModule,***REMOVED***includedNamespaces,***REMOVED***manualChunkAlias,***REMOVED***getPlaceholder,***REMOVED***bundle,***REMOVED***inputBase,***REMOVED***snippets)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.orderedModules***REMOVED***=***REMOVED***orderedModules;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputOptions***REMOVED***=***REMOVED***inputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputOptions***REMOVED***=***REMOVED***outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unsetOptions***REMOVED***=***REMOVED***unsetOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver***REMOVED***=***REMOVED***pluginDriver;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesById***REMOVED***=***REMOVED***modulesById;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.chunkByModule***REMOVED***=***REMOVED***chunkByModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.externalChunkByModule***REMOVED***=***REMOVED***externalChunkByModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeChunkByModule***REMOVED***=***REMOVED***facadeChunkByModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedNamespaces***REMOVED***=***REMOVED***includedNamespaces;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.manualChunkAlias***REMOVED***=***REMOVED***manualChunkAlias;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getPlaceholder***REMOVED***=***REMOVED***getPlaceholder;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.bundle***REMOVED***=***REMOVED***bundle;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputBase***REMOVED***=***REMOVED***inputBase;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.snippets***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entryModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportMode***REMOVED***=***REMOVED***'named';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeModule***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespaceVariableName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variableName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedGlobalsByScope***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicEntryModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportNamesByVariable***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportsByName***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitlyLoadedBefore***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.imports***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedDynamicImports***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedReexportsByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***may***REMOVED***be***REMOVED***updated***REMOVED***in***REMOVED***the***REMOVED***constructor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isEmpty***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.needsExportsShim***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preRenderedChunkInfo***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preliminaryFileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preliminarySourcemapFileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderedChunkInfo***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderedDependencies***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.renderedModules***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sortedExportNames***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.strictFacade***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.execIndex***REMOVED***=***REMOVED***orderedModules.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***orderedModules[0].execIndex***REMOVED***:***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkModules***REMOVED***=***REMOVED***new***REMOVED***Set(orderedModules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkByModule.set(module,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.namespace.included***REMOVED***&&***REMOVED***!outputOptions.preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedNamespaces.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isEmpty***REMOVED***&&***REMOVED***module.isIncluded())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isEmpty***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.info.isEntry***REMOVED***||***REMOVED***outputOptions.preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entryModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***importer***REMOVED***of***REMOVED***module.includedDynamicImporters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!chunkModules.has(importer))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicEntryModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Modules***REMOVED***with***REMOVED***synthetic***REMOVED***exports***REMOVED***need***REMOVED***an***REMOVED***artificial***REMOVED***namespace***REMOVED***for***REMOVED***dynamic***REMOVED***imports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.info.syntheticNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedNamespaces.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.add(module.namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.implicitlyLoadedAfter.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.suggestedVariableName***REMOVED***=***REMOVED***makeLegal(this.generateVariableName());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***generateFacade(inputOptions,***REMOVED***outputOptions,***REMOVED***unsetOptions,***REMOVED***pluginDriver,***REMOVED***modulesById,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***facadeChunkByModule,***REMOVED***includedNamespaces,***REMOVED***facadedModule,***REMOVED***facadeName,***REMOVED***getPlaceholder,***REMOVED***bundle,***REMOVED***inputBase,***REMOVED***snippets)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***new***REMOVED***Chunk([],***REMOVED***inputOptions,***REMOVED***outputOptions,***REMOVED***unsetOptions,***REMOVED***pluginDriver,***REMOVED***modulesById,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***facadeChunkByModule,***REMOVED***includedNamespaces,***REMOVED***null,***REMOVED***getPlaceholder,***REMOVED***bundle,***REMOVED***inputBase,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.assignFacadeName(facadeName,***REMOVED***facadedModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!facadeChunkByModule.has(facadedModule))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadeChunkByModule.set(facadedModule,***REMOVED***chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***facadedModule.getDependenciesToBeIncluded())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.dependencies.add(dependency***REMOVED***instanceof***REMOVED***Module
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chunkByModule.get(dependency)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***externalChunkByModule.get(dependency));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!chunk.dependencies.has(chunkByModule.get(facadedModule))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadedModule.info.moduleSideEffects***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadedModule.hasEffects())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.dependencies.add(chunkByModule.get(facadedModule));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.ensureReexportsAreAvailableForModule(facadedModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.facadeModule***REMOVED***=***REMOVED***facadedModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.strictFacade***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***chunk;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***canModuleBeFacade(module,***REMOVED***exposedVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleExportNamesByVariable***REMOVED***=***REMOVED***module.getExportNamesByVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***All***REMOVED***exports***REMOVED***of***REMOVED***this***REMOVED***chunk***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***exposed***REMOVED***by***REMOVED***the***REMOVED***candidate***REMOVED***module
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exposedVariable***REMOVED***of***REMOVED***this.exports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!moduleExportNamesByVariable.has(exposedVariable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Additionally,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***expose***REMOVED***namespaces***REMOVED***of***REMOVED***dynamic***REMOVED***entries***REMOVED***that***REMOVED***are***REMOVED***not***REMOVED***the***REMOVED***facade***REMOVED***module***REMOVED***and***REMOVED***exports***REMOVED***from***REMOVED***other***REMOVED***entry***REMOVED***modules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exposedVariable***REMOVED***of***REMOVED***exposedVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(exposedVariable.module***REMOVED***===***REMOVED***module***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleExportNamesByVariable.has(exposedVariable)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(exposedVariable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleExportNamesByVariable.has(exposedVariable.getBaseVariable()))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finalizeChunk(code,***REMOVED***map,***REMOVED***sourcemapFileName,***REMOVED***hashesByPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedChunkInfo***REMOVED***=***REMOVED***this.getRenderedChunkInfo();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finalize***REMOVED***=***REMOVED***(code)***REMOVED***=>***REMOVED***replacePlaceholders(code,***REMOVED***hashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preliminaryFileName***REMOVED***=***REMOVED***renderedChunkInfo.fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***(this.fileName***REMOVED***=***REMOVED***finalize(preliminaryFileName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...renderedChunkInfo,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImports:***REMOVED***renderedChunkInfo.dynamicImports.map(finalize),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedBefore:***REMOVED***renderedChunkInfo.implicitlyLoadedBefore.map(finalize),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedBindings:***REMOVED***Object.fromEntries(Object.entries(renderedChunkInfo.importedBindings).map(([fileName,***REMOVED***bindings])***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalize(fileName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***renderedChunkInfo.imports.map(finalize),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preliminaryFileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referencedFiles:***REMOVED***renderedChunkInfo.referencedFiles.map(finalize),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***generateExports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sortedExportNames***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***remainingExports***REMOVED***=***REMOVED***new***REMOVED***Set(this.exports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.facadeModule***REMOVED***!==***REMOVED***null***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.facadeModule.preserveSignature***REMOVED***!==***REMOVED***false***REMOVED***||***REMOVED***this.strictFacade))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportNamesByVariable***REMOVED***=***REMOVED***this.facadeModule.getExportNamesByVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[variable,***REMOVED***exportNames]***REMOVED***of***REMOVED***exportNamesByVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportNamesByVariable.set(variable,***REMOVED***[...exportNames]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***exportNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportsByName.set(exportName,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingExports.delete(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.outputOptions.minifyInternalExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assignExportsToMangledNames(remainingExports,***REMOVED***this.exportsByName,***REMOVED***this.exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assignExportsToNames(remainingExports,***REMOVED***this.exportsByName,***REMOVED***this.exportNamesByVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.outputOptions.preserveModules***REMOVED***||***REMOVED***(this.facadeModule***REMOVED***&&***REMOVED***this.facadeModule.info.isEntry))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportMode***REMOVED***=***REMOVED***getExportMode(this,***REMOVED***this.outputOptions,***REMOVED***this.facadeModule.id,***REMOVED***this.inputOptions.onLog);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***generateFacades()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***facades***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entryModules***REMOVED***=***REMOVED***new***REMOVED***Set([...this.entryModules,***REMOVED***...this.implicitEntryModules]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exposedVariables***REMOVED***=***REMOVED***new***REMOVED***Set(this.dynamicEntryModules.map(({***REMOVED***namespace***REMOVED***})***REMOVED***=>***REMOVED***namespace));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.preserveSignature)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportedVariable***REMOVED***of***REMOVED***module.getExportNamesByVariable().keys())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***expose***REMOVED***all***REMOVED***entry***REMOVED***exports***REMOVED***from***REMOVED***this***REMOVED***chunk
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.chunkByModule.get(exportedVariable.module)***REMOVED***===***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposedVariables.add(exportedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***requiredFacades***REMOVED***=***REMOVED***Array.from(new***REMOVED***Set(module.chunkNames.filter(({***REMOVED***isUserDefined***REMOVED***})***REMOVED***=>***REMOVED***isUserDefined).map(({***REMOVED***name***REMOVED***})***REMOVED***=>***REMOVED***name)),***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mapping***REMOVED***must***REMOVED***run***REMOVED***after***REMOVED***Set***REMOVED***'name'***REMOVED***dedupe
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requiredFacades.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***module.isUserDefinedEntryPoint)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requiredFacades.push({});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requiredFacades.push(...Array.from(module.chunkFileNames,***REMOVED***fileName***REMOVED***=>***REMOVED***({***REMOVED***fileName***REMOVED***})));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requiredFacades.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requiredFacades.push({});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.facadeModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needsStrictFacade***REMOVED***=***REMOVED***!this.outputOptions.preserveModules***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(module.preserveSignature***REMOVED***===***REMOVED***'strict'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(module.preserveSignature***REMOVED***===***REMOVED***'exports-only'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.getExportNamesByVariable().size***REMOVED***>***REMOVED***0));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!needsStrictFacade***REMOVED***||***REMOVED***this.canModuleBeFacade(module,***REMOVED***exposedVariables))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeModule***REMOVED***=***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeChunkByModule.set(module,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.preserveSignature)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.strictFacade***REMOVED***=***REMOVED***needsStrictFacade;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assignFacadeName(requiredFacades.shift(),***REMOVED***module,***REMOVED***this.outputOptions.preserveModules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***facadeName***REMOVED***of***REMOVED***requiredFacades)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facades.push(Chunk.generateFacade(this.inputOptions,***REMOVED***this.outputOptions,***REMOVED***this.unsetOptions,***REMOVED***this.pluginDriver,***REMOVED***this.modulesById,***REMOVED***this.chunkByModule,***REMOVED***this.externalChunkByModule,***REMOVED***this.facadeChunkByModule,***REMOVED***this.includedNamespaces,***REMOVED***module,***REMOVED***facadeName,***REMOVED***this.getPlaceholder,***REMOVED***this.bundle,***REMOVED***this.inputBase,***REMOVED***this.snippets));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.dynamicEntryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.info.syntheticNamedExports)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.facadeModule***REMOVED***&&***REMOVED***this.canModuleBeFacade(module,***REMOVED***exposedVariables))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeModule***REMOVED***=***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeChunkByModule.set(module,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.strictFacade***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicName***REMOVED***=***REMOVED***getChunkNameFromModule(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.facadeModule***REMOVED***===***REMOVED***module***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.strictFacade***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.canModuleBeFacade(module,***REMOVED***exposedVariables))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.strictFacade***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!this.facadeChunkByModule.get(module)?.strictFacade)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedNamespaces.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exports.add(module.namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.outputOptions.preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addNecessaryImportsForFacades();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***facades;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getChunkName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.name***REMOVED***??***REMOVED***(this.name***REMOVED***=***REMOVED***this.outputOptions.sanitizeFileName(this.getFallbackChunkName())));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getExportNames()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.sortedExportNames***REMOVED***??***REMOVED***(this.sortedExportNames***REMOVED***=***REMOVED***[...this.exportsByName.keys()].sort()));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getFileName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fileName***REMOVED***||***REMOVED***this.getPreliminaryFileName().fileName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getImportPath(importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***escapeId(getImportPath(importer,***REMOVED***this.getFileName(),***REMOVED***this.outputOptions.format***REMOVED***===***REMOVED***'amd'***REMOVED***&&***REMOVED***!this.outputOptions.amd.forceJsExtensionForImports,***REMOVED***true));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getPreliminaryFileName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.preliminaryFileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.preliminaryFileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hashPlaceholder***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***chunkFileNames,***REMOVED***entryFileNames,***REMOVED***file,***REMOVED***format,***REMOVED***preserveModules***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***node_path.basename(file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.fileName***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[pattern,***REMOVED***patternName]***REMOVED***=***REMOVED***preserveModules***REMOVED***||***REMOVED***this.facadeModule?.isUserDefinedEntryPoint
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[entryFileNames,***REMOVED***'output.entryFileNames']
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[chunkFileNames,***REMOVED***'output.chunkFileNames'];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***renderNamePattern(typeof***REMOVED***pattern***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***pattern(this.getPreRenderedChunkInfo())***REMOVED***:***REMOVED***pattern,***REMOVED***patternName,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format:***REMOVED***()***REMOVED***=>***REMOVED***format,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***size***REMOVED***=>***REMOVED***hashPlaceholder***REMOVED***||***REMOVED***(hashPlaceholder***REMOVED***=***REMOVED***this.getPlaceholder(patternName,***REMOVED***size)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***()***REMOVED***=>***REMOVED***this.getChunkName()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hashPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***makeUnique(fileName,***REMOVED***this.bundle);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName***REMOVED***=***REMOVED***this.fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hashPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.bundle[fileName]***REMOVED***=***REMOVED***FILE_PLACEHOLDER;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Caching***REMOVED***is***REMOVED***essential***REMOVED***to***REMOVED***not***REMOVED***conflict***REMOVED***with***REMOVED***the***REMOVED***file***REMOVED***name***REMOVED***reservation***REMOVED***above
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.preliminaryFileName***REMOVED***=***REMOVED***{***REMOVED***fileName,***REMOVED***hashPlaceholder***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getPreliminarySourcemapFileName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.preliminarySourcemapFileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.preliminarySourcemapFileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sourcemapFileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hashPlaceholder***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***sourcemapFileNames,***REMOVED***format***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcemapFileNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[pattern,***REMOVED***patternName]***REMOVED***=***REMOVED***[sourcemapFileNames,***REMOVED***'output.sourcemapFileNames'];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileName***REMOVED***=***REMOVED***renderNamePattern(typeof***REMOVED***pattern***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***pattern(this.getPreRenderedChunkInfo())***REMOVED***:***REMOVED***pattern,***REMOVED***patternName,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkhash:***REMOVED***()***REMOVED***=>***REMOVED***this.getPreliminaryFileName().hashPlaceholder***REMOVED***||***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format:***REMOVED***()***REMOVED***=>***REMOVED***format,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***size***REMOVED***=>***REMOVED***hashPlaceholder***REMOVED***||***REMOVED***(hashPlaceholder***REMOVED***=***REMOVED***this.getPlaceholder(patternName,***REMOVED***size)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***()***REMOVED***=>***REMOVED***this.getChunkName()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hashPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileName***REMOVED***=***REMOVED***makeUnique(sourcemapFileName,***REMOVED***this.bundle);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.preliminarySourcemapFileName***REMOVED***=***REMOVED***{***REMOVED***fileName:***REMOVED***sourcemapFileName,***REMOVED***hashPlaceholder***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getRenderedChunkInfo()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.renderedChunkInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.renderedChunkInfo;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.renderedChunkInfo***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...this.getPreRenderedChunkInfo(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImports:***REMOVED***this.getDynamicDependencies().map(resolveFileName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***this.getFileName(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedBefore:***REMOVED***Array.from(this.implicitlyLoadedBefore,***REMOVED***resolveFileName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedBindings:***REMOVED***getImportedBindingsPerDependency(this.getRenderedDependencies(),***REMOVED***resolveFileName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***Array.from(this.dependencies,***REMOVED***resolveFileName),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules:***REMOVED***this.renderedModules,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referencedFiles:***REMOVED***this.getReferencedFiles()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getVariableExportName(variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.outputOptions.preserveModules***REMOVED***&&***REMOVED***variable***REMOVED***instanceof***REMOVED***NamespaceVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'*';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.exportNamesByVariable.get(variable)[0];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***link()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dependencies***REMOVED***=***REMOVED***getStaticDependencies(this,***REMOVED***this.orderedModules,***REMOVED***this.chunkByModule,***REMOVED***this.externalChunkByModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addImplicitlyLoadedBeforeFromModule(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setUpChunkImportsAndExportsForModule(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***render()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dependencies,***REMOVED***exportMode,***REMOVED***facadeModule,***REMOVED***inputOptions:***REMOVED***{***REMOVED***onLog***REMOVED***},***REMOVED***outputOptions,***REMOVED***pluginDriver,***REMOVED***snippets***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***format,***REMOVED***hoistTransitiveImports,***REMOVED***preserveModules***REMOVED***}***REMOVED***=***REMOVED***outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***static***REMOVED***and***REMOVED***dynamic***REMOVED***entry***REMOVED***points,***REMOVED***add***REMOVED***transitive***REMOVED***dependencies***REMOVED***to***REMOVED***this
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***chunk's***REMOVED***dependencies***REMOVED***to***REMOVED***avoid***REMOVED***loading***REMOVED***latency
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hoistTransitiveImports***REMOVED***&&***REMOVED***!preserveModules***REMOVED***&&***REMOVED***facadeModule***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dep***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dep***REMOVED***instanceof***REMOVED***Chunk)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inlineChunkDependencies(dep);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preliminaryFileName***REMOVED***=***REMOVED***this.getPreliminaryFileName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preliminarySourcemapFileName***REMOVED***=***REMOVED***this.getPreliminarySourcemapFileName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***indent,***REMOVED***magicString,***REMOVED***renderedSource,***REMOVED***usedModules,***REMOVED***usesTopLevelAwait***REMOVED***}***REMOVED***=***REMOVED***this.renderModules(preliminaryFileName.fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedDependencies***REMOVED***=***REMOVED***[...this.getRenderedDependencies().values()];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedExports***REMOVED***=***REMOVED***exportMode***REMOVED***===***REMOVED***'none'***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***this.getChunkExportDeclarations(format);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasExports***REMOVED***=***REMOVED***renderedExports.length***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasDefaultExport***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***renderedDependence***REMOVED***of***REMOVED***renderedDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***reexports***REMOVED***}***REMOVED***=***REMOVED***renderedDependence;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reexports?.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasExports***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasDefaultExport***REMOVED***&&***REMOVED***reexports.some(reexport***REMOVED***=>***REMOVED***reexport.reexported***REMOVED***===***REMOVED***'default'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDefaultExport***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'es')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedDependence.reexports***REMOVED***=***REMOVED***reexports.filter(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-array-some
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***reexported***REMOVED***})***REMOVED***=>***REMOVED***!renderedExports.find(({***REMOVED***exported***REMOVED***})***REMOVED***=>***REMOVED***exported***REMOVED***===***REMOVED***reexported));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasDefaultExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***exported***REMOVED***}***REMOVED***of***REMOVED***renderedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exported***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDefaultExport***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***intro,***REMOVED***outro,***REMOVED***banner,***REMOVED***footer***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***createAddons(outputOptions,***REMOVED***pluginDriver,***REMOVED***this.getRenderedChunkInfo());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalisers[format](renderedSource,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedGlobals,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies:***REMOVED***renderedDependencies,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***renderedExports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDefaultExport,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasExports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***preliminaryFileName.fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***intro,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEntryFacade:***REMOVED***preserveModules***REMOVED***||***REMOVED***(facadeModule***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***facadeModule.info.isEntry),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isModuleFacade:***REMOVED***facadeModule***REMOVED***!==***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log:***REMOVED***onLog,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namedExportsMode:***REMOVED***exportMode***REMOVED***!==***REMOVED***'default',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outro,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***snippets,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usesTopLevelAwait
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***outputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(banner)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(banner);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(footer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.append(footer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preliminaryFileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preliminarySourcemapFileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedModules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addImplicitlyLoadedBeforeFromModule(baseModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***chunkByModule,***REMOVED***implicitlyLoadedBefore***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***baseModule.implicitlyLoadedBefore)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***chunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***&&***REMOVED***chunk***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedBefore.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addNecessaryImportsForFacades()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[module,***REMOVED***variables]***REMOVED***of***REMOVED***this.includedReexportsByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.includedNamespaces.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***variables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.imports.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***assignFacadeName({***REMOVED***fileName,***REMOVED***name***REMOVED***},***REMOVED***facadedModule,***REMOVED***preservePath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fileName***REMOVED***=***REMOVED***fileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***this.outputOptions.sanitizeFileName(name***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(preservePath
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.getPreserveModulesChunkNameFromModule(facadedModule)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***getChunkNameFromModule(facadedModule)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***checkCircularDependencyImport(variable,***REMOVED***importingModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variableModule***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variableModule***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportChunk***REMOVED***=***REMOVED***this.chunkByModule.get(variableModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***alternativeReexportModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alternativeReexportModule***REMOVED***=***REMOVED***importingModule.alternativeReexportModules.get(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(alternativeReexportModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportingChunk***REMOVED***=***REMOVED***this.chunkByModule.get(alternativeReexportModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportingChunk***REMOVED***!==***REMOVED***exportChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputOptions.onLog(LOGLEVEL_WARN,***REMOVED***logCyclicCrossChunkReexport(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Namespaces***REMOVED***do***REMOVED***not***REMOVED***have***REMOVED***an***REMOVED***export***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variableModule.getExportNamesByVariable().get(variable)?.[0]***REMOVED***||***REMOVED***'*',***REMOVED***variableModule.id,***REMOVED***alternativeReexportModule.id,***REMOVED***importingModule.id,***REMOVED***this.outputOptions.preserveModules));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importingModule***REMOVED***=***REMOVED***alternativeReexportModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(alternativeReexportModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ensureReexportsAreAvailableForModule(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***includedReexports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***module.getExportNamesByVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportedVariable***REMOVED***of***REMOVED***map.keys())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSynthetic***REMOVED***=***REMOVED***exportedVariable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedVariable***REMOVED***=***REMOVED***isSynthetic***REMOVED***?***REMOVED***exportedVariable.getBaseVariable()***REMOVED***:***REMOVED***exportedVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkCircularDependencyImport(importedVariable,***REMOVED***module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***preserving***REMOVED***modules,***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***create***REMOVED***namespace***REMOVED***objects***REMOVED***but***REMOVED***directly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***the***REMOVED***actual***REMOVED***namespaces,***REMOVED***which***REMOVED***would***REMOVED***be***REMOVED***broken***REMOVED***by***REMOVED***this***REMOVED***logic.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(importedVariable***REMOVED***instanceof***REMOVED***NamespaceVariable***REMOVED***&&***REMOVED***this.outputOptions.preserveModules))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportingModule***REMOVED***=***REMOVED***importedVariable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportingModule***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***this.chunkByModule.get(exportingModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***&&***REMOVED***chunk***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.exports.add(importedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedReexports.push(importedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSynthetic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.imports.add(importedVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedReexports.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedReexportsByModule.set(module,***REMOVED***includedReexports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***generateVariableName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.manualChunkAlias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.manualChunkAlias;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleForNaming***REMOVED***=***REMOVED***this.entryModules[0]***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules[0]***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dynamicEntryModules[0]***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.orderedModules[this.orderedModules.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moduleForNaming)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChunkNameFromModule(moduleForNaming);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'chunk';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getChunkExportDeclarations(format)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***this.getExportNames())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportName[0]***REMOVED***===***REMOVED***'*')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.exportsByName.get(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(variable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***this.chunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!chunk***REMOVED***||***REMOVED***format***REMOVED***!==***REMOVED***'es')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkDep***REMOVED***=***REMOVED***this.renderedDependencies.get(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!chunkDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***imports,***REMOVED***reexports***REMOVED***}***REMOVED***=***REMOVED***chunkDep;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedByReexported***REMOVED***=***REMOVED***reexports?.find(({***REMOVED***reexported***REMOVED***})***REMOVED***=>***REMOVED***reexported***REMOVED***===***REMOVED***exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImported***REMOVED***=***REMOVED***imports?.find(({***REMOVED***imported***REMOVED***})***REMOVED***=>***REMOVED***imported***REMOVED***===***REMOVED***importedByReexported?.imported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isImported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***expression***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hoisted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***local***REMOVED***=***REMOVED***variable.getName(this.snippets.getPropertyAccess);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***LocalVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declaration***REMOVED***of***REMOVED***variable.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.parent***REMOVED***instanceof***REMOVED***FunctionDeclaration***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(declaration***REMOVED***instanceof***REMOVED***ExportDefaultDeclaration***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.declaration***REMOVED***instanceof***REMOVED***FunctionDeclaration))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoisted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression***REMOVED***=***REMOVED***local;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***===***REMOVED***'es')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***local***REMOVED***=***REMOVED***variable.renderName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exported:***REMOVED***exportName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expression,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoisted,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exports;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getDependenciesToBeDeconflicted(addNonNamespacesAndInteropHelpers,***REMOVED***addDependenciesWithoutBindings,***REMOVED***interop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deconflictedDefault***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deconflictedNamespace***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***[...this.exportNamesByVariable.keys(),***REMOVED***...this.imports])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addNonNamespacesAndInteropHelpers***REMOVED***||***REMOVED***variable.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***this.externalChunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addNonNamespacesAndInteropHelpers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.name***REMOVED***===***REMOVED***'default')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultInteropHelpersByInteropType[interop(module.id)])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deconflictedDefault.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(variable.name***REMOVED***===***REMOVED***'*'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceInteropHelpersByInteropType[interop(module.id)])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deconflictedNamespace.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***this.chunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addNonNamespacesAndInteropHelpers***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.exportMode***REMOVED***===***REMOVED***'default'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable.isNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deconflictedNamespace.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(addDependenciesWithoutBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***this.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***deconflictedDefault,***REMOVED***deconflictedNamespace,***REMOVED***dependencies***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getDynamicDependencies()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getIncludedDynamicImports()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(resolvedDynamicImport***REMOVED***=>***REMOVED***resolvedDynamicImport.facadeChunk***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedDynamicImport.chunk***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedDynamicImport.externalChunk***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedDynamicImport.resolution)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter((resolution)***REMOVED***=>***REMOVED***resolution***REMOVED***!==***REMOVED***this***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(resolution***REMOVED***instanceof***REMOVED***Chunk***REMOVED***||***REMOVED***resolution***REMOVED***instanceof***REMOVED***ExternalChunk));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getDynamicImportStringAndAssertions(resolution,***REMOVED***fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolution***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***this.externalChunkByModule.get(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[`'${chunk.getImportPath(fileName)}'`,***REMOVED***chunk.getImportAssertions(this.snippets)];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution***REMOVED***||***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.outputOptions.format***REMOVED***===***REMOVED***'es'***REMOVED***&&***REMOVED***this.outputOptions.externalImportAssertions)***REMOVED***||***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getFallbackChunkName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.manualChunkAlias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.manualChunkAlias;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.dynamicName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.dynamicName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getAliasName(this.fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getAliasName(this.orderedModules[this.orderedModules.length***REMOVED***-***REMOVED***1].id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getImportSpecifiers()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***interop***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importsByDependency***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***this.imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dependency;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***imported;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency***REMOVED***=***REMOVED***this.externalChunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***variable.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***!==***REMOVED***'default'***REMOVED***&&***REMOVED***imported***REMOVED***!==***REMOVED***'*'***REMOVED***&&***REMOVED***interop(module.id)***REMOVED***===***REMOVED***'defaultOnly')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logUnexpectedNamedImport(module.id,***REMOVED***imported,***REMOVED***false));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency***REMOVED***=***REMOVED***this.chunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***dependency.getVariableExportName(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(importsByDependency,***REMOVED***dependency,***REMOVED***getNewArray).push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***variable.getName(this.snippets.getPropertyAccess)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***importsByDependency;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getIncludedDynamicImports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.includedDynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.includedDynamicImports;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***includedDynamicImports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***node,***REMOVED***resolution***REMOVED***}***REMOVED***of***REMOVED***module.dynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedDynamicImports.push(resolution***REMOVED***instanceof***REMOVED***Module
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk:***REMOVED***this.chunkByModule.get(resolution),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalChunk:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadeChunk:***REMOVED***this.facadeChunkByModule.get(resolution),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***resolution***REMOVED***instanceof***REMOVED***ExternalModule
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalChunk:***REMOVED***this.externalChunkByModule.get(resolution),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadeChunk:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{***REMOVED***chunk:***REMOVED***null,***REMOVED***externalChunk:***REMOVED***null,***REMOVED***facadeChunk:***REMOVED***null,***REMOVED***node,***REMOVED***resolution***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.includedDynamicImports***REMOVED***=***REMOVED***includedDynamicImports);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getPreRenderedChunkInfo()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.preRenderedChunkInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.preRenderedChunkInfo;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dynamicEntryModules,***REMOVED***facadeModule,***REMOVED***implicitEntryModules,***REMOVED***orderedModules***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.preRenderedChunkInfo***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***this.getExportNames(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facadeModuleId:***REMOVED***facadeModule***REMOVED***&&***REMOVED***facadeModule.id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isDynamicEntry:***REMOVED***dynamicEntryModules.length***REMOVED***>***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEntry:***REMOVED***!!facadeModule?.info.isEntry,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isImplicitEntry:***REMOVED***implicitEntryModules.length***REMOVED***>***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleIds:***REMOVED***orderedModules.map(({***REMOVED***id***REMOVED***})***REMOVED***=>***REMOVED***id),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***this.getChunkName(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'chunk'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getPreserveModulesChunkNameFromModule(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***predefinedChunkName***REMOVED***=***REMOVED***getPredefinedChunkNameFromModule(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(predefinedChunkName)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***predefinedChunkName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***preserveModulesRoot,***REMOVED***sanitizeFileName***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sanitizedId***REMOVED***=***REMOVED***sanitizeFileName(normalize(module.id.split(QUERY_HASH_REGEX,***REMOVED***1)[0]));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extensionName***REMOVED***=***REMOVED***node_path.extname(sanitizedId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idWithoutExtension***REMOVED***=***REMOVED***NON_ASSET_EXTENSIONS.has(extensionName)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***sanitizedId.slice(0,***REMOVED***-extensionName.length)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***sanitizedId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAbsolute(idWithoutExtension))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***preserveModulesRoot***REMOVED***&&***REMOVED***node_path.resolve(idWithoutExtension).startsWith(preserveModulesRoot)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***idWithoutExtension.slice(preserveModulesRoot.length).replace(/^[/\\]/,***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***relative(this.inputBase,***REMOVED***idWithoutExtension);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`_virtual/${node_path.basename(idWithoutExtension)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReexportSpecifiers()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***externalLiveBindings,***REMOVED***interop***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reexportSpecifiers***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***exportName***REMOVED***of***REMOVED***this.getExportNames())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dependency;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***imported;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***needsLiveBinding***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportName[0]***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***exportName.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interop(id)***REMOVED***===***REMOVED***'defaultOnly')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputOptions.onLog(LOGLEVEL_WARN,***REMOVED***logUnexpectedNamespaceReexport(id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsLiveBinding***REMOVED***=***REMOVED***externalLiveBindings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency***REMOVED***=***REMOVED***this.externalChunkByModule.get(this.modulesById.get(id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***exportName***REMOVED***=***REMOVED***'*';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***this.exportsByName.get(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***variable.module;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency***REMOVED***=***REMOVED***this.chunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency***REMOVED***===***REMOVED***this)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***dependency.getVariableExportName(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsLiveBinding***REMOVED***=***REMOVED***variable.isReassigned;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency***REMOVED***=***REMOVED***this.externalChunkByModule.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***variable.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***!==***REMOVED***'default'***REMOVED***&&***REMOVED***imported***REMOVED***!==***REMOVED***'*'***REMOVED***&&***REMOVED***interop(module.id)***REMOVED***===***REMOVED***'defaultOnly')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logUnexpectedNamedImport(module.id,***REMOVED***imported,***REMOVED***true));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsLiveBinding***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalLiveBindings***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(imported***REMOVED***!==***REMOVED***'default'***REMOVED***||***REMOVED***isDefaultAProperty(interop(module.id),***REMOVED***true));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(reexportSpecifiers,***REMOVED***dependency,***REMOVED***getNewArray).push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsLiveBinding,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexported:***REMOVED***exportName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reexportSpecifiers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getReferencedFiles()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***referencedFiles***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***meta***REMOVED***of***REMOVED***module.importMetas)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***meta.getReferencedFileName(this.pluginDriver);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referencedFiles.add(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...referencedFiles];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getRenderedDependencies()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.renderedDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.renderedDependencies;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importSpecifiers***REMOVED***=***REMOVED***this.getImportSpecifiers();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reexportSpecifiers***REMOVED***=***REMOVED***this.getReexportSpecifiers();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedDependencies***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***this.getFileName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dep***REMOVED***of***REMOVED***this.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imports***REMOVED***=***REMOVED***importSpecifiers.get(dep)***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reexports***REMOVED***=***REMOVED***reexportSpecifiers.get(dep)***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***namedExportsMode***REMOVED***=***REMOVED***dep***REMOVED***instanceof***REMOVED***ExternalChunk***REMOVED***||***REMOVED***dep.exportMode***REMOVED***!==***REMOVED***'default';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***dep.getImportPath(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedDependencies.set(dep,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertions:***REMOVED***dep***REMOVED***instanceof***REMOVED***ExternalChunk***REMOVED***?***REMOVED***dep.getImportAssertions(this.snippets)***REMOVED***:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultVariableName:***REMOVED***dep.defaultVariableName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalName:***REMOVED***dep***REMOVED***instanceof***REMOVED***ExternalChunk***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.outputOptions.format***REMOVED***===***REMOVED***'umd'***REMOVED***||***REMOVED***this.outputOptions.format***REMOVED***===***REMOVED***'iife')***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getGlobalName(dep,***REMOVED***this.outputOptions.globals,***REMOVED***(imports***REMOVED***||***REMOVED***reexports)***REMOVED***!==***REMOVED***null,***REMOVED***this.inputOptions.onLog),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isChunk:***REMOVED***dep***REMOVED***instanceof***REMOVED***Chunk,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***dep.variableName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namedExportsMode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceVariableName:***REMOVED***dep.namespaceVariableName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reexports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.renderedDependencies***REMOVED***=***REMOVED***renderedDependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***inlineChunkDependencies(chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dep***REMOVED***of***REMOVED***chunk.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.dependencies.has(dep))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dependencies.add(dep);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dep***REMOVED***instanceof***REMOVED***Chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inlineChunkDependencies(dep);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***method***REMOVED***changes***REMOVED***properties***REMOVED***on***REMOVED***the***REMOVED***AST***REMOVED***before***REMOVED***rendering***REMOVED***and***REMOVED***must***REMOVED***not***REMOVED***be***REMOVED***async
***REMOVED******REMOVED******REMOVED******REMOVED***renderModules(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***accessedGlobalsByScope,***REMOVED***dependencies,***REMOVED***exportNamesByVariable,***REMOVED***includedNamespaces,***REMOVED***inputOptions:***REMOVED***{***REMOVED***onLog***REMOVED***},***REMOVED***isEmpty,***REMOVED***orderedModules,***REMOVED***outputOptions,***REMOVED***pluginDriver,***REMOVED***renderedModules,***REMOVED***snippets***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***compact,***REMOVED***dynamicImportFunction,***REMOVED***format,***REMOVED***freeze,***REMOVED***namespaceToStringTag***REMOVED***}***REMOVED***=***REMOVED***outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***cnst,***REMOVED***n***REMOVED***}***REMOVED***=***REMOVED***snippets;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setDynamicImportResolutions(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setImportMetaResolutions(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setIdentifierRenderResolutions();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***magicString***REMOVED***=***REMOVED***new***REMOVED***Bundle$1({***REMOVED***separator:***REMOVED***`${n}${n}`***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***indent***REMOVED***=***REMOVED***getIndentString(orderedModules,***REMOVED***outputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hoistedSource***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessedGlobals***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedModuleSources***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedDocumentCurrentScript:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportFunction,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportNamesByVariable,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***freeze,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceToStringTag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginDriver,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***snippets,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***useOriginalName:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***usesTopLevelAwait***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***renderedLength***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.isIncluded()***REMOVED***||***REMOVED***includedNamespaces.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rendered***REMOVED***=***REMOVED***module.render(renderOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!renderOptions.accessedDocumentCurrentScript***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formatsMaybeAccessDocumentCurrentScript.includes(format))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.accessedGlobalsByScope.get(module.scope)?.delete(DOCUMENT_CURRENT_SCRIPT);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderOptions.accessedDocumentCurrentScript***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***source***REMOVED***}***REMOVED***=***REMOVED***rendered);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usesTopLevelAwait***REMOVED***||***REMOVED***(usesTopLevelAwait***REMOVED***=***REMOVED***rendered.usesTopLevelAwait);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedLength***REMOVED***=***REMOVED***source.length();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderedLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(compact***REMOVED***&&***REMOVED***source.lastLine().includes('//'))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source.append('\n');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedModuleSources.set(module,***REMOVED***source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.addSource(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***namespace***REMOVED***=***REMOVED***module.namespace;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedNamespaces.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rendered***REMOVED***=***REMOVED***namespace.renderBlock(renderOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace.renderFirst())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistedSource***REMOVED***+=***REMOVED***n***REMOVED***+***REMOVED***rendered;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.addSource(new***REMOVED***MagicString(rendered));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessedGlobalVariables***REMOVED***=***REMOVED***accessedGlobalsByScope.get(module.scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessedGlobalVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***accessedGlobalVariables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessedGlobals.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***renderedExports,***REMOVED***removedExports***REMOVED***}***REMOVED***=***REMOVED***module.getRenderedExports();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedModules[module.id]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***code()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source?.toString()***REMOVED***??***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLength:***REMOVED***module.originalCode.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removedExports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedExports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedLength
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hoistedSource)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(hoistedSource***REMOVED***+***REMOVED***n***REMOVED***+***REMOVED***n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/consistent-destructuring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.needsExportsShim)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***magicString.prepend(`${n}${cnst}***REMOVED***${MISSING_EXPORT_SHIM_VARIABLE}${_}=${_}void***REMOVED***0;${n}${n}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedSource***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***magicString***REMOVED***:***REMOVED***magicString.trim();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isEmpty***REMOVED***&&***REMOVED***this.getExportNames().length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***dependencies.size***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onLog(LOGLEVEL_WARN,***REMOVED***logEmptyChunk(this.getChunkName()));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***accessedGlobals,***REMOVED***indent,***REMOVED***magicString,***REMOVED***renderedSource,***REMOVED***usedModules,***REMOVED***usesTopLevelAwait***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setDynamicImportResolutions(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***accessedGlobalsByScope,***REMOVED***outputOptions,***REMOVED***pluginDriver,***REMOVED***snippets***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***resolvedDynamicImport***REMOVED***of***REMOVED***this.getIncludedDynamicImports())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolvedDynamicImport.chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***chunk,***REMOVED***facadeChunk,***REMOVED***node,***REMOVED***resolution***REMOVED***}***REMOVED***=***REMOVED***resolvedDynamicImport;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***===***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setInternalResolution(resolution.namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setExternalResolution((facadeChunk***REMOVED***||***REMOVED***chunk).exportMode,***REMOVED***resolution,***REMOVED***outputOptions,***REMOVED***snippets,***REMOVED***pluginDriver,***REMOVED***accessedGlobalsByScope,***REMOVED***`'${(facadeChunk***REMOVED***||***REMOVED***chunk).getImportPath(fileName)}'`,***REMOVED***!facadeChunk?.strictFacade***REMOVED***&&***REMOVED***chunk.exportNamesByVariable.get(resolution.namespace)[0],***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***node,***REMOVED***resolution***REMOVED***}***REMOVED***=***REMOVED***resolvedDynamicImport;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[resolutionString,***REMOVED***assertions]***REMOVED***=***REMOVED***this.getDynamicImportStringAndAssertions(resolution,***REMOVED***fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setExternalResolution('external',***REMOVED***resolution,***REMOVED***outputOptions,***REMOVED***snippets,***REMOVED***pluginDriver,***REMOVED***accessedGlobalsByScope,***REMOVED***resolutionString,***REMOVED***false,***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setIdentifierRenderResolutions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***format,***REMOVED***interop,***REMOVED***namespaceToStringTag,***REMOVED***preserveModules,***REMOVED***externalLiveBindings***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***syntheticExports***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***exportName***REMOVED***of***REMOVED***this.getExportNames())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportVariable***REMOVED***=***REMOVED***this.exportsByName.get(exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***!==***REMOVED***'es'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format***REMOVED***!==***REMOVED***'system'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportVariable.isReassigned***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!exportVariable.isId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportVariable.setRenderNames('exports',***REMOVED***exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(exportVariable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticExports.add(exportVariable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportVariable.setRenderNames(null,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.needsExportShim)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.needsExportsShim***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usedNames***REMOVED***=***REMOVED***new***REMOVED***Set(['Object',***REMOVED***'Promise']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.needsExportsShim)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add(MISSING_EXPORT_SHIM_VARIABLE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespaceToStringTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add('Symbol');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(format)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'system':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add('module').add('exports');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'es':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'cjs':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add('module').add('require').add('__filename').add('__dirname');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fallthrough
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add('exports');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***helper***REMOVED***of***REMOVED***HELPER_NAMES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usedNames.add(helper);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deconflictChunk(this.orderedModules,***REMOVED***this.getDependenciesToBeDeconflicted(format***REMOVED***!==***REMOVED***'es'***REMOVED***&&***REMOVED***format***REMOVED***!==***REMOVED***'system',***REMOVED***format***REMOVED***===***REMOVED***'amd'***REMOVED***||***REMOVED***format***REMOVED***===***REMOVED***'umd'***REMOVED***||***REMOVED***format***REMOVED***===***REMOVED***'iife',***REMOVED***interop),***REMOVED***this.imports,***REMOVED***usedNames,***REMOVED***format,***REMOVED***interop,***REMOVED***preserveModules,***REMOVED***externalLiveBindings,***REMOVED***this.chunkByModule,***REMOVED***this.externalChunkByModule,***REMOVED***syntheticExports,***REMOVED***this.exportNamesByVariable,***REMOVED***this.accessedGlobalsByScope,***REMOVED***this.includedNamespaces);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setImportMetaResolutions(fileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***accessedGlobalsByScope,***REMOVED***includedNamespaces,***REMOVED***orderedModules,***REMOVED***outputOptions:***REMOVED***{***REMOVED***format***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***orderedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***importMeta***REMOVED***of***REMOVED***module.importMetas)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importMeta.setResolution(format,***REMOVED***accessedGlobalsByScope,***REMOVED***fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(includedNamespaces.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.namespace.prepare(accessedGlobalsByScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setUpChunkImportsAndExportsForModule(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleImports***REMOVED***=***REMOVED***new***REMOVED***Set(module.includedImports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***we***REMOVED***are***REMOVED***not***REMOVED***preserving***REMOVED***modules,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***make***REMOVED***all***REMOVED***namespace***REMOVED***variables***REMOVED***available***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***rendering***REMOVED***the***REMOVED***namespace***REMOVED***object
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.outputOptions.preserveModules***REMOVED***&&***REMOVED***this.includedNamespaces.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberVariables***REMOVED***=***REMOVED***module.namespace.getMemberVariables();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***variable***REMOVED***of***REMOVED***Object.values(memberVariables))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleImports.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***variable***REMOVED***of***REMOVED***moduleImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***ExportDefaultVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***variable.getOriginalVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable***REMOVED***instanceof***REMOVED***SyntheticNamedExportVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***variable.getBaseVariable();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***this.chunkByModule.get(variable.module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.imports.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variable.module***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkCircularDependencyImport(variable,***REMOVED***module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***preserving***REMOVED***modules,***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***create***REMOVED***namespace***REMOVED***objects***REMOVED***but***REMOVED***directly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***the***REMOVED***actual***REMOVED***namespaces,***REMOVED***which***REMOVED***would***REMOVED***be***REMOVED***broken***REMOVED***by***REMOVED***this***REMOVED***logic.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(variable***REMOVED***instanceof***REMOVED***NamespaceVariable***REMOVED***&&***REMOVED***this.outputOptions.preserveModules))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.exports.add(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.includedNamespaces.has(module)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(module.info.isEntry***REMOVED***&&***REMOVED***module.preserveSignature***REMOVED***!==***REMOVED***false)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.includedDynamicImporters.some(importer***REMOVED***=>***REMOVED***this.chunkByModule.get(importer)***REMOVED***!==***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ensureReexportsAreAvailableForModule(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***node,***REMOVED***resolution***REMOVED***}***REMOVED***of***REMOVED***module.dynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.included***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution***REMOVED***instanceof***REMOVED***Module***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.chunkByModule.get(resolution)***REMOVED***===***REMOVED***this***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.includedNamespaces.has(resolution))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedNamespaces.add(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ensureReexportsAreAvailableForModule(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getChunkNameFromModule(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getPredefinedChunkNameFromModule(module)***REMOVED***??***REMOVED***getAliasName(module.id);
}
function***REMOVED***getPredefinedChunkNameFromModule(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(module.chunkNames.find(({***REMOVED***isUserDefined***REMOVED***})***REMOVED***=>***REMOVED***isUserDefined)?.name***REMOVED***??***REMOVED***module.chunkNames[0]?.name);
}
function***REMOVED***getImportedBindingsPerDependency(renderedDependencies,***REMOVED***resolveFileName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedBindingsPerDependency***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[dependency,***REMOVED***declaration]***REMOVED***of***REMOVED***renderedDependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifiers***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***imported***REMOVED***}***REMOVED***of***REMOVED***declaration.imports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers.add(imported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***imported***REMOVED***}***REMOVED***of***REMOVED***declaration.reexports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers.add(imported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedBindingsPerDependency[resolveFileName(dependency)]***REMOVED***=***REMOVED***[...specifiers];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***importedBindingsPerDependency;
}
const***REMOVED***QUERY_HASH_REGEX***REMOVED***=***REMOVED***/[#?]/;
const***REMOVED***resolveFileName***REMOVED***=***REMOVED***(dependency)***REMOVED***=>***REMOVED***dependency.getFileName();

/**
***REMOVED*******REMOVED***Concatenate***REMOVED***a***REMOVED***number***REMOVED***of***REMOVED***iterables***REMOVED***to***REMOVED***a***REMOVED***new***REMOVED***iterable***REMOVED***without***REMOVED***fully***REMOVED***evaluating
***REMOVED*******REMOVED***their***REMOVED***iterators.***REMOVED***Useful***REMOVED***when***REMOVED***e.g.***REMOVED***working***REMOVED***with***REMOVED***large***REMOVED***sets***REMOVED***or***REMOVED***lists***REMOVED***and***REMOVED***when
***REMOVED*******REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***chance***REMOVED***that***REMOVED***the***REMOVED***iterators***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***fully***REMOVED***exhausted.
***REMOVED****/
function****REMOVED***concatLazy(iterables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***iterable***REMOVED***of***REMOVED***iterables)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield****REMOVED***iterable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

/**
***REMOVED*******REMOVED***At***REMOVED***its***REMOVED***core,***REMOVED***the***REMOVED***algorithm***REMOVED***first***REMOVED***starts***REMOVED***from***REMOVED***each***REMOVED***static***REMOVED***or***REMOVED***dynamic***REMOVED***entry
***REMOVED*******REMOVED***point***REMOVED***and***REMOVED***then***REMOVED***assigns***REMOVED***that***REMOVED***entry***REMOVED***point***REMOVED***to***REMOVED***all***REMOVED***modules***REMOVED***than***REMOVED***can***REMOVED***be***REMOVED***reached
***REMOVED*******REMOVED***via***REMOVED***static***REMOVED***imports.***REMOVED***We***REMOVED***call***REMOVED***this***REMOVED***the***REMOVED****dependent***REMOVED***entry***REMOVED***points****REMOVED***of***REMOVED***that
***REMOVED*******REMOVED***module.
***REMOVED****
***REMOVED*******REMOVED***Then***REMOVED***we***REMOVED***group***REMOVED***all***REMOVED***modules***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***into***REMOVED***chunks
***REMOVED*******REMOVED***as***REMOVED***those***REMOVED***modules***REMOVED***will***REMOVED***always***REMOVED***be***REMOVED***loaded***REMOVED***together.
***REMOVED****
***REMOVED*******REMOVED***One***REMOVED***non-trivial***REMOVED***optimization***REMOVED***we***REMOVED***can***REMOVED***apply***REMOVED***is***REMOVED***that***REMOVED***dynamic***REMOVED***entries***REMOVED***are
***REMOVED*******REMOVED***different***REMOVED***from***REMOVED***static***REMOVED***entries***REMOVED***in***REMOVED***so***REMOVED***far***REMOVED***as***REMOVED***when***REMOVED***a***REMOVED***dynamic***REMOVED***import***REMOVED***occurs,
***REMOVED*******REMOVED***some
***REMOVED*******REMOVED***modules***REMOVED***are***REMOVED***already***REMOVED***in***REMOVED***memory.***REMOVED***If***REMOVED***some***REMOVED***of***REMOVED***these***REMOVED***modules***REMOVED***are***REMOVED***also
***REMOVED*******REMOVED***dependencies
***REMOVED*******REMOVED***of***REMOVED***the***REMOVED***dynamic***REMOVED***entry,***REMOVED***then***REMOVED***it***REMOVED***does***REMOVED***not***REMOVED***make***REMOVED***sense***REMOVED***to***REMOVED***create***REMOVED***a***REMOVED***separate***REMOVED***chunk
***REMOVED*******REMOVED***for***REMOVED***them.***REMOVED***Instead,***REMOVED***the***REMOVED***dynamic***REMOVED***import***REMOVED***target***REMOVED***can***REMOVED***load***REMOVED***them***REMOVED***from***REMOVED***the
***REMOVED*******REMOVED***importing
***REMOVED*******REMOVED***chunk.
***REMOVED****
***REMOVED*******REMOVED***With***REMOVED***regard***REMOVED***to***REMOVED***chunking,***REMOVED***if***REMOVED***B***REMOVED***is***REMOVED***implicitly***REMOVED***loaded***REMOVED***after***REMOVED***A,***REMOVED***then***REMOVED***this***REMOVED***can***REMOVED***be
***REMOVED*******REMOVED***handled***REMOVED***the***REMOVED***same***REMOVED***way***REMOVED***as***REMOVED***if***REMOVED***there***REMOVED***was***REMOVED***a***REMOVED***dynamic***REMOVED***import***REMOVED***A***REMOVED***=>***REMOVED***B.
***REMOVED****
***REMOVED*******REMOVED***Example:
***REMOVED*******REMOVED***Assume***REMOVED***A***REMOVED***->***REMOVED***B***REMOVED***(A***REMOVED***imports***REMOVED***B),***REMOVED***A***REMOVED***=>***REMOVED***C***REMOVED***(A***REMOVED***dynamically***REMOVED***imports***REMOVED***C)***REMOVED***and***REMOVED***C***REMOVED***->***REMOVED***B.
***REMOVED*******REMOVED***Then***REMOVED***the***REMOVED***initial***REMOVED***algorithm***REMOVED***would***REMOVED***assign***REMOVED***A***REMOVED***into***REMOVED***the***REMOVED***A***REMOVED***chunk,***REMOVED***C***REMOVED***into***REMOVED***the***REMOVED***C
***REMOVED*******REMOVED***chunk***REMOVED***and***REMOVED***B***REMOVED***into***REMOVED***the***REMOVED***AC***REMOVED***chunk,***REMOVED***i.e.***REMOVED***the***REMOVED***chunk***REMOVED***with***REMOVED***the***REMOVED***dependent***REMOVED***entry
***REMOVED*******REMOVED***points
***REMOVED*******REMOVED***A***REMOVED***and***REMOVED***C.
***REMOVED*******REMOVED***However***REMOVED***we***REMOVED***know***REMOVED***that***REMOVED***C***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***loaded***REMOVED***from***REMOVED***A,***REMOVED***so***REMOVED***A***REMOVED***and***REMOVED***its***REMOVED***dependency***REMOVED***B
***REMOVED*******REMOVED***must***REMOVED***already***REMOVED***be***REMOVED***in***REMOVED***memory***REMOVED***when***REMOVED***C***REMOVED***is***REMOVED***loaded.***REMOVED***So***REMOVED***it***REMOVED***is***REMOVED***enough***REMOVED***to***REMOVED***create***REMOVED***only
***REMOVED*******REMOVED***two***REMOVED***chunks***REMOVED***A***REMOVED***containing***REMOVED***[AB]***REMOVED***and***REMOVED***C***REMOVED***containing***REMOVED***[C].
***REMOVED****
***REMOVED*******REMOVED***So***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***assign***REMOVED***the***REMOVED***dynamic***REMOVED***entry***REMOVED***C***REMOVED***as***REMOVED***dependent***REMOVED***entry***REMOVED***point***REMOVED***to***REMOVED***modules
***REMOVED*******REMOVED***that***REMOVED***are***REMOVED***already***REMOVED***loaded.
***REMOVED****
***REMOVED*******REMOVED***In***REMOVED***a***REMOVED***more***REMOVED***complex***REMOVED***example,***REMOVED***let***REMOVED***us***REMOVED***assume***REMOVED***that***REMOVED***we***REMOVED***have***REMOVED***entry***REMOVED***points***REMOVED***X***REMOVED***and***REMOVED***Y.
***REMOVED*******REMOVED***Further,***REMOVED***let***REMOVED***us***REMOVED***assume
***REMOVED*******REMOVED***X***REMOVED***->***REMOVED***A,***REMOVED***X***REMOVED***->***REMOVED***B,***REMOVED***X***REMOVED***->***REMOVED***C,
***REMOVED*******REMOVED***Y***REMOVED***->***REMOVED***A,***REMOVED***Y***REMOVED***->***REMOVED***B,
***REMOVED*******REMOVED***A***REMOVED***=>***REMOVED***D,
***REMOVED*******REMOVED***D***REMOVED***->***REMOVED***B,***REMOVED***D***REMOVED***->***REMOVED***C
***REMOVED*******REMOVED***So***REMOVED***without***REMOVED***dynamic***REMOVED***import***REMOVED***optimization,***REMOVED***the***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***are
***REMOVED*******REMOVED***A:***REMOVED***XY,***REMOVED***B:***REMOVED***DXY,***REMOVED***C:***REMOVED***DX,***REMOVED***D:***REMOVED***D,***REMOVED***X:***REMOVED***X,***REMOVED***Y:***REMOVED***Y,
***REMOVED*******REMOVED***so***REMOVED***we***REMOVED***would***REMOVED***for***REMOVED***now***REMOVED***create***REMOVED***six***REMOVED***chunks.
***REMOVED****
***REMOVED*******REMOVED***Now***REMOVED***D***REMOVED***is***REMOVED***loaded***REMOVED***only***REMOVED***after***REMOVED***A***REMOVED***is***REMOVED***loaded.***REMOVED***But***REMOVED***A***REMOVED***is***REMOVED***loaded***REMOVED***if***REMOVED***either***REMOVED***X***REMOVED***is
***REMOVED*******REMOVED***loaded
***REMOVED*******REMOVED***or***REMOVED***Y***REMOVED***is***REMOVED***loaded.***REMOVED***So***REMOVED***the***REMOVED***modules***REMOVED***that***REMOVED***are***REMOVED***already***REMOVED***in***REMOVED***memory***REMOVED***when***REMOVED***D***REMOVED***is***REMOVED***loaded
***REMOVED*******REMOVED***are***REMOVED***the***REMOVED***intersection***REMOVED***of***REMOVED***all***REMOVED***modules***REMOVED***that***REMOVED***X***REMOVED***depends***REMOVED***on***REMOVED***with***REMOVED***all***REMOVED***modules***REMOVED***that
***REMOVED*******REMOVED***Y
***REMOVED*******REMOVED***depends***REMOVED***on,***REMOVED***which***REMOVED***in***REMOVED***this***REMOVED***case***REMOVED***are***REMOVED***the***REMOVED***modules***REMOVED***A***REMOVED***and***REMOVED***B.
***REMOVED*******REMOVED***We***REMOVED***could***REMOVED***also***REMOVED***say***REMOVED***they***REMOVED***are***REMOVED***all***REMOVED***modules***REMOVED***that***REMOVED***have***REMOVED***both***REMOVED***X***REMOVED***and***REMOVED***Y***REMOVED***as***REMOVED***dependent
***REMOVED*******REMOVED***entry***REMOVED***points.
***REMOVED****
***REMOVED*******REMOVED***So***REMOVED***we***REMOVED***can***REMOVED***remove***REMOVED***D***REMOVED***as***REMOVED***dependent***REMOVED***entry***REMOVED***point***REMOVED***from***REMOVED***A***REMOVED***and***REMOVED***B,***REMOVED***which***REMOVED***means***REMOVED***they
***REMOVED*******REMOVED***both***REMOVED***now***REMOVED***have***REMOVED***only***REMOVED***XY***REMOVED***as***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***and***REMOVED***can***REMOVED***be***REMOVED***merged***REMOVED***into***REMOVED***the
***REMOVED*******REMOVED***same***REMOVED***chunk.
***REMOVED****
***REMOVED*******REMOVED***Now***REMOVED***let***REMOVED***us***REMOVED***extend***REMOVED***this***REMOVED***to***REMOVED***the***REMOVED***most***REMOVED***general***REMOVED***case***REMOVED***where***REMOVED***we***REMOVED***have***REMOVED***several
***REMOVED*******REMOVED***dynamic
***REMOVED*******REMOVED***importers***REMOVED***for***REMOVED***one***REMOVED***dynamic***REMOVED***entry***REMOVED***point.
***REMOVED****
***REMOVED*******REMOVED***In***REMOVED***the***REMOVED***most***REMOVED***general***REMOVED***form,***REMOVED***it***REMOVED***works***REMOVED***like***REMOVED***this:
***REMOVED*******REMOVED***For***REMOVED***each***REMOVED***dynamic***REMOVED***entry***REMOVED***point,***REMOVED***we***REMOVED***have***REMOVED***a***REMOVED***number***REMOVED***of***REMOVED***dynamic***REMOVED***importers,***REMOVED***which
***REMOVED*******REMOVED***are***REMOVED***the***REMOVED***modules***REMOVED***importing***REMOVED***it.***REMOVED***Using***REMOVED***the***REMOVED***previous***REMOVED***ideas,***REMOVED***we***REMOVED***can***REMOVED***determine
***REMOVED*******REMOVED***the***REMOVED***modules***REMOVED***already***REMOVED***in***REMOVED***memory***REMOVED***for***REMOVED***each***REMOVED***dynamic***REMOVED***importer***REMOVED***by***REMOVED***looking***REMOVED***for***REMOVED***all
***REMOVED*******REMOVED***modules***REMOVED***that***REMOVED***have***REMOVED***all***REMOVED***the***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***of***REMOVED***the***REMOVED***dynamic***REMOVED***importer***REMOVED***as
***REMOVED*******REMOVED***dependent***REMOVED***entry***REMOVED***points.
***REMOVED*******REMOVED***So***REMOVED***the***REMOVED***modules***REMOVED***that***REMOVED***are***REMOVED***guaranteed***REMOVED***to***REMOVED***be***REMOVED***in***REMOVED***memory***REMOVED***when***REMOVED***the***REMOVED***dynamic***REMOVED***entry
***REMOVED*******REMOVED***point***REMOVED***is***REMOVED***loaded***REMOVED***are***REMOVED***the***REMOVED***intersection***REMOVED***of***REMOVED***the***REMOVED***modules***REMOVED***already***REMOVED***in***REMOVED***memory***REMOVED***for
***REMOVED*******REMOVED***each***REMOVED***dynamic***REMOVED***importer.
***REMOVED****
***REMOVED*******REMOVED***Assuming***REMOVED***that***REMOVED***A***REMOVED***=>***REMOVED***D***REMOVED***and***REMOVED***B***REMOVED***=>***REMOVED***D***REMOVED***and***REMOVED***A***REMOVED***has***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***XY***REMOVED***and***REMOVED***B
***REMOVED*******REMOVED***has
***REMOVED*******REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***YZ,***REMOVED***then***REMOVED***the***REMOVED***modules***REMOVED***guaranteed***REMOVED***to***REMOVED***be***REMOVED***in***REMOVED***memory***REMOVED***are
***REMOVED*******REMOVED***all***REMOVED***modules***REMOVED***that***REMOVED***have***REMOVED***at***REMOVED***least***REMOVED***XYZ***REMOVED***as***REMOVED***dependent***REMOVED***entry***REMOVED***points.
***REMOVED*******REMOVED***We***REMOVED***call***REMOVED***XYZ***REMOVED***the***REMOVED****dynamically***REMOVED***dependent***REMOVED***entry***REMOVED***points****REMOVED***of***REMOVED***D.
***REMOVED****
***REMOVED*******REMOVED***Now***REMOVED***there***REMOVED***is***REMOVED***one***REMOVED***last***REMOVED***case***REMOVED***to***REMOVED***consider:***REMOVED***If***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***dynamically***REMOVED***dependent
***REMOVED*******REMOVED***entries***REMOVED***is***REMOVED***itself***REMOVED***a***REMOVED***dynamic***REMOVED***entry,***REMOVED***then***REMOVED***any***REMOVED***module***REMOVED***is***REMOVED***in***REMOVED***memory***REMOVED***that***REMOVED***either
***REMOVED*******REMOVED***is***REMOVED***a***REMOVED***dependency***REMOVED***of***REMOVED***that***REMOVED***dynamic***REMOVED***entry***REMOVED***or***REMOVED***again***REMOVED***has***REMOVED***the***REMOVED***dynamic***REMOVED***dependent
***REMOVED*******REMOVED***entries***REMOVED***of***REMOVED***that***REMOVED***dynamic***REMOVED***entry***REMOVED***as***REMOVED***dependent***REMOVED***entry***REMOVED***points.
***REMOVED****
***REMOVED*******REMOVED***A***REMOVED***naive***REMOVED***algorithm***REMOVED***for***REMOVED***this***REMOVED***proved***REMOVED***to***REMOVED***be***REMOVED***costly***REMOVED***as***REMOVED***it***REMOVED***contained***REMOVED***an***REMOVED***O(n^3)
***REMOVED*******REMOVED***complexity***REMOVED***with***REMOVED***regard***REMOVED***to***REMOVED***dynamic***REMOVED***entries***REMOVED***that***REMOVED***blew***REMOVED***up***REMOVED***for***REMOVED***very***REMOVED***large
***REMOVED*******REMOVED***projects.
***REMOVED****
***REMOVED*******REMOVED***If***REMOVED***we***REMOVED***have***REMOVED***an***REMOVED***efficient***REMOVED***way***REMOVED***to***REMOVED***do***REMOVED***Set***REMOVED***operations,***REMOVED***an***REMOVED***alternative***REMOVED***approach
***REMOVED*******REMOVED***would***REMOVED***be***REMOVED***to***REMOVED***instead***REMOVED***collect***REMOVED***already***REMOVED***loaded***REMOVED***modules***REMOVED***per***REMOVED***dynamic***REMOVED***entry.***REMOVED***And***REMOVED***as
***REMOVED*******REMOVED***all***REMOVED***chunks***REMOVED***from***REMOVED***the***REMOVED***initial***REMOVED***grouping***REMOVED***would***REMOVED***behave***REMOVED***the***REMOVED***same,***REMOVED***we***REMOVED***can***REMOVED***instead
***REMOVED*******REMOVED***collect***REMOVED***already***REMOVED***loaded***REMOVED***chunks***REMOVED***for***REMOVED***a***REMOVED***performance***REMOVED***improvement.
***REMOVED****
***REMOVED*******REMOVED***To***REMOVED***do***REMOVED***that***REMOVED***efficiently,***REMOVED***need
***REMOVED*******REMOVED***-***REMOVED***a***REMOVED***Map***REMOVED***of***REMOVED***dynamic***REMOVED***imports***REMOVED***per***REMOVED***dynamic***REMOVED***entry,***REMOVED***which***REMOVED***contains***REMOVED***all***REMOVED***dynamic
***REMOVED*******REMOVED******REMOVED******REMOVED***imports***REMOVED***that***REMOVED***can***REMOVED***be***REMOVED***triggered***REMOVED***by***REMOVED***a***REMOVED***dynamic***REMOVED***entry
***REMOVED*******REMOVED***-***REMOVED***a***REMOVED***Map***REMOVED***of***REMOVED***static***REMOVED***dependencies***REMOVED***per***REMOVED***entry
***REMOVED*******REMOVED***-***REMOVED***a***REMOVED***Map***REMOVED***of***REMOVED***already***REMOVED***loaded***REMOVED***chunks***REMOVED***per***REMOVED***entry***REMOVED***that***REMOVED***we***REMOVED***initially***REMOVED***populate***REMOVED***with
***REMOVED*******REMOVED******REMOVED******REMOVED***empty***REMOVED***Sets***REMOVED***for***REMOVED***static***REMOVED***entries***REMOVED***and***REMOVED***Sets***REMOVED***containing***REMOVED***all***REMOVED***entries***REMOVED***for***REMOVED***dynamic
***REMOVED*******REMOVED******REMOVED******REMOVED***entries
***REMOVED****
***REMOVED*******REMOVED***For***REMOVED***efficient***REMOVED***operations,***REMOVED***we***REMOVED***assign***REMOVED***each***REMOVED***entry***REMOVED***a***REMOVED***numerical***REMOVED***index***REMOVED***and
***REMOVED*******REMOVED***represent***REMOVED***Sets***REMOVED***of***REMOVED***Chunks***REMOVED***as***REMOVED***BigInt***REMOVED***values***REMOVED***where***REMOVED***each***REMOVED***chunk***REMOVED***corresponds***REMOVED***to***REMOVED***a
***REMOVED*******REMOVED***bit***REMOVED***index.***REMOVED***Then***REMOVED***thw***REMOVED***last***REMOVED***two***REMOVED***maps***REMOVED***can***REMOVED***be***REMOVED***represented***REMOVED***as***REMOVED***arrays***REMOVED***of***REMOVED***BigInt
***REMOVED*******REMOVED***values.
***REMOVED****
***REMOVED*******REMOVED***Then***REMOVED***we***REMOVED***iterate***REMOVED***through***REMOVED***each***REMOVED***dynamic***REMOVED***entry.***REMOVED***We***REMOVED***set***REMOVED***the***REMOVED***already***REMOVED***loaded***REMOVED***modules
***REMOVED*******REMOVED***to***REMOVED***the***REMOVED***intersection***REMOVED***of***REMOVED***the***REMOVED***previously***REMOVED***already***REMOVED***loaded***REMOVED***modules***REMOVED***with***REMOVED***the***REMOVED***union
***REMOVED*******REMOVED***of***REMOVED***the***REMOVED***already***REMOVED***loaded***REMOVED***modules***REMOVED***of***REMOVED***that***REMOVED***chunk***REMOVED***with***REMOVED***its***REMOVED***static***REMOVED***dependencies.
***REMOVED****
***REMOVED*******REMOVED***If***REMOVED***the***REMOVED***already***REMOVED***loaded***REMOVED***modules***REMOVED***changed,***REMOVED***then***REMOVED***we***REMOVED***use***REMOVED***the***REMOVED***Map***REMOVED***of***REMOVED***dynamic***REMOVED***imports
***REMOVED*******REMOVED***per***REMOVED***dynamic***REMOVED***entry***REMOVED***to***REMOVED***marks***REMOVED***all***REMOVED***dynamic***REMOVED***entry***REMOVED***dependencies***REMOVED***as***REMOVED***"dirty"***REMOVED***and***REMOVED***put
***REMOVED*******REMOVED***them***REMOVED***back***REMOVED***into***REMOVED***the***REMOVED***iteration.***REMOVED***As***REMOVED***an***REMOVED***additional***REMOVED***optimization,***REMOVED***we***REMOVED***note***REMOVED***for
***REMOVED*******REMOVED***each***REMOVED***dynamic***REMOVED***entry***REMOVED***which***REMOVED***dynamic***REMOVED***dependent***REMOVED***entries***REMOVED***have***REMOVED***changed***REMOVED***and***REMOVED***only
***REMOVED*******REMOVED***intersect***REMOVED***those***REMOVED***entries***REMOVED***again***REMOVED***on***REMOVED***subsequent***REMOVED***interations.
***REMOVED****
***REMOVED*******REMOVED***Then***REMOVED***we***REMOVED***remove***REMOVED***the***REMOVED***dynamic***REMOVED***entries***REMOVED***from***REMOVED***the***REMOVED***list***REMOVED***of***REMOVED***dependent***REMOVED***entries***REMOVED***for
***REMOVED*******REMOVED***those***REMOVED***chunks***REMOVED***that***REMOVED***are***REMOVED***already***REMOVED***loaded***REMOVED***for***REMOVED***that***REMOVED***dynamic***REMOVED***entry***REMOVED***and***REMOVED***create
***REMOVED*******REMOVED***another***REMOVED***round***REMOVED***of***REMOVED***chunks.
***REMOVED****/
function***REMOVED***getChunkAssignments(entries,***REMOVED***manualChunkAliasByEntry,***REMOVED***minChunkSize,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***chunkDefinitions,***REMOVED***modulesInManualChunks***REMOVED***}***REMOVED***=***REMOVED***getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***allEntries,***REMOVED***dependentEntriesByModule,***REMOVED***dynamicallyDependentEntriesByDynamicEntry,***REMOVED***dynamicImportsByEntry***REMOVED***}***REMOVED***=***REMOVED***analyzeModuleGraph(entries);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Each***REMOVED***chunk***REMOVED***is***REMOVED***identified***REMOVED***by***REMOVED***its***REMOVED***position***REMOVED***in***REMOVED***this***REMOVED***array
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***initialChunks***REMOVED***=***REMOVED***getChunksFromDependentEntries(getModulesWithDependentEntries(dependentEntriesByModule,***REMOVED***modulesInManualChunks));
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***mutates***REMOVED***initialChunks***REMOVED***but***REMOVED***also***REMOVED***clears
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***dynamicallyDependentEntriesByDynamicEntry***REMOVED***as***REMOVED***side***REMOVED***effect
***REMOVED******REMOVED******REMOVED******REMOVED***removeUnnecessaryDependentEntries(initialChunks,***REMOVED***dynamicallyDependentEntriesByDynamicEntry,***REMOVED***dynamicImportsByEntry,***REMOVED***allEntries);
***REMOVED******REMOVED******REMOVED******REMOVED***chunkDefinitions.push(...getOptimizedChunks(getChunksFromDependentEntries(initialChunks),***REMOVED***allEntries.length,***REMOVED***minChunkSize,***REMOVED***log).map(({***REMOVED***modules***REMOVED***})***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alias:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules
***REMOVED******REMOVED******REMOVED******REMOVED***})));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***chunkDefinitions;
}
function***REMOVED***getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkDefinitions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modulesInManualChunks***REMOVED***=***REMOVED***new***REMOVED***Set(manualChunkAliasByEntry.keys());
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunkModulesByAlias***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[entry,***REMOVED***alias]***REMOVED***of***REMOVED***manualChunkAliasByEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addStaticDependenciesToManualChunk(entry,***REMOVED***(manualChunkModulesByAlias[alias]***REMOVED***||***REMOVED***(manualChunkModulesByAlias[alias]***REMOVED***=***REMOVED***[])),***REMOVED***modulesInManualChunks);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[alias,***REMOVED***modules]***REMOVED***of***REMOVED***Object.entries(manualChunkModulesByAlias))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkDefinitions.push({***REMOVED***alias,***REMOVED***modules***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***chunkDefinitions,***REMOVED***modulesInManualChunks***REMOVED***};
}
function***REMOVED***addStaticDependenciesToManualChunk(entry,***REMOVED***manualChunkModules,***REMOVED***modulesInManualChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modulesToHandle***REMOVED***=***REMOVED***new***REMOVED***Set([entry]);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modulesToHandle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modulesInManualChunks.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunkModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(dependency***REMOVED***instanceof***REMOVED***ExternalModule***REMOVED***||***REMOVED***modulesInManualChunks.has(dependency)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modulesToHandle.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***analyzeModuleGraph(entries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicEntryModules***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependentEntriesByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicImportModulesByEntry***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allEntriesSet***REMOVED***=***REMOVED***new***REMOVED***Set(entries);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***entryIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***currentEntry***REMOVED***of***REMOVED***allEntriesSet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicImportsForCurrentEntry***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportModulesByEntry.push(dynamicImportsForCurrentEntry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modulesToHandle***REMOVED***=***REMOVED***new***REMOVED***Set([currentEntry]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modulesToHandle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(dependentEntriesByModule,***REMOVED***module,***REMOVED***(getNewSet)).add(entryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.getDependenciesToBeIncluded())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(dependency***REMOVED***instanceof***REMOVED***ExternalModule))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modulesToHandle.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***resolution***REMOVED***}***REMOVED***of***REMOVED***module.dynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolution***REMOVED***instanceof***REMOVED***Module***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolution.includedDynamicImporters.length***REMOVED***>***REMOVED***0***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!allEntriesSet.has(resolution))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicEntryModules.add(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allEntriesSet.add(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportsForCurrentEntry.add(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.implicitlyLoadedBefore)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allEntriesSet.has(dependency))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicEntryModules.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allEntriesSet.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryIndex++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allEntries***REMOVED***=***REMOVED***[...allEntriesSet];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dynamicEntries,***REMOVED***dynamicImportsByEntry***REMOVED***}***REMOVED***=***REMOVED***getDynamicEntries(allEntries,***REMOVED***dynamicEntryModules,***REMOVED***dynamicImportModulesByEntry);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allEntries,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentEntriesByModule,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicallyDependentEntriesByDynamicEntry:***REMOVED***getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule,***REMOVED***dynamicEntries,***REMOVED***allEntries),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportsByEntry
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***getDynamicEntries(allEntries,***REMOVED***dynamicEntryModules,***REMOVED***dynamicImportModulesByEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entryIndexByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicEntries***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[entryIndex,***REMOVED***entry]***REMOVED***of***REMOVED***allEntries.entries())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryIndexByModule.set(entry,***REMOVED***entryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dynamicEntryModules.has(entry))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicEntries.add(entryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicImportsByEntry***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dynamicImportModules***REMOVED***of***REMOVED***dynamicImportModulesByEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicImports***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dynamicEntry***REMOVED***of***REMOVED***dynamicImportModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImports.add(entryIndexByModule.get(dynamicEntry));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportsByEntry.push(dynamicImports);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***dynamicEntries,***REMOVED***dynamicImportsByEntry***REMOVED***};
}
function***REMOVED***getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule,***REMOVED***dynamicEntries,***REMOVED***allEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicallyDependentEntriesByDynamicEntry***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dynamicEntryIndex***REMOVED***of***REMOVED***dynamicEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicallyDependentEntries***REMOVED***=***REMOVED***getOrCreate(dynamicallyDependentEntriesByDynamicEntry,***REMOVED***dynamicEntryIndex,***REMOVED***(getNewSet));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicEntry***REMOVED***=***REMOVED***allEntries[dynamicEntryIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***importer***REMOVED***of***REMOVED***concatLazy([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicEntry.includedDynamicImporters,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicEntry.implicitlyLoadedAfter
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entry***REMOVED***of***REMOVED***dependentEntriesByModule.get(importer))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicallyDependentEntries.add(entry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dynamicallyDependentEntriesByDynamicEntry;
}
function***REMOVED***getChunksFromDependentEntries(modulesWithDependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkModules***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***dependentEntries,***REMOVED***modules***REMOVED***}***REMOVED***of***REMOVED***modulesWithDependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***chunkSignature***REMOVED***=***REMOVED***0n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entryIndex***REMOVED***of***REMOVED***dependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkSignature***REMOVED***|=***REMOVED***1n***REMOVED***<<***REMOVED***BigInt(entryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(chunkModules[_a***REMOVED***=***REMOVED***String(chunkSignature)]***REMOVED***||***REMOVED***(chunkModules[_a]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentEntries:***REMOVED***new***REMOVED***Set(dependentEntries),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})).modules.push(...modules);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.values(chunkModules);
}
function****REMOVED***getModulesWithDependentEntries(dependentEntriesByModule,***REMOVED***modulesInManualChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[module,***REMOVED***dependentEntries]***REMOVED***of***REMOVED***dependentEntriesByModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!modulesInManualChunks.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***{***REMOVED***dependentEntries,***REMOVED***modules:***REMOVED***[module]***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
/**
***REMOVED*******REMOVED***This***REMOVED***removes***REMOVED***all***REMOVED***unnecessary***REMOVED***dynamic***REMOVED***entries***REMOVED***from***REMOVED***the***REMOVED***dependenEntries***REMOVED***in***REMOVED***its
***REMOVED*******REMOVED***first***REMOVED***argument.***REMOVED***It***REMOVED***will***REMOVED***also***REMOVED***consume***REMOVED***its***REMOVED***second***REMOVED***argument,***REMOVED***so***REMOVED***if
***REMOVED*******REMOVED***dynamicallyDependentEntriesByDynamicEntry***REMOVED***is***REMOVED***ever***REMOVED***needed***REMOVED***after***REMOVED***this,***REMOVED***we
***REMOVED*******REMOVED***should***REMOVED***make***REMOVED***a***REMOVED***copy.
***REMOVED****/
function***REMOVED***removeUnnecessaryDependentEntries(chunks,***REMOVED***dynamicallyDependentEntriesByDynamicEntry,***REMOVED***dynamicImportsByEntry,***REMOVED***allEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***indices***REMOVED***correspond***REMOVED***to***REMOVED***the***REMOVED***indices***REMOVED***in***REMOVED***allEntries.***REMOVED***The***REMOVED***chunks***REMOVED***correspond
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***bits***REMOVED***in***REMOVED***the***REMOVED***bigint***REMOVED***values***REMOVED***where***REMOVED***chunk***REMOVED***0***REMOVED***is***REMOVED***the***REMOVED***lowest***REMOVED***bit.
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***staticDependenciesPerEntry***REMOVED***=***REMOVED***allEntries.map(()***REMOVED***=>***REMOVED***0n);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alreadyLoadedChunksPerEntry***REMOVED***=***REMOVED***allEntries.map((_entry,***REMOVED***entryIndex)***REMOVED***=>***REMOVED***dynamicallyDependentEntriesByDynamicEntry.has(entryIndex)***REMOVED***?***REMOVED***-1n***REMOVED***:***REMOVED***0n);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***toggles***REMOVED***the***REMOVED***bits***REMOVED***for***REMOVED***each***REMOVED***chunk***REMOVED***that***REMOVED***is***REMOVED***a***REMOVED***dependency***REMOVED***of***REMOVED***an***REMOVED***entry
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***chunkMask***REMOVED***=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***dependentEntries***REMOVED***}***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entryIndex***REMOVED***of***REMOVED***dependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***staticDependenciesPerEntry[entryIndex]***REMOVED***|=***REMOVED***chunkMask;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkMask***REMOVED***<<=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Warning:***REMOVED***This***REMOVED***will***REMOVED***consume***REMOVED***dynamicallyDependentEntriesByDynamicEntry.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***we***REMOVED***no***REMOVED***longer***REMOVED***want***REMOVED***this,***REMOVED***we***REMOVED***should***REMOVED***make***REMOVED***a***REMOVED***copy***REMOVED***here.
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***updatedDynamicallyDependentEntriesByDynamicEntry***REMOVED***=***REMOVED***dynamicallyDependentEntriesByDynamicEntry;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[dynamicEntryIndex,***REMOVED***updatedDynamicallyDependentEntries]***REMOVED***of***REMOVED***updatedDynamicallyDependentEntriesByDynamicEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updatedDynamicallyDependentEntriesByDynamicEntry.delete(dynamicEntryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***previousLoadedModules***REMOVED***=***REMOVED***alreadyLoadedChunksPerEntry[dynamicEntryIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newLoadedModules***REMOVED***=***REMOVED***previousLoadedModules;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entryIndex***REMOVED***of***REMOVED***updatedDynamicallyDependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newLoadedModules***REMOVED***&=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***staticDependenciesPerEntry[entryIndex]***REMOVED***|***REMOVED***alreadyLoadedChunksPerEntry[entryIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newLoadedModules***REMOVED***!==***REMOVED***previousLoadedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alreadyLoadedChunksPerEntry[dynamicEntryIndex]***REMOVED***=***REMOVED***newLoadedModules;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dynamicImport***REMOVED***of***REMOVED***dynamicImportsByEntry[dynamicEntryIndex])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOrCreate(updatedDynamicallyDependentEntriesByDynamicEntry,***REMOVED***dynamicImport,***REMOVED***(getNewSet)).add(dynamicEntryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Remove***REMOVED***entries***REMOVED***from***REMOVED***dependent***REMOVED***entries***REMOVED***if***REMOVED***a***REMOVED***chunk***REMOVED***is***REMOVED***already***REMOVED***loaded***REMOVED***without
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***that***REMOVED***entry.
***REMOVED******REMOVED******REMOVED******REMOVED***chunkMask***REMOVED***=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***dependentEntries***REMOVED***}***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entryIndex***REMOVED***of***REMOVED***dependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((alreadyLoadedChunksPerEntry[entryIndex]***REMOVED***&***REMOVED***chunkMask)***REMOVED***===***REMOVED***chunkMask)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentEntries.delete(entryIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkMask***REMOVED***<<=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
/**
***REMOVED*******REMOVED***This***REMOVED***function***REMOVED***tries***REMOVED***to***REMOVED***get***REMOVED***rid***REMOVED***of***REMOVED***small***REMOVED***chunks***REMOVED***by***REMOVED***merging***REMOVED***them***REMOVED***with***REMOVED***other
***REMOVED*******REMOVED***chunks.
***REMOVED****
***REMOVED*******REMOVED***We***REMOVED***can***REMOVED***only***REMOVED***merge***REMOVED***chunks***REMOVED***safely***REMOVED***if***REMOVED***after***REMOVED***the***REMOVED***merge,***REMOVED***loading***REMOVED***any***REMOVED***entry***REMOVED***point
***REMOVED*******REMOVED***in***REMOVED***any***REMOVED***allowed***REMOVED***order***REMOVED***will***REMOVED***not***REMOVED***trigger***REMOVED***side***REMOVED***effects***REMOVED***that***REMOVED***should***REMOVED***not***REMOVED***have***REMOVED***been
***REMOVED*******REMOVED***triggered.***REMOVED***While***REMOVED***side***REMOVED***effects***REMOVED***are***REMOVED***usually***REMOVED***things***REMOVED***like***REMOVED***global***REMOVED***function***REMOVED***calls,
***REMOVED*******REMOVED***global***REMOVED***variable***REMOVED***mutations***REMOVED***or***REMOVED***potentially***REMOVED***thrown***REMOVED***errors,***REMOVED***details***REMOVED***do***REMOVED***not
***REMOVED*******REMOVED***matter***REMOVED***here,***REMOVED***and***REMOVED***we***REMOVED***just***REMOVED***discern***REMOVED***chunks***REMOVED***without***REMOVED***side***REMOVED***effects***REMOVED***(pure***REMOVED***chunks)
***REMOVED*******REMOVED***from***REMOVED***other***REMOVED***chunks.
***REMOVED****
***REMOVED*******REMOVED***As***REMOVED***a***REMOVED***first***REMOVED***step,***REMOVED***we***REMOVED***assign***REMOVED***each***REMOVED***pre-generated***REMOVED***chunk***REMOVED***with***REMOVED***side***REMOVED***effects***REMOVED***a
***REMOVED*******REMOVED***label.***REMOVED***I.e.***REMOVED***we***REMOVED***have***REMOVED***side***REMOVED***effect***REMOVED***"A"***REMOVED***if***REMOVED***the***REMOVED***non-pure***REMOVED***chunk***REMOVED***"A"***REMOVED***is***REMOVED***loaded.
***REMOVED****
***REMOVED*******REMOVED***Now***REMOVED***to***REMOVED***determine***REMOVED***the***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***loading***REMOVED***a***REMOVED***chunk,***REMOVED***one***REMOVED***also***REMOVED***has***REMOVED***to***REMOVED***take
***REMOVED*******REMOVED***the***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***its***REMOVED***dependencies***REMOVED***into***REMOVED***account.***REMOVED***So***REMOVED***if***REMOVED***A***REMOVED***depends***REMOVED***on***REMOVED***B
***REMOVED*******REMOVED***(A***REMOVED***->***REMOVED***B)***REMOVED***and***REMOVED***both***REMOVED***have***REMOVED***side***REMOVED***effects,***REMOVED***loading***REMOVED***A***REMOVED***triggers***REMOVED***effects***REMOVED***AB.
***REMOVED****
***REMOVED*******REMOVED***Now***REMOVED***from***REMOVED***the***REMOVED***previous***REMOVED***step***REMOVED***we***REMOVED***know***REMOVED***that***REMOVED***each***REMOVED***chunk***REMOVED***is***REMOVED***uniquely***REMOVED***determine***REMOVED***by
***REMOVED*******REMOVED***the***REMOVED***entry***REMOVED***points***REMOVED***that***REMOVED***depend***REMOVED***on***REMOVED***it***REMOVED***and***REMOVED***cause***REMOVED***it***REMOVED***to***REMOVED***load,***REMOVED***which***REMOVED***we***REMOVED***will***REMOVED***call
***REMOVED*******REMOVED***its***REMOVED***dependent***REMOVED***entry***REMOVED***points.
***REMOVED****
***REMOVED*******REMOVED***E.g.***REMOVED***if***REMOVED***X***REMOVED***->***REMOVED***A***REMOVED***and***REMOVED***Y***REMOVED***->***REMOVED***A,***REMOVED***then***REMOVED***the***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***of***REMOVED***A***REMOVED***are***REMOVED***XY.
***REMOVED*******REMOVED***Starting***REMOVED***from***REMOVED***that***REMOVED***idea,***REMOVED***we***REMOVED***can***REMOVED***determine***REMOVED***a***REMOVED***set***REMOVED***of***REMOVED***chunks—and***REMOVED***thus***REMOVED***a***REMOVED***set
***REMOVED*******REMOVED***of***REMOVED***side***REMOVED***effects—that***REMOVED***must***REMOVED***have***REMOVED***been***REMOVED***triggered***REMOVED***if***REMOVED***a***REMOVED***certain***REMOVED***chunk***REMOVED***has***REMOVED***been
***REMOVED*******REMOVED***loaded.***REMOVED***Basically,***REMOVED***it***REMOVED***is***REMOVED***the***REMOVED***intersection***REMOVED***of***REMOVED***all***REMOVED***chunks***REMOVED***loaded***REMOVED***by***REMOVED***the
***REMOVED*******REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***of***REMOVED***a***REMOVED***given***REMOVED***chunk.***REMOVED***We***REMOVED***call***REMOVED***the***REMOVED***corresponding***REMOVED***side
***REMOVED*******REMOVED***effects***REMOVED***the***REMOVED***correlated***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***that***REMOVED***chunk.
***REMOVED****
***REMOVED*******REMOVED***Example:
***REMOVED*******REMOVED***X***REMOVED***->***REMOVED***ABC,***REMOVED***Y***REMOVED***->***REMOVED***ADE,***REMOVED***A->***REMOVED***F,***REMOVED***B***REMOVED***->***REMOVED***D
***REMOVED*******REMOVED***Then***REMOVED***taking***REMOVED***dependencies***REMOVED***into***REMOVED***account,***REMOVED***X***REMOVED***->***REMOVED***ABCDF,***REMOVED***Y***REMOVED***->***REMOVED***ADEF
***REMOVED*******REMOVED***The***REMOVED***intersection***REMOVED***is***REMOVED***ADF.***REMOVED***So***REMOVED***we***REMOVED***know***REMOVED***that***REMOVED***when***REMOVED***A***REMOVED***is***REMOVED***loaded,***REMOVED***D***REMOVED***and***REMOVED***F***REMOVED***must***REMOVED***also
***REMOVED*******REMOVED***be***REMOVED***in***REMOVED***memory***REMOVED***even***REMOVED***though***REMOVED***neither***REMOVED***D***REMOVED***nor***REMOVED***A***REMOVED***is***REMOVED***a***REMOVED***dependency***REMOVED***of***REMOVED***the***REMOVED***other.
***REMOVED*******REMOVED***If***REMOVED***all***REMOVED***have***REMOVED***side***REMOVED***effects,***REMOVED***we***REMOVED***call***REMOVED***ADF***REMOVED***the***REMOVED***correlated***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***A.***REMOVED***The
***REMOVED*******REMOVED***correlated***REMOVED***side***REMOVED***effects***REMOVED***need***REMOVED***to***REMOVED***remain***REMOVED***constant***REMOVED***when***REMOVED***merging***REMOVED***chunks.
***REMOVED****
***REMOVED*******REMOVED***In***REMOVED***contrast,***REMOVED***we***REMOVED***have***REMOVED***the***REMOVED***dependency***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***A,***REMOVED***which***REMOVED***represents
***REMOVED*******REMOVED***the***REMOVED***side***REMOVED***effects***REMOVED***we***REMOVED***trigger***REMOVED***if***REMOVED***we***REMOVED***directly***REMOVED***load***REMOVED***A.***REMOVED***In***REMOVED***this***REMOVED***example,***REMOVED***the
***REMOVED*******REMOVED***dependency***REMOVED***side***REMOVED***effects***REMOVED***are***REMOVED***AF.
***REMOVED*******REMOVED***For***REMOVED***entry***REMOVED***chunks,***REMOVED***dependency***REMOVED***and***REMOVED***correlated***REMOVED***side***REMOVED***effects***REMOVED***are***REMOVED***the***REMOVED***same.
***REMOVED****
***REMOVED*******REMOVED***With***REMOVED***these***REMOVED***concepts,***REMOVED***merging***REMOVED***chunks***REMOVED***is***REMOVED***allowed***REMOVED***if***REMOVED***the***REMOVED***correlated***REMOVED***side
***REMOVED*******REMOVED***effects***REMOVED***of***REMOVED***each***REMOVED***entry***REMOVED***do***REMOVED***not***REMOVED***change.***REMOVED***Thus,***REMOVED***we***REMOVED***are***REMOVED***allowed***REMOVED***to***REMOVED***merge***REMOVED***two
***REMOVED*******REMOVED***chunks***REMOVED***if
***REMOVED****
***REMOVED*******REMOVED***a)***REMOVED***the***REMOVED***dependency***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***each***REMOVED***chunk***REMOVED***are***REMOVED***a***REMOVED***subset***REMOVED***of***REMOVED***the***REMOVED***correlated
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***the***REMOVED***other***REMOVED***chunk,***REMOVED***so***REMOVED***no***REMOVED***additional***REMOVED***side***REMOVED***effects***REMOVED***are
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***triggered***REMOVED***for***REMOVED***any***REMOVED***entry,***REMOVED***or
***REMOVED*******REMOVED***b)***REMOVED***The***REMOVED***dependent***REMOVED***entry***REMOVED***points***REMOVED***of***REMOVED***chunk***REMOVED***A***REMOVED***are***REMOVED***a***REMOVED***subset***REMOVED***of***REMOVED***the***REMOVED***dependent***REMOVED***entry
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***points***REMOVED***of***REMOVED***chunk***REMOVED***B***REMOVED***while***REMOVED***the***REMOVED***dependency***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***A***REMOVED***are***REMOVED***a***REMOVED***subset***REMOVED***of
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***the***REMOVED***correlated***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***B.***REMOVED***Because***REMOVED***in***REMOVED***that***REMOVED***scenario,***REMOVED***whenever***REMOVED***A***REMOVED***is
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***loaded,***REMOVED***B***REMOVED***is***REMOVED***loaded***REMOVED***as***REMOVED***well.***REMOVED***But***REMOVED***there***REMOVED***are***REMOVED***cases***REMOVED***when***REMOVED***B***REMOVED***is***REMOVED***loaded***REMOVED***where***REMOVED***A
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***not***REMOVED***loaded.***REMOVED***So***REMOVED***if***REMOVED***we***REMOVED***merge***REMOVED***the***REMOVED***chunks,***REMOVED***all***REMOVED***dependency***REMOVED***side***REMOVED***effects***REMOVED***of
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***A***REMOVED***will***REMOVED***be***REMOVED***added***REMOVED***to***REMOVED***the***REMOVED***correlated***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***B,***REMOVED***and***REMOVED***as***REMOVED***the***REMOVED***latter***REMOVED***is
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***not***REMOVED***allowed***REMOVED***to***REMOVED***change,***REMOVED***the***REMOVED***former***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***subset***REMOVED***of***REMOVED***the***REMOVED***latter.
***REMOVED****
***REMOVED*******REMOVED***Another***REMOVED***consideration***REMOVED***when***REMOVED***merging***REMOVED***small***REMOVED***chunks***REMOVED***into***REMOVED***other***REMOVED***chunks***REMOVED***is***REMOVED***to
***REMOVED*******REMOVED***avoid
***REMOVED*******REMOVED***that***REMOVED***too***REMOVED***much***REMOVED***additional***REMOVED***code***REMOVED***is***REMOVED***loaded.***REMOVED***This***REMOVED***is***REMOVED***achieved***REMOVED***when***REMOVED***the***REMOVED***dependent
***REMOVED*******REMOVED***entries***REMOVED***of***REMOVED***the***REMOVED***small***REMOVED***chunk***REMOVED***are***REMOVED***a***REMOVED***subset***REMOVED***of***REMOVED***the***REMOVED***dependent***REMOVED***entries***REMOVED***of***REMOVED***the
***REMOVED*******REMOVED***other
***REMOVED*******REMOVED***chunk.***REMOVED***Because***REMOVED***then***REMOVED***when***REMOVED***the***REMOVED***small***REMOVED***chunk***REMOVED***is***REMOVED***loaded,***REMOVED***the***REMOVED***other***REMOVED***chunk***REMOVED***was
***REMOVED*******REMOVED***loaded/in***REMOVED***memory***REMOVED***anyway,***REMOVED***so***REMOVED***at***REMOVED***most***REMOVED***when***REMOVED***the***REMOVED***other***REMOVED***chunk***REMOVED***is***REMOVED***loaded,***REMOVED***the
***REMOVED*******REMOVED***additional***REMOVED***size***REMOVED***of***REMOVED***the***REMOVED***small***REMOVED***chunk***REMOVED***is***REMOVED***loaded***REMOVED***unnecessarily.
***REMOVED****
***REMOVED*******REMOVED***So***REMOVED***the***REMOVED***algorithm***REMOVED***performs***REMOVED***merges***REMOVED***in***REMOVED***two***REMOVED***passes:
***REMOVED****
***REMOVED*******REMOVED***1.***REMOVED***First***REMOVED***we***REMOVED***try***REMOVED***to***REMOVED***merge***REMOVED***small***REMOVED***chunks***REMOVED***A***REMOVED***only***REMOVED***into***REMOVED***other***REMOVED***chunks***REMOVED***B***REMOVED***if***REMOVED***the
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***dependent***REMOVED***entries***REMOVED***of***REMOVED***A***REMOVED***are***REMOVED***a***REMOVED***subset***REMOVED***of***REMOVED***the***REMOVED***dependent***REMOVED***entries***REMOVED***of***REMOVED***B***REMOVED***and***REMOVED***the
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***dependency***REMOVED***side***REMOVED***effects***REMOVED***of***REMOVED***A***REMOVED***are***REMOVED***a***REMOVED***subset***REMOVED***of***REMOVED***the***REMOVED***correlated***REMOVED***side***REMOVED***effects
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***of***REMOVED***B.
***REMOVED*******REMOVED***2.***REMOVED***Only***REMOVED***then***REMOVED***for***REMOVED***all***REMOVED***remaining***REMOVED***small***REMOVED***chunks,***REMOVED***we***REMOVED***look***REMOVED***for***REMOVED***arbitrary***REMOVED***merges
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***following***REMOVED***the***REMOVED***rule***REMOVED***(a),***REMOVED***starting***REMOVED***with***REMOVED***the***REMOVED***smallest***REMOVED***chunks***REMOVED***to***REMOVED***look***REMOVED***for
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***possible***REMOVED***merge***REMOVED***targets.
***REMOVED****/
function***REMOVED***getOptimizedChunks(initialChunks,***REMOVED***numberOfEntries,***REMOVED***minChunkSize,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***timeStart('optimize***REMOVED***chunks',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkPartition***REMOVED***=***REMOVED***getPartitionedChunks(initialChunks,***REMOVED***numberOfEntries,***REMOVED***minChunkSize);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!chunkPartition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('optimize***REMOVED***chunks',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***initialChunks;***REMOVED***//***REMOVED***the***REMOVED***actual***REMOVED***modules
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***minChunkSize***REMOVED***>***REMOVED***1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log('info',***REMOVED***logOptimizeChunkStatus(initialChunks.length,***REMOVED***chunkPartition.small.size,***REMOVED***'Initially'));
***REMOVED******REMOVED******REMOVED******REMOVED***mergeChunks(chunkPartition,***REMOVED***minChunkSize);
***REMOVED******REMOVED******REMOVED******REMOVED***minChunkSize***REMOVED***>***REMOVED***1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log('info',***REMOVED***logOptimizeChunkStatus(chunkPartition.small.size***REMOVED***+***REMOVED***chunkPartition.big.size,***REMOVED***chunkPartition.small.size,***REMOVED***'After***REMOVED***merging***REMOVED***chunks'));
***REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('optimize***REMOVED***chunks',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...chunkPartition.small,***REMOVED***...chunkPartition.big];
}
function***REMOVED***getPartitionedChunks(initialChunks,***REMOVED***numberOfEntries,***REMOVED***minChunkSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***smallChunks***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bigChunks***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sizeByAtom***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sideEffectAtoms***REMOVED***=***REMOVED***0n;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***containedAtoms***REMOVED***=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***dependentEntries,***REMOVED***modules***REMOVED***}***REMOVED***of***REMOVED***initialChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkDescription***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***containedAtoms,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***correlatedAtoms:***REMOVED***0n,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentChunks:***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentEntries,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pure:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***size:***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***size***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***pure***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkByModule.set(module,***REMOVED***chunkDescription);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Unfortunately,***REMOVED***we***REMOVED***cannot***REMOVED***take***REMOVED***tree-shaking***REMOVED***into***REMOVED***account***REMOVED***here***REMOVED***because
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***rendering***REMOVED***did***REMOVED***not***REMOVED***happen***REMOVED***yet,***REMOVED***but***REMOVED***we***REMOVED***can***REMOVED***detect***REMOVED***empty***REMOVED***modules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.isIncluded())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pure***REMOVED***&&***REMOVED***(pure***REMOVED***=***REMOVED***!module.hasEffects());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***use***REMOVED***a***REMOVED***trivial***REMOVED***size***REMOVED***for***REMOVED***the***REMOVED***default***REMOVED***minChunkSize***REMOVED***to***REMOVED***improve
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***performance
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***size***REMOVED***+=***REMOVED***minChunkSize***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***module.estimateSize()***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkDescription.pure***REMOVED***=***REMOVED***pure;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkDescription.size***REMOVED***=***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sizeByAtom.push(size);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!pure)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sideEffectAtoms***REMOVED***|=***REMOVED***containedAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(size***REMOVED***<***REMOVED***minChunkSize***REMOVED***?***REMOVED***smallChunks***REMOVED***:***REMOVED***bigChunks).push(chunkDescription);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***containedAtoms***REMOVED***<<=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***there***REMOVED***are***REMOVED***no***REMOVED***small***REMOVED***chunks,***REMOVED***we***REMOVED***will***REMOVED***not***REMOVED***optimize
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(smallChunks.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***sideEffectAtoms***REMOVED***|=***REMOVED***addChunkDependenciesAndAtomsAndGetSideEffectAtoms([bigChunks,***REMOVED***smallChunks],***REMOVED***chunkByModule,***REMOVED***numberOfEntries,***REMOVED***containedAtoms);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***big:***REMOVED***new***REMOVED***Set(bigChunks),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sideEffectAtoms,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sizeByAtom,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***small:***REMOVED***new***REMOVED***Set(smallChunks)
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***mergeChunks(chunkPartition,***REMOVED***minChunkSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***small***REMOVED***}***REMOVED***=***REMOVED***chunkPartition;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***mergedChunk***REMOVED***of***REMOVED***small)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bestTargetChunk***REMOVED***=***REMOVED***findBestMergeTarget(mergedChunk,***REMOVED***chunkPartition,***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***the***REMOVED***default***REMOVED***case,***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***accept***REMOVED***size***REMOVED***increases
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***minChunkSize***REMOVED***<=***REMOVED***1***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***Infinity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bestTargetChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***containedAtoms,***REMOVED***correlatedAtoms,***REMOVED***modules,***REMOVED***pure,***REMOVED***size***REMOVED***}***REMOVED***=***REMOVED***mergedChunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***small.delete(mergedChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getChunksInPartition(bestTargetChunk,***REMOVED***minChunkSize,***REMOVED***chunkPartition).delete(bestTargetChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bestTargetChunk.modules.push(...modules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bestTargetChunk.size***REMOVED***+=***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bestTargetChunk.pure***REMOVED***&&***REMOVED***(bestTargetChunk.pure***REMOVED***=***REMOVED***pure);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dependencies,***REMOVED***dependentChunks,***REMOVED***dependentEntries***REMOVED***}***REMOVED***=***REMOVED***bestTargetChunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bestTargetChunk.correlatedAtoms***REMOVED***&=***REMOVED***correlatedAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bestTargetChunk.containedAtoms***REMOVED***|=***REMOVED***containedAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entry***REMOVED***of***REMOVED***mergedChunk.dependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentEntries.add(entry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***mergedChunk.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.dependentChunks.delete(mergedChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.dependentChunks.add(bestTargetChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependentChunk***REMOVED***of***REMOVED***mergedChunk.dependentChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentChunks.add(dependentChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentChunk.dependencies.delete(mergedChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentChunk.dependencies.add(bestTargetChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.delete(bestTargetChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependentChunks.delete(bestTargetChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getChunksInPartition(bestTargetChunk,***REMOVED***minChunkSize,***REMOVED***chunkPartition).add(bestTargetChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***addChunkDependenciesAndAtomsAndGetSideEffectAtoms(chunkLists,***REMOVED***chunkByModule,***REMOVED***numberOfEntries,***REMOVED***nextAtomSignature)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***signatureByExternalModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sideEffectAtoms***REMOVED***=***REMOVED***0n;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***atomsByEntry***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***numberOfEntries;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atomsByEntry.push(0n);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunks***REMOVED***of***REMOVED***chunkLists)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunks.sort(compareChunkSize);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dependencies,***REMOVED***dependentEntries,***REMOVED***modules***REMOVED***}***REMOVED***=***REMOVED***chunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.getDependenciesToBeIncluded())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency.info.moduleSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.containedAtoms***REMOVED***|=***REMOVED***getOrCreate(signatureByExternalModule,***REMOVED***dependency,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***signature***REMOVED***=***REMOVED***nextAtomSignature;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextAtomSignature***REMOVED***<<=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sideEffectAtoms***REMOVED***|=***REMOVED***signature;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***signature;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencyChunk***REMOVED***=***REMOVED***chunkByModule.get(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependencyChunk***REMOVED***&&***REMOVED***dependencyChunk***REMOVED***!==***REMOVED***chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(dependencyChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencyChunk.dependentChunks.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***containedAtoms***REMOVED***}***REMOVED***=***REMOVED***chunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entryIndex***REMOVED***of***REMOVED***dependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atomsByEntry[entryIndex]***REMOVED***|=***REMOVED***containedAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunks***REMOVED***of***REMOVED***chunkLists)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dependentEntries***REMOVED***}***REMOVED***=***REMOVED***chunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Correlated***REMOVED***atoms***REMOVED***are***REMOVED***the***REMOVED***intersection***REMOVED***of***REMOVED***all***REMOVED***entry***REMOVED***atoms
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.correlatedAtoms***REMOVED***=***REMOVED***-1n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entryIndex***REMOVED***of***REMOVED***dependentEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.correlatedAtoms***REMOVED***&=***REMOVED***atomsByEntry[entryIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sideEffectAtoms;
}
function***REMOVED***findBestMergeTarget(mergedChunk,***REMOVED***{***REMOVED***big,***REMOVED***sideEffectAtoms,***REMOVED***sizeByAtom,***REMOVED***small***REMOVED***},***REMOVED***smallestAdditionalSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bestTargetChunk***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***the***REMOVED***default***REMOVED***case,***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***accept***REMOVED***size***REMOVED***increases
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***targetChunk***REMOVED***of***REMOVED***concatLazy([small,***REMOVED***big]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mergedChunk***REMOVED***===***REMOVED***targetChunk)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***additionalSizeAfterMerge***REMOVED***=***REMOVED***getAdditionalSizeAfterMerge(mergedChunk,***REMOVED***targetChunk,***REMOVED***smallestAdditionalSize,***REMOVED***sideEffectAtoms,***REMOVED***sizeByAtom);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(additionalSizeAfterMerge***REMOVED***<***REMOVED***smallestAdditionalSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bestTargetChunk***REMOVED***=***REMOVED***targetChunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(additionalSizeAfterMerge***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***smallestAdditionalSize***REMOVED***=***REMOVED***additionalSizeAfterMerge;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***bestTargetChunk;
}
function***REMOVED***getChunksInPartition(chunk,***REMOVED***minChunkSize,***REMOVED***chunkPartition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***chunk.size***REMOVED***<***REMOVED***minChunkSize***REMOVED***?***REMOVED***chunkPartition.small***REMOVED***:***REMOVED***chunkPartition.big;
}
function***REMOVED***compareChunkSize({***REMOVED***size:***REMOVED***sizeA***REMOVED***},***REMOVED***{***REMOVED***size:***REMOVED***sizeB***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sizeA***REMOVED***-***REMOVED***sizeB;
}
/**
***REMOVED*******REMOVED***Determine***REMOVED***the***REMOVED***additional***REMOVED***unused***REMOVED***code***REMOVED***size***REMOVED***that***REMOVED***would***REMOVED***be***REMOVED***added***REMOVED***by***REMOVED***merging***REMOVED***the
***REMOVED*******REMOVED***two***REMOVED***chunks.***REMOVED***This***REMOVED***is***REMOVED***not***REMOVED***an***REMOVED***exact***REMOVED***measurement***REMOVED***but***REMOVED***rather***REMOVED***an***REMOVED***upper***REMOVED***bound.***REMOVED***If
***REMOVED*******REMOVED***the***REMOVED***merge***REMOVED***produces***REMOVED***cycles***REMOVED***or***REMOVED***adds***REMOVED***non-correlated***REMOVED***side***REMOVED***effects,***REMOVED***`Infinity`
***REMOVED*******REMOVED***is***REMOVED***returned.
***REMOVED*******REMOVED***Merging***REMOVED***will***REMOVED***not***REMOVED***produce***REMOVED***cycles***REMOVED***if***REMOVED***none***REMOVED***of***REMOVED***the***REMOVED***direct***REMOVED***non-merged
***REMOVED*******REMOVED***dependencies***REMOVED***of***REMOVED***a***REMOVED***chunk***REMOVED***have***REMOVED***the***REMOVED***other***REMOVED***chunk***REMOVED***as***REMOVED***a***REMOVED***transitive***REMOVED***dependency.
***REMOVED****/
function***REMOVED***getAdditionalSizeAfterMerge(mergedChunk,***REMOVED***targetChunk,***REMOVED***
//***REMOVED***The***REMOVED***maximum***REMOVED***additional***REMOVED***unused***REMOVED***code***REMOVED***size***REMOVED***allowed***REMOVED***to***REMOVED***be***REMOVED***added***REMOVED***by***REMOVED***the***REMOVED***merge,
//***REMOVED***taking***REMOVED***dependencies***REMOVED***into***REMOVED***account,***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***below***REMOVED***this***REMOVED***number
currentAdditionalSize,***REMOVED***sideEffectAtoms,***REMOVED***sizeByAtom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstSize***REMOVED***=***REMOVED***getAdditionalSizeIfNoTransitiveDependencyOrNonCorrelatedSideEffect(mergedChunk,***REMOVED***targetChunk,***REMOVED***currentAdditionalSize,***REMOVED***sideEffectAtoms,***REMOVED***sizeByAtom);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***firstSize***REMOVED***<***REMOVED***currentAdditionalSize
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***firstSize***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getAdditionalSizeIfNoTransitiveDependencyOrNonCorrelatedSideEffect(targetChunk,***REMOVED***mergedChunk,***REMOVED***currentAdditionalSize***REMOVED***-***REMOVED***firstSize,***REMOVED***sideEffectAtoms,***REMOVED***sizeByAtom)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***Infinity;
}
function***REMOVED***getAdditionalSizeIfNoTransitiveDependencyOrNonCorrelatedSideEffect(dependentChunk,***REMOVED***dependencyChunk,***REMOVED***currentAdditionalSize,***REMOVED***sideEffectAtoms,***REMOVED***sizeByAtom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***correlatedAtoms***REMOVED***}***REMOVED***=***REMOVED***dependencyChunk;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dependencyAtoms***REMOVED***=***REMOVED***dependentChunk.containedAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependentContainedSideEffects***REMOVED***=***REMOVED***dependencyAtoms***REMOVED***&***REMOVED***sideEffectAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((correlatedAtoms***REMOVED***&***REMOVED***dependentContainedSideEffects)***REMOVED***!==***REMOVED***dependentContainedSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunksToCheck***REMOVED***=***REMOVED***new***REMOVED***Set(dependentChunk.dependencies);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***dependencies,***REMOVED***containedAtoms***REMOVED***}***REMOVED***of***REMOVED***chunksToCheck)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencyAtoms***REMOVED***|=***REMOVED***containedAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***containedSideEffects***REMOVED***=***REMOVED***containedAtoms***REMOVED***&***REMOVED***sideEffectAtoms;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((correlatedAtoms***REMOVED***&***REMOVED***containedSideEffects)***REMOVED***!==***REMOVED***containedSideEffects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency***REMOVED***===***REMOVED***dependencyChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunksToCheck.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getAtomsSizeIfBelowLimit(dependencyAtoms***REMOVED***&***REMOVED***~correlatedAtoms,***REMOVED***currentAdditionalSize,***REMOVED***sizeByAtom);
}
function***REMOVED***getAtomsSizeIfBelowLimit(atoms,***REMOVED***currentAdditionalSize,***REMOVED***sizeByAtom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***size***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***atomIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***atomSignature***REMOVED***=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***sizeByAtom;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***atomIndex***REMOVED***<***REMOVED***length;***REMOVED***atomIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((atoms***REMOVED***&***REMOVED***atomSignature)***REMOVED***===***REMOVED***atomSignature)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***size***REMOVED***+=***REMOVED***sizeByAtom[atomIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atomSignature***REMOVED***<<=***REMOVED***1n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(size***REMOVED***>=***REMOVED***currentAdditionalSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***size;
}

//***REMOVED***ported***REMOVED***from***REMOVED***https://github.com/substack/node-commondir
function***REMOVED***commondir(files)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(files.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'/';
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(files.length***REMOVED***===***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node_path.dirname(files[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commonSegments***REMOVED***=***REMOVED***files.slice(1).reduce((commonSegments,***REMOVED***file)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pathSegements***REMOVED***=***REMOVED***file.split(/\/+|\\+/);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(index***REMOVED***=***REMOVED***0;***REMOVED***commonSegments[index]***REMOVED***===***REMOVED***pathSegements[index]***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***<***REMOVED***Math.min(commonSegments.length,***REMOVED***pathSegements.length);***REMOVED***index++)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***commonSegments.slice(0,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***files[0].split(/\/+|\\+/));
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Windows***REMOVED***correctly***REMOVED***handles***REMOVED***paths***REMOVED***with***REMOVED***forward-slashes
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***commonSegments.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***commonSegments.join('/')***REMOVED***:***REMOVED***'/';
}

const***REMOVED***compareExecIndex***REMOVED***=***REMOVED***(unitA,***REMOVED***unitB)***REMOVED***=>***REMOVED***unitA.execIndex***REMOVED***>***REMOVED***unitB.execIndex***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***-1;
function***REMOVED***sortByExecutionOrder(units)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***units.sort(compareExecIndex);
}
function***REMOVED***analyseModuleExecution(entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nextExecIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cyclePaths***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***analysedModules***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicImports***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parents***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***orderedModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***analyseModule***REMOVED***=***REMOVED***(module)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parents.has(dependency))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!analysedModules.has(dependency))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cyclePaths.push(getCyclePath(dependency,***REMOVED***module,***REMOVED***parents));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parents.set(dependency,***REMOVED***module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***analyseModule(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.implicitlyLoadedBefore)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImports.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***resolution***REMOVED***}***REMOVED***of***REMOVED***module.dynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolution***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImports.add(resolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***orderedModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.execIndex***REMOVED***=***REMOVED***nextExecIndex++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***analysedModules.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***currentEntry***REMOVED***of***REMOVED***entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parents.has(currentEntry))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parents.set(currentEntry,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***analyseModule(currentEntry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***currentEntry***REMOVED***of***REMOVED***dynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parents.has(currentEntry))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parents.set(currentEntry,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***analyseModule(currentEntry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***cyclePaths,***REMOVED***orderedModules***REMOVED***};
}
function***REMOVED***getCyclePath(module,***REMOVED***parent,***REMOVED***parents)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cycleSymbol***REMOVED***=***REMOVED***Symbol(module.id);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***path***REMOVED***=***REMOVED***[module.id];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nextModule***REMOVED***=***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED***module.cycles.add(cycleSymbol);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(nextModule***REMOVED***!==***REMOVED***module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextModule.cycles.add(cycleSymbol);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path.push(nextModule.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextModule***REMOVED***=***REMOVED***parents.get(nextModule);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***path.push(path[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***path.reverse();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path;
}

function***REMOVED***getGenerateCodeSnippets({***REMOVED***compact,***REMOVED***generatedCode:***REMOVED***{***REMOVED***arrowFunctions,***REMOVED***constBindings,***REMOVED***objectShorthand,***REMOVED***reservedNamesAsProps***REMOVED***}***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***_,***REMOVED***n,***REMOVED***s***REMOVED***}***REMOVED***=***REMOVED***compact***REMOVED***?***REMOVED***{***REMOVED***_:***REMOVED***'',***REMOVED***n:***REMOVED***'',***REMOVED***s:***REMOVED***''***REMOVED***}***REMOVED***:***REMOVED***{***REMOVED***_:***REMOVED***'***REMOVED***',***REMOVED***n:***REMOVED***'\n',***REMOVED***s:***REMOVED***';'***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cnst***REMOVED***=***REMOVED***constBindings***REMOVED***?***REMOVED***'const'***REMOVED***:***REMOVED***'var';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getNonArrowFunctionIntro***REMOVED***=***REMOVED***(parameters,***REMOVED***{***REMOVED***isAsync,***REMOVED***name***REMOVED***})***REMOVED***=>***REMOVED***`${isAsync***REMOVED***?***REMOVED***`async***REMOVED***`***REMOVED***:***REMOVED***''}function${name***REMOVED***?***REMOVED***`***REMOVED***${name}`***REMOVED***:***REMOVED***''}${_}(${parameters.join(`,${_}`)})${_}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getFunctionIntro***REMOVED***=***REMOVED***arrowFunctions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(parameters,***REMOVED***{***REMOVED***isAsync,***REMOVED***name***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***singleParameter***REMOVED***=***REMOVED***parameters.length***REMOVED***===***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***asyncString***REMOVED***=***REMOVED***isAsync***REMOVED***?***REMOVED***`async${singleParameter***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***_}`***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${name***REMOVED***?***REMOVED***`${cnst}***REMOVED***${name}${_}=${_}`***REMOVED***:***REMOVED***''}${asyncString}${singleParameter***REMOVED***?***REMOVED***parameters[0]***REMOVED***:***REMOVED***`(${parameters.join(`,${_}`)})`}${_}=>${_}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***getNonArrowFunctionIntro;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getDirectReturnFunction***REMOVED***=***REMOVED***(parameters,***REMOVED***{***REMOVED***functionReturn,***REMOVED***lineBreakIndent,***REMOVED***name***REMOVED***})***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${getFunctionIntro(parameters,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})}${arrowFunctions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***lineBreakIndent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${n}${lineBreakIndent.base}${lineBreakIndent.t}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`{${lineBreakIndent***REMOVED***?***REMOVED***`${n}${lineBreakIndent.base}${lineBreakIndent.t}`***REMOVED***:***REMOVED***_}${functionReturn***REMOVED***?***REMOVED***'return***REMOVED***'***REMOVED***:***REMOVED***''}`}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrowFunctions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`${name***REMOVED***?***REMOVED***';'***REMOVED***:***REMOVED***''}${lineBreakIndent***REMOVED***?***REMOVED***`${n}${lineBreakIndent.base}`***REMOVED***:***REMOVED***''}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${s}${lineBreakIndent***REMOVED***?***REMOVED***`${n}${lineBreakIndent.base}`***REMOVED***:***REMOVED***_}}`
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isValidPropertyName***REMOVED***=***REMOVED***reservedNamesAsProps
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(name)***REMOVED***=>***REMOVED***validPropertyName.test(name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(name)***REMOVED***=>***REMOVED***!RESERVED_NAMES$1.has(name)***REMOVED***&&***REMOVED***validPropertyName.test(name);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cnst,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getDirectReturnFunction,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getDirectReturnIifeLeft:***REMOVED***(parameters,***REMOVED***returned,***REMOVED***{***REMOVED***needsArrowReturnParens,***REMOVED***needsWrappedFunction***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***getDirectReturnFunction(parameters,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionReturn:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineBreakIndent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${wrapIfNeeded(`${left}${wrapIfNeeded(returned,***REMOVED***arrowFunctions***REMOVED***&&***REMOVED***needsArrowReturnParens)}${right}`,***REMOVED***arrowFunctions***REMOVED***||***REMOVED***needsWrappedFunction)}(`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getFunctionIntro,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getNonArrowFunctionIntro,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getObject(fields,***REMOVED***{***REMOVED***lineBreakIndent***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prefix***REMOVED***=***REMOVED***lineBreakIndent***REMOVED***?***REMOVED***`${n}${lineBreakIndent.base}${lineBreakIndent.t}`***REMOVED***:***REMOVED***_;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`{${fields
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(([key,***REMOVED***value])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${prefix}${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needsQuotes***REMOVED***=***REMOVED***!isValidPropertyName(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key***REMOVED***===***REMOVED***value***REMOVED***&&***REMOVED***objectShorthand***REMOVED***&&***REMOVED***!needsQuotes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***prefix***REMOVED***+***REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${prefix}${needsQuotes***REMOVED***?***REMOVED***`'${key}'`***REMOVED***:***REMOVED***key}:${_}${value}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(`,`)}${fields.length***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***lineBreakIndent***REMOVED***?***REMOVED***`${n}${lineBreakIndent.base}`***REMOVED***:***REMOVED***_}}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getPropertyAccess:***REMOVED***(name)***REMOVED***=>***REMOVED***isValidPropertyName(name)***REMOVED***?***REMOVED***`.${name}`***REMOVED***:***REMOVED***`[${JSON.stringify(name)}]`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
const***REMOVED***wrapIfNeeded***REMOVED***=***REMOVED***(code,***REMOVED***needsParens)***REMOVED***=>***REMOVED***needsParens***REMOVED***?***REMOVED***`(${code})`***REMOVED***:***REMOVED***code;
const***REMOVED***validPropertyName***REMOVED***=***REMOVED***/^(?!\d)[\w$]+$/;

class***REMOVED***Source***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(filename,***REMOVED***content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isOriginal***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.filename***REMOVED***=***REMOVED***filename;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.content***REMOVED***=***REMOVED***content;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***traceSegment(line,***REMOVED***column,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***column,***REMOVED***line,***REMOVED***name,***REMOVED***source:***REMOVED***this***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
class***REMOVED***Link***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(map,***REMOVED***sources)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sources***REMOVED***=***REMOVED***sources;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.names***REMOVED***=***REMOVED***map.names;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.mappings***REMOVED***=***REMOVED***map.mappings;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***traceMappings()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sources***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceIndexMap***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcesContent***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***names***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nameIndexMap***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***line***REMOVED***of***REMOVED***this.mappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tracedLine***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***segment***REMOVED***of***REMOVED***line)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***this.sources[segment[1]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traced***REMOVED***=***REMOVED***source.traceSegment(segment[2],***REMOVED***segment[3],***REMOVED***segment.length***REMOVED***===***REMOVED***5***REMOVED***?***REMOVED***this.names[segment[4]]***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(traced)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***column,***REMOVED***line,***REMOVED***name,***REMOVED***source:***REMOVED***{***REMOVED***content,***REMOVED***filename***REMOVED***}***REMOVED***}***REMOVED***=***REMOVED***traced;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sourceIndex***REMOVED***=***REMOVED***sourceIndexMap.get(filename);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceIndex***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex***REMOVED***=***REMOVED***sources.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources.push(filename);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndexMap.set(filename,***REMOVED***sourceIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesContent[sourceIndex]***REMOVED***=***REMOVED***content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(sourcesContent[sourceIndex]***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesContent[sourceIndex]***REMOVED***=***REMOVED***content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***sourcesContent[sourceIndex]***REMOVED***!==***REMOVED***content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logConflictingSourcemapSources(filename));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tracedSegment***REMOVED***=***REMOVED***[segment[0],***REMOVED***sourceIndex,***REMOVED***line,***REMOVED***column];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nameIndex***REMOVED***=***REMOVED***nameIndexMap.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nameIndex***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nameIndex***REMOVED***=***REMOVED***names.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names.push(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nameIndexMap.set(name,***REMOVED***nameIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tracedSegment[4]***REMOVED***=***REMOVED***nameIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tracedLine.push(tracedSegment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings.push(tracedLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***mappings,***REMOVED***names,***REMOVED***sources,***REMOVED***sourcesContent***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***traceSegment(line,***REMOVED***column,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***segments***REMOVED***=***REMOVED***this.mappings[line];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!segments)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***binary***REMOVED***search***REMOVED***through***REMOVED***segments***REMOVED***for***REMOVED***the***REMOVED***given***REMOVED***column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***searchStart***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***searchEnd***REMOVED***=***REMOVED***segments.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(searchStart***REMOVED***<=***REMOVED***searchEnd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***m***REMOVED***=***REMOVED***(searchStart***REMOVED***+***REMOVED***searchEnd)***REMOVED***>>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***segment***REMOVED***=***REMOVED***segments[m];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***a***REMOVED***sourcemap***REMOVED***does***REMOVED***not***REMOVED***have***REMOVED***sufficient***REMOVED***resolution***REMOVED***to***REMOVED***contain***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***necessary***REMOVED***mapping,***REMOVED***e.g.***REMOVED***because***REMOVED***it***REMOVED***only***REMOVED***contains***REMOVED***line***REMOVED***information,***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***the***REMOVED***best***REMOVED***approximation***REMOVED***we***REMOVED***could***REMOVED***find
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment[0]***REMOVED***===***REMOVED***column***REMOVED***||***REMOVED***searchStart***REMOVED***===***REMOVED***searchEnd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***==***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***this.sources[segment[1]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source.traceSegment(segment[2],***REMOVED***segment[3],***REMOVED***segment.length***REMOVED***===***REMOVED***5***REMOVED***?***REMOVED***this.names[segment[4]]***REMOVED***:***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment[0]***REMOVED***>***REMOVED***column)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchEnd***REMOVED***=***REMOVED***m***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchStart***REMOVED***=***REMOVED***m***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getLinkMap(log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***linkMap(source,***REMOVED***map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!map.missing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Link(map,***REMOVED***[source]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logSourcemapBroken(map.plugin));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Link({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[source]);
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***getCollapsedSourcemap(id,***REMOVED***originalCode,***REMOVED***originalSourcemap,***REMOVED***sourcemapChain,***REMOVED***linkMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalSourcemap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sources***REMOVED***=***REMOVED***originalSourcemap.sources;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcesContent***REMOVED***=***REMOVED***originalSourcemap.sourcesContent***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directory***REMOVED***=***REMOVED***node_path.dirname(id)***REMOVED***||***REMOVED***'.';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceRoot***REMOVED***=***REMOVED***originalSourcemap.sourceRoot***REMOVED***||***REMOVED***'.';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***baseSources***REMOVED***=***REMOVED***sources.map((source,***REMOVED***index)***REMOVED***=>***REMOVED***new***REMOVED***Source(node_path.resolve(directory,***REMOVED***sourceRoot,***REMOVED***source),***REMOVED***sourcesContent[index]));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***new***REMOVED***Link(originalSourcemap,***REMOVED***baseSources);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***new***REMOVED***Source(id,***REMOVED***originalCode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sourcemapChain.reduce(linkMap,***REMOVED***source);
}
function***REMOVED***collapseSourcemaps(file,***REMOVED***map,***REMOVED***modules,***REMOVED***bundleSourcemapChain,***REMOVED***excludeContent,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***linkMap***REMOVED***=***REMOVED***getLinkMap(log);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleSources***REMOVED***=***REMOVED***modules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(module***REMOVED***=>***REMOVED***!module.excludeFromSourcemap)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(module***REMOVED***=>***REMOVED***getCollapsedSourcemap(module.id,***REMOVED***module.originalCode,***REMOVED***module.originalSourcemap,***REMOVED***module.sourcemapChain,***REMOVED***linkMap));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***link***REMOVED***=***REMOVED***new***REMOVED***Link(map,***REMOVED***moduleSources);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***bundleSourcemapChain.reduce(linkMap,***REMOVED***link);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***sources,***REMOVED***sourcesContent,***REMOVED***names,***REMOVED***mappings***REMOVED***}***REMOVED***=***REMOVED***source.traceMappings();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directory***REMOVED***=***REMOVED***node_path.dirname(file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources***REMOVED***=***REMOVED***sources.map((source)***REMOVED***=>***REMOVED***node_path.relative(directory,***REMOVED***source));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***node_path.basename(file);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***sourcesContent***REMOVED***=***REMOVED***(excludeContent***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***sourcesContent);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetSourcemapCache(module.originalSourcemap,***REMOVED***module.sourcemapChain);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***SourceMap({***REMOVED***file,***REMOVED***mappings,***REMOVED***names,***REMOVED***sources,***REMOVED***sourcesContent***REMOVED***});
}
function***REMOVED***collapseSourcemap(id,***REMOVED***originalCode,***REMOVED***originalSourcemap,***REMOVED***sourcemapChain,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcemapChain.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***originalSourcemap;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***getCollapsedSourcemap(id,***REMOVED***originalCode,***REMOVED***originalSourcemap,***REMOVED***sourcemapChain,***REMOVED***getLinkMap(log));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***source.traceMappings();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***decodedSourcemap({***REMOVED***version:***REMOVED***3,***REMOVED***...map***REMOVED***});
}

async***REMOVED***function***REMOVED***renderChunks(chunks,***REMOVED***bundle,***REMOVED***pluginDriver,***REMOVED***outputOptions,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***timeStart('render***REMOVED***chunks',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***reserveEntryChunksInBundle(chunks);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedChunks***REMOVED***=***REMOVED***await***REMOVED***Promise.all(chunks.map(chunk***REMOVED***=>***REMOVED***chunk.render()));
***REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('render***REMOVED***chunks',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***timeStart('transform***REMOVED***chunks',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkGraph***REMOVED***=***REMOVED***getChunkGraph(chunks);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***initialHashesByPlaceholder,***REMOVED***nonHashedChunksWithPlaceholders,***REMOVED***renderedChunksByPlaceholder,***REMOVED***hashDependenciesByPlaceholder***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***transformChunksAndGenerateContentHashes(renderedChunks,***REMOVED***chunkGraph,***REMOVED***outputOptions,***REMOVED***pluginDriver,***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashesByPlaceholder***REMOVED***=***REMOVED***generateFinalHashes(renderedChunksByPlaceholder,***REMOVED***hashDependenciesByPlaceholder,***REMOVED***initialHashesByPlaceholder,***REMOVED***bundle);
***REMOVED******REMOVED******REMOVED******REMOVED***addChunksToBundle(renderedChunksByPlaceholder,***REMOVED***hashesByPlaceholder,***REMOVED***bundle,***REMOVED***nonHashedChunksWithPlaceholders,***REMOVED***pluginDriver,***REMOVED***outputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('transform***REMOVED***chunks',***REMOVED***2);
}
function***REMOVED***reserveEntryChunksInBundle(chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk.facadeModule***REMOVED***&&***REMOVED***chunk.facadeModule.isUserDefinedEntryPoint)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reserves***REMOVED***name***REMOVED***in***REMOVED***bundle***REMOVED***as***REMOVED***side***REMOVED***effect***REMOVED***if***REMOVED***it***REMOVED***does***REMOVED***not***REMOVED***contain***REMOVED***a***REMOVED***hash
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.getPreliminaryFileName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***getChunkGraph(chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.fromEntries(chunks.map(chunk***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedChunkInfo***REMOVED***=***REMOVED***chunk.getRenderedChunkInfo();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[renderedChunkInfo.fileName,***REMOVED***renderedChunkInfo];
***REMOVED******REMOVED******REMOVED******REMOVED***}));
}
async***REMOVED***function***REMOVED***transformChunk(magicString,***REMOVED***fileName,***REMOVED***usedModules,***REMOVED***chunkGraph,***REMOVED***options,***REMOVED***outputPluginDriver,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***map***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemapChain***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***code***REMOVED***=***REMOVED***await***REMOVED***outputPluginDriver.hookReduceArg0('renderChunk',***REMOVED***[magicString.toString(),***REMOVED***chunkGraph[fileName],***REMOVED***options,***REMOVED***{***REMOVED***chunks:***REMOVED***chunkGraph***REMOVED***}],***REMOVED***(code,***REMOVED***result,***REMOVED***plugin)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***result***REMOVED***===***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***result,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***strict***REMOVED***null***REMOVED***check***REMOVED***allows***REMOVED***'null'***REMOVED***maps***REMOVED***to***REMOVED***not***REMOVED***be***REMOVED***pushed***REMOVED***to***REMOVED***the***REMOVED***chain,***REMOVED***while***REMOVED***'undefined'***REMOVED***gets***REMOVED***the***REMOVED***missing***REMOVED***map***REMOVED***warning
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.map***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***decodedSourcemap(result.map);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapChain.push(map***REMOVED***||***REMOVED***{***REMOVED***missing:***REMOVED***true,***REMOVED***plugin:***REMOVED***plugin.name***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.code;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***compact,***REMOVED***dir,***REMOVED***file,***REMOVED***sourcemap,***REMOVED***sourcemapExcludeSources,***REMOVED***sourcemapFile,***REMOVED***sourcemapPathTransform,***REMOVED***sourcemapIgnoreList***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!compact***REMOVED***&&***REMOVED***code[code.length***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***'\n')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***+=***REMOVED***'\n';
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcemap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('sourcemaps',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resultingFile;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resultingFile***REMOVED***=***REMOVED***node_path.resolve(sourcemapFile***REMOVED***||***REMOVED***file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(dir)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resultingFile***REMOVED***=***REMOVED***node_path.resolve(dir,***REMOVED***fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resultingFile***REMOVED***=***REMOVED***node_path.resolve(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decodedMap***REMOVED***=***REMOVED***magicString.generateDecodedMap({});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map***REMOVED***=***REMOVED***collapseSourcemaps(resultingFile,***REMOVED***decodedMap,***REMOVED***usedModules,***REMOVED***sourcemapChain,***REMOVED***sourcemapExcludeSources,***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***sourcesIndex***REMOVED***=***REMOVED***0;***REMOVED***sourcesIndex***REMOVED***<***REMOVED***map.sources.length;***REMOVED***++sourcesIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sourcePath***REMOVED***=***REMOVED***map.sources[sourcesIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemapPath***REMOVED***=***REMOVED***`${resultingFile}.map`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ignoreList***REMOVED***=***REMOVED***sourcemapIgnoreList(sourcePath,***REMOVED***sourcemapPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***ignoreList***REMOVED***!==***REMOVED***'boolean')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logFailedValidation('sourcemapIgnoreList***REMOVED***function***REMOVED***must***REMOVED***return***REMOVED***a***REMOVED***boolean.'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ignoreList)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map.x_google_ignoreList***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.x_google_ignoreList***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!map.x_google_ignoreList.includes(sourcesIndex))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.x_google_ignoreList.push(sourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcemapPathTransform)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcePath***REMOVED***=***REMOVED***sourcemapPathTransform(sourcePath,***REMOVED***sourcemapPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***sourcePath***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logFailedValidation(`sourcemapPathTransform***REMOVED***function***REMOVED***must***REMOVED***return***REMOVED***a***REMOVED***string.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.sources[sourcesIndex]***REMOVED***=***REMOVED***normalize(sourcePath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('sourcemaps',***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
async***REMOVED***function***REMOVED***transformChunksAndGenerateContentHashes(renderedChunks,***REMOVED***chunkGraph,***REMOVED***outputOptions,***REMOVED***pluginDriver,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonHashedChunksWithPlaceholders***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***renderedChunksByPlaceholder***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashDependenciesByPlaceholder***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***initialHashesByPlaceholder***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placeholders***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***preliminaryFileName:***REMOVED***{***REMOVED***hashPlaceholder***REMOVED***}***REMOVED***}***REMOVED***of***REMOVED***renderedChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hashPlaceholder)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placeholders.add(hashPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(renderedChunks.map(async***REMOVED***({***REMOVED***chunk,***REMOVED***preliminaryFileName:***REMOVED***{***REMOVED***fileName,***REMOVED***hashPlaceholder***REMOVED***},***REMOVED***preliminarySourcemapFileName,***REMOVED***magicString,***REMOVED***usedModules***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***transformedChunk***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileName:***REMOVED***preliminarySourcemapFileName?.fileName***REMOVED***??***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(await***REMOVED***transformChunk(magicString,***REMOVED***fileName,***REMOVED***usedModules,***REMOVED***chunkGraph,***REMOVED***outputOptions,***REMOVED***pluginDriver,***REMOVED***log))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***code,***REMOVED***map***REMOVED***}***REMOVED***=***REMOVED***transformedChunk;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hashPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***create***REMOVED***a***REMOVED***reproducible***REMOVED***content-only***REMOVED***hash,***REMOVED***all***REMOVED***placeholders***REMOVED***are
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***replaced***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***value***REMOVED***before***REMOVED***hashing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***containedPlaceholders,***REMOVED***transformedCode***REMOVED***}***REMOVED***=***REMOVED***replacePlaceholdersWithDefaultAndGetContainedPlaceholders(code,***REMOVED***placeholders);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hash***REMOVED***=***REMOVED***createHash().update(transformedCode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashAugmentation***REMOVED***=***REMOVED***pluginDriver.hookReduceValueSync('augmentChunkHash',***REMOVED***'',***REMOVED***[chunk.getRenderedChunkInfo()],***REMOVED***(augmentation,***REMOVED***pluginHash)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginHash)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***augmentation***REMOVED***+=***REMOVED***pluginHash;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***augmentation;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hashAugmentation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash.update(hashAugmentation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedChunksByPlaceholder.set(hashPlaceholder,***REMOVED***transformedChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashDependenciesByPlaceholder.set(hashPlaceholder,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***containedPlaceholders,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contentHash:***REMOVED***hash.digest('hex')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nonHashedChunksWithPlaceholders.push(transformedChunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemapHashPlaceholder***REMOVED***=***REMOVED***preliminarySourcemapFileName?.hashPlaceholder;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map***REMOVED***&&***REMOVED***sourcemapHashPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialHashesByPlaceholder.set(preliminarySourcemapFileName.hashPlaceholder,***REMOVED***createHash()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.update(map.toString())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.digest('hex')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.slice(0,***REMOVED***preliminarySourcemapFileName.hashPlaceholder.length));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashDependenciesByPlaceholder,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialHashesByPlaceholder,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nonHashedChunksWithPlaceholders,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderedChunksByPlaceholder
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***generateFinalHashes(renderedChunksByPlaceholder,***REMOVED***hashDependenciesByPlaceholder,***REMOVED***initialHashesByPlaceholder,***REMOVED***bundle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashesByPlaceholder***REMOVED***=***REMOVED***new***REMOVED***Map(initialHashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[placeholder,***REMOVED***{***REMOVED***fileName***REMOVED***}]***REMOVED***of***REMOVED***renderedChunksByPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hash***REMOVED***=***REMOVED***createHash();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashDependencyPlaceholders***REMOVED***=***REMOVED***new***REMOVED***Set([placeholder]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependencyPlaceholder***REMOVED***of***REMOVED***hashDependencyPlaceholders)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***containedPlaceholders,***REMOVED***contentHash***REMOVED***}***REMOVED***=***REMOVED***hashDependenciesByPlaceholder.get(dependencyPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash.update(contentHash);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***containedPlaceholder***REMOVED***of***REMOVED***containedPlaceholders)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***looping***REMOVED***over***REMOVED***a***REMOVED***map,***REMOVED***setting***REMOVED***an***REMOVED***entry***REMOVED***only***REMOVED***causes***REMOVED***a***REMOVED***new***REMOVED***iteration***REMOVED***if***REMOVED***the***REMOVED***key***REMOVED***is***REMOVED***new
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashDependencyPlaceholders.add(containedPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***finalFileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***finalHash;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***case***REMOVED***of***REMOVED***a***REMOVED***hash***REMOVED***collision,***REMOVED***create***REMOVED***a***REMOVED***hash***REMOVED***of***REMOVED***the***REMOVED***hash
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(finalHash)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***createHash().update(finalHash);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalHash***REMOVED***=***REMOVED***hash.digest('hex').slice(0,***REMOVED***placeholder.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalFileName***REMOVED***=***REMOVED***replaceSinglePlaceholder(fileName,***REMOVED***placeholder,***REMOVED***finalHash);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(bundle[lowercaseBundleKeys].has(finalFileName.toLowerCase()));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle[finalFileName]***REMOVED***=***REMOVED***FILE_PLACEHOLDER;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashesByPlaceholder.set(placeholder,***REMOVED***finalHash);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hashesByPlaceholder;
}
function***REMOVED***addChunksToBundle(renderedChunksByPlaceholder,***REMOVED***hashesByPlaceholder,***REMOVED***bundle,***REMOVED***nonHashedChunksWithPlaceholders,***REMOVED***pluginDriver,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***chunk,***REMOVED***code,***REMOVED***fileName,***REMOVED***sourcemapFileName,***REMOVED***map***REMOVED***}***REMOVED***of***REMOVED***renderedChunksByPlaceholder.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***updatedCode***REMOVED***=***REMOVED***replacePlaceholders(code,***REMOVED***hashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finalFileName***REMOVED***=***REMOVED***replacePlaceholders(fileName,***REMOVED***hashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***finalSourcemapFileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalSourcemapFileName***REMOVED***=***REMOVED***sourcemapFileName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***replacePlaceholders(sourcemapFileName,***REMOVED***hashesByPlaceholder)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${finalFileName}.map`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.file***REMOVED***=***REMOVED***replacePlaceholders(map.file,***REMOVED***hashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updatedCode***REMOVED***+=***REMOVED***emitSourceMapAndGetComment(finalSourcemapFileName,***REMOVED***map,***REMOVED***pluginDriver,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle[finalFileName]***REMOVED***=***REMOVED***chunk.finalizeChunk(updatedCode,***REMOVED***map,***REMOVED***finalSourcemapFileName,***REMOVED***hashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***chunk,***REMOVED***code,***REMOVED***fileName,***REMOVED***sourcemapFileName,***REMOVED***map***REMOVED***}***REMOVED***of***REMOVED***nonHashedChunksWithPlaceholders)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***updatedCode***REMOVED***=***REMOVED***hashesByPlaceholder.size***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***replacePlaceholders(code,***REMOVED***hashesByPlaceholder)***REMOVED***:***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***finalSourcemapFileName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalSourcemapFileName***REMOVED***=***REMOVED***sourcemapFileName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***replacePlaceholders(sourcemapFileName,***REMOVED***hashesByPlaceholder)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${fileName}.map`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updatedCode***REMOVED***+=***REMOVED***emitSourceMapAndGetComment(finalSourcemapFileName,***REMOVED***map,***REMOVED***pluginDriver,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bundle[fileName]***REMOVED***=***REMOVED***chunk.finalizeChunk(updatedCode,***REMOVED***map,***REMOVED***finalSourcemapFileName,***REMOVED***hashesByPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***emitSourceMapAndGetComment(fileName,***REMOVED***map,***REMOVED***pluginDriver,***REMOVED***{***REMOVED***sourcemap,***REMOVED***sourcemapBaseUrl***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***url;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcemap***REMOVED***===***REMOVED***'inline')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***map.toUrl();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemapFileName***REMOVED***=***REMOVED***node_path.basename(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***sourcemapBaseUrl
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***new***REMOVED***URL(sourcemapFileName,***REMOVED***sourcemapBaseUrl).toString()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***sourcemapFileName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginDriver.emitFile({***REMOVED***fileName,***REMOVED***source:***REMOVED***map.toString(),***REMOVED***type:***REMOVED***'asset'***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sourcemap***REMOVED***===***REMOVED***'hidden'***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***`//#***REMOVED***${SOURCEMAPPING_URL}=${url}\n`;
}

class***REMOVED***Bundle***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(outputOptions,***REMOVED***unsetOptions,***REMOVED***inputOptions,***REMOVED***pluginDriver,***REMOVED***graph)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputOptions***REMOVED***=***REMOVED***outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unsetOptions***REMOVED***=***REMOVED***unsetOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputOptions***REMOVED***=***REMOVED***inputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver***REMOVED***=***REMOVED***pluginDriver;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph***REMOVED***=***REMOVED***graph;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.facadeChunkByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includedNamespaces***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***generate(isWrite)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('GENERATE',***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputBundleBase***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputBundle***REMOVED***=***REMOVED***getOutputBundle(outputBundleBase);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver.setOutputBundle(outputBundle,***REMOVED***this.outputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('initialize***REMOVED***render',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.pluginDriver.hookParallel('renderStart',***REMOVED***[this.outputOptions,***REMOVED***this.inputOptions]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('initialize***REMOVED***render',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('generate***REMOVED***chunks',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getHashPlaceholder***REMOVED***=***REMOVED***getHashPlaceholderGenerator();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunks***REMOVED***=***REMOVED***await***REMOVED***this.generateChunks(outputBundle,***REMOVED***getHashPlaceholder);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunks.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateOptionsForMultiChunkOutput(this.outputOptions,***REMOVED***this.inputOptions.onLog);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver.setChunkInformation(this.facadeChunkByModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.generateExports();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('generate***REMOVED***chunks',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***renderChunks(chunks,***REMOVED***outputBundle,***REMOVED***this.pluginDriver,***REMOVED***this.outputOptions,***REMOVED***this.inputOptions.onLog);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.pluginDriver.hookParallel('renderError',***REMOVED***[error_]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error_;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeUnreferencedAssets(outputBundle);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('generate***REMOVED***bundle',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.pluginDriver.hookSeq('generateBundle',***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputBundle,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isWrite
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finaliseAssets(outputBundle);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('generate***REMOVED***bundle',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('GENERATE',***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***outputBundleBase;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***addManualChunks(manualChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunkAliasByEntry***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkEntries***REMOVED***=***REMOVED***await***REMOVED***Promise.all(Object.entries(manualChunks).map(async***REMOVED***([alias,***REMOVED***files])***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alias,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entries:***REMOVED***await***REMOVED***this.graph.moduleLoader.addAdditionalModules(files,***REMOVED***true)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***alias,***REMOVED***entries***REMOVED***}***REMOVED***of***REMOVED***chunkEntries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***entry***REMOVED***of***REMOVED***entries)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addModuleToManualChunk(alias,***REMOVED***entry,***REMOVED***manualChunkAliasByEntry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***manualChunkAliasByEntry;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***assignManualChunks(getManualChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-module
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunkAliasesWithEntry***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunksApi***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getModuleIds:***REMOVED***()***REMOVED***=>***REMOVED***this.graph.modulesById.keys(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getModuleInfo:***REMOVED***this.graph.getModuleInfo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.graph.modulesById.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunkAlias***REMOVED***=***REMOVED***getManualChunk(module.id,***REMOVED***manualChunksApi);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***manualChunkAlias***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunkAliasesWithEntry.push([manualChunkAlias,***REMOVED***module]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunkAliasesWithEntry.sort(([aliasA],***REMOVED***[aliasB])***REMOVED***=>***REMOVED***aliasA***REMOVED***>***REMOVED***aliasB***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***aliasA***REMOVED***<***REMOVED***aliasB***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunkAliasByEntry***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[alias,***REMOVED***module]***REMOVED***of***REMOVED***manualChunkAliasesWithEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addModuleToManualChunk(alias,***REMOVED***module,***REMOVED***manualChunkAliasByEntry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***manualChunkAliasByEntry;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finaliseAssets(bundle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.outputOptions.validate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***file***REMOVED***of***REMOVED***Object.values(bundle))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***('code'***REMOVED***in***REMOVED***file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.contextParse(file.code,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ecmaVersion:***REMOVED***'latest'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inputOptions.onLog(LOGLEVEL_WARN,***REMOVED***logChunkInvalid(file,***REMOVED***error_));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver.finaliseAssets();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***generateChunks(bundle,***REMOVED***getHashPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***experimentalMinChunkSize,***REMOVED***inlineDynamicImports,***REMOVED***manualChunks,***REMOVED***preserveModules***REMOVED***}***REMOVED***=***REMOVED***this.outputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***manualChunkAliasByEntry***REMOVED***=***REMOVED***typeof***REMOVED***manualChunks***REMOVED***===***REMOVED***'object'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***await***REMOVED***this.addManualChunks(manualChunks)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.assignManualChunks(manualChunks);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***snippets***REMOVED***=***REMOVED***getGenerateCodeSnippets(this.outputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***includedModules***REMOVED***=***REMOVED***getIncludedModules(this.graph.modulesById);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inputBase***REMOVED***=***REMOVED***commondir(getAbsoluteEntryModulePaths(includedModules,***REMOVED***preserveModules));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***externalChunkByModule***REMOVED***=***REMOVED***getExternalChunkByModule(this.graph.modulesById,***REMOVED***this.outputOptions,***REMOVED***inputBase);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunks***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***alias,***REMOVED***modules***REMOVED***}***REMOVED***of***REMOVED***inlineDynamicImports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[{***REMOVED***alias:***REMOVED***null,***REMOVED***modules:***REMOVED***includedModules***REMOVED***}]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***preserveModules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***includedModules.map(module***REMOVED***=>***REMOVED***({***REMOVED***alias:***REMOVED***null,***REMOVED***modules:***REMOVED***[module]***REMOVED***}))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***getChunkAssignments(this.graph.entryModules,***REMOVED***manualChunkAliasByEntry,***REMOVED***experimentalMinChunkSize,***REMOVED***this.inputOptions.onLog))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sortByExecutionOrder(modules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunk***REMOVED***=***REMOVED***new***REMOVED***Chunk(modules,***REMOVED***this.inputOptions,***REMOVED***this.outputOptions,***REMOVED***this.unsetOptions,***REMOVED***this.pluginDriver,***REMOVED***this.graph.modulesById,***REMOVED***chunkByModule,***REMOVED***externalChunkByModule,***REMOVED***this.facadeChunkByModule,***REMOVED***this.includedNamespaces,***REMOVED***alias,***REMOVED***getHashPlaceholder,***REMOVED***bundle,***REMOVED***inputBase,***REMOVED***snippets);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunks.push(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.link();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***facades***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***chunk***REMOVED***of***REMOVED***chunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***facades.push(...chunk.generateFacades());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...chunks,***REMOVED***...facades];
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***validateOptionsForMultiChunkOutput(outputOptions,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(outputOptions.format***REMOVED***===***REMOVED***'umd'***REMOVED***||***REMOVED***outputOptions.format***REMOVED***===***REMOVED***'iife')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.format',***REMOVED***URL_OUTPUT_FORMAT,***REMOVED***'UMD***REMOVED***and***REMOVED***IIFE***REMOVED***output***REMOVED***formats***REMOVED***are***REMOVED***not***REMOVED***supported***REMOVED***for***REMOVED***code-splitting***REMOVED***builds',***REMOVED***outputOptions.format));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***outputOptions.file***REMOVED***===***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.file',***REMOVED***URL_OUTPUT_DIR,***REMOVED***'when***REMOVED***building***REMOVED***multiple***REMOVED***chunks,***REMOVED***the***REMOVED***"output.dir"***REMOVED***option***REMOVED***must***REMOVED***be***REMOVED***used,***REMOVED***not***REMOVED***"output.file".***REMOVED***To***REMOVED***inline***REMOVED***dynamic***REMOVED***imports,***REMOVED***set***REMOVED***the***REMOVED***"inlineDynamicImports"***REMOVED***option'));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(outputOptions.sourcemapFile)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.sourcemapFile',***REMOVED***URL_OUTPUT_SOURCEMAPFILE,***REMOVED***'"output.sourcemapFile"***REMOVED***is***REMOVED***only***REMOVED***supported***REMOVED***for***REMOVED***single-file***REMOVED***builds'));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!outputOptions.amd.autoId***REMOVED***&&***REMOVED***outputOptions.amd.id)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logInvalidOption('output.amd.id',***REMOVED***URL_OUTPUT_AMD_ID,***REMOVED***'this***REMOVED***option***REMOVED***is***REMOVED***only***REMOVED***properly***REMOVED***supported***REMOVED***for***REMOVED***single-file***REMOVED***builds.***REMOVED***Use***REMOVED***"output.amd.autoId"***REMOVED***and***REMOVED***"output.amd.basePath"***REMOVED***instead'));
}
function***REMOVED***getIncludedModules(modulesById)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***includedModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modulesById.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***Module***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(module.isIncluded()***REMOVED***||***REMOVED***module.info.isEntry***REMOVED***||***REMOVED***module.includedDynamicImporters.length***REMOVED***>***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***includedModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***includedModules;
}
function***REMOVED***getAbsoluteEntryModulePaths(includedModules,***REMOVED***preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***absoluteEntryModulePaths***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***includedModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((module.info.isEntry***REMOVED***||***REMOVED***preserveModules)***REMOVED***&&***REMOVED***isAbsolute(module.id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***absoluteEntryModulePaths.push(module.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***absoluteEntryModulePaths;
}
function***REMOVED***getExternalChunkByModule(modulesById,***REMOVED***outputOptions,***REMOVED***inputBase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***externalChunkByModule***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***modulesById.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalChunkByModule.set(module,***REMOVED***new***REMOVED***ExternalChunk(module,***REMOVED***outputOptions,***REMOVED***inputBase));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***externalChunkByModule;
}
function***REMOVED***addModuleToManualChunk(alias,***REMOVED***module,***REMOVED***manualChunkAliasByEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingAlias***REMOVED***=***REMOVED***manualChunkAliasByEntry.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***existingAlias***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***existingAlias***REMOVED***!==***REMOVED***alias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logCannotAssignModuleToChunk(module.id,***REMOVED***alias,***REMOVED***existingAlias));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***manualChunkAliasByEntry.set(module,***REMOVED***alias);
}

//***REMOVED***This***REMOVED***file***REMOVED***was***REMOVED***generated.***REMOVED***Do***REMOVED***not***REMOVED***modify***REMOVED***manually!
var***REMOVED***astralIdentifierCodes***REMOVED***=***REMOVED***[509,***REMOVED***0,***REMOVED***227,***REMOVED***0,***REMOVED***150,***REMOVED***4,***REMOVED***294,***REMOVED***9,***REMOVED***1368,***REMOVED***2,***REMOVED***2,***REMOVED***1,***REMOVED***6,***REMOVED***3,***REMOVED***41,***REMOVED***2,***REMOVED***5,***REMOVED***0,***REMOVED***166,***REMOVED***1,***REMOVED***574,***REMOVED***3,***REMOVED***9,***REMOVED***9,***REMOVED***370,***REMOVED***1,***REMOVED***81,***REMOVED***2,***REMOVED***71,***REMOVED***10,***REMOVED***50,***REMOVED***3,***REMOVED***123,***REMOVED***2,***REMOVED***54,***REMOVED***14,***REMOVED***32,***REMOVED***10,***REMOVED***3,***REMOVED***1,***REMOVED***11,***REMOVED***3,***REMOVED***46,***REMOVED***10,***REMOVED***8,***REMOVED***0,***REMOVED***46,***REMOVED***9,***REMOVED***7,***REMOVED***2,***REMOVED***37,***REMOVED***13,***REMOVED***2,***REMOVED***9,***REMOVED***6,***REMOVED***1,***REMOVED***45,***REMOVED***0,***REMOVED***13,***REMOVED***2,***REMOVED***49,***REMOVED***13,***REMOVED***9,***REMOVED***3,***REMOVED***2,***REMOVED***11,***REMOVED***83,***REMOVED***11,***REMOVED***7,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***158,***REMOVED***11,***REMOVED***6,***REMOVED***9,***REMOVED***7,***REMOVED***3,***REMOVED***56,***REMOVED***1,***REMOVED***2,***REMOVED***6,***REMOVED***3,***REMOVED***1,***REMOVED***3,***REMOVED***2,***REMOVED***10,***REMOVED***0,***REMOVED***11,***REMOVED***1,***REMOVED***3,***REMOVED***6,***REMOVED***4,***REMOVED***4,***REMOVED***193,***REMOVED***17,***REMOVED***10,***REMOVED***9,***REMOVED***5,***REMOVED***0,***REMOVED***82,***REMOVED***19,***REMOVED***13,***REMOVED***9,***REMOVED***214,***REMOVED***6,***REMOVED***3,***REMOVED***8,***REMOVED***28,***REMOVED***1,***REMOVED***83,***REMOVED***16,***REMOVED***16,***REMOVED***9,***REMOVED***82,***REMOVED***12,***REMOVED***9,***REMOVED***9,***REMOVED***84,***REMOVED***14,***REMOVED***5,***REMOVED***9,***REMOVED***243,***REMOVED***14,***REMOVED***166,***REMOVED***9,***REMOVED***71,***REMOVED***5,***REMOVED***2,***REMOVED***1,***REMOVED***3,***REMOVED***3,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***1,***REMOVED***13,***REMOVED***9,***REMOVED***120,***REMOVED***6,***REMOVED***3,***REMOVED***6,***REMOVED***4,***REMOVED***0,***REMOVED***29,***REMOVED***9,***REMOVED***41,***REMOVED***6,***REMOVED***2,***REMOVED***3,***REMOVED***9,***REMOVED***0,***REMOVED***10,***REMOVED***10,***REMOVED***47,***REMOVED***15,***REMOVED***406,***REMOVED***7,***REMOVED***2,***REMOVED***7,***REMOVED***17,***REMOVED***9,***REMOVED***57,***REMOVED***21,***REMOVED***2,***REMOVED***13,***REMOVED***123,***REMOVED***5,***REMOVED***4,***REMOVED***0,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***0,***REMOVED***9,***REMOVED***9,***REMOVED***49,***REMOVED***4,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***4,***REMOVED***9,***REMOVED***9,***REMOVED***330,***REMOVED***3,***REMOVED***10,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***49,***REMOVED***6,***REMOVED***4,***REMOVED***4,***REMOVED***14,***REMOVED***9,***REMOVED***5351,***REMOVED***0,***REMOVED***7,***REMOVED***14,***REMOVED***13835,***REMOVED***9,***REMOVED***87,***REMOVED***9,***REMOVED***39,***REMOVED***4,***REMOVED***60,***REMOVED***6,***REMOVED***26,***REMOVED***9,***REMOVED***1014,***REMOVED***0,***REMOVED***2,***REMOVED***54,***REMOVED***8,***REMOVED***3,***REMOVED***82,***REMOVED***0,***REMOVED***12,***REMOVED***1,***REMOVED***19628,***REMOVED***1,***REMOVED***4706,***REMOVED***45,***REMOVED***3,***REMOVED***22,***REMOVED***543,***REMOVED***4,***REMOVED***4,***REMOVED***5,***REMOVED***9,***REMOVED***7,***REMOVED***3,***REMOVED***6,***REMOVED***31,***REMOVED***3,***REMOVED***149,***REMOVED***2,***REMOVED***1418,***REMOVED***49,***REMOVED***513,***REMOVED***54,***REMOVED***5,***REMOVED***49,***REMOVED***9,***REMOVED***0,***REMOVED***15,***REMOVED***0,***REMOVED***23,***REMOVED***4,***REMOVED***2,***REMOVED***14,***REMOVED***1361,***REMOVED***6,***REMOVED***2,***REMOVED***16,***REMOVED***3,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***4,***REMOVED***101,***REMOVED***0,***REMOVED***161,***REMOVED***6,***REMOVED***10,***REMOVED***9,***REMOVED***357,***REMOVED***0,***REMOVED***62,***REMOVED***13,***REMOVED***499,***REMOVED***13,***REMOVED***983,***REMOVED***6,***REMOVED***110,***REMOVED***6,***REMOVED***6,***REMOVED***9,***REMOVED***4759,***REMOVED***9,***REMOVED***787719,***REMOVED***239];

//***REMOVED***This***REMOVED***file***REMOVED***was***REMOVED***generated.***REMOVED***Do***REMOVED***not***REMOVED***modify***REMOVED***manually!
var***REMOVED***astralIdentifierStartCodes***REMOVED***=***REMOVED***[0,***REMOVED***11,***REMOVED***2,***REMOVED***25,***REMOVED***2,***REMOVED***18,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***14,***REMOVED***3,***REMOVED***13,***REMOVED***35,***REMOVED***122,***REMOVED***70,***REMOVED***52,***REMOVED***268,***REMOVED***28,***REMOVED***4,***REMOVED***48,***REMOVED***48,***REMOVED***31,***REMOVED***14,***REMOVED***29,***REMOVED***6,***REMOVED***37,***REMOVED***11,***REMOVED***29,***REMOVED***3,***REMOVED***35,***REMOVED***5,***REMOVED***7,***REMOVED***2,***REMOVED***4,***REMOVED***43,***REMOVED***157,***REMOVED***19,***REMOVED***35,***REMOVED***5,***REMOVED***35,***REMOVED***5,***REMOVED***39,***REMOVED***9,***REMOVED***51,***REMOVED***13,***REMOVED***10,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***10,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***68,***REMOVED***310,***REMOVED***10,***REMOVED***21,***REMOVED***11,***REMOVED***7,***REMOVED***25,***REMOVED***5,***REMOVED***2,***REMOVED***41,***REMOVED***2,***REMOVED***8,***REMOVED***70,***REMOVED***5,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***43,***REMOVED***2,***REMOVED***1,***REMOVED***4,***REMOVED***0,***REMOVED***3,***REMOVED***22,***REMOVED***11,***REMOVED***22,***REMOVED***10,***REMOVED***30,***REMOVED***66,***REMOVED***18,***REMOVED***2,***REMOVED***1,***REMOVED***11,***REMOVED***21,***REMOVED***11,***REMOVED***25,***REMOVED***71,***REMOVED***55,***REMOVED***7,***REMOVED***1,***REMOVED***65,***REMOVED***0,***REMOVED***16,***REMOVED***3,***REMOVED***2,***REMOVED***2,***REMOVED***2,***REMOVED***28,***REMOVED***43,***REMOVED***28,***REMOVED***4,***REMOVED***28,***REMOVED***36,***REMOVED***7,***REMOVED***2,***REMOVED***27,***REMOVED***28,***REMOVED***53,***REMOVED***11,***REMOVED***21,***REMOVED***11,***REMOVED***18,***REMOVED***14,***REMOVED***17,***REMOVED***111,***REMOVED***72,***REMOVED***56,***REMOVED***50,***REMOVED***14,***REMOVED***50,***REMOVED***14,***REMOVED***35,***REMOVED***349,***REMOVED***41,***REMOVED***7,***REMOVED***1,***REMOVED***79,***REMOVED***28,***REMOVED***11,***REMOVED***0,***REMOVED***9,***REMOVED***21,***REMOVED***43,***REMOVED***17,***REMOVED***47,***REMOVED***20,***REMOVED***28,***REMOVED***22,***REMOVED***13,***REMOVED***52,***REMOVED***58,***REMOVED***1,***REMOVED***3,***REMOVED***0,***REMOVED***14,***REMOVED***44,***REMOVED***33,***REMOVED***24,***REMOVED***27,***REMOVED***35,***REMOVED***30,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***9,***REMOVED***34,***REMOVED***4,***REMOVED***0,***REMOVED***13,***REMOVED***47,***REMOVED***15,***REMOVED***3,***REMOVED***22,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***36,***REMOVED***17,***REMOVED***2,***REMOVED***24,***REMOVED***20,***REMOVED***1,***REMOVED***64,***REMOVED***6,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***9,***REMOVED***8,***REMOVED***46,***REMOVED***39,***REMOVED***7,***REMOVED***3,***REMOVED***1,***REMOVED***3,***REMOVED***21,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***4,***REMOVED***4,***REMOVED***0,***REMOVED***19,***REMOVED***0,***REMOVED***13,***REMOVED***4,***REMOVED***159,***REMOVED***52,***REMOVED***19,***REMOVED***3,***REMOVED***21,***REMOVED***2,***REMOVED***31,***REMOVED***47,***REMOVED***21,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***185,***REMOVED***46,***REMOVED***42,***REMOVED***3,***REMOVED***37,***REMOVED***47,***REMOVED***21,***REMOVED***0,***REMOVED***60,***REMOVED***42,***REMOVED***14,***REMOVED***0,***REMOVED***72,***REMOVED***26,***REMOVED***38,***REMOVED***6,***REMOVED***186,***REMOVED***43,***REMOVED***117,***REMOVED***63,***REMOVED***32,***REMOVED***7,***REMOVED***3,***REMOVED***0,***REMOVED***3,***REMOVED***7,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***23,***REMOVED***16,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***95,***REMOVED***7,***REMOVED***3,***REMOVED***38,***REMOVED***17,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***29,***REMOVED***0,***REMOVED***11,***REMOVED***39,***REMOVED***8,***REMOVED***0,***REMOVED***22,***REMOVED***0,***REMOVED***12,***REMOVED***45,***REMOVED***20,***REMOVED***0,***REMOVED***19,***REMOVED***72,***REMOVED***264,***REMOVED***8,***REMOVED***2,***REMOVED***36,***REMOVED***18,***REMOVED***0,***REMOVED***50,***REMOVED***29,***REMOVED***113,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***37,***REMOVED***22,***REMOVED***0,***REMOVED***26,***REMOVED***5,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***31,***REMOVED***15,***REMOVED***0,***REMOVED***328,***REMOVED***18,***REMOVED***16,***REMOVED***0,***REMOVED***2,***REMOVED***12,***REMOVED***2,***REMOVED***33,***REMOVED***125,***REMOVED***0,***REMOVED***80,***REMOVED***921,***REMOVED***103,***REMOVED***110,***REMOVED***18,***REMOVED***195,***REMOVED***2637,***REMOVED***96,***REMOVED***16,***REMOVED***1071,***REMOVED***18,***REMOVED***5,***REMOVED***4026,***REMOVED***582,***REMOVED***8634,***REMOVED***568,***REMOVED***8,***REMOVED***30,***REMOVED***18,***REMOVED***78,***REMOVED***18,***REMOVED***29,***REMOVED***19,***REMOVED***47,***REMOVED***17,***REMOVED***3,***REMOVED***32,***REMOVED***20,***REMOVED***6,***REMOVED***18,***REMOVED***689,***REMOVED***63,***REMOVED***129,***REMOVED***74,***REMOVED***6,***REMOVED***0,***REMOVED***67,***REMOVED***12,***REMOVED***65,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***29,***REMOVED***6135,***REMOVED***9,***REMOVED***1237,***REMOVED***43,***REMOVED***8,***REMOVED***8936,***REMOVED***3,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***290,***REMOVED***16,***REMOVED***0,***REMOVED***30,***REMOVED***2,***REMOVED***3,***REMOVED***0,***REMOVED***15,***REMOVED***3,***REMOVED***9,***REMOVED***395,***REMOVED***2309,***REMOVED***106,***REMOVED***6,***REMOVED***12,***REMOVED***4,***REMOVED***8,***REMOVED***8,***REMOVED***9,***REMOVED***5991,***REMOVED***84,***REMOVED***2,***REMOVED***70,***REMOVED***2,***REMOVED***1,***REMOVED***3,***REMOVED***0,***REMOVED***3,***REMOVED***1,***REMOVED***3,***REMOVED***3,***REMOVED***2,***REMOVED***11,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***64,***REMOVED***2,***REMOVED***3,***REMOVED***3,***REMOVED***7,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***27,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***4,***REMOVED***2,***REMOVED***0,***REMOVED***4,***REMOVED***6,***REMOVED***2,***REMOVED***339,***REMOVED***3,***REMOVED***24,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***7,***REMOVED***1845,***REMOVED***30,***REMOVED***7,***REMOVED***5,***REMOVED***262,***REMOVED***61,***REMOVED***147,***REMOVED***44,***REMOVED***11,***REMOVED***6,***REMOVED***17,***REMOVED***0,***REMOVED***322,***REMOVED***29,***REMOVED***19,***REMOVED***43,***REMOVED***485,***REMOVED***27,***REMOVED***757,***REMOVED***6,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***196,***REMOVED***60,***REMOVED***67,***REMOVED***8,***REMOVED***0,***REMOVED***1205,***REMOVED***3,***REMOVED***2,***REMOVED***26,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***9,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***7,***REMOVED***0,***REMOVED***5,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***2,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***3,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***9,***REMOVED***2,***REMOVED***16,***REMOVED***6,***REMOVED***2,***REMOVED***2,***REMOVED***4,***REMOVED***2,***REMOVED***16,***REMOVED***4421,***REMOVED***42719,***REMOVED***33,***REMOVED***4153,***REMOVED***7,***REMOVED***221,***REMOVED***3,***REMOVED***5761,***REMOVED***15,***REMOVED***7472,***REMOVED***3104,***REMOVED***541,***REMOVED***1507,***REMOVED***4938,***REMOVED***6,***REMOVED***4191];

//***REMOVED***This***REMOVED***file***REMOVED***was***REMOVED***generated.***REMOVED***Do***REMOVED***not***REMOVED***modify***REMOVED***manually!
var***REMOVED***nonASCIIidentifierChars***REMOVED***=***REMOVED***"\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0898-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0cf3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ece\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";

//***REMOVED***This***REMOVED***file***REMOVED***was***REMOVED***generated.***REMOVED***Do***REMOVED***not***REMOVED***modify***REMOVED***manually!
var***REMOVED***nonASCIIidentifierStartChars***REMOVED***=***REMOVED***"\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ca\ua7d0\ua7d1\ua7d3\ua7d5-\ua7d9\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";

//***REMOVED***These***REMOVED***are***REMOVED***a***REMOVED***run-length***REMOVED***and***REMOVED***offset***REMOVED***encoded***REMOVED***representation***REMOVED***of***REMOVED***the
//***REMOVED***>0xffff***REMOVED***code***REMOVED***points***REMOVED***that***REMOVED***are***REMOVED***a***REMOVED***valid***REMOVED***part***REMOVED***of***REMOVED***identifiers.***REMOVED***The
//***REMOVED***offset***REMOVED***starts***REMOVED***at***REMOVED***0x10000,***REMOVED***and***REMOVED***each***REMOVED***pair***REMOVED***of***REMOVED***numbers***REMOVED***represents***REMOVED***an
//***REMOVED***offset***REMOVED***to***REMOVED***the***REMOVED***next***REMOVED***range,***REMOVED***and***REMOVED***then***REMOVED***a***REMOVED***size***REMOVED***of***REMOVED***the***REMOVED***range.

//***REMOVED***Reserved***REMOVED***word***REMOVED***lists***REMOVED***for***REMOVED***various***REMOVED***dialects***REMOVED***of***REMOVED***the***REMOVED***language

var***REMOVED***reservedWords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***3:***REMOVED***"abstract***REMOVED***boolean***REMOVED***byte***REMOVED***char***REMOVED***class***REMOVED***double***REMOVED***enum***REMOVED***export***REMOVED***extends***REMOVED***final***REMOVED***float***REMOVED***goto***REMOVED***implements***REMOVED***import***REMOVED***int***REMOVED***interface***REMOVED***long***REMOVED***native***REMOVED***package***REMOVED***private***REMOVED***protected***REMOVED***public***REMOVED***short***REMOVED***static***REMOVED***super***REMOVED***synchronized***REMOVED***throws***REMOVED***transient***REMOVED***volatile",
***REMOVED******REMOVED***5:***REMOVED***"class***REMOVED***enum***REMOVED***extends***REMOVED***super***REMOVED***const***REMOVED***export***REMOVED***import",
***REMOVED******REMOVED***6:***REMOVED***"enum",
***REMOVED******REMOVED***strict:***REMOVED***"implements***REMOVED***interface***REMOVED***let***REMOVED***package***REMOVED***private***REMOVED***protected***REMOVED***public***REMOVED***static***REMOVED***yield",
***REMOVED******REMOVED***strictBind:***REMOVED***"eval***REMOVED***arguments"
};

//***REMOVED***And***REMOVED***the***REMOVED***keywords

var***REMOVED***ecma5AndLessKeywords***REMOVED***=***REMOVED***"break***REMOVED***case***REMOVED***catch***REMOVED***continue***REMOVED***debugger***REMOVED***default***REMOVED***do***REMOVED***else***REMOVED***finally***REMOVED***for***REMOVED***function***REMOVED***if***REMOVED***return***REMOVED***switch***REMOVED***throw***REMOVED***try***REMOVED***var***REMOVED***while***REMOVED***with***REMOVED***null***REMOVED***true***REMOVED***false***REMOVED***instanceof***REMOVED***typeof***REMOVED***void***REMOVED***delete***REMOVED***new***REMOVED***in***REMOVED***this";

var***REMOVED***keywords$1***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***5:***REMOVED***ecma5AndLessKeywords,
***REMOVED******REMOVED***"5module":***REMOVED***ecma5AndLessKeywords***REMOVED***+***REMOVED***"***REMOVED***export***REMOVED***import",
***REMOVED******REMOVED***6:***REMOVED***ecma5AndLessKeywords***REMOVED***+***REMOVED***"***REMOVED***const***REMOVED***class***REMOVED***extends***REMOVED***export***REMOVED***import***REMOVED***super"
};

var***REMOVED***keywordRelationalOperator***REMOVED***=***REMOVED***/^in(stanceof)?$/;

//***REMOVED***##***REMOVED***Character***REMOVED***categories

var***REMOVED***nonASCIIidentifierStart***REMOVED***=***REMOVED***new***REMOVED***RegExp("["***REMOVED***+***REMOVED***nonASCIIidentifierStartChars***REMOVED***+***REMOVED***"]");
var***REMOVED***nonASCIIidentifier***REMOVED***=***REMOVED***new***REMOVED***RegExp("["***REMOVED***+***REMOVED***nonASCIIidentifierStartChars***REMOVED***+***REMOVED***nonASCIIidentifierChars***REMOVED***+***REMOVED***"]");

//***REMOVED***This***REMOVED***has***REMOVED***a***REMOVED***complexity***REMOVED***linear***REMOVED***to***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***code.***REMOVED***The
//***REMOVED***assumption***REMOVED***is***REMOVED***that***REMOVED***looking***REMOVED***up***REMOVED***astral***REMOVED***identifier***REMOVED***characters***REMOVED***is
//***REMOVED***rare.
function***REMOVED***isInAstralSet(code,***REMOVED***set)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***0x10000;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***set.length;***REMOVED***i***REMOVED***+=***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***set[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>***REMOVED***code)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***set[i***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>=***REMOVED***code)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
}

//***REMOVED***Test***REMOVED***whether***REMOVED***a***REMOVED***given***REMOVED***character***REMOVED***code***REMOVED***starts***REMOVED***an***REMOVED***identifier.

function***REMOVED***isIdentifierStart(code,***REMOVED***astral)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***65)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***36***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***91)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***97)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***95***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***123)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***0xffff)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***>=***REMOVED***0xaa***REMOVED***&&***REMOVED***nonASCIIidentifierStart.test(String.fromCharCode(code))***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(astral***REMOVED***===***REMOVED***false)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isInAstralSet(code,***REMOVED***astralIdentifierStartCodes)
}

//***REMOVED***Test***REMOVED***whether***REMOVED***a***REMOVED***given***REMOVED***character***REMOVED***is***REMOVED***part***REMOVED***of***REMOVED***an***REMOVED***identifier.

function***REMOVED***isIdentifierChar(code,***REMOVED***astral)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***48)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***36***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***58)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***65)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***91)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***97)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***95***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***123)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***0xffff)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***>=***REMOVED***0xaa***REMOVED***&&***REMOVED***nonASCIIidentifier.test(String.fromCharCode(code))***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(astral***REMOVED***===***REMOVED***false)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isInAstralSet(code,***REMOVED***astralIdentifierStartCodes)***REMOVED***||***REMOVED***isInAstralSet(code,***REMOVED***astralIdentifierCodes)
}

//***REMOVED***##***REMOVED***Token***REMOVED***types

//***REMOVED***The***REMOVED***assignment***REMOVED***of***REMOVED***fine-grained,***REMOVED***information-carrying***REMOVED***type***REMOVED***objects
//***REMOVED***allows***REMOVED***the***REMOVED***tokenizer***REMOVED***to***REMOVED***store***REMOVED***the***REMOVED***information***REMOVED***it***REMOVED***has***REMOVED***about***REMOVED***a
//***REMOVED***token***REMOVED***in***REMOVED***a***REMOVED***way***REMOVED***that***REMOVED***is***REMOVED***very***REMOVED***cheap***REMOVED***for***REMOVED***the***REMOVED***parser***REMOVED***to***REMOVED***look***REMOVED***up.

//***REMOVED***All***REMOVED***token***REMOVED***type***REMOVED***variables***REMOVED***start***REMOVED***with***REMOVED***an***REMOVED***underscore,***REMOVED***to***REMOVED***make***REMOVED***them
//***REMOVED***easy***REMOVED***to***REMOVED***recognize.

//***REMOVED***The***REMOVED***`beforeExpr`***REMOVED***property***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***disambiguate***REMOVED***between***REMOVED***regular
//***REMOVED***expressions***REMOVED***and***REMOVED***divisions.***REMOVED***It***REMOVED***is***REMOVED***set***REMOVED***on***REMOVED***all***REMOVED***token***REMOVED***types***REMOVED***that***REMOVED***can
//***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***expression***REMOVED***(thus,***REMOVED***a***REMOVED***slash***REMOVED***after***REMOVED***them***REMOVED***would***REMOVED***be***REMOVED***a
//***REMOVED***regular***REMOVED***expression).
//
//***REMOVED***The***REMOVED***`startsExpr`***REMOVED***property***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***check***REMOVED***if***REMOVED***the***REMOVED***token***REMOVED***ends***REMOVED***a
//***REMOVED***`yield`***REMOVED***expression.***REMOVED***It***REMOVED***is***REMOVED***set***REMOVED***on***REMOVED***all***REMOVED***token***REMOVED***types***REMOVED***that***REMOVED***either***REMOVED***can
//***REMOVED***directly***REMOVED***start***REMOVED***an***REMOVED***expression***REMOVED***(like***REMOVED***a***REMOVED***quotation***REMOVED***mark)***REMOVED***or***REMOVED***can
//***REMOVED***continue***REMOVED***an***REMOVED***expression***REMOVED***(like***REMOVED***the***REMOVED***body***REMOVED***of***REMOVED***a***REMOVED***string).
//
//***REMOVED***`isLoop`***REMOVED***marks***REMOVED***a***REMOVED***keyword***REMOVED***as***REMOVED***starting***REMOVED***a***REMOVED***loop,***REMOVED***which***REMOVED***is***REMOVED***important
//***REMOVED***to***REMOVED***know***REMOVED***when***REMOVED***parsing***REMOVED***a***REMOVED***label,***REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***allow***REMOVED***or***REMOVED***disallow
//***REMOVED***continue***REMOVED***jumps***REMOVED***to***REMOVED***that***REMOVED***label.

var***REMOVED***TokenType***REMOVED***=***REMOVED***function***REMOVED***TokenType(label,***REMOVED***conf)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***conf***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***conf***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***this.label***REMOVED***=***REMOVED***label;
***REMOVED******REMOVED***this.keyword***REMOVED***=***REMOVED***conf.keyword;
***REMOVED******REMOVED***this.beforeExpr***REMOVED***=***REMOVED***!!conf.beforeExpr;
***REMOVED******REMOVED***this.startsExpr***REMOVED***=***REMOVED***!!conf.startsExpr;
***REMOVED******REMOVED***this.isLoop***REMOVED***=***REMOVED***!!conf.isLoop;
***REMOVED******REMOVED***this.isAssign***REMOVED***=***REMOVED***!!conf.isAssign;
***REMOVED******REMOVED***this.prefix***REMOVED***=***REMOVED***!!conf.prefix;
***REMOVED******REMOVED***this.postfix***REMOVED***=***REMOVED***!!conf.postfix;
***REMOVED******REMOVED***this.binop***REMOVED***=***REMOVED***conf.binop***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED***this.updateContext***REMOVED***=***REMOVED***null;
};

function***REMOVED***binop(name,***REMOVED***prec)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***TokenType(name,***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***binop:***REMOVED***prec})
}
var***REMOVED***beforeExpr***REMOVED***=***REMOVED***{beforeExpr:***REMOVED***true},***REMOVED***startsExpr***REMOVED***=***REMOVED***{startsExpr:***REMOVED***true};

//***REMOVED***Map***REMOVED***keyword***REMOVED***names***REMOVED***to***REMOVED***token***REMOVED***types.

var***REMOVED***keywords***REMOVED***=***REMOVED***{};

//***REMOVED***Succinct***REMOVED***definitions***REMOVED***of***REMOVED***keyword***REMOVED***token***REMOVED***types
function***REMOVED***kw(name,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***options***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***options***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***options.keyword***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED***return***REMOVED***keywords[name]***REMOVED***=***REMOVED***new***REMOVED***TokenType(name,***REMOVED***options)
}

var***REMOVED***types$1***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***num:***REMOVED***new***REMOVED***TokenType("num",***REMOVED***startsExpr),
***REMOVED******REMOVED***regexp:***REMOVED***new***REMOVED***TokenType("regexp",***REMOVED***startsExpr),
***REMOVED******REMOVED***string:***REMOVED***new***REMOVED***TokenType("string",***REMOVED***startsExpr),
***REMOVED******REMOVED***name:***REMOVED***new***REMOVED***TokenType("name",***REMOVED***startsExpr),
***REMOVED******REMOVED***privateId:***REMOVED***new***REMOVED***TokenType("privateId",***REMOVED***startsExpr),
***REMOVED******REMOVED***eof:***REMOVED***new***REMOVED***TokenType("eof"),

***REMOVED******REMOVED***//***REMOVED***Punctuation***REMOVED***token***REMOVED***types.
***REMOVED******REMOVED***bracketL:***REMOVED***new***REMOVED***TokenType("[",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***bracketR:***REMOVED***new***REMOVED***TokenType("]"),
***REMOVED******REMOVED***braceL:***REMOVED***new***REMOVED***TokenType("{",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***braceR:***REMOVED***new***REMOVED***TokenType("}"),
***REMOVED******REMOVED***parenL:***REMOVED***new***REMOVED***TokenType("(",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***parenR:***REMOVED***new***REMOVED***TokenType(")"),
***REMOVED******REMOVED***comma:***REMOVED***new***REMOVED***TokenType(",",***REMOVED***beforeExpr),
***REMOVED******REMOVED***semi:***REMOVED***new***REMOVED***TokenType(";",***REMOVED***beforeExpr),
***REMOVED******REMOVED***colon:***REMOVED***new***REMOVED***TokenType(":",***REMOVED***beforeExpr),
***REMOVED******REMOVED***dot:***REMOVED***new***REMOVED***TokenType("."),
***REMOVED******REMOVED***question:***REMOVED***new***REMOVED***TokenType("?",***REMOVED***beforeExpr),
***REMOVED******REMOVED***questionDot:***REMOVED***new***REMOVED***TokenType("?."),
***REMOVED******REMOVED***arrow:***REMOVED***new***REMOVED***TokenType("=>",***REMOVED***beforeExpr),
***REMOVED******REMOVED***template:***REMOVED***new***REMOVED***TokenType("template"),
***REMOVED******REMOVED***invalidTemplate:***REMOVED***new***REMOVED***TokenType("invalidTemplate"),
***REMOVED******REMOVED***ellipsis:***REMOVED***new***REMOVED***TokenType("...",***REMOVED***beforeExpr),
***REMOVED******REMOVED***backQuote:***REMOVED***new***REMOVED***TokenType("`",***REMOVED***startsExpr),
***REMOVED******REMOVED***dollarBraceL:***REMOVED***new***REMOVED***TokenType("${",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),

***REMOVED******REMOVED***//***REMOVED***Operators.***REMOVED***These***REMOVED***carry***REMOVED***several***REMOVED***kinds***REMOVED***of***REMOVED***properties***REMOVED***to***REMOVED***help***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***parser***REMOVED***use***REMOVED***them***REMOVED***properly***REMOVED***(the***REMOVED***presence***REMOVED***of***REMOVED***these***REMOVED***properties***REMOVED***is
***REMOVED******REMOVED***//***REMOVED***what***REMOVED***categorizes***REMOVED***them***REMOVED***as***REMOVED***operators).
***REMOVED******REMOVED***//
***REMOVED******REMOVED***//***REMOVED***`binop`,***REMOVED***when***REMOVED***present,***REMOVED***specifies***REMOVED***that***REMOVED***this***REMOVED***operator***REMOVED***is***REMOVED***a***REMOVED***binary
***REMOVED******REMOVED***//***REMOVED***operator,***REMOVED***and***REMOVED***will***REMOVED***refer***REMOVED***to***REMOVED***its***REMOVED***precedence.
***REMOVED******REMOVED***//
***REMOVED******REMOVED***//***REMOVED***`prefix`***REMOVED***and***REMOVED***`postfix`***REMOVED***mark***REMOVED***the***REMOVED***operator***REMOVED***as***REMOVED***a***REMOVED***prefix***REMOVED***or***REMOVED***postfix
***REMOVED******REMOVED***//***REMOVED***unary***REMOVED***operator.
***REMOVED******REMOVED***//
***REMOVED******REMOVED***//***REMOVED***`isAssign`***REMOVED***marks***REMOVED***all***REMOVED***of***REMOVED***`=`,***REMOVED***`+=`,***REMOVED***`-=`***REMOVED***etcetera,***REMOVED***which***REMOVED***act***REMOVED***as
***REMOVED******REMOVED***//***REMOVED***binary***REMOVED***operators***REMOVED***with***REMOVED***a***REMOVED***very***REMOVED***low***REMOVED***precedence,***REMOVED***that***REMOVED***should***REMOVED***result
***REMOVED******REMOVED***//***REMOVED***in***REMOVED***AssignmentExpression***REMOVED***nodes.

***REMOVED******REMOVED***eq:***REMOVED***new***REMOVED***TokenType("=",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***isAssign:***REMOVED***true}),
***REMOVED******REMOVED***assign:***REMOVED***new***REMOVED***TokenType("_=",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***isAssign:***REMOVED***true}),
***REMOVED******REMOVED***incDec:***REMOVED***new***REMOVED***TokenType("++/--",***REMOVED***{prefix:***REMOVED***true,***REMOVED***postfix:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***prefix:***REMOVED***new***REMOVED***TokenType("!/~",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***prefix:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***logicalOR:***REMOVED***binop("||",***REMOVED***1),
***REMOVED******REMOVED***logicalAND:***REMOVED***binop("&&",***REMOVED***2),
***REMOVED******REMOVED***bitwiseOR:***REMOVED***binop("|",***REMOVED***3),
***REMOVED******REMOVED***bitwiseXOR:***REMOVED***binop("^",***REMOVED***4),
***REMOVED******REMOVED***bitwiseAND:***REMOVED***binop("&",***REMOVED***5),
***REMOVED******REMOVED***equality:***REMOVED***binop("==/!=/===/!==",***REMOVED***6),
***REMOVED******REMOVED***relational:***REMOVED***binop("</>/<=/>=",***REMOVED***7),
***REMOVED******REMOVED***bitShift:***REMOVED***binop("<</>>/>>>",***REMOVED***8),
***REMOVED******REMOVED***plusMin:***REMOVED***new***REMOVED***TokenType("+/-",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***binop:***REMOVED***9,***REMOVED***prefix:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***modulo:***REMOVED***binop("%",***REMOVED***10),
***REMOVED******REMOVED***star:***REMOVED***binop("*",***REMOVED***10),
***REMOVED******REMOVED***slash:***REMOVED***binop("/",***REMOVED***10),
***REMOVED******REMOVED***starstar:***REMOVED***new***REMOVED***TokenType("**",***REMOVED***{beforeExpr:***REMOVED***true}),
***REMOVED******REMOVED***coalesce:***REMOVED***binop("??",***REMOVED***1),

***REMOVED******REMOVED***//***REMOVED***Keyword***REMOVED***token***REMOVED***types.
***REMOVED******REMOVED***_break:***REMOVED***kw("break"),
***REMOVED******REMOVED***_case:***REMOVED***kw("case",***REMOVED***beforeExpr),
***REMOVED******REMOVED***_catch:***REMOVED***kw("catch"),
***REMOVED******REMOVED***_continue:***REMOVED***kw("continue"),
***REMOVED******REMOVED***_debugger:***REMOVED***kw("debugger"),
***REMOVED******REMOVED***_default:***REMOVED***kw("default",***REMOVED***beforeExpr),
***REMOVED******REMOVED***_do:***REMOVED***kw("do",***REMOVED***{isLoop:***REMOVED***true,***REMOVED***beforeExpr:***REMOVED***true}),
***REMOVED******REMOVED***_else:***REMOVED***kw("else",***REMOVED***beforeExpr),
***REMOVED******REMOVED***_finally:***REMOVED***kw("finally"),
***REMOVED******REMOVED***_for:***REMOVED***kw("for",***REMOVED***{isLoop:***REMOVED***true}),
***REMOVED******REMOVED***_function:***REMOVED***kw("function",***REMOVED***startsExpr),
***REMOVED******REMOVED***_if:***REMOVED***kw("if"),
***REMOVED******REMOVED***_return:***REMOVED***kw("return",***REMOVED***beforeExpr),
***REMOVED******REMOVED***_switch:***REMOVED***kw("switch"),
***REMOVED******REMOVED***_throw:***REMOVED***kw("throw",***REMOVED***beforeExpr),
***REMOVED******REMOVED***_try:***REMOVED***kw("try"),
***REMOVED******REMOVED***_var:***REMOVED***kw("var"),
***REMOVED******REMOVED***_const:***REMOVED***kw("const"),
***REMOVED******REMOVED***_while:***REMOVED***kw("while",***REMOVED***{isLoop:***REMOVED***true}),
***REMOVED******REMOVED***_with:***REMOVED***kw("with"),
***REMOVED******REMOVED***_new:***REMOVED***kw("new",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***_this:***REMOVED***kw("this",***REMOVED***startsExpr),
***REMOVED******REMOVED***_super:***REMOVED***kw("super",***REMOVED***startsExpr),
***REMOVED******REMOVED***_class:***REMOVED***kw("class",***REMOVED***startsExpr),
***REMOVED******REMOVED***_extends:***REMOVED***kw("extends",***REMOVED***beforeExpr),
***REMOVED******REMOVED***_export:***REMOVED***kw("export"),
***REMOVED******REMOVED***_import:***REMOVED***kw("import",***REMOVED***startsExpr),
***REMOVED******REMOVED***_null:***REMOVED***kw("null",***REMOVED***startsExpr),
***REMOVED******REMOVED***_true:***REMOVED***kw("true",***REMOVED***startsExpr),
***REMOVED******REMOVED***_false:***REMOVED***kw("false",***REMOVED***startsExpr),
***REMOVED******REMOVED***_in:***REMOVED***kw("in",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***binop:***REMOVED***7}),
***REMOVED******REMOVED***_instanceof:***REMOVED***kw("instanceof",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***binop:***REMOVED***7}),
***REMOVED******REMOVED***_typeof:***REMOVED***kw("typeof",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***prefix:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***_void:***REMOVED***kw("void",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***prefix:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true}),
***REMOVED******REMOVED***_delete:***REMOVED***kw("delete",***REMOVED***{beforeExpr:***REMOVED***true,***REMOVED***prefix:***REMOVED***true,***REMOVED***startsExpr:***REMOVED***true})
};

//***REMOVED***Matches***REMOVED***a***REMOVED***whole***REMOVED***line***REMOVED***break***REMOVED***(where***REMOVED***CRLF***REMOVED***is***REMOVED***considered***REMOVED***a***REMOVED***single
//***REMOVED***line***REMOVED***break).***REMOVED***Used***REMOVED***to***REMOVED***count***REMOVED***lines.

var***REMOVED***lineBreak***REMOVED***=***REMOVED***/\r\n?|\n|\u2028|\u2029/;
var***REMOVED***lineBreakG***REMOVED***=***REMOVED***new***REMOVED***RegExp(lineBreak.source,***REMOVED***"g");

function***REMOVED***isNewLine(code)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***10***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***13***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***0x2028***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***0x2029
}

function***REMOVED***nextLineBreak(code,***REMOVED***from,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***end***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***end***REMOVED***=***REMOVED***code.length;

***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***from;***REMOVED***i***REMOVED***<***REMOVED***end;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***code.charCodeAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNewLine(next))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***i***REMOVED***<***REMOVED***end***REMOVED***-***REMOVED***1***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***13***REMOVED***&&***REMOVED***code.charCodeAt(i***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***10***REMOVED***?***REMOVED***i***REMOVED***+***REMOVED***2***REMOVED***:***REMOVED***i***REMOVED***+***REMOVED***1***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***-1
}

var***REMOVED***nonASCIIwhitespace***REMOVED***=***REMOVED***/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

var***REMOVED***skipWhiteSpace***REMOVED***=***REMOVED***/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

var***REMOVED***ref***REMOVED***=***REMOVED***Object.prototype;
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***ref.hasOwnProperty;
var***REMOVED***toString***REMOVED***=***REMOVED***ref.toString;

var***REMOVED***hasOwn***REMOVED***=***REMOVED***Object.hasOwn***REMOVED***||***REMOVED***(function***REMOVED***(obj,***REMOVED***propName)***REMOVED***{***REMOVED***return***REMOVED***(
***REMOVED******REMOVED***hasOwnProperty.call(obj,***REMOVED***propName)
);***REMOVED***});

var***REMOVED***isArray***REMOVED***=***REMOVED***Array.isArray***REMOVED***||***REMOVED***(function***REMOVED***(obj)***REMOVED***{***REMOVED***return***REMOVED***(
***REMOVED******REMOVED***toString.call(obj)***REMOVED***===***REMOVED***"[object***REMOVED***Array]"
);***REMOVED***});

function***REMOVED***wordsRegexp(words)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***RegExp("^(?:"***REMOVED***+***REMOVED***words.replace(/***REMOVED***/g,***REMOVED***"|")***REMOVED***+***REMOVED***")$")
}

function***REMOVED***codePointToString(code)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***UTF-16***REMOVED***Decoding
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***0xFFFF)***REMOVED***{***REMOVED***return***REMOVED***String.fromCharCode(code)***REMOVED***}
***REMOVED******REMOVED***code***REMOVED***-=***REMOVED***0x10000;
***REMOVED******REMOVED***return***REMOVED***String.fromCharCode((code***REMOVED***>>***REMOVED***10)***REMOVED***+***REMOVED***0xD800,***REMOVED***(code***REMOVED***&***REMOVED***1023)***REMOVED***+***REMOVED***0xDC00)
}

var***REMOVED***loneSurrogate***REMOVED***=***REMOVED***/(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;

//***REMOVED***These***REMOVED***are***REMOVED***used***REMOVED***when***REMOVED***`options.locations`***REMOVED***is***REMOVED***on,***REMOVED***for***REMOVED***the
//***REMOVED***`startLoc`***REMOVED***and***REMOVED***`endLoc`***REMOVED***properties.

var***REMOVED***Position***REMOVED***=***REMOVED***function***REMOVED***Position(line,***REMOVED***col)***REMOVED***{
***REMOVED******REMOVED***this.line***REMOVED***=***REMOVED***line;
***REMOVED******REMOVED***this.column***REMOVED***=***REMOVED***col;
};

Position.prototype.offset***REMOVED***=***REMOVED***function***REMOVED***offset***REMOVED***(n)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Position(this.line,***REMOVED***this.column***REMOVED***+***REMOVED***n)
};

var***REMOVED***SourceLocation***REMOVED***=***REMOVED***function***REMOVED***SourceLocation(p,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED***if***REMOVED***(p.sourceFile***REMOVED***!==***REMOVED***null)***REMOVED***{***REMOVED***this.source***REMOVED***=***REMOVED***p.sourceFile;***REMOVED***}
};

//***REMOVED***The***REMOVED***`getLineInfo`***REMOVED***function***REMOVED***is***REMOVED***mostly***REMOVED***useful***REMOVED***when***REMOVED***the
//***REMOVED***`locations`***REMOVED***option***REMOVED***is***REMOVED***off***REMOVED***(for***REMOVED***performance***REMOVED***reasons)***REMOVED***and***REMOVED***you
//***REMOVED***want***REMOVED***to***REMOVED***find***REMOVED***the***REMOVED***line/column***REMOVED***position***REMOVED***for***REMOVED***a***REMOVED***given***REMOVED***character
//***REMOVED***offset.***REMOVED***`input`***REMOVED***should***REMOVED***be***REMOVED***the***REMOVED***code***REMOVED***string***REMOVED***that***REMOVED***the***REMOVED***offset***REMOVED***refers
//***REMOVED***into.

function***REMOVED***getLineInfo(input,***REMOVED***offset)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***line***REMOVED***=***REMOVED***1,***REMOVED***cur***REMOVED***=***REMOVED***0;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextBreak***REMOVED***=***REMOVED***nextLineBreak(input,***REMOVED***cur,***REMOVED***offset);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextBreak***REMOVED***<***REMOVED***0)***REMOVED***{***REMOVED***return***REMOVED***new***REMOVED***Position(line,***REMOVED***offset***REMOVED***-***REMOVED***cur)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***++line;
***REMOVED******REMOVED******REMOVED******REMOVED***cur***REMOVED***=***REMOVED***nextBreak;
***REMOVED******REMOVED***}
}

//***REMOVED***A***REMOVED***second***REMOVED***argument***REMOVED***must***REMOVED***be***REMOVED***given***REMOVED***to***REMOVED***configure***REMOVED***the***REMOVED***parser***REMOVED***process.
//***REMOVED***These***REMOVED***options***REMOVED***are***REMOVED***recognized***REMOVED***(only***REMOVED***`ecmaVersion`***REMOVED***is***REMOVED***required):

var***REMOVED***defaultOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***`ecmaVersion`***REMOVED***indicates***REMOVED***the***REMOVED***ECMAScript***REMOVED***version***REMOVED***to***REMOVED***parse.***REMOVED***Must***REMOVED***be
***REMOVED******REMOVED***//***REMOVED***either***REMOVED***3,***REMOVED***5,***REMOVED***6***REMOVED***(or***REMOVED***2015),***REMOVED***7***REMOVED***(2016),***REMOVED***8***REMOVED***(2017),***REMOVED***9***REMOVED***(2018),***REMOVED***10
***REMOVED******REMOVED***//***REMOVED***(2019),***REMOVED***11***REMOVED***(2020),***REMOVED***12***REMOVED***(2021),***REMOVED***13***REMOVED***(2022),***REMOVED***14***REMOVED***(2023),***REMOVED***or***REMOVED***`"latest"`
***REMOVED******REMOVED***//***REMOVED***(the***REMOVED***latest***REMOVED***version***REMOVED***the***REMOVED***library***REMOVED***supports).***REMOVED***This***REMOVED***influences
***REMOVED******REMOVED***//***REMOVED***support***REMOVED***for***REMOVED***strict***REMOVED***mode,***REMOVED***the***REMOVED***set***REMOVED***of***REMOVED***reserved***REMOVED***words,***REMOVED***and***REMOVED***support
***REMOVED******REMOVED***//***REMOVED***for***REMOVED***new***REMOVED***syntax***REMOVED***features.
***REMOVED******REMOVED***ecmaVersion:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***`sourceType`***REMOVED***indicates***REMOVED***the***REMOVED***mode***REMOVED***the***REMOVED***code***REMOVED***should***REMOVED***be***REMOVED***parsed***REMOVED***in.
***REMOVED******REMOVED***//***REMOVED***Can***REMOVED***be***REMOVED***either***REMOVED***`"script"`***REMOVED***or***REMOVED***`"module"`.***REMOVED***This***REMOVED***influences***REMOVED***global
***REMOVED******REMOVED***//***REMOVED***strict***REMOVED***mode***REMOVED***and***REMOVED***parsing***REMOVED***of***REMOVED***`import`***REMOVED***and***REMOVED***`export`***REMOVED***declarations.
***REMOVED******REMOVED***sourceType:***REMOVED***"script",
***REMOVED******REMOVED***//***REMOVED***`onInsertedSemicolon`***REMOVED***can***REMOVED***be***REMOVED***a***REMOVED***callback***REMOVED***that***REMOVED***will***REMOVED***be***REMOVED***called
***REMOVED******REMOVED***//***REMOVED***when***REMOVED***a***REMOVED***semicolon***REMOVED***is***REMOVED***automatically***REMOVED***inserted.***REMOVED***It***REMOVED***will***REMOVED***be***REMOVED***passed
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***position***REMOVED***of***REMOVED***the***REMOVED***comma***REMOVED***as***REMOVED***an***REMOVED***offset,***REMOVED***and***REMOVED***if***REMOVED***`locations`***REMOVED***is
***REMOVED******REMOVED***//***REMOVED***enabled,***REMOVED***it***REMOVED***is***REMOVED***given***REMOVED***the***REMOVED***location***REMOVED***as***REMOVED***a***REMOVED***`{line,***REMOVED***column}`***REMOVED***object
***REMOVED******REMOVED***//***REMOVED***as***REMOVED***second***REMOVED***argument.
***REMOVED******REMOVED***onInsertedSemicolon:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***`onTrailingComma`***REMOVED***is***REMOVED***similar***REMOVED***to***REMOVED***`onInsertedSemicolon`,***REMOVED***but***REMOVED***for
***REMOVED******REMOVED***//***REMOVED***trailing***REMOVED***commas.
***REMOVED******REMOVED***onTrailingComma:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***By***REMOVED***default,***REMOVED***reserved***REMOVED***words***REMOVED***are***REMOVED***only***REMOVED***enforced***REMOVED***if***REMOVED***ecmaVersion***REMOVED***>=***REMOVED***5.
***REMOVED******REMOVED***//***REMOVED***Set***REMOVED***`allowReserved`***REMOVED***to***REMOVED***a***REMOVED***boolean***REMOVED***value***REMOVED***to***REMOVED***explicitly***REMOVED***turn***REMOVED***this***REMOVED***on
***REMOVED******REMOVED***//***REMOVED***an***REMOVED***off.***REMOVED***When***REMOVED***this***REMOVED***option***REMOVED***has***REMOVED***the***REMOVED***value***REMOVED***"never",***REMOVED***reserved***REMOVED***words
***REMOVED******REMOVED***//***REMOVED***and***REMOVED***keywords***REMOVED***can***REMOVED***also***REMOVED***not***REMOVED***be***REMOVED***used***REMOVED***as***REMOVED***property***REMOVED***names.
***REMOVED******REMOVED***allowReserved:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***enabled,***REMOVED***a***REMOVED***return***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***is***REMOVED***not***REMOVED***considered***REMOVED***an
***REMOVED******REMOVED***//***REMOVED***error.
***REMOVED******REMOVED***allowReturnOutsideFunction:***REMOVED***false,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***enabled,***REMOVED***import/export***REMOVED***statements***REMOVED***are***REMOVED***not***REMOVED***constrained***REMOVED***to
***REMOVED******REMOVED***//***REMOVED***appearing***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***of***REMOVED***the***REMOVED***program,***REMOVED***and***REMOVED***an***REMOVED***import.meta***REMOVED***expression
***REMOVED******REMOVED***//***REMOVED***in***REMOVED***a***REMOVED***script***REMOVED***isn't***REMOVED***considered***REMOVED***an***REMOVED***error.
***REMOVED******REMOVED***allowImportExportEverywhere:***REMOVED***false,
***REMOVED******REMOVED***//***REMOVED***By***REMOVED***default,***REMOVED***await***REMOVED***identifiers***REMOVED***are***REMOVED***allowed***REMOVED***to***REMOVED***appear***REMOVED***at***REMOVED***the***REMOVED***top-level***REMOVED***scope***REMOVED***only***REMOVED***if***REMOVED***ecmaVersion***REMOVED***>=***REMOVED***2022.
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***enabled,***REMOVED***await***REMOVED***identifiers***REMOVED***are***REMOVED***allowed***REMOVED***to***REMOVED***appear***REMOVED***at***REMOVED***the***REMOVED***top-level***REMOVED***scope,
***REMOVED******REMOVED***//***REMOVED***but***REMOVED***they***REMOVED***are***REMOVED***still***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***non-async***REMOVED***functions.
***REMOVED******REMOVED***allowAwaitOutsideFunction:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***enabled,***REMOVED***super***REMOVED***identifiers***REMOVED***are***REMOVED***not***REMOVED***constrained***REMOVED***to
***REMOVED******REMOVED***//***REMOVED***appearing***REMOVED***in***REMOVED***methods***REMOVED***and***REMOVED***do***REMOVED***not***REMOVED***raise***REMOVED***an***REMOVED***error***REMOVED***when***REMOVED***they***REMOVED***appear***REMOVED***elsewhere.
***REMOVED******REMOVED***allowSuperOutsideMethod:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***enabled,***REMOVED***hashbang***REMOVED***directive***REMOVED***in***REMOVED***the***REMOVED***beginning***REMOVED***of***REMOVED***file***REMOVED***is
***REMOVED******REMOVED***//***REMOVED***allowed***REMOVED***and***REMOVED***treated***REMOVED***as***REMOVED***a***REMOVED***line***REMOVED***comment.***REMOVED***Enabled***REMOVED***by***REMOVED***default***REMOVED***when
***REMOVED******REMOVED***//***REMOVED***`ecmaVersion`***REMOVED***>=***REMOVED***2023.
***REMOVED******REMOVED***allowHashBang:***REMOVED***false,
***REMOVED******REMOVED***//***REMOVED***By***REMOVED***default,***REMOVED***the***REMOVED***parser***REMOVED***will***REMOVED***verify***REMOVED***that***REMOVED***private***REMOVED***properties***REMOVED***are
***REMOVED******REMOVED***//***REMOVED***only***REMOVED***used***REMOVED***in***REMOVED***places***REMOVED***where***REMOVED***they***REMOVED***are***REMOVED***valid***REMOVED***and***REMOVED***have***REMOVED***been***REMOVED***declared.
***REMOVED******REMOVED***//***REMOVED***Set***REMOVED***this***REMOVED***to***REMOVED***false***REMOVED***to***REMOVED***turn***REMOVED***such***REMOVED***checks***REMOVED***off.
***REMOVED******REMOVED***checkPrivateFields:***REMOVED***true,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***`locations`***REMOVED***is***REMOVED***on,***REMOVED***`loc`***REMOVED***properties***REMOVED***holding***REMOVED***objects***REMOVED***with
***REMOVED******REMOVED***//***REMOVED***`start`***REMOVED***and***REMOVED***`end`***REMOVED***properties***REMOVED***in***REMOVED***`{line,***REMOVED***column}`***REMOVED***form***REMOVED***(with
***REMOVED******REMOVED***//***REMOVED***line***REMOVED***being***REMOVED***1-based***REMOVED***and***REMOVED***column***REMOVED***0-based)***REMOVED***will***REMOVED***be***REMOVED***attached***REMOVED***to***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***nodes.
***REMOVED******REMOVED***locations:***REMOVED***false,
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***function***REMOVED***can***REMOVED***be***REMOVED***passed***REMOVED***as***REMOVED***`onToken`***REMOVED***option,***REMOVED***which***REMOVED***will
***REMOVED******REMOVED***//***REMOVED***cause***REMOVED***Acorn***REMOVED***to***REMOVED***call***REMOVED***that***REMOVED***function***REMOVED***with***REMOVED***object***REMOVED***in***REMOVED***the***REMOVED***same
***REMOVED******REMOVED***//***REMOVED***format***REMOVED***as***REMOVED***tokens***REMOVED***returned***REMOVED***from***REMOVED***`tokenizer().getToken()`.***REMOVED***Note
***REMOVED******REMOVED***//***REMOVED***that***REMOVED***you***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***to***REMOVED***call***REMOVED***the***REMOVED***parser***REMOVED***from***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***callback—that***REMOVED***will***REMOVED***corrupt***REMOVED***its***REMOVED***internal***REMOVED***state.
***REMOVED******REMOVED***onToken:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***function***REMOVED***can***REMOVED***be***REMOVED***passed***REMOVED***as***REMOVED***`onComment`***REMOVED***option,***REMOVED***which***REMOVED***will
***REMOVED******REMOVED***//***REMOVED***cause***REMOVED***Acorn***REMOVED***to***REMOVED***call***REMOVED***that***REMOVED***function***REMOVED***with***REMOVED***`(block,***REMOVED***text,***REMOVED***start,
***REMOVED******REMOVED***//***REMOVED***end)`***REMOVED***parameters***REMOVED***whenever***REMOVED***a***REMOVED***comment***REMOVED***is***REMOVED***skipped.***REMOVED***`block`***REMOVED***is***REMOVED***a
***REMOVED******REMOVED***//***REMOVED***boolean***REMOVED***indicating***REMOVED***whether***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***block***REMOVED***(`/****REMOVED****/`)***REMOVED***comment,
***REMOVED******REMOVED***//***REMOVED***`text`***REMOVED***is***REMOVED***the***REMOVED***content***REMOVED***of***REMOVED***the***REMOVED***comment,***REMOVED***and***REMOVED***`start`***REMOVED***and***REMOVED***`end`***REMOVED***are
***REMOVED******REMOVED***//***REMOVED***character***REMOVED***offsets***REMOVED***that***REMOVED***denote***REMOVED***the***REMOVED***start***REMOVED***and***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***comment.
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***the***REMOVED***`locations`***REMOVED***option***REMOVED***is***REMOVED***on,***REMOVED***two***REMOVED***more***REMOVED***parameters***REMOVED***are
***REMOVED******REMOVED***//***REMOVED***passed,***REMOVED***the***REMOVED***full***REMOVED***`{line,***REMOVED***column}`***REMOVED***locations***REMOVED***of***REMOVED***the***REMOVED***start***REMOVED***and
***REMOVED******REMOVED***//***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***comments.***REMOVED***Note***REMOVED***that***REMOVED***you***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***to***REMOVED***call***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***parser***REMOVED***from***REMOVED***the***REMOVED***callback—that***REMOVED***will***REMOVED***corrupt***REMOVED***its***REMOVED***internal***REMOVED***state.
***REMOVED******REMOVED***onComment:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***Nodes***REMOVED***have***REMOVED***their***REMOVED***start***REMOVED***and***REMOVED***end***REMOVED***characters***REMOVED***offsets***REMOVED***recorded***REMOVED***in
***REMOVED******REMOVED***//***REMOVED***`start`***REMOVED***and***REMOVED***`end`***REMOVED***properties***REMOVED***(directly***REMOVED***on***REMOVED***the***REMOVED***node,***REMOVED***rather***REMOVED***than
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***`loc`***REMOVED***object,***REMOVED***which***REMOVED***holds***REMOVED***line/column***REMOVED***data.***REMOVED***To***REMOVED***also***REMOVED***add***REMOVED***a
***REMOVED******REMOVED***//***REMOVED***[semi-standardized][range]***REMOVED***`range`***REMOVED***property***REMOVED***holding***REMOVED***a***REMOVED***`[start,
***REMOVED******REMOVED***//***REMOVED***end]`***REMOVED***array***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***numbers,***REMOVED***set***REMOVED***the***REMOVED***`ranges`***REMOVED***option***REMOVED***to
***REMOVED******REMOVED***//***REMOVED***`true`.
***REMOVED******REMOVED***//
***REMOVED******REMOVED***//***REMOVED***[range]:***REMOVED***https://bugzilla.mozilla.org/show_bug.cgi?id=745678
***REMOVED******REMOVED***ranges:***REMOVED***false,
***REMOVED******REMOVED***//***REMOVED***It***REMOVED***is***REMOVED***possible***REMOVED***to***REMOVED***parse***REMOVED***multiple***REMOVED***files***REMOVED***into***REMOVED***a***REMOVED***single***REMOVED***AST***REMOVED***by
***REMOVED******REMOVED***//***REMOVED***passing***REMOVED***the***REMOVED***tree***REMOVED***produced***REMOVED***by***REMOVED***parsing***REMOVED***the***REMOVED***first***REMOVED***file***REMOVED***as
***REMOVED******REMOVED***//***REMOVED***`program`***REMOVED***option***REMOVED***in***REMOVED***subsequent***REMOVED***parses.***REMOVED***This***REMOVED***will***REMOVED***add***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***toplevel***REMOVED***forms***REMOVED***of***REMOVED***the***REMOVED***parsed***REMOVED***file***REMOVED***to***REMOVED***the***REMOVED***`Program`***REMOVED***(top)***REMOVED***node
***REMOVED******REMOVED***//***REMOVED***of***REMOVED***an***REMOVED***existing***REMOVED***parse***REMOVED***tree.
***REMOVED******REMOVED***program:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***`locations`***REMOVED***is***REMOVED***on,***REMOVED***you***REMOVED***can***REMOVED***pass***REMOVED***this***REMOVED***to***REMOVED***record***REMOVED***the***REMOVED***source
***REMOVED******REMOVED***//***REMOVED***file***REMOVED***in***REMOVED***every***REMOVED***node's***REMOVED***`loc`***REMOVED***object.
***REMOVED******REMOVED***sourceFile:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***This***REMOVED***value,***REMOVED***if***REMOVED***given,***REMOVED***is***REMOVED***stored***REMOVED***in***REMOVED***every***REMOVED***node,***REMOVED***whether
***REMOVED******REMOVED***//***REMOVED***`locations`***REMOVED***is***REMOVED***on***REMOVED***or***REMOVED***off.
***REMOVED******REMOVED***directSourceFile:***REMOVED***null,
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***enabled,***REMOVED***parenthesized***REMOVED***expressions***REMOVED***are***REMOVED***represented***REMOVED***by
***REMOVED******REMOVED***//***REMOVED***(non-standard)***REMOVED***ParenthesizedExpression***REMOVED***nodes
***REMOVED******REMOVED***preserveParens:***REMOVED***false
};

//***REMOVED***Interpret***REMOVED***and***REMOVED***default***REMOVED***an***REMOVED***options***REMOVED***object

var***REMOVED***warnedAboutEcmaVersion***REMOVED***=***REMOVED***false;

function***REMOVED***getOptions(opts)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***options***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***opt***REMOVED***in***REMOVED***defaultOptions)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***options[opt]***REMOVED***=***REMOVED***opts***REMOVED***&&***REMOVED***hasOwn(opts,***REMOVED***opt)***REMOVED***?***REMOVED***opts[opt]***REMOVED***:***REMOVED***defaultOptions[opt];***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(options.ecmaVersion***REMOVED***===***REMOVED***"latest")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options.ecmaVersion***REMOVED***=***REMOVED***1e8;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(options.ecmaVersion***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!warnedAboutEcmaVersion***REMOVED***&&***REMOVED***typeof***REMOVED***console***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***console.warn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnedAboutEcmaVersion***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.warn("Since***REMOVED***Acorn***REMOVED***8.0.0,***REMOVED***options.ecmaVersion***REMOVED***is***REMOVED***required.\nDefaulting***REMOVED***to***REMOVED***2020,***REMOVED***but***REMOVED***this***REMOVED***will***REMOVED***stop***REMOVED***working***REMOVED***in***REMOVED***the***REMOVED***future.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***options.ecmaVersion***REMOVED***=***REMOVED***11;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(options.ecmaVersion***REMOVED***>=***REMOVED***2015)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options.ecmaVersion***REMOVED***-=***REMOVED***2009;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(options.allowReserved***REMOVED***==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***options.allowReserved***REMOVED***=***REMOVED***options.ecmaVersion***REMOVED***<***REMOVED***5;***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(!opts***REMOVED***||***REMOVED***opts.allowHashBang***REMOVED***==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***options.allowHashBang***REMOVED***=***REMOVED***options.ecmaVersion***REMOVED***>=***REMOVED***14;***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(isArray(options.onToken))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tokens***REMOVED***=***REMOVED***options.onToken;
***REMOVED******REMOVED******REMOVED******REMOVED***options.onToken***REMOVED***=***REMOVED***function***REMOVED***(token)***REMOVED***{***REMOVED***return***REMOVED***tokens.push(token);***REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isArray(options.onComment))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***options.onComment***REMOVED***=***REMOVED***pushComment(options,***REMOVED***options.onComment);***REMOVED***}

***REMOVED******REMOVED***return***REMOVED***options
}

function***REMOVED***pushComment(options,***REMOVED***array)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(block,***REMOVED***text,***REMOVED***start,***REMOVED***end,***REMOVED***startLoc,***REMOVED***endLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***comment***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***block***REMOVED***?***REMOVED***"Block"***REMOVED***:***REMOVED***"Line",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***text,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***end
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.locations)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***comment.loc***REMOVED***=***REMOVED***new***REMOVED***SourceLocation(this,***REMOVED***startLoc,***REMOVED***endLoc);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.ranges)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***comment.range***REMOVED***=***REMOVED***[start,***REMOVED***end];***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***array.push(comment);
***REMOVED******REMOVED***}
}

//***REMOVED***Each***REMOVED***scope***REMOVED***gets***REMOVED***a***REMOVED***bitset***REMOVED***that***REMOVED***may***REMOVED***contain***REMOVED***these***REMOVED***flags
var
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_TOP***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_FUNCTION***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_ASYNC***REMOVED***=***REMOVED***4,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_GENERATOR***REMOVED***=***REMOVED***8,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_ARROW***REMOVED***=***REMOVED***16,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_SIMPLE_CATCH***REMOVED***=***REMOVED***32,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_SUPER***REMOVED***=***REMOVED***64,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_DIRECT_SUPER***REMOVED***=***REMOVED***128,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_CLASS_STATIC_BLOCK***REMOVED***=***REMOVED***256,
***REMOVED******REMOVED******REMOVED******REMOVED***SCOPE_VAR***REMOVED***=***REMOVED***SCOPE_TOP***REMOVED***|***REMOVED***SCOPE_FUNCTION***REMOVED***|***REMOVED***SCOPE_CLASS_STATIC_BLOCK;

function***REMOVED***functionFlags(async,***REMOVED***generator)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***SCOPE_FUNCTION***REMOVED***|***REMOVED***(async***REMOVED***?***REMOVED***SCOPE_ASYNC***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(generator***REMOVED***?***REMOVED***SCOPE_GENERATOR***REMOVED***:***REMOVED***0)
}

//***REMOVED***Used***REMOVED***in***REMOVED***checkLVal****REMOVED***and***REMOVED***declareName***REMOVED***to***REMOVED***determine***REMOVED***the***REMOVED***type***REMOVED***of***REMOVED***a***REMOVED***binding
var
***REMOVED******REMOVED******REMOVED******REMOVED***BIND_NONE***REMOVED***=***REMOVED***0,***REMOVED***//***REMOVED***Not***REMOVED***a***REMOVED***binding
***REMOVED******REMOVED******REMOVED******REMOVED***BIND_VAR***REMOVED***=***REMOVED***1,***REMOVED***//***REMOVED***Var-style***REMOVED***binding
***REMOVED******REMOVED******REMOVED******REMOVED***BIND_LEXICAL***REMOVED***=***REMOVED***2,***REMOVED***//***REMOVED***Let-***REMOVED***or***REMOVED***const-style***REMOVED***binding
***REMOVED******REMOVED******REMOVED******REMOVED***BIND_FUNCTION***REMOVED***=***REMOVED***3,***REMOVED***//***REMOVED***Function***REMOVED***declaration
***REMOVED******REMOVED******REMOVED******REMOVED***BIND_SIMPLE_CATCH***REMOVED***=***REMOVED***4,***REMOVED***//***REMOVED***Simple***REMOVED***(identifier***REMOVED***pattern)***REMOVED***catch***REMOVED***binding
***REMOVED******REMOVED******REMOVED******REMOVED***BIND_OUTSIDE***REMOVED***=***REMOVED***5;***REMOVED***//***REMOVED***Special***REMOVED***case***REMOVED***for***REMOVED***function***REMOVED***names***REMOVED***as***REMOVED***bound***REMOVED***inside***REMOVED***the***REMOVED***function

var***REMOVED***Parser***REMOVED***=***REMOVED***function***REMOVED***Parser(options,***REMOVED***input,***REMOVED***startPos)***REMOVED***{
***REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options***REMOVED***=***REMOVED***getOptions(options);
***REMOVED******REMOVED***this.sourceFile***REMOVED***=***REMOVED***options.sourceFile;
***REMOVED******REMOVED***this.keywords***REMOVED***=***REMOVED***wordsRegexp(keywords$1[options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***?***REMOVED***6***REMOVED***:***REMOVED***options.sourceType***REMOVED***===***REMOVED***"module"***REMOVED***?***REMOVED***"5module"***REMOVED***:***REMOVED***5]);
***REMOVED******REMOVED***var***REMOVED***reserved***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(options.allowReserved***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***reserved***REMOVED***=***REMOVED***reservedWords[options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***?***REMOVED***6***REMOVED***:***REMOVED***options.ecmaVersion***REMOVED***===***REMOVED***5***REMOVED***?***REMOVED***5***REMOVED***:***REMOVED***3];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.sourceType***REMOVED***===***REMOVED***"module")***REMOVED***{***REMOVED***reserved***REMOVED***+=***REMOVED***"***REMOVED***await";***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.reservedWords***REMOVED***=***REMOVED***wordsRegexp(reserved);
***REMOVED******REMOVED***var***REMOVED***reservedStrict***REMOVED***=***REMOVED***(reserved***REMOVED***?***REMOVED***reserved***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***reservedWords.strict;
***REMOVED******REMOVED***this.reservedWordsStrict***REMOVED***=***REMOVED***wordsRegexp(reservedStrict);
***REMOVED******REMOVED***this.reservedWordsStrictBind***REMOVED***=***REMOVED***wordsRegexp(reservedStrict***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***reservedWords.strictBind);
***REMOVED******REMOVED***this.input***REMOVED***=***REMOVED***String(input);

***REMOVED******REMOVED***//***REMOVED***Used***REMOVED***to***REMOVED***signal***REMOVED***to***REMOVED***callers***REMOVED***of***REMOVED***`readWord1`***REMOVED***whether***REMOVED***the***REMOVED***word
***REMOVED******REMOVED***//***REMOVED***contained***REMOVED***any***REMOVED***escape***REMOVED***sequences.***REMOVED***This***REMOVED***is***REMOVED***needed***REMOVED***because***REMOVED***words***REMOVED***with
***REMOVED******REMOVED***//***REMOVED***escape***REMOVED***sequences***REMOVED***must***REMOVED***not***REMOVED***be***REMOVED***interpreted***REMOVED***as***REMOVED***keywords.
***REMOVED******REMOVED***this.containsEsc***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***//***REMOVED***Set***REMOVED***up***REMOVED***token***REMOVED***state

***REMOVED******REMOVED***//***REMOVED***The***REMOVED***current***REMOVED***position***REMOVED***of***REMOVED***the***REMOVED***tokenizer***REMOVED***in***REMOVED***the***REMOVED***input.
***REMOVED******REMOVED***if***REMOVED***(startPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***startPos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.lineStart***REMOVED***=***REMOVED***this.input.lastIndexOf("\n",***REMOVED***startPos***REMOVED***-***REMOVED***1)***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***this.curLine***REMOVED***=***REMOVED***this.input.slice(0,***REMOVED***this.lineStart).split(lineBreak).length;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***this.lineStart***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.curLine***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Properties***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***token:
***REMOVED******REMOVED***//***REMOVED***Its***REMOVED***type
***REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***types$1.eof;
***REMOVED******REMOVED***//***REMOVED***For***REMOVED***tokens***REMOVED***that***REMOVED***include***REMOVED***more***REMOVED***information***REMOVED***than***REMOVED***their***REMOVED***type,***REMOVED***the***REMOVED***value
***REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***//***REMOVED***Its***REMOVED***start***REMOVED***and***REMOVED***end***REMOVED***offset
***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***this.end***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***//***REMOVED***And,***REMOVED***if***REMOVED***locations***REMOVED***are***REMOVED***used,***REMOVED***the***REMOVED***{line,***REMOVED***column}***REMOVED***object
***REMOVED******REMOVED***//***REMOVED***corresponding***REMOVED***to***REMOVED***those***REMOVED***offsets
***REMOVED******REMOVED***this.startLoc***REMOVED***=***REMOVED***this.endLoc***REMOVED***=***REMOVED***this.curPosition();

***REMOVED******REMOVED***//***REMOVED***Position***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***previous***REMOVED***token
***REMOVED******REMOVED***this.lastTokEndLoc***REMOVED***=***REMOVED***this.lastTokStartLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***this.lastTokStart***REMOVED***=***REMOVED***this.lastTokEnd***REMOVED***=***REMOVED***this.pos;

***REMOVED******REMOVED***//***REMOVED***The***REMOVED***context***REMOVED***stack***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***superficially***REMOVED***track***REMOVED***syntactic
***REMOVED******REMOVED***//***REMOVED***context***REMOVED***to***REMOVED***predict***REMOVED***whether***REMOVED***a***REMOVED***regular***REMOVED***expression***REMOVED***is***REMOVED***allowed***REMOVED***in***REMOVED***a
***REMOVED******REMOVED***//***REMOVED***given***REMOVED***position.
***REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***this.initialContext();
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED***//***REMOVED***Figure***REMOVED***out***REMOVED***if***REMOVED***it's***REMOVED***a***REMOVED***module***REMOVED***code.
***REMOVED******REMOVED***this.inModule***REMOVED***=***REMOVED***options.sourceType***REMOVED***===***REMOVED***"module";
***REMOVED******REMOVED***this.strict***REMOVED***=***REMOVED***this.inModule***REMOVED***||***REMOVED***this.strictDirective(this.pos);

***REMOVED******REMOVED***//***REMOVED***Used***REMOVED***to***REMOVED***signify***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***a***REMOVED***potential***REMOVED***arrow***REMOVED***function
***REMOVED******REMOVED***this.potentialArrowAt***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED***this.potentialArrowInForAwait***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***//***REMOVED***Positions***REMOVED***to***REMOVED***delayed-check***REMOVED***that***REMOVED***yield/await***REMOVED***does***REMOVED***not***REMOVED***exist***REMOVED***in***REMOVED***default***REMOVED***parameters.
***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***this.awaitPos***REMOVED***=***REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***//***REMOVED***Labels***REMOVED***in***REMOVED***scope.
***REMOVED******REMOVED***this.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***//***REMOVED***Thus-far***REMOVED***undefined***REMOVED***exports.
***REMOVED******REMOVED***this.undefinedExports***REMOVED***=***REMOVED***Object.create(null);

***REMOVED******REMOVED***//***REMOVED***If***REMOVED***enabled,***REMOVED***skip***REMOVED***leading***REMOVED***hashbang***REMOVED***line.
***REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***options.allowHashBang***REMOVED***&&***REMOVED***this.input.slice(0,***REMOVED***2)***REMOVED***===***REMOVED***"#!")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.skipLineComment(2);***REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Scope***REMOVED***tracking***REMOVED***for***REMOVED***duplicate***REMOVED***variable***REMOVED***names***REMOVED***(see***REMOVED***scope.js)
***REMOVED******REMOVED***this.scopeStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.enterScope(SCOPE_TOP);

***REMOVED******REMOVED***//***REMOVED***For***REMOVED***RegExp***REMOVED***validation
***REMOVED******REMOVED***this.regexpState***REMOVED***=***REMOVED***null;

***REMOVED******REMOVED***//***REMOVED***The***REMOVED***stack***REMOVED***of***REMOVED***private***REMOVED***names.
***REMOVED******REMOVED***//***REMOVED***Each***REMOVED***element***REMOVED***has***REMOVED***two***REMOVED***properties:***REMOVED***'declared'***REMOVED***and***REMOVED***'used'.
***REMOVED******REMOVED***//***REMOVED***When***REMOVED***it***REMOVED***exited***REMOVED***from***REMOVED***the***REMOVED***outermost***REMOVED***class***REMOVED***definition,***REMOVED***all***REMOVED***used***REMOVED***private***REMOVED***names***REMOVED***must***REMOVED***be***REMOVED***declared.
***REMOVED******REMOVED***this.privateNameStack***REMOVED***=***REMOVED***[];
};

var***REMOVED***prototypeAccessors***REMOVED***=***REMOVED***{***REMOVED***inFunction:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},inGenerator:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},inAsync:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},canAwait:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},allowSuper:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},allowDirectSuper:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},treatFunctionsAsVar:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},allowNewDotTarget:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***},inClassStaticBlock:***REMOVED***{***REMOVED***configurable:***REMOVED***true***REMOVED***}***REMOVED***};

Parser.prototype.parse***REMOVED***=***REMOVED***function***REMOVED***parse***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.options.program***REMOVED***||***REMOVED***this.startNode();
***REMOVED******REMOVED***this.nextToken();
***REMOVED******REMOVED***return***REMOVED***this.parseTopLevel(node)
};

prototypeAccessors.inFunction.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***return***REMOVED***(this.currentVarScope().flags***REMOVED***&***REMOVED***SCOPE_FUNCTION)***REMOVED***>***REMOVED***0***REMOVED***};

prototypeAccessors.inGenerator.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***return***REMOVED***(this.currentVarScope().flags***REMOVED***&***REMOVED***SCOPE_GENERATOR)***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!this.currentVarScope().inClassFieldInit***REMOVED***};

prototypeAccessors.inAsync.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***return***REMOVED***(this.currentVarScope().flags***REMOVED***&***REMOVED***SCOPE_ASYNC)***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!this.currentVarScope().inClassFieldInit***REMOVED***};

prototypeAccessors.canAwait.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.inClassFieldInit***REMOVED***||***REMOVED***scope.flags***REMOVED***&***REMOVED***SCOPE_CLASS_STATIC_BLOCK)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_FUNCTION)***REMOVED***{***REMOVED***return***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_ASYNC)***REMOVED***>***REMOVED***0***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***(this.inModule***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***13)***REMOVED***||***REMOVED***this.options.allowAwaitOutsideFunction
};

prototypeAccessors.allowSuper.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ref***REMOVED***=***REMOVED***this.currentThisScope();
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***flags***REMOVED***=***REMOVED***ref.flags;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***inClassFieldInit***REMOVED***=***REMOVED***ref.inClassFieldInit;
***REMOVED******REMOVED***return***REMOVED***(flags***REMOVED***&***REMOVED***SCOPE_SUPER)***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***inClassFieldInit***REMOVED***||***REMOVED***this.options.allowSuperOutsideMethod
};

prototypeAccessors.allowDirectSuper.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***return***REMOVED***(this.currentThisScope().flags***REMOVED***&***REMOVED***SCOPE_DIRECT_SUPER)***REMOVED***>***REMOVED***0***REMOVED***};

prototypeAccessors.treatFunctionsAsVar.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***return***REMOVED***this.treatFunctionsAsVarInScope(this.currentScope())***REMOVED***};

prototypeAccessors.allowNewDotTarget.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ref***REMOVED***=***REMOVED***this.currentThisScope();
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***flags***REMOVED***=***REMOVED***ref.flags;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***inClassFieldInit***REMOVED***=***REMOVED***ref.inClassFieldInit;
***REMOVED******REMOVED***return***REMOVED***(flags***REMOVED***&***REMOVED***(SCOPE_FUNCTION***REMOVED***|***REMOVED***SCOPE_CLASS_STATIC_BLOCK))***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***inClassFieldInit
};

prototypeAccessors.inClassStaticBlock.get***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(this.currentVarScope().flags***REMOVED***&***REMOVED***SCOPE_CLASS_STATIC_BLOCK)***REMOVED***>***REMOVED***0
};

Parser.extend***REMOVED***=***REMOVED***function***REMOVED***extend***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***plugins***REMOVED***=***REMOVED***[],***REMOVED***len***REMOVED***=***REMOVED***arguments.length;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(***REMOVED***len--***REMOVED***)***REMOVED***plugins[***REMOVED***len***REMOVED***]***REMOVED***=***REMOVED***arguments[***REMOVED***len***REMOVED***];

***REMOVED******REMOVED***var***REMOVED***cls***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***plugins.length;***REMOVED***i++)***REMOVED***{***REMOVED***cls***REMOVED***=***REMOVED***plugins[i](cls);***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***cls
};

Parser.parse***REMOVED***=***REMOVED***function***REMOVED***parse***REMOVED***(input,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***this(options,***REMOVED***input).parse()
};

Parser.parseExpressionAt***REMOVED***=***REMOVED***function***REMOVED***parseExpressionAt***REMOVED***(input,***REMOVED***pos,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***this(options,***REMOVED***input,***REMOVED***pos);
***REMOVED******REMOVED***parser.nextToken();
***REMOVED******REMOVED***return***REMOVED***parser.parseExpression()
};

Parser.tokenizer***REMOVED***=***REMOVED***function***REMOVED***tokenizer***REMOVED***(input,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***this(options,***REMOVED***input)
};

Object.defineProperties(***REMOVED***Parser.prototype,***REMOVED***prototypeAccessors***REMOVED***);

var***REMOVED***pp$9***REMOVED***=***REMOVED***Parser.prototype;

//***REMOVED***##***REMOVED***Parser***REMOVED***utilities

var***REMOVED***literal***REMOVED***=***REMOVED***/^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
pp$9.strictDirective***REMOVED***=***REMOVED***function(start)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***5)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Try***REMOVED***to***REMOVED***find***REMOVED***string***REMOVED***literal.
***REMOVED******REMOVED******REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***+=***REMOVED***skipWhiteSpace.exec(this.input)[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***match***REMOVED***=***REMOVED***literal.exec(this.input.slice(start));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((match[1]***REMOVED***||***REMOVED***match[2])***REMOVED***===***REMOVED***"use***REMOVED***strict")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***match[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceAfter***REMOVED***=***REMOVED***skipWhiteSpace.exec(this.input),***REMOVED***end***REMOVED***=***REMOVED***spaceAfter.index***REMOVED***+***REMOVED***spaceAfter[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charAt(end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***next***REMOVED***===***REMOVED***";"***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***"}"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(lineBreak.test(spaceAfter[0])***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(/[(`.[+\-/*%<>=,?^&]/.test(next)***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***"!"***REMOVED***&&***REMOVED***this.input.charAt(end***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***"="))
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***+=***REMOVED***match[0].length;

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Skip***REMOVED***semicolon,***REMOVED***if***REMOVED***any.
***REMOVED******REMOVED******REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***+=***REMOVED***skipWhiteSpace.exec(this.input)[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input[start]***REMOVED***===***REMOVED***";")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***start++;***REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***Predicate***REMOVED***that***REMOVED***tests***REMOVED***whether***REMOVED***the***REMOVED***next***REMOVED***token***REMOVED***is***REMOVED***of***REMOVED***the***REMOVED***given
//***REMOVED***type,***REMOVED***and***REMOVED***if***REMOVED***yes,***REMOVED***consumes***REMOVED***it***REMOVED***as***REMOVED***a***REMOVED***side***REMOVED***effect.

pp$9.eat***REMOVED***=***REMOVED***function(type)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED***}
};

//***REMOVED***Tests***REMOVED***whether***REMOVED***parsed***REMOVED***token***REMOVED***is***REMOVED***a***REMOVED***contextual***REMOVED***keyword.

pp$9.isContextual***REMOVED***=***REMOVED***function(name)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.type***REMOVED***===***REMOVED***types$1.name***REMOVED***&&***REMOVED***this.value***REMOVED***===***REMOVED***name***REMOVED***&&***REMOVED***!this.containsEsc
};

//***REMOVED***Consumes***REMOVED***contextual***REMOVED***keyword***REMOVED***if***REMOVED***possible.

pp$9.eatContextual***REMOVED***=***REMOVED***function(name)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.isContextual(name))***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***return***REMOVED***true
};

//***REMOVED***Asserts***REMOVED***that***REMOVED***following***REMOVED***token***REMOVED***is***REMOVED***given***REMOVED***contextual***REMOVED***keyword.

pp$9.expectContextual***REMOVED***=***REMOVED***function(name)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.eatContextual(name))***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
};

//***REMOVED***Test***REMOVED***whether***REMOVED***a***REMOVED***semicolon***REMOVED***can***REMOVED***be***REMOVED***inserted***REMOVED***at***REMOVED***the***REMOVED***current***REMOVED***position.

pp$9.canInsertSemicolon***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.type***REMOVED***===***REMOVED***types$1.eof***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***types$1.braceR***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***lineBreak.test(this.input.slice(this.lastTokEnd,***REMOVED***this.start))
};

pp$9.insertSemicolon***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.onInsertedSemicolon)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.options.onInsertedSemicolon(this.lastTokEnd,***REMOVED***this.lastTokEndLoc);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
};

//***REMOVED***Consume***REMOVED***a***REMOVED***semicolon,***REMOVED***or,***REMOVED***failing***REMOVED***that,***REMOVED***see***REMOVED***if***REMOVED***we***REMOVED***are***REMOVED***allowed***REMOVED***to
//***REMOVED***pretend***REMOVED***that***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***semicolon***REMOVED***at***REMOVED***this***REMOVED***position.

pp$9.semicolon***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.eat(types$1.semi)***REMOVED***&&***REMOVED***!this.insertSemicolon())***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
};

pp$9.afterTrailingComma***REMOVED***=***REMOVED***function(tokType,***REMOVED***notNext)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***tokType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.onTrailingComma)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.options.onTrailingComma(this.lastTokStart,***REMOVED***this.lastTokStartLoc);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!notNext)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.next();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
};

//***REMOVED***Expect***REMOVED***a***REMOVED***token***REMOVED***of***REMOVED***a***REMOVED***given***REMOVED***type.***REMOVED***If***REMOVED***found,***REMOVED***consume***REMOVED***it,***REMOVED***otherwise,
//***REMOVED***raise***REMOVED***an***REMOVED***unexpected***REMOVED***token***REMOVED***error.

pp$9.expect***REMOVED***=***REMOVED***function(type)***REMOVED***{
***REMOVED******REMOVED***this.eat(type)***REMOVED***||***REMOVED***this.unexpected();
};

//***REMOVED***Raise***REMOVED***an***REMOVED***unexpected***REMOVED***token***REMOVED***error.

pp$9.unexpected***REMOVED***=***REMOVED***function(pos)***REMOVED***{
***REMOVED******REMOVED***this.raise(pos***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***pos***REMOVED***:***REMOVED***this.start,***REMOVED***"Unexpected***REMOVED***token");
};

var***REMOVED***DestructuringErrors***REMOVED***=***REMOVED***function***REMOVED***DestructuringErrors()***REMOVED***{
***REMOVED******REMOVED***this.shorthandAssign***REMOVED***=
***REMOVED******REMOVED***this.trailingComma***REMOVED***=
***REMOVED******REMOVED***this.parenthesizedAssign***REMOVED***=
***REMOVED******REMOVED***this.parenthesizedBind***REMOVED***=
***REMOVED******REMOVED***this.doubleProto***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***-1;
};

pp$9.checkPatternErrors***REMOVED***=***REMOVED***function(refDestructuringErrors,***REMOVED***isAssign)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!refDestructuringErrors)***REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.trailingComma***REMOVED***>***REMOVED***-1)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(refDestructuringErrors.trailingComma,***REMOVED***"Comma***REMOVED***is***REMOVED***not***REMOVED***permitted***REMOVED***after***REMOVED***the***REMOVED***rest***REMOVED***element");***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***parens***REMOVED***=***REMOVED***isAssign***REMOVED***?***REMOVED***refDestructuringErrors.parenthesizedAssign***REMOVED***:***REMOVED***refDestructuringErrors.parenthesizedBind;
***REMOVED******REMOVED***if***REMOVED***(parens***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***this.raiseRecoverable(parens,***REMOVED***isAssign***REMOVED***?***REMOVED***"Assigning***REMOVED***to***REMOVED***rvalue"***REMOVED***:***REMOVED***"Parenthesized***REMOVED***pattern");***REMOVED***}
};

pp$9.checkExpressionErrors***REMOVED***=***REMOVED***function(refDestructuringErrors,***REMOVED***andThrow)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!refDestructuringErrors)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***shorthandAssign***REMOVED***=***REMOVED***refDestructuringErrors.shorthandAssign;
***REMOVED******REMOVED***var***REMOVED***doubleProto***REMOVED***=***REMOVED***refDestructuringErrors.doubleProto;
***REMOVED******REMOVED***if***REMOVED***(!andThrow)***REMOVED***{***REMOVED***return***REMOVED***shorthandAssign***REMOVED***>=***REMOVED***0***REMOVED***||***REMOVED***doubleProto***REMOVED***>=***REMOVED***0***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(shorthandAssign***REMOVED***>=***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(shorthandAssign,***REMOVED***"Shorthand***REMOVED***property***REMOVED***assignments***REMOVED***are***REMOVED***valid***REMOVED***only***REMOVED***in***REMOVED***destructuring***REMOVED***patterns");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(doubleProto***REMOVED***>=***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(doubleProto,***REMOVED***"Redefinition***REMOVED***of***REMOVED***__proto__***REMOVED***property");***REMOVED***}
};

pp$9.checkYieldAwaitInDefaultParams***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.yieldPos***REMOVED***&&***REMOVED***(!this.awaitPos***REMOVED***||***REMOVED***this.yieldPos***REMOVED***<***REMOVED***this.awaitPos))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.yieldPos,***REMOVED***"Yield***REMOVED***expression***REMOVED***cannot***REMOVED***be***REMOVED***a***REMOVED***default***REMOVED***value");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.awaitPos)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.awaitPos,***REMOVED***"Await***REMOVED***expression***REMOVED***cannot***REMOVED***be***REMOVED***a***REMOVED***default***REMOVED***value");***REMOVED***}
};

pp$9.isSimpleAssignTarget***REMOVED***=***REMOVED***function(expr)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(expr.type***REMOVED***===***REMOVED***"ParenthesizedExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***this.isSimpleAssignTarget(expr.expression)***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***expr.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***||***REMOVED***expr.type***REMOVED***===***REMOVED***"MemberExpression"
};

var***REMOVED***pp$8***REMOVED***=***REMOVED***Parser.prototype;

//***REMOVED***###***REMOVED***Statement***REMOVED***parsing

//***REMOVED***Parse***REMOVED***a***REMOVED***program.***REMOVED***Initializes***REMOVED***the***REMOVED***parser,***REMOVED***reads***REMOVED***any***REMOVED***number***REMOVED***of
//***REMOVED***statements,***REMOVED***and***REMOVED***wraps***REMOVED***them***REMOVED***in***REMOVED***a***REMOVED***Program***REMOVED***node.***REMOVED******REMOVED***Optionally***REMOVED***takes***REMOVED***a
//***REMOVED***`program`***REMOVED***argument.***REMOVED******REMOVED***If***REMOVED***present,***REMOVED***the***REMOVED***statements***REMOVED***will***REMOVED***be***REMOVED***appended
//***REMOVED***to***REMOVED***its***REMOVED***body***REMOVED***instead***REMOVED***of***REMOVED***creating***REMOVED***a***REMOVED***new***REMOVED***node.

pp$8.parseTopLevel***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***exports***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED***if***REMOVED***(!node.body)***REMOVED***{***REMOVED***node.body***REMOVED***=***REMOVED***[];***REMOVED***}
***REMOVED******REMOVED***while***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.eof)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***stmt***REMOVED***=***REMOVED***this.parseStatement(null,***REMOVED***true,***REMOVED***exports);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body.push(stmt);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.inModule)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***Object.keys(this.undefinedExports);***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(this.undefinedExports[name].start,***REMOVED***("Export***REMOVED***'"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"'***REMOVED***is***REMOVED***not***REMOVED***defined"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***}
***REMOVED******REMOVED***this.adaptDirectivePrologue(node.body);
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.sourceType***REMOVED***=***REMOVED***this.options.sourceType;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Program")
};

var***REMOVED***loopLabel***REMOVED***=***REMOVED***{kind:***REMOVED***"loop"},***REMOVED***switchLabel***REMOVED***=***REMOVED***{kind:***REMOVED***"switch"};

pp$8.isLet***REMOVED***=***REMOVED***function(context)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***6***REMOVED***||***REMOVED***!this.isContextual("let"))***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***var***REMOVED***skip***REMOVED***=***REMOVED***skipWhiteSpace.exec(this.input);
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.pos***REMOVED***+***REMOVED***skip[0].length,***REMOVED***nextCh***REMOVED***=***REMOVED***this.input.charCodeAt(next);
***REMOVED******REMOVED***//***REMOVED***For***REMOVED***ambiguous***REMOVED***cases,***REMOVED***determine***REMOVED***if***REMOVED***a***REMOVED***LexicalDeclaration***REMOVED***(or***REMOVED***only***REMOVED***a
***REMOVED******REMOVED***//***REMOVED***Statement)***REMOVED***is***REMOVED***allowed***REMOVED***here.***REMOVED***If***REMOVED***context***REMOVED***is***REMOVED***not***REMOVED***empty***REMOVED***then***REMOVED***only***REMOVED***a***REMOVED***Statement
***REMOVED******REMOVED***//***REMOVED***is***REMOVED***allowed.***REMOVED***However,***REMOVED***`let***REMOVED***[`***REMOVED***is***REMOVED***an***REMOVED***explicit***REMOVED***negative***REMOVED***lookahead***REMOVED***for
***REMOVED******REMOVED***//***REMOVED***ExpressionStatement,***REMOVED***so***REMOVED***special-case***REMOVED***it***REMOVED***first.
***REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***===***REMOVED***91***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***92)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}***REMOVED***//***REMOVED***'[',***REMOVED***'/'
***REMOVED******REMOVED***if***REMOVED***(context)***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***===***REMOVED***123***REMOVED***||***REMOVED***nextCh***REMOVED***>***REMOVED***0xd7ff***REMOVED***&&***REMOVED***nextCh***REMOVED***<***REMOVED***0xdc00)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}***REMOVED***//***REMOVED***'{',***REMOVED***astral
***REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(nextCh,***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(isIdentifierChar(nextCh***REMOVED***=***REMOVED***this.input.charCodeAt(pos),***REMOVED***true))***REMOVED***{***REMOVED***++pos;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***===***REMOVED***92***REMOVED***||***REMOVED***nextCh***REMOVED***>***REMOVED***0xd7ff***REMOVED***&&***REMOVED***nextCh***REMOVED***<***REMOVED***0xdc00)***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ident***REMOVED***=***REMOVED***this.input.slice(next,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!keywordRelationalOperator.test(ident))***REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***check***REMOVED***'async***REMOVED***[no***REMOVED***LineTerminator***REMOVED***here]***REMOVED***function'
//***REMOVED***-***REMOVED***'async***REMOVED***/*foo*/***REMOVED***function'***REMOVED***is***REMOVED***OK.
//***REMOVED***-***REMOVED***'async***REMOVED***/*\n*/***REMOVED***function'***REMOVED***is***REMOVED***invalid.
pp$8.isAsyncFunction***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***8***REMOVED***||***REMOVED***!this.isContextual("async"))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}

***REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***var***REMOVED***skip***REMOVED***=***REMOVED***skipWhiteSpace.exec(this.input);
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.pos***REMOVED***+***REMOVED***skip[0].length,***REMOVED***after;
***REMOVED******REMOVED***return***REMOVED***!lineBreak.test(this.input.slice(this.pos,***REMOVED***next))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***this.input.slice(next,***REMOVED***next***REMOVED***+***REMOVED***8)***REMOVED***===***REMOVED***"function"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***(next***REMOVED***+***REMOVED***8***REMOVED***===***REMOVED***this.input.length***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(isIdentifierChar(after***REMOVED***=***REMOVED***this.input.charCodeAt(next***REMOVED***+***REMOVED***8))***REMOVED***||***REMOVED***after***REMOVED***>***REMOVED***0xd7ff***REMOVED***&&***REMOVED***after***REMOVED***<***REMOVED***0xdc00))
};

//***REMOVED***Parse***REMOVED***a***REMOVED***single***REMOVED***statement.
//
//***REMOVED***If***REMOVED***expecting***REMOVED***a***REMOVED***statement***REMOVED***and***REMOVED***finding***REMOVED***a***REMOVED***slash***REMOVED***operator,***REMOVED***parse***REMOVED***a
//***REMOVED***regular***REMOVED***expression***REMOVED***literal.***REMOVED***This***REMOVED***is***REMOVED***to***REMOVED***handle***REMOVED***cases***REMOVED***like
//***REMOVED***`if***REMOVED***(foo)***REMOVED***/blah/.exec(foo)`,***REMOVED***where***REMOVED***looking***REMOVED***at***REMOVED***the***REMOVED***previous***REMOVED***token
//***REMOVED***does***REMOVED***not***REMOVED***help.

pp$8.parseStatement***REMOVED***=***REMOVED***function(context,***REMOVED***topLevel,***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***starttype***REMOVED***=***REMOVED***this.type,***REMOVED***node***REMOVED***=***REMOVED***this.startNode(),***REMOVED***kind;

***REMOVED******REMOVED***if***REMOVED***(this.isLet(context))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***starttype***REMOVED***=***REMOVED***types$1._var;
***REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***"let";
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Most***REMOVED***types***REMOVED***of***REMOVED***statements***REMOVED***are***REMOVED***recognized***REMOVED***by***REMOVED***the***REMOVED***keyword***REMOVED***they
***REMOVED******REMOVED***//***REMOVED***start***REMOVED***with.***REMOVED***Many***REMOVED***are***REMOVED***trivial***REMOVED***to***REMOVED***parse,***REMOVED***some***REMOVED***require***REMOVED***a***REMOVED***bit***REMOVED***of
***REMOVED******REMOVED***//***REMOVED***complexity.

***REMOVED******REMOVED***switch***REMOVED***(starttype)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***types$1._break:***REMOVED***case***REMOVED***types$1._continue:***REMOVED***return***REMOVED***this.parseBreakContinueStatement(node,***REMOVED***starttype.keyword)
***REMOVED******REMOVED***case***REMOVED***types$1._debugger:***REMOVED***return***REMOVED***this.parseDebuggerStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._do:***REMOVED***return***REMOVED***this.parseDoStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._for:***REMOVED***return***REMOVED***this.parseForStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._function:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Function***REMOVED***as***REMOVED***sole***REMOVED***body***REMOVED***of***REMOVED***either***REMOVED***an***REMOVED***if***REMOVED***statement***REMOVED***or***REMOVED***a***REMOVED***labeled***REMOVED***statement
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***works,***REMOVED***but***REMOVED***not***REMOVED***when***REMOVED***it***REMOVED***is***REMOVED***part***REMOVED***of***REMOVED***a***REMOVED***labeled***REMOVED***statement***REMOVED***that***REMOVED***is***REMOVED***the***REMOVED***sole
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***body***REMOVED***of***REMOVED***an***REMOVED***if***REMOVED***statement.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((context***REMOVED***&&***REMOVED***(this.strict***REMOVED***||***REMOVED***context***REMOVED***!==***REMOVED***"if"***REMOVED***&&***REMOVED***context***REMOVED***!==***REMOVED***"label"))***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunctionStatement(node,***REMOVED***false,***REMOVED***!context)
***REMOVED******REMOVED***case***REMOVED***types$1._class:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(node,***REMOVED***true)
***REMOVED******REMOVED***case***REMOVED***types$1._if:***REMOVED***return***REMOVED***this.parseIfStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._return:***REMOVED***return***REMOVED***this.parseReturnStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._switch:***REMOVED***return***REMOVED***this.parseSwitchStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._throw:***REMOVED***return***REMOVED***this.parseThrowStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._try:***REMOVED***return***REMOVED***this.parseTryStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._const:***REMOVED***case***REMOVED***types$1._var:
***REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***kind***REMOVED***||***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context***REMOVED***&&***REMOVED***kind***REMOVED***!==***REMOVED***"var")***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***kind)
***REMOVED******REMOVED***case***REMOVED***types$1._while:***REMOVED***return***REMOVED***this.parseWhileStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._with:***REMOVED***return***REMOVED***this.parseWithStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1.braceL:***REMOVED***return***REMOVED***this.parseBlock(true,***REMOVED***node)
***REMOVED******REMOVED***case***REMOVED***types$1.semi:***REMOVED***return***REMOVED***this.parseEmptyStatement(node)
***REMOVED******REMOVED***case***REMOVED***types$1._export:
***REMOVED******REMOVED***case***REMOVED***types$1._import:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>***REMOVED***10***REMOVED***&&***REMOVED***starttype***REMOVED***===***REMOVED***types$1._import)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***skip***REMOVED***=***REMOVED***skipWhiteSpace.exec(this.input);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.pos***REMOVED***+***REMOVED***skip[0].length,***REMOVED***nextCh***REMOVED***=***REMOVED***this.input.charCodeAt(next);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***===***REMOVED***40***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***46)***REMOVED***//***REMOVED***'('***REMOVED***or***REMOVED***'.'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***this.parseExpressionStatement(node,***REMOVED***this.parseExpression())***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.allowImportExportEverywhere)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!topLevel)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"'import'***REMOVED***and***REMOVED***'export'***REMOVED***may***REMOVED***only***REMOVED***appear***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.inModule)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"'import'***REMOVED***and***REMOVED***'export'***REMOVED***may***REMOVED***appear***REMOVED***only***REMOVED***with***REMOVED***'sourceType:***REMOVED***module'");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***starttype***REMOVED***===***REMOVED***types$1._import***REMOVED***?***REMOVED***this.parseImport(node)***REMOVED***:***REMOVED***this.parseExport(node,***REMOVED***exports)

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***statement***REMOVED***does***REMOVED***not***REMOVED***start***REMOVED***with***REMOVED***a***REMOVED***statement***REMOVED***keyword***REMOVED***or***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***brace,***REMOVED***it's***REMOVED***an***REMOVED***ExpressionStatement***REMOVED***or***REMOVED***LabeledStatement.***REMOVED***We
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***simply***REMOVED***start***REMOVED***parsing***REMOVED***an***REMOVED***expression,***REMOVED***and***REMOVED***afterwards,***REMOVED***if***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***next***REMOVED***token***REMOVED***is***REMOVED***a***REMOVED***colon***REMOVED***and***REMOVED***the***REMOVED***expression***REMOVED***was***REMOVED***a***REMOVED***simple
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Identifier***REMOVED***node,***REMOVED***we***REMOVED***switch***REMOVED***to***REMOVED***interpreting***REMOVED***it***REMOVED***as***REMOVED***a***REMOVED***label.
***REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAsyncFunction())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunctionStatement(node,***REMOVED***true,***REMOVED***!context)
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***maybeName***REMOVED***=***REMOVED***this.value,***REMOVED***expr***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(starttype***REMOVED***===***REMOVED***types$1.name***REMOVED***&&***REMOVED***expr.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***this.eat(types$1.colon))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***this.parseLabeledStatement(node,***REMOVED***maybeName,***REMOVED***expr,***REMOVED***context)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{***REMOVED***return***REMOVED***this.parseExpressionStatement(node,***REMOVED***expr)***REMOVED***}
***REMOVED******REMOVED***}
};

pp$8.parseBreakContinueStatement***REMOVED***=***REMOVED***function(node,***REMOVED***keyword)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isBreak***REMOVED***=***REMOVED***keyword***REMOVED***===***REMOVED***"break";
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.semi)***REMOVED***||***REMOVED***this.insertSemicolon())***REMOVED***{***REMOVED***node.label***REMOVED***=***REMOVED***null;***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.name)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.label***REMOVED***=***REMOVED***this.parseIdent();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Verify***REMOVED***that***REMOVED***there***REMOVED***is***REMOVED***an***REMOVED***actual***REMOVED***destination***REMOVED***to***REMOVED***break***REMOVED***or
***REMOVED******REMOVED***//***REMOVED***continue***REMOVED***to.
***REMOVED******REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***<***REMOVED***this.labels.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lab***REMOVED***=***REMOVED***this.labels[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.label***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***lab.name***REMOVED***===***REMOVED***node.label.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lab.kind***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***(isBreak***REMOVED***||***REMOVED***lab.kind***REMOVED***===***REMOVED***"loop"))***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.label***REMOVED***&&***REMOVED***isBreak)***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***this.labels.length)***REMOVED***{***REMOVED***this.raise(node.start,***REMOVED***"Unsyntactic***REMOVED***"***REMOVED***+***REMOVED***keyword);***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isBreak***REMOVED***?***REMOVED***"BreakStatement"***REMOVED***:***REMOVED***"ContinueStatement")
};

pp$8.parseDebuggerStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DebuggerStatement")
};

pp$8.parseDoStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***this.labels.push(loopLabel);
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseStatement("do");
***REMOVED******REMOVED***this.labels.pop();
***REMOVED******REMOVED***this.expect(types$1._while);
***REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.parseParenExpression();
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.eat(types$1.semi);***REMOVED***}
***REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.semicolon();***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DoWhileStatement")
};

//***REMOVED***Disambiguating***REMOVED***between***REMOVED***a***REMOVED***`for`***REMOVED***and***REMOVED***a***REMOVED***`for`/`in`***REMOVED***or***REMOVED***`for`/`of`
//***REMOVED***loop***REMOVED***is***REMOVED***non-trivial.***REMOVED***Basically,***REMOVED***we***REMOVED***have***REMOVED***to***REMOVED***parse***REMOVED***the***REMOVED***init***REMOVED***`var`
//***REMOVED***statement***REMOVED***or***REMOVED***expression,***REMOVED***disallowing***REMOVED***the***REMOVED***`in`***REMOVED***operator***REMOVED***(see
//***REMOVED***the***REMOVED***second***REMOVED***parameter***REMOVED***to***REMOVED***`parseExpression`),***REMOVED***and***REMOVED***then***REMOVED***check
//***REMOVED***whether***REMOVED***the***REMOVED***next***REMOVED***token***REMOVED***is***REMOVED***`in`***REMOVED***or***REMOVED***`of`.***REMOVED***When***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***init
//***REMOVED***part***REMOVED***(semicolon***REMOVED***immediately***REMOVED***after***REMOVED***the***REMOVED***opening***REMOVED***parenthesis),***REMOVED***it
//***REMOVED***is***REMOVED***a***REMOVED***regular***REMOVED***`for`***REMOVED***loop.

pp$8.parseForStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***var***REMOVED***awaitAt***REMOVED***=***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&***REMOVED***this.canAwait***REMOVED***&&***REMOVED***this.eatContextual("await"))***REMOVED***?***REMOVED***this.lastTokStart***REMOVED***:***REMOVED***-1;
***REMOVED******REMOVED***this.labels.push(loopLabel);
***REMOVED******REMOVED***this.enterScope(0);
***REMOVED******REMOVED***this.expect(types$1.parenL);
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.semi)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***this.unexpected(awaitAt);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFor(node,***REMOVED***null)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***isLet***REMOVED***=***REMOVED***this.isLet();
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._var***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1._const***REMOVED***||***REMOVED***isLet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***init$1***REMOVED***=***REMOVED***this.startNode(),***REMOVED***kind***REMOVED***=***REMOVED***isLet***REMOVED***?***REMOVED***"let"***REMOVED***:***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseVar(init$1,***REMOVED***true,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishNode(init$1,***REMOVED***"VariableDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((this.type***REMOVED***===***REMOVED***types$1._in***REMOVED***||***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***this.isContextual("of")))***REMOVED***&&***REMOVED***init$1.declarations.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._in)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***this.unexpected(awaitAt);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***node.await***REMOVED***=***REMOVED***awaitAt***REMOVED***>***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseForIn(node,***REMOVED***init$1)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***this.unexpected(awaitAt);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFor(node,***REMOVED***init$1)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***startsWithLet***REMOVED***=***REMOVED***this.isContextual("let"),***REMOVED***isForOf***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***var***REMOVED***refDestructuringErrors***REMOVED***=***REMOVED***new***REMOVED***DestructuringErrors;
***REMOVED******REMOVED***var***REMOVED***init***REMOVED***=***REMOVED***this.parseExpression(awaitAt***REMOVED***>***REMOVED***-1***REMOVED***?***REMOVED***"await"***REMOVED***:***REMOVED***true,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._in***REMOVED***||***REMOVED***(isForOf***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***this.isContextual("of")))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._in)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***this.unexpected(awaitAt);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***node.await***REMOVED***=***REMOVED***awaitAt***REMOVED***>***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startsWithLet***REMOVED***&&***REMOVED***isForOf)***REMOVED***{***REMOVED***this.raise(init.start,***REMOVED***"The***REMOVED***left-hand***REMOVED***side***REMOVED***of***REMOVED***a***REMOVED***for-of***REMOVED***loop***REMOVED***may***REMOVED***not***REMOVED***start***REMOVED***with***REMOVED***'let'.");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(init,***REMOVED***false,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValPattern(init);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseForIn(node,***REMOVED***init)
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refDestructuringErrors,***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***this.unexpected(awaitAt);***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.parseFor(node,***REMOVED***init)
};

pp$8.parseFunctionStatement***REMOVED***=***REMOVED***function(node,***REMOVED***isAsync,***REMOVED***declarationPosition)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***return***REMOVED***this.parseFunction(node,***REMOVED***FUNC_STATEMENT$1***REMOVED***|***REMOVED***(declarationPosition***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***FUNC_HANGING_STATEMENT),***REMOVED***false,***REMOVED***isAsync)
};

pp$8.parseIfStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.parseParenExpression();
***REMOVED******REMOVED***//***REMOVED***allow***REMOVED***function***REMOVED***declarations***REMOVED***in***REMOVED***branches,***REMOVED***but***REMOVED***only***REMOVED***in***REMOVED***non-strict***REMOVED***mode
***REMOVED******REMOVED***node.consequent***REMOVED***=***REMOVED***this.parseStatement("if");
***REMOVED******REMOVED***node.alternate***REMOVED***=***REMOVED***this.eat(types$1._else)***REMOVED***?***REMOVED***this.parseStatement("if")***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"IfStatement")
};

pp$8.parseReturnStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.inFunction***REMOVED***&&***REMOVED***!this.options.allowReturnOutsideFunction)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"'return'***REMOVED***outside***REMOVED***of***REMOVED***function");***REMOVED***}
***REMOVED******REMOVED***this.next();

***REMOVED******REMOVED***//***REMOVED***In***REMOVED***`return`***REMOVED***(and***REMOVED***`break`/`continue`),***REMOVED***the***REMOVED***keywords***REMOVED***with
***REMOVED******REMOVED***//***REMOVED***optional***REMOVED***arguments,***REMOVED***we***REMOVED***eagerly***REMOVED***look***REMOVED***for***REMOVED***a***REMOVED***semicolon***REMOVED***or***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***possibility***REMOVED***to***REMOVED***insert***REMOVED***one.

***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.semi)***REMOVED***||***REMOVED***this.insertSemicolon())***REMOVED***{***REMOVED***node.argument***REMOVED***=***REMOVED***null;***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{***REMOVED***node.argument***REMOVED***=***REMOVED***this.parseExpression();***REMOVED***this.semicolon();***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ReturnStatement")
};

pp$8.parseSwitchStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.discriminant***REMOVED***=***REMOVED***this.parseParenExpression();
***REMOVED******REMOVED***node.cases***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.expect(types$1.braceL);
***REMOVED******REMOVED***this.labels.push(switchLabel);
***REMOVED******REMOVED***this.enterScope(0);

***REMOVED******REMOVED***//***REMOVED***Statements***REMOVED***under***REMOVED***must***REMOVED***be***REMOVED***grouped***REMOVED***(by***REMOVED***label)***REMOVED***in***REMOVED***SwitchCase
***REMOVED******REMOVED***//***REMOVED***nodes.***REMOVED***`cur`***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***keep***REMOVED***the***REMOVED***node***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***currently
***REMOVED******REMOVED***//***REMOVED***adding***REMOVED***statements***REMOVED***to.

***REMOVED******REMOVED***var***REMOVED***cur;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***sawDefault***REMOVED***=***REMOVED***false;***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.braceR;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._case***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1._default)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isCase***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1._case;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cur)***REMOVED***{***REMOVED***this.finishNode(cur,***REMOVED***"SwitchCase");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.cases.push(cur***REMOVED***=***REMOVED***this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.consequent***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.test***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sawDefault)***REMOVED***{***REMOVED***this.raiseRecoverable(this.lastTokStart,***REMOVED***"Multiple***REMOVED***default***REMOVED***clauses");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sawDefault***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.test***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.colon);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!cur)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.consequent.push(this.parseStatement(null));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.exitScope();
***REMOVED******REMOVED***if***REMOVED***(cur)***REMOVED***{***REMOVED***this.finishNode(cur,***REMOVED***"SwitchCase");***REMOVED***}
***REMOVED******REMOVED***this.next();***REMOVED***//***REMOVED***Closing***REMOVED***brace
***REMOVED******REMOVED***this.labels.pop();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SwitchStatement")
};

pp$8.parseThrowStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***if***REMOVED***(lineBreak.test(this.input.slice(this.lastTokEnd,***REMOVED***this.start)))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.lastTokEnd,***REMOVED***"Illegal***REMOVED***newline***REMOVED***after***REMOVED***throw");***REMOVED***}
***REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ThrowStatement")
};

//***REMOVED***Reused***REMOVED***empty***REMOVED***array***REMOVED***added***REMOVED***for***REMOVED***node***REMOVED***fields***REMOVED***that***REMOVED***are***REMOVED***always***REMOVED***empty.

var***REMOVED***empty$1***REMOVED***=***REMOVED***[];

pp$8.parseCatchClauseParam***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***param***REMOVED***=***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED***var***REMOVED***simple***REMOVED***=***REMOVED***param.type***REMOVED***===***REMOVED***"Identifier";
***REMOVED******REMOVED***this.enterScope(simple***REMOVED***?***REMOVED***SCOPE_SIMPLE_CATCH***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED***this.checkLValPattern(param,***REMOVED***simple***REMOVED***?***REMOVED***BIND_SIMPLE_CATCH***REMOVED***:***REMOVED***BIND_LEXICAL);
***REMOVED******REMOVED***this.expect(types$1.parenR);

***REMOVED******REMOVED***return***REMOVED***param
};

pp$8.parseTryStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.block***REMOVED***=***REMOVED***this.parseBlock();
***REMOVED******REMOVED***node.handler***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._catch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***clause***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.parenL))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clause.param***REMOVED***=***REMOVED***this.parseCatchClauseParam();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***10)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clause.param***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.enterScope(0);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***clause.body***REMOVED***=***REMOVED***this.parseBlock(false);
***REMOVED******REMOVED******REMOVED******REMOVED***this.exitScope();
***REMOVED******REMOVED******REMOVED******REMOVED***node.handler***REMOVED***=***REMOVED***this.finishNode(clause,***REMOVED***"CatchClause");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***node.finalizer***REMOVED***=***REMOVED***this.eat(types$1._finally)***REMOVED***?***REMOVED***this.parseBlock()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***if***REMOVED***(!node.handler***REMOVED***&&***REMOVED***!node.finalizer)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(node.start,***REMOVED***"Missing***REMOVED***catch***REMOVED***or***REMOVED***finally***REMOVED***clause");***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TryStatement")
};

pp$8.parseVarStatement***REMOVED***=***REMOVED***function(node,***REMOVED***kind,***REMOVED***allowMissingInitializer)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***this.parseVar(node,***REMOVED***false,***REMOVED***kind,***REMOVED***allowMissingInitializer);
***REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"VariableDeclaration")
};

pp$8.parseWhileStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.parseParenExpression();
***REMOVED******REMOVED***this.labels.push(loopLabel);
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseStatement("while");
***REMOVED******REMOVED***this.labels.pop();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"WhileStatement")
};

pp$8.parseWithStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.strict)***REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"'with'***REMOVED***in***REMOVED***strict***REMOVED***mode");***REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***this.parseParenExpression();
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseStatement("with");
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"WithStatement")
};

pp$8.parseEmptyStatement***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EmptyStatement")
};

pp$8.parseLabeledStatement***REMOVED***=***REMOVED***function(node,***REMOVED***maybeName,***REMOVED***expr,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i$1***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***this.labels;***REMOVED***i$1***REMOVED***<***REMOVED***list.length;***REMOVED***i$1***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***label***REMOVED***=***REMOVED***list[i$1];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(label.name***REMOVED***===***REMOVED***maybeName)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(expr.start,***REMOVED***"Label***REMOVED***'"***REMOVED***+***REMOVED***maybeName***REMOVED***+***REMOVED***"'***REMOVED***is***REMOVED***already***REMOVED***declared");
***REMOVED******REMOVED***}***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***kind***REMOVED***=***REMOVED***this.type.isLoop***REMOVED***?***REMOVED***"loop"***REMOVED***:***REMOVED***this.type***REMOVED***===***REMOVED***types$1._switch***REMOVED***?***REMOVED***"switch"***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***this.labels.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***label$1***REMOVED***=***REMOVED***this.labels[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(label$1.statementStart***REMOVED***===***REMOVED***node.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Update***REMOVED***information***REMOVED***about***REMOVED***previous***REMOVED***labels***REMOVED***on***REMOVED***this***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label$1.statementStart***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label$1.kind***REMOVED***=***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.labels.push({name:***REMOVED***maybeName,***REMOVED***kind:***REMOVED***kind,***REMOVED***statementStart:***REMOVED***this.start});
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseStatement(context***REMOVED***?***REMOVED***context.indexOf("label")***REMOVED***===***REMOVED***-1***REMOVED***?***REMOVED***context***REMOVED***+***REMOVED***"label"***REMOVED***:***REMOVED***context***REMOVED***:***REMOVED***"label");
***REMOVED******REMOVED***this.labels.pop();
***REMOVED******REMOVED***node.label***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"LabeledStatement")
};

pp$8.parseExpressionStatement***REMOVED***=***REMOVED***function(node,***REMOVED***expr)***REMOVED***{
***REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExpressionStatement")
};

//***REMOVED***Parse***REMOVED***a***REMOVED***semicolon-enclosed***REMOVED***block***REMOVED***of***REMOVED***statements,***REMOVED***handling***REMOVED***`"use
//***REMOVED***strict"`***REMOVED***declarations***REMOVED***when***REMOVED***`allowStrict`***REMOVED***is***REMOVED***true***REMOVED***(used***REMOVED***for
//***REMOVED***function***REMOVED***bodies).

pp$8.parseBlock***REMOVED***=***REMOVED***function(createNewLexicalScope,***REMOVED***node,***REMOVED***exitStrict)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***createNewLexicalScope***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***createNewLexicalScope***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***node***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***node***REMOVED***=***REMOVED***this.startNode();

***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.expect(types$1.braceL);
***REMOVED******REMOVED***if***REMOVED***(createNewLexicalScope)***REMOVED***{***REMOVED***this.enterScope(0);***REMOVED***}
***REMOVED******REMOVED***while***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.braceR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***stmt***REMOVED***=***REMOVED***this.parseStatement(null);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body.push(stmt);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(exitStrict)***REMOVED***{***REMOVED***this.strict***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***if***REMOVED***(createNewLexicalScope)***REMOVED***{***REMOVED***this.exitScope();***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"BlockStatement")
};

//***REMOVED***Parse***REMOVED***a***REMOVED***regular***REMOVED***`for`***REMOVED***loop.***REMOVED***The***REMOVED***disambiguation***REMOVED***code***REMOVED***in
//***REMOVED***`parseStatement`***REMOVED***will***REMOVED***already***REMOVED***have***REMOVED***parsed***REMOVED***the***REMOVED***init***REMOVED***statement***REMOVED***or
//***REMOVED***expression.

pp$8.parseFor***REMOVED***=***REMOVED***function(node,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED***node.init***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED***this.expect(types$1.semi);
***REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.semi***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.parseExpression();
***REMOVED******REMOVED***this.expect(types$1.semi);
***REMOVED******REMOVED***node.update***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.parenR***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.parseExpression();
***REMOVED******REMOVED***this.expect(types$1.parenR);
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseStatement("for");
***REMOVED******REMOVED***this.exitScope();
***REMOVED******REMOVED***this.labels.pop();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ForStatement")
};

//***REMOVED***Parse***REMOVED***a***REMOVED***`for`/`in`***REMOVED***and***REMOVED***`for`/`of`***REMOVED***loop,***REMOVED***which***REMOVED***are***REMOVED***almost
//***REMOVED***same***REMOVED***from***REMOVED***parser's***REMOVED***perspective.

pp$8.parseForIn***REMOVED***=***REMOVED***function(node,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isForIn***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1._in;
***REMOVED******REMOVED***this.next();

***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***init.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***init.declarations[0].init***REMOVED***!=***REMOVED***null***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isForIn***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.ecmaVersion***REMOVED***<***REMOVED***8***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.strict***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init.kind***REMOVED***!==***REMOVED***"var"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init.declarations[0].id.type***REMOVED***!==***REMOVED***"Identifier"
***REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***((isForIn***REMOVED***?***REMOVED***"for-in"***REMOVED***:***REMOVED***"for-of")***REMOVED***+***REMOVED***"***REMOVED***loop***REMOVED***variable***REMOVED***declaration***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***an***REMOVED***initializer")
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***isForIn***REMOVED***?***REMOVED***this.parseExpression()***REMOVED***:***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED***this.expect(types$1.parenR);
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseStatement("for");
***REMOVED******REMOVED***this.exitScope();
***REMOVED******REMOVED***this.labels.pop();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isForIn***REMOVED***?***REMOVED***"ForInStatement"***REMOVED***:***REMOVED***"ForOfStatement")
};

//***REMOVED***Parse***REMOVED***a***REMOVED***list***REMOVED***of***REMOVED***variable***REMOVED***declarations.

pp$8.parseVar***REMOVED***=***REMOVED***function(node,***REMOVED***isFor,***REMOVED***kind,***REMOVED***allowMissingInitializer)***REMOVED***{
***REMOVED******REMOVED***node.declarations***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***kind;
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***decl***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseVarId(decl,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.eq))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.init***REMOVED***=***REMOVED***this.parseMaybeAssign(isFor);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!allowMissingInitializer***REMOVED***&&***REMOVED***kind***REMOVED***===***REMOVED***"const"***REMOVED***&&***REMOVED***!(this.type***REMOVED***===***REMOVED***types$1._in***REMOVED***||***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***this.isContextual("of"))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!allowMissingInitializer***REMOVED***&&***REMOVED***decl.id.type***REMOVED***!==***REMOVED***"Identifier"***REMOVED***&&***REMOVED***!(isFor***REMOVED***&&***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._in***REMOVED***||***REMOVED***this.isContextual("of"))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(this.lastTokEnd,***REMOVED***"Complex***REMOVED***binding***REMOVED***patterns***REMOVED***require***REMOVED***an***REMOVED***initialization***REMOVED***value");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.init***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.declarations.push(this.finishNode(decl,***REMOVED***"VariableDeclarator"));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(types$1.comma))***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node
};

pp$8.parseVarId***REMOVED***=***REMOVED***function(decl,***REMOVED***kind)***REMOVED***{
***REMOVED******REMOVED***decl.id***REMOVED***=***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED***this.checkLValPattern(decl.id,***REMOVED***kind***REMOVED***===***REMOVED***"var"***REMOVED***?***REMOVED***BIND_VAR***REMOVED***:***REMOVED***BIND_LEXICAL,***REMOVED***false);
};

var***REMOVED***FUNC_STATEMENT$1***REMOVED***=***REMOVED***1,***REMOVED***FUNC_HANGING_STATEMENT***REMOVED***=***REMOVED***2,***REMOVED***FUNC_NULLABLE_ID$1***REMOVED***=***REMOVED***4;

//***REMOVED***Parse***REMOVED***a***REMOVED***function***REMOVED***declaration***REMOVED***or***REMOVED***literal***REMOVED***(depending***REMOVED***on***REMOVED***the
//***REMOVED***`statement***REMOVED***&***REMOVED***FUNC_STATEMENT`).

//***REMOVED***Remove***REMOVED***`allowExpressionBody`***REMOVED***for***REMOVED***7.0.0,***REMOVED***as***REMOVED***it***REMOVED***is***REMOVED***only***REMOVED***called***REMOVED***with***REMOVED***false
pp$8.parseFunction***REMOVED***=***REMOVED***function(node,***REMOVED***statement,***REMOVED***allowExpressionBody,***REMOVED***isAsync,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***this.initFunction(node);
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***||***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***!isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.star***REMOVED***&&***REMOVED***(statement***REMOVED***&***REMOVED***FUNC_HANGING_STATEMENT))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.generator***REMOVED***=***REMOVED***this.eat(types$1.star);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***8)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***node.async***REMOVED***=***REMOVED***!!isAsync;***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(statement***REMOVED***&***REMOVED***FUNC_STATEMENT$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***(statement***REMOVED***&***REMOVED***FUNC_NULLABLE_ID$1)***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.name***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.parseIdent();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.id***REMOVED***&&***REMOVED***!(statement***REMOVED***&***REMOVED***FUNC_HANGING_STATEMENT))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***it***REMOVED***is***REMOVED***a***REMOVED***regular***REMOVED***function***REMOVED***declaration***REMOVED***in***REMOVED***sloppy***REMOVED***mode,***REMOVED***then***REMOVED***it***REMOVED***is
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***subject***REMOVED***to***REMOVED***Annex***REMOVED***B***REMOVED***semantics***REMOVED***(BIND_FUNCTION).***REMOVED***Otherwise,***REMOVED***the***REMOVED***binding
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mode***REMOVED***depends***REMOVED***on***REMOVED***properties***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***scope***REMOVED***(see
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***treatFunctionsAsVar).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkLValSimple(node.id,***REMOVED***(this.strict***REMOVED***||***REMOVED***node.generator***REMOVED***||***REMOVED***node.async)***REMOVED***?***REMOVED***this.treatFunctionsAsVar***REMOVED***?***REMOVED***BIND_VAR***REMOVED***:***REMOVED***BIND_LEXICAL***REMOVED***:***REMOVED***BIND_FUNCTION);***REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***oldYieldPos***REMOVED***=***REMOVED***this.yieldPos,***REMOVED***oldAwaitPos***REMOVED***=***REMOVED***this.awaitPos,***REMOVED***oldAwaitIdentPos***REMOVED***=***REMOVED***this.awaitIdentPos;
***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.enterScope(functionFlags(node.async,***REMOVED***node.generator));

***REMOVED******REMOVED***if***REMOVED***(!(statement***REMOVED***&***REMOVED***FUNC_STATEMENT$1))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***node.id***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.name***REMOVED***?***REMOVED***this.parseIdent()***REMOVED***:***REMOVED***null;***REMOVED***}

***REMOVED******REMOVED***this.parseFunctionParams(node);
***REMOVED******REMOVED***this.parseFunctionBody(node,***REMOVED***allowExpressionBody,***REMOVED***false,***REMOVED***forInit);

***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos;
***REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos;
***REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***oldAwaitIdentPos;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***(statement***REMOVED***&***REMOVED***FUNC_STATEMENT$1)***REMOVED***?***REMOVED***"FunctionDeclaration"***REMOVED***:***REMOVED***"FunctionExpression")
};

pp$8.parseFunctionParams***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.expect(types$1.parenL);
***REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***this.parseBindingList(types$1.parenR,***REMOVED***false,***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8);
***REMOVED******REMOVED***this.checkYieldAwaitInDefaultParams();
};

//***REMOVED***Parse***REMOVED***a***REMOVED***class***REMOVED***declaration***REMOVED***or***REMOVED***literal***REMOVED***(depending***REMOVED***on***REMOVED***the
//***REMOVED***`isStatement`***REMOVED***parameter).

pp$8.parseClass***REMOVED***=***REMOVED***function(node,***REMOVED***isStatement)***REMOVED***{
***REMOVED******REMOVED***this.next();

***REMOVED******REMOVED***//***REMOVED***ecma-262***REMOVED***14.6***REMOVED***Class***REMOVED***Definitions
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***class***REMOVED***definition***REMOVED***is***REMOVED***always***REMOVED***strict***REMOVED***mode***REMOVED***code.
***REMOVED******REMOVED***var***REMOVED***oldStrict***REMOVED***=***REMOVED***this.strict;
***REMOVED******REMOVED***this.strict***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED***this.parseClassId(node,***REMOVED***isStatement);
***REMOVED******REMOVED***this.parseClassSuper(node);
***REMOVED******REMOVED***var***REMOVED***privateNameMap***REMOVED***=***REMOVED***this.enterClassBody();
***REMOVED******REMOVED***var***REMOVED***classBody***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***var***REMOVED***hadConstructor***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***classBody.body***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.expect(types$1.braceL);
***REMOVED******REMOVED***while***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.braceR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***element***REMOVED***=***REMOVED***this.parseClassElement(node.superClass***REMOVED***!==***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(element);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element.type***REMOVED***===***REMOVED***"MethodDefinition"***REMOVED***&&***REMOVED***element.kind***REMOVED***===***REMOVED***"constructor")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hadConstructor)***REMOVED***{***REMOVED***this.raiseRecoverable(element.start,***REMOVED***"Duplicate***REMOVED***constructor***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***class");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadConstructor***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(element.key***REMOVED***&&***REMOVED***element.key.type***REMOVED***===***REMOVED***"PrivateIdentifier"***REMOVED***&&***REMOVED***isPrivateNameConflicted(privateNameMap,***REMOVED***element))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(element.key.start,***REMOVED***("Identifier***REMOVED***'#"***REMOVED***+***REMOVED***(element.key.name)***REMOVED***+***REMOVED***"'***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***declared"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.strict***REMOVED***=***REMOVED***oldStrict;
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.finishNode(classBody,***REMOVED***"ClassBody");
***REMOVED******REMOVED***this.exitClassBody();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isStatement***REMOVED***?***REMOVED***"ClassDeclaration"***REMOVED***:***REMOVED***"ClassExpression")
};

pp$8.parseClassElement***REMOVED***=***REMOVED***function(constructorAllowsSuper)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.semi))***REMOVED***{***REMOVED***return***REMOVED***null***REMOVED***}

***REMOVED******REMOVED***var***REMOVED***ecmaVersion***REMOVED***=***REMOVED***this.options.ecmaVersion;
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***var***REMOVED***keyName***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***var***REMOVED***isGenerator***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***var***REMOVED***isAsync***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***var***REMOVED***kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED***var***REMOVED***isStatic***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***if***REMOVED***(this.eatContextual("static"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***static***REMOVED***init***REMOVED***block
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ecmaVersion***REMOVED***>=***REMOVED***13***REMOVED***&&***REMOVED***this.eat(types$1.braceL))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassStaticBlock(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isClassElementNameStart()***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.star)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isStatic***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyName***REMOVED***=***REMOVED***"static";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***node.static***REMOVED***=***REMOVED***isStatic;
***REMOVED******REMOVED***if***REMOVED***(!keyName***REMOVED***&&***REMOVED***ecmaVersion***REMOVED***>=***REMOVED***8***REMOVED***&&***REMOVED***this.eatContextual("async"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((this.isClassElementNameStart()***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.star)***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyName***REMOVED***=***REMOVED***"async";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!keyName***REMOVED***&&***REMOVED***(ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***||***REMOVED***!isAsync)***REMOVED***&&***REMOVED***this.eat(types$1.star))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isGenerator***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!keyName***REMOVED***&&***REMOVED***!isAsync***REMOVED***&&***REMOVED***!isGenerator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastValue***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual("get")***REMOVED***||***REMOVED***this.eatContextual("set"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isClassElementNameStart())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***lastValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyName***REMOVED***=***REMOVED***lastValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***element***REMOVED***name
***REMOVED******REMOVED***if***REMOVED***(keyName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'async',***REMOVED***'get',***REMOVED***'set',***REMOVED***or***REMOVED***'static'***REMOVED***were***REMOVED***not***REMOVED***a***REMOVED***keyword***REMOVED***contextually.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***last***REMOVED***token***REMOVED***is***REMOVED***any***REMOVED***of***REMOVED***those.***REMOVED***Make***REMOVED***it***REMOVED***the***REMOVED***element***REMOVED***name.
***REMOVED******REMOVED******REMOVED******REMOVED***node.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.startNodeAt(this.lastTokStart,***REMOVED***this.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.key.name***REMOVED***=***REMOVED***keyName;
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishNode(node.key,***REMOVED***"Identifier");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassElementName(node);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***element***REMOVED***value
***REMOVED******REMOVED***if***REMOVED***(ecmaVersion***REMOVED***<***REMOVED***13***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.parenL***REMOVED***||***REMOVED***kind***REMOVED***!==***REMOVED***"method"***REMOVED***||***REMOVED***isGenerator***REMOVED***||***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isConstructor***REMOVED***=***REMOVED***!node.static***REMOVED***&&***REMOVED***checkKeyName(node,***REMOVED***"constructor");
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***allowsDirectSuper***REMOVED***=***REMOVED***isConstructor***REMOVED***&&***REMOVED***constructorAllowsSuper;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Couldn't***REMOVED***move***REMOVED***this***REMOVED***check***REMOVED***into***REMOVED***the***REMOVED***'parseClassMethod'***REMOVED***method***REMOVED***for***REMOVED***backward***REMOVED***compatibility.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isConstructor***REMOVED***&&***REMOVED***kind***REMOVED***!==***REMOVED***"method")***REMOVED***{***REMOVED***this.raise(node.key.start,***REMOVED***"Constructor***REMOVED***can't***REMOVED***have***REMOVED***get/set***REMOVED***modifier");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***isConstructor***REMOVED***?***REMOVED***"constructor"***REMOVED***:***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassMethod(node,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***allowsDirectSuper);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassField(node);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***node
};

pp$8.isClassElementNameStart***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***types$1.name***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***types$1.privateId***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***types$1.num***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***types$1.string***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***types$1.bracketL***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type.keyword
***REMOVED******REMOVED***)
};

pp$8.parseClassElementName***REMOVED***=***REMOVED***function(element)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.privateId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.value***REMOVED***===***REMOVED***"constructor")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(this.start,***REMOVED***"Classes***REMOVED***can't***REMOVED***have***REMOVED***an***REMOVED***element***REMOVED***named***REMOVED***'#constructor'");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***element.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***element.key***REMOVED***=***REMOVED***this.parsePrivateIdent();
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(element);
***REMOVED******REMOVED***}
};

pp$8.parseClassMethod***REMOVED***=***REMOVED***function(method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***allowsDirectSuper)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Check***REMOVED***key***REMOVED***and***REMOVED***flags
***REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***method.key;
***REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"constructor")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isGenerator)***REMOVED***{***REMOVED***this.raise(key.start,***REMOVED***"Constructor***REMOVED***can't***REMOVED***be***REMOVED***a***REMOVED***generator");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsync)***REMOVED***{***REMOVED***this.raise(key.start,***REMOVED***"Constructor***REMOVED***can't***REMOVED***be***REMOVED***an***REMOVED***async***REMOVED***method");***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(method.static***REMOVED***&&***REMOVED***checkKeyName(method,***REMOVED***"prototype"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(key.start,***REMOVED***"Classes***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***static***REMOVED***property***REMOVED***named***REMOVED***prototype");
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***value
***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***method.value***REMOVED***=***REMOVED***this.parseMethod(isGenerator,***REMOVED***isAsync,***REMOVED***allowsDirectSuper);

***REMOVED******REMOVED***//***REMOVED***Check***REMOVED***value
***REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"get"***REMOVED***&&***REMOVED***value.params.length***REMOVED***!==***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(value.start,***REMOVED***"getter***REMOVED***should***REMOVED***have***REMOVED***no***REMOVED***params");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"set"***REMOVED***&&***REMOVED***value.params.length***REMOVED***!==***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(value.start,***REMOVED***"setter***REMOVED***should***REMOVED***have***REMOVED***exactly***REMOVED***one***REMOVED***param");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"set"***REMOVED***&&***REMOVED***value.params[0].type***REMOVED***===***REMOVED***"RestElement")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(value.params[0].start,***REMOVED***"Setter***REMOVED***cannot***REMOVED***use***REMOVED***rest***REMOVED***params");***REMOVED***}

***REMOVED******REMOVED***return***REMOVED***this.finishNode(method,***REMOVED***"MethodDefinition")
};

pp$8.parseClassField***REMOVED***=***REMOVED***function(field)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(checkKeyName(field,***REMOVED***"constructor"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(field.key.start,***REMOVED***"Classes***REMOVED***can't***REMOVED***have***REMOVED***a***REMOVED***field***REMOVED***named***REMOVED***'constructor'");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(field.static***REMOVED***&&***REMOVED***checkKeyName(field,***REMOVED***"prototype"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(field.key.start,***REMOVED***"Classes***REMOVED***can't***REMOVED***have***REMOVED***a***REMOVED***static***REMOVED***field***REMOVED***named***REMOVED***'prototype'");
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.eq))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***raise***REMOVED***SyntaxError***REMOVED***if***REMOVED***'arguments'***REMOVED***exists***REMOVED***in***REMOVED***the***REMOVED***initializer.
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope***REMOVED***=***REMOVED***this.currentThisScope();
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***inClassFieldInit***REMOVED***=***REMOVED***scope.inClassFieldInit;
***REMOVED******REMOVED******REMOVED******REMOVED***scope.inClassFieldInit***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***field.value***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED***scope.inClassFieldInit***REMOVED***=***REMOVED***inClassFieldInit;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***field.value***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.semicolon();

***REMOVED******REMOVED***return***REMOVED***this.finishNode(field,***REMOVED***"PropertyDefinition")
};

pp$8.parseClassStaticBlock***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***var***REMOVED***oldLabels***REMOVED***=***REMOVED***this.labels;
***REMOVED******REMOVED***this.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.enterScope(SCOPE_CLASS_STATIC_BLOCK***REMOVED***|***REMOVED***SCOPE_SUPER);
***REMOVED******REMOVED***while***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.braceR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***stmt***REMOVED***=***REMOVED***this.parseStatement(null);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body.push(stmt);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***this.exitScope();
***REMOVED******REMOVED***this.labels***REMOVED***=***REMOVED***oldLabels;

***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"StaticBlock")
};

pp$8.parseClassId***REMOVED***=***REMOVED***function(node,***REMOVED***isStatement)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdent();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isStatement)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkLValSimple(node.id,***REMOVED***BIND_LEXICAL,***REMOVED***false);***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isStatement***REMOVED***===***REMOVED***true)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}
};

pp$8.parseClassSuper***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***node.superClass***REMOVED***=***REMOVED***this.eat(types$1._extends)***REMOVED***?***REMOVED***this.parseExprSubscripts(null,***REMOVED***false)***REMOVED***:***REMOVED***null;
};

pp$8.enterClassBody***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***element***REMOVED***=***REMOVED***{declared:***REMOVED***Object.create(null),***REMOVED***used:***REMOVED***[]};
***REMOVED******REMOVED***this.privateNameStack.push(element);
***REMOVED******REMOVED***return***REMOVED***element.declared
};

pp$8.exitClassBody***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ref***REMOVED***=***REMOVED***this.privateNameStack.pop();
***REMOVED******REMOVED***var***REMOVED***declared***REMOVED***=***REMOVED***ref.declared;
***REMOVED******REMOVED***var***REMOVED***used***REMOVED***=***REMOVED***ref.used;
***REMOVED******REMOVED***if***REMOVED***(!this.options.checkPrivateFields)***REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***len***REMOVED***=***REMOVED***this.privateNameStack.length;
***REMOVED******REMOVED***var***REMOVED***parent***REMOVED***=***REMOVED***len***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.privateNameStack[len***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***used.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***id***REMOVED***=***REMOVED***used[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasOwn(declared,***REMOVED***id.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.used.push(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(id.start,***REMOVED***("Private***REMOVED***field***REMOVED***'#"***REMOVED***+***REMOVED***(id.name)***REMOVED***+***REMOVED***"'***REMOVED***must***REMOVED***be***REMOVED***declared***REMOVED***in***REMOVED***an***REMOVED***enclosing***REMOVED***class"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

function***REMOVED***isPrivateNameConflicted(privateNameMap,***REMOVED***element)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***element.key.name;
***REMOVED******REMOVED***var***REMOVED***curr***REMOVED***=***REMOVED***privateNameMap[name];

***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***"true";
***REMOVED******REMOVED***if***REMOVED***(element.type***REMOVED***===***REMOVED***"MethodDefinition"***REMOVED***&&***REMOVED***(element.kind***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***element.kind***REMOVED***===***REMOVED***"set"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***(element.static***REMOVED***?***REMOVED***"s"***REMOVED***:***REMOVED***"i")***REMOVED***+***REMOVED***element.kind;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***`class***REMOVED***{***REMOVED***get***REMOVED***#a(){};***REMOVED***static***REMOVED***set***REMOVED***#a(_){}***REMOVED***}`***REMOVED***is***REMOVED***also***REMOVED***conflict.
***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***curr***REMOVED***===***REMOVED***"iget"***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***"iset"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***curr***REMOVED***===***REMOVED***"iset"***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***"iget"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***curr***REMOVED***===***REMOVED***"sget"***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***"sset"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***curr***REMOVED***===***REMOVED***"sset"***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***"sget"
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***privateNameMap[name]***REMOVED***=***REMOVED***"true";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!curr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***privateNameMap[name]***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
}

function***REMOVED***checkKeyName(node,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***computed***REMOVED***=***REMOVED***node.computed;
***REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***node.key;
***REMOVED******REMOVED***return***REMOVED***!computed***REMOVED***&&***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***key.name***REMOVED***===***REMOVED***name***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***key.type***REMOVED***===***REMOVED***"Literal"***REMOVED***&&***REMOVED***key.value***REMOVED***===***REMOVED***name
***REMOVED******REMOVED***)
}

//***REMOVED***Parses***REMOVED***module***REMOVED***export***REMOVED***declaration.

pp$8.parseExportAllDeclaration***REMOVED***=***REMOVED***function(node,***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***11)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual("as"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(exports,***REMOVED***node.exported,***REMOVED***this.lastTokStart);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.expectContextual("from");
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.string)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseExprAtom();
***REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportAllDeclaration")
};

pp$8.parseExport***REMOVED***=***REMOVED***function(node,***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***//***REMOVED***export***REMOVED*******REMOVED***from***REMOVED***'...'
***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.star))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExportAllDeclaration(node,***REMOVED***exports)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1._default))***REMOVED***{***REMOVED***//***REMOVED***export***REMOVED***default***REMOVED***...
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(exports,***REMOVED***"default",***REMOVED***this.lastTokStart);
***REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseExportDefaultDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportDefaultDeclaration")
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***export***REMOVED***var|const|let|function|class***REMOVED***...
***REMOVED******REMOVED***if***REMOVED***(this.shouldParseExportStatement())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseExportDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.declaration.type***REMOVED***===***REMOVED***"VariableDeclaration")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkVariableExport(exports,***REMOVED***node.declaration.declarations);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkExport(exports,***REMOVED***node.declaration.id,***REMOVED***node.declaration.id.start);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***//***REMOVED***export***REMOVED***{***REMOVED***x,***REMOVED***y***REMOVED***as***REMOVED***z***REMOVED***}***REMOVED***[from***REMOVED***'...']
***REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***this.parseExportSpecifiers(exports);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual("from"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.string)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.specifiers;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***for***REMOVED***keywords***REMOVED***used***REMOVED***as***REMOVED***local***REMOVED***names
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spec***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkUnreserved(spec.local);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***if***REMOVED***export***REMOVED***is***REMOVED***defined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLocalExport(spec.local);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spec.local.type***REMOVED***===***REMOVED***"Literal")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(spec.local.start,***REMOVED***"A***REMOVED***string***REMOVED***literal***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***as***REMOVED***an***REMOVED***exported***REMOVED***binding***REMOVED***without***REMOVED***`from`.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportNamedDeclaration")
};

pp$8.parseExportDeclaration***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.parseStatement(null)
};

pp$8.parseExportDefaultDeclaration***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isAsync;
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._function***REMOVED***||***REMOVED***(isAsync***REMOVED***=***REMOVED***this.isAsyncFunction()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***fNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsync)***REMOVED***{***REMOVED***this.next();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(fNode,***REMOVED***FUNC_STATEMENT$1***REMOVED***|***REMOVED***FUNC_NULLABLE_ID$1,***REMOVED***false,***REMOVED***isAsync)
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1._class)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(cNode,***REMOVED***"nullableID")
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***declaration***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration
***REMOVED******REMOVED***}
};

pp$8.checkExport***REMOVED***=***REMOVED***function(exports,***REMOVED***name,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!exports)***REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***name***REMOVED***!==***REMOVED***"string")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***name***REMOVED***=***REMOVED***name.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***name.name***REMOVED***:***REMOVED***name.value;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasOwn(exports,***REMOVED***name))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(pos,***REMOVED***"Duplicate***REMOVED***export***REMOVED***'"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"'");***REMOVED***}
***REMOVED******REMOVED***exports[name]***REMOVED***=***REMOVED***true;
};

pp$8.checkPatternExport***REMOVED***=***REMOVED***function(exports,***REMOVED***pat)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***type***REMOVED***=***REMOVED***pat.type;
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkExport(exports,***REMOVED***pat,***REMOVED***pat.start);***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"ObjectPattern")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***pat.properties;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkPatternExport(exports,***REMOVED***prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"ArrayPattern")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i$1***REMOVED***=***REMOVED***0,***REMOVED***list$1***REMOVED***=***REMOVED***pat.elements;***REMOVED***i$1***REMOVED***<***REMOVED***list$1.length;***REMOVED***i$1***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elt***REMOVED***=***REMOVED***list$1[i$1];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elt)***REMOVED***{***REMOVED***this.checkPatternExport(exports,***REMOVED***elt);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"Property")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkPatternExport(exports,***REMOVED***pat.value);***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"AssignmentPattern")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkPatternExport(exports,***REMOVED***pat.left);***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"RestElement")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkPatternExport(exports,***REMOVED***pat.argument);***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"ParenthesizedExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkPatternExport(exports,***REMOVED***pat.expression);***REMOVED***}
};

pp$8.checkVariableExport***REMOVED***=***REMOVED***function(exports,***REMOVED***decls)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!exports)***REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***decls;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***decl***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***this.checkPatternExport(exports,***REMOVED***decl.id);
***REMOVED******REMOVED***}
};

pp$8.shouldParseExportStatement***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.type.keyword***REMOVED***===***REMOVED***"var"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type.keyword***REMOVED***===***REMOVED***"const"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type.keyword***REMOVED***===***REMOVED***"class"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.type.keyword***REMOVED***===***REMOVED***"function"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLet()***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.isAsyncFunction()
};

//***REMOVED***Parses***REMOVED***a***REMOVED***comma-separated***REMOVED***list***REMOVED***of***REMOVED***module***REMOVED***exports.

pp$8.parseExportSpecifier***REMOVED***=***REMOVED***function(exports)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***node.local***REMOVED***=***REMOVED***this.parseModuleExportName();

***REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***this.eatContextual("as")***REMOVED***?***REMOVED***this.parseModuleExportName()***REMOVED***:***REMOVED***node.local;
***REMOVED******REMOVED***this.checkExport(
***REMOVED******REMOVED******REMOVED******REMOVED***exports,
***REMOVED******REMOVED******REMOVED******REMOVED***node.exported,
***REMOVED******REMOVED******REMOVED******REMOVED***node.exported.start
***REMOVED******REMOVED***);

***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportSpecifier")
};

pp$8.parseExportSpecifiers***REMOVED***=***REMOVED***function(exports)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***[],***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***//***REMOVED***export***REMOVED***{***REMOVED***x,***REMOVED***y***REMOVED***as***REMOVED***z***REMOVED***}***REMOVED***[from***REMOVED***'...']
***REMOVED******REMOVED***this.expect(types$1.braceL);
***REMOVED******REMOVED***while***REMOVED***(!this.eat(types$1.braceR))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.comma);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.afterTrailingComma(types$1.braceR))***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***first***REMOVED***=***REMOVED***false;***REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(this.parseExportSpecifier(exports));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***nodes
};

//***REMOVED***Parses***REMOVED***import***REMOVED***declaration.

pp$8.parseImport***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();

***REMOVED******REMOVED***//***REMOVED***import***REMOVED***'...'
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***empty$1;
***REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseExprAtom();
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***this.parseImportSpecifiers();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual("from");
***REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.string***REMOVED***?***REMOVED***this.parseExprAtom()***REMOVED***:***REMOVED***this.unexpected();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportDeclaration")
};

//***REMOVED***Parses***REMOVED***a***REMOVED***comma-separated***REMOVED***list***REMOVED***of***REMOVED***module***REMOVED***imports.

pp$8.parseImportSpecifier***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***node.imported***REMOVED***=***REMOVED***this.parseModuleExportName();

***REMOVED******REMOVED***if***REMOVED***(this.eatContextual("as"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.local***REMOVED***=***REMOVED***this.parseIdent();
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkUnreserved(node.imported);
***REMOVED******REMOVED******REMOVED******REMOVED***node.local***REMOVED***=***REMOVED***node.imported;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.checkLValSimple(node.local,***REMOVED***BIND_LEXICAL);

***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportSpecifier")
};

pp$8.parseImportDefaultSpecifier***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***import***REMOVED***defaultObj,***REMOVED***{***REMOVED***x,***REMOVED***y***REMOVED***as***REMOVED***z***REMOVED***}***REMOVED***from***REMOVED***'...'
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***node.local***REMOVED***=***REMOVED***this.parseIdent();
***REMOVED******REMOVED***this.checkLValSimple(node.local,***REMOVED***BIND_LEXICAL);
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportDefaultSpecifier")
};

pp$8.parseImportNamespaceSpecifier***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***this.expectContextual("as");
***REMOVED******REMOVED***node.local***REMOVED***=***REMOVED***this.parseIdent();
***REMOVED******REMOVED***this.checkLValSimple(node.local,***REMOVED***BIND_LEXICAL);
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportNamespaceSpecifier")
};

pp$8.parseImportSpecifiers***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***[],***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(this.parseImportDefaultSpecifier());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(types$1.comma))***REMOVED***{***REMOVED***return***REMOVED***nodes***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.star)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(this.parseImportNamespaceSpecifier());
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodes
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.expect(types$1.braceL);
***REMOVED******REMOVED***while***REMOVED***(!this.eat(types$1.braceR))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.comma);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.afterTrailingComma(types$1.braceR))***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***first***REMOVED***=***REMOVED***false;***REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(this.parseImportSpecifier());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***nodes
};

pp$8.parseModuleExportName***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***13***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***stringLiteral***REMOVED***=***REMOVED***this.parseLiteral(this.value);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(loneSurrogate.test(stringLiteral.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(stringLiteral.start,***REMOVED***"An***REMOVED***export***REMOVED***name***REMOVED***cannot***REMOVED***include***REMOVED***a***REMOVED***lone***REMOVED***surrogate.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stringLiteral
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.parseIdent(true)
};

//***REMOVED***Set***REMOVED***`ExpressionStatement#directive`***REMOVED***property***REMOVED***for***REMOVED***directive***REMOVED***prologues.
pp$8.adaptDirectivePrologue***REMOVED***=***REMOVED***function(statements)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***statements.length***REMOVED***&&***REMOVED***this.isDirectiveCandidate(statements[i]);***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***statements[i].directive***REMOVED***=***REMOVED***statements[i].expression.raw.slice(1,***REMOVED***-1);
***REMOVED******REMOVED***}
};
pp$8.isDirectiveCandidate***REMOVED***=***REMOVED***function(statement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***5***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***statement.type***REMOVED***===***REMOVED***"ExpressionStatement"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***statement.expression.type***REMOVED***===***REMOVED***"Literal"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***statement.expression.value***REMOVED***===***REMOVED***"string"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Reject***REMOVED***parenthesized***REMOVED***strings.
***REMOVED******REMOVED******REMOVED******REMOVED***(this.input[statement.start]***REMOVED***===***REMOVED***"\""***REMOVED***||***REMOVED***this.input[statement.start]***REMOVED***===***REMOVED***"'")
***REMOVED******REMOVED***)
};

var***REMOVED***pp$7***REMOVED***=***REMOVED***Parser.prototype;

//***REMOVED***Convert***REMOVED***existing***REMOVED***expression***REMOVED***atom***REMOVED***to***REMOVED***assignable***REMOVED***pattern
//***REMOVED***if***REMOVED***possible.

pp$7.toAssignable***REMOVED***=***REMOVED***function(node,***REMOVED***isBinding,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inAsync***REMOVED***&&***REMOVED***node.name***REMOVED***===***REMOVED***"await")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(node.start,***REMOVED***"Cannot***REMOVED***use***REMOVED***'await'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***an***REMOVED***async***REMOVED***function");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentPattern":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"RestElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***"ObjectPattern";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors)***REMOVED***{***REMOVED***this.checkPatternErrors(refDestructuringErrors,***REMOVED***true);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.properties;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(prop,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Early***REMOVED***error:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***AssignmentRestProperty[Yield,***REMOVED***Await]***REMOVED***:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`...`***REMOVED***DestructuringAssignmentTarget[Yield,***REMOVED***Await]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***It***REMOVED***is***REMOVED***a***REMOVED***Syntax***REMOVED***Error***REMOVED***if***REMOVED***|DestructuringAssignmentTarget|***REMOVED***is***REMOVED***an***REMOVED***|ArrayLiteral|***REMOVED***or***REMOVED***an***REMOVED***|ObjectLiteral|.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.type***REMOVED***===***REMOVED***"RestElement"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(prop.argument.type***REMOVED***===***REMOVED***"ArrayPattern"***REMOVED***||***REMOVED***prop.argument.type***REMOVED***===***REMOVED***"ObjectPattern")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(prop.argument.start,***REMOVED***"Unexpected***REMOVED***token");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Property":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***AssignmentProperty***REMOVED***has***REMOVED***type***REMOVED***===***REMOVED***"Property"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.kind***REMOVED***!==***REMOVED***"init")***REMOVED***{***REMOVED***this.raise(node.key.start,***REMOVED***"Object***REMOVED***pattern***REMOVED***can't***REMOVED***contain***REMOVED***getter***REMOVED***or***REMOVED***setter");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.value,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***"ArrayPattern";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors)***REMOVED***{***REMOVED***this.checkPatternErrors(refDestructuringErrors,***REMOVED***true);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableList(node.elements,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"SpreadElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***"RestElement";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.argument,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.argument.type***REMOVED***===***REMOVED***"AssignmentPattern")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(node.argument.start,***REMOVED***"Rest***REMOVED***elements***REMOVED***cannot***REMOVED***have***REMOVED***a***REMOVED***default***REMOVED***value");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.operator***REMOVED***!==***REMOVED***"=")***REMOVED***{***REMOVED***this.raise(node.left.end,***REMOVED***"Only***REMOVED***'='***REMOVED***operator***REMOVED***can***REMOVED***be***REMOVED***used***REMOVED***for***REMOVED***specifying***REMOVED***default***REMOVED***value.");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***"AssignmentPattern";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.operator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.left,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.expression,***REMOVED***isBinding,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ChainExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(node.start,***REMOVED***"Optional***REMOVED***chaining***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***left-hand***REMOVED***side");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"MemberExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isBinding)***REMOVED***{***REMOVED***break***REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(node.start,***REMOVED***"Assigning***REMOVED***to***REMOVED***rvalue");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(refDestructuringErrors)***REMOVED***{***REMOVED***this.checkPatternErrors(refDestructuringErrors,***REMOVED***true);***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node
};

//***REMOVED***Convert***REMOVED***list***REMOVED***of***REMOVED***expression***REMOVED***atoms***REMOVED***to***REMOVED***binding***REMOVED***list.

pp$7.toAssignableList***REMOVED***=***REMOVED***function(exprList,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***end***REMOVED***=***REMOVED***exprList.length;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***end;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elt***REMOVED***=***REMOVED***exprList[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elt)***REMOVED***{***REMOVED***this.toAssignable(elt,***REMOVED***isBinding);***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***exprList[end***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***===***REMOVED***6***REMOVED***&&***REMOVED***isBinding***REMOVED***&&***REMOVED***last***REMOVED***&&***REMOVED***last.type***REMOVED***===***REMOVED***"RestElement"***REMOVED***&&***REMOVED***last.argument.type***REMOVED***!==***REMOVED***"Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected(last.argument.start);***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***exprList
};

//***REMOVED***Parses***REMOVED***spread***REMOVED***element.

pp$7.parseSpread***REMOVED***=***REMOVED***function(refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeAssign(false,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SpreadElement")
};

pp$7.parseRestBinding***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***this.next();

***REMOVED******REMOVED***//***REMOVED***RestElement***REMOVED***inside***REMOVED***of***REMOVED***a***REMOVED***function***REMOVED***parameter***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***identifier
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***===***REMOVED***6***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.name)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected();***REMOVED***}

***REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseBindingAtom();

***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"RestElement")
};

//***REMOVED***Parses***REMOVED***lvalue***REMOVED***(assignable)***REMOVED***atom.

pp$7.parseBindingAtom***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***types$1.bracketL:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.elements***REMOVED***=***REMOVED***this.parseBindingList(types$1.bracketR,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ArrayPattern")

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***types$1.braceL:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObj(true)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.parseIdent()
};

pp$7.parseBindingList***REMOVED***=***REMOVED***function(close,***REMOVED***allowEmpty,***REMOVED***allowTrailingComma,***REMOVED***allowModifiers)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***elts***REMOVED***=***REMOVED***[],***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***while***REMOVED***(!this.eat(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{***REMOVED***first***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{***REMOVED***this.expect(types$1.comma);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowEmpty***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.comma)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(null);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(allowTrailingComma***REMOVED***&&***REMOVED***this.afterTrailingComma(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.ellipsis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rest***REMOVED***=***REMOVED***this.parseRestBinding();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseBindingListItem(rest);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(rest);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.comma)***REMOVED***{***REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Comma***REMOVED***is***REMOVED***not***REMOVED***permitted***REMOVED***after***REMOVED***the***REMOVED***rest***REMOVED***element");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(close);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(this.parseAssignableListItem(allowModifiers));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***elts
};

pp$7.parseAssignableListItem***REMOVED***=***REMOVED***function(allowModifiers)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***elem***REMOVED***=***REMOVED***this.parseMaybeDefault(this.start,***REMOVED***this.startLoc);
***REMOVED******REMOVED***this.parseBindingListItem(elem);
***REMOVED******REMOVED***return***REMOVED***elem
};

pp$7.parseBindingListItem***REMOVED***=***REMOVED***function(param)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***param
};

//***REMOVED***Parses***REMOVED***assignment***REMOVED***pattern***REMOVED***around***REMOVED***given***REMOVED***atom***REMOVED***if***REMOVED***possible.

pp$7.parseMaybeDefault***REMOVED***=***REMOVED***function(startPos,***REMOVED***startLoc,***REMOVED***left)***REMOVED***{
***REMOVED******REMOVED***left***REMOVED***=***REMOVED***left***REMOVED***||***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***6***REMOVED***||***REMOVED***!this.eat(types$1.eq))***REMOVED***{***REMOVED***return***REMOVED***left***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"AssignmentPattern")
};

//***REMOVED***The***REMOVED***following***REMOVED***three***REMOVED***functions***REMOVED***all***REMOVED***verify***REMOVED***that***REMOVED***a***REMOVED***node***REMOVED***is***REMOVED***an***REMOVED***lvalue***REMOVED***—
//***REMOVED***something***REMOVED***that***REMOVED***can***REMOVED***be***REMOVED***bound,***REMOVED***or***REMOVED***assigned***REMOVED***to.***REMOVED***In***REMOVED***order***REMOVED***to***REMOVED***do***REMOVED***so,***REMOVED***they***REMOVED***perform
//***REMOVED***a***REMOVED***variety***REMOVED***of***REMOVED***checks:
//
//***REMOVED***-***REMOVED***Check***REMOVED***that***REMOVED***none***REMOVED***of***REMOVED***the***REMOVED***bound/assigned-to***REMOVED***identifiers***REMOVED***are***REMOVED***reserved***REMOVED***words.
//***REMOVED***-***REMOVED***Record***REMOVED***name***REMOVED***declarations***REMOVED***for***REMOVED***bindings***REMOVED***in***REMOVED***the***REMOVED***appropriate***REMOVED***scope.
//***REMOVED***-***REMOVED***Check***REMOVED***duplicate***REMOVED***argument***REMOVED***names,***REMOVED***if***REMOVED***checkClashes***REMOVED***is***REMOVED***set.
//
//***REMOVED***If***REMOVED***a***REMOVED***complex***REMOVED***binding***REMOVED***pattern***REMOVED***is***REMOVED***encountered***REMOVED***(e.g.,***REMOVED***object***REMOVED***and***REMOVED***array
//***REMOVED***destructuring),***REMOVED***the***REMOVED***entire***REMOVED***pattern***REMOVED***is***REMOVED***recursively***REMOVED***checked.
//
//***REMOVED***There***REMOVED***are***REMOVED***three***REMOVED***versions***REMOVED***of***REMOVED***checkLVal*()***REMOVED***appropriate***REMOVED***for***REMOVED***different
//***REMOVED***circumstances:
//
//***REMOVED***-***REMOVED***checkLValSimple()***REMOVED***shall***REMOVED***be***REMOVED***used***REMOVED***if***REMOVED***the***REMOVED***syntactic***REMOVED***construct***REMOVED***supports
//***REMOVED******REMOVED******REMOVED***nothing***REMOVED***other***REMOVED***than***REMOVED***identifiers***REMOVED***and***REMOVED***member***REMOVED***expressions.***REMOVED***Parenthesized
//***REMOVED******REMOVED******REMOVED***expressions***REMOVED***are***REMOVED***also***REMOVED***correctly***REMOVED***handled.***REMOVED***This***REMOVED***is***REMOVED***generally***REMOVED***appropriate***REMOVED***for
//***REMOVED******REMOVED******REMOVED***constructs***REMOVED***for***REMOVED***which***REMOVED***the***REMOVED***spec***REMOVED***says
//
//***REMOVED******REMOVED******REMOVED***>***REMOVED***It***REMOVED***is***REMOVED***a***REMOVED***Syntax***REMOVED***Error***REMOVED***if***REMOVED***AssignmentTargetType***REMOVED***of***REMOVED***[the***REMOVED***production]***REMOVED***is***REMOVED***not
//***REMOVED******REMOVED******REMOVED***>***REMOVED***simple.
//
//***REMOVED******REMOVED******REMOVED***It***REMOVED***is***REMOVED***also***REMOVED***appropriate***REMOVED***for***REMOVED***checking***REMOVED***if***REMOVED***an***REMOVED***identifier***REMOVED***is***REMOVED***valid***REMOVED***and***REMOVED***not
//***REMOVED******REMOVED******REMOVED***defined***REMOVED***elsewhere,***REMOVED***like***REMOVED***import***REMOVED***declarations***REMOVED***or***REMOVED***function/class***REMOVED***identifiers.
//
//***REMOVED******REMOVED******REMOVED***Examples***REMOVED***where***REMOVED***this***REMOVED***is***REMOVED***used***REMOVED***include:
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***a***REMOVED***+=***REMOVED***…;
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***import***REMOVED***a***REMOVED***from***REMOVED***'…';
//***REMOVED******REMOVED******REMOVED***where***REMOVED***a***REMOVED***is***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***be***REMOVED***checked.
//
//***REMOVED***-***REMOVED***checkLValPattern()***REMOVED***shall***REMOVED***be***REMOVED***used***REMOVED***if***REMOVED***the***REMOVED***syntactic***REMOVED***construct***REMOVED***supports
//***REMOVED******REMOVED******REMOVED***anything***REMOVED***checkLValSimple()***REMOVED***supports,***REMOVED***as***REMOVED***well***REMOVED***as***REMOVED***object***REMOVED***and***REMOVED***array
//***REMOVED******REMOVED******REMOVED***destructuring***REMOVED***patterns.***REMOVED***This***REMOVED***is***REMOVED***generally***REMOVED***appropriate***REMOVED***for***REMOVED***constructs***REMOVED***for
//***REMOVED******REMOVED******REMOVED***which***REMOVED***the***REMOVED***spec***REMOVED***says
//
//***REMOVED******REMOVED******REMOVED***>***REMOVED***It***REMOVED***is***REMOVED***a***REMOVED***Syntax***REMOVED***Error***REMOVED***if***REMOVED***[the***REMOVED***production]***REMOVED***is***REMOVED***neither***REMOVED***an***REMOVED***ObjectLiteral***REMOVED***nor
//***REMOVED******REMOVED******REMOVED***>***REMOVED***an***REMOVED***ArrayLiteral***REMOVED***and***REMOVED***AssignmentTargetType***REMOVED***of***REMOVED***[the***REMOVED***production]***REMOVED***is***REMOVED***not
//***REMOVED******REMOVED******REMOVED***>***REMOVED***simple.
//
//***REMOVED******REMOVED******REMOVED***Examples***REMOVED***where***REMOVED***this***REMOVED***is***REMOVED***used***REMOVED***include:
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(a***REMOVED***=***REMOVED***…);
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***a***REMOVED***=***REMOVED***…;
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{***REMOVED***…***REMOVED***}***REMOVED***catch***REMOVED***(a)***REMOVED***{***REMOVED***…***REMOVED***}
//***REMOVED******REMOVED******REMOVED***where***REMOVED***a***REMOVED***is***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***be***REMOVED***checked.
//
//***REMOVED***-***REMOVED***checkLValInnerPattern()***REMOVED***shall***REMOVED***be***REMOVED***used***REMOVED***if***REMOVED***the***REMOVED***syntactic***REMOVED***construct***REMOVED***supports
//***REMOVED******REMOVED******REMOVED***anything***REMOVED***checkLValPattern()***REMOVED***supports,***REMOVED***as***REMOVED***well***REMOVED***as***REMOVED***default***REMOVED***assignment
//***REMOVED******REMOVED******REMOVED***patterns,***REMOVED***rest***REMOVED***elements,***REMOVED***and***REMOVED***other***REMOVED***constructs***REMOVED***that***REMOVED***may***REMOVED***appear***REMOVED***within***REMOVED***an
//***REMOVED******REMOVED******REMOVED***object***REMOVED***or***REMOVED***array***REMOVED***destructuring***REMOVED***pattern.
//
//***REMOVED******REMOVED******REMOVED***As***REMOVED***a***REMOVED***special***REMOVED***case,***REMOVED***function***REMOVED***parameters***REMOVED***also***REMOVED***use***REMOVED***checkLValInnerPattern(),
//***REMOVED******REMOVED******REMOVED***as***REMOVED***they***REMOVED***also***REMOVED***support***REMOVED***defaults***REMOVED***and***REMOVED***rest***REMOVED***constructs.
//
//***REMOVED***These***REMOVED***functions***REMOVED***deliberately***REMOVED***support***REMOVED***both***REMOVED***assignment***REMOVED***and***REMOVED***binding***REMOVED***constructs,
//***REMOVED***as***REMOVED***the***REMOVED***logic***REMOVED***for***REMOVED***both***REMOVED***is***REMOVED***exceedingly***REMOVED***similar.***REMOVED***If***REMOVED***the***REMOVED***node***REMOVED***is***REMOVED***the***REMOVED***target***REMOVED***of
//***REMOVED***an***REMOVED***assignment,***REMOVED***then***REMOVED***bindingType***REMOVED***should***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***BIND_NONE.***REMOVED***Otherwise,***REMOVED***it
//***REMOVED***should***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***the***REMOVED***appropriate***REMOVED***BIND_****REMOVED***constant,***REMOVED***like***REMOVED***BIND_VAR***REMOVED***or
//***REMOVED***BIND_LEXICAL.
//
//***REMOVED***If***REMOVED***the***REMOVED***function***REMOVED***is***REMOVED***called***REMOVED***with***REMOVED***a***REMOVED***non-BIND_NONE***REMOVED***bindingType,***REMOVED***then
//***REMOVED***additionally***REMOVED***a***REMOVED***checkClashes***REMOVED***object***REMOVED***may***REMOVED***be***REMOVED***specified***REMOVED***to***REMOVED***allow***REMOVED***checking***REMOVED***for
//***REMOVED***duplicate***REMOVED***argument***REMOVED***names.***REMOVED***checkClashes***REMOVED***is***REMOVED***ignored***REMOVED***if***REMOVED***the***REMOVED***provided***REMOVED***construct
//***REMOVED***is***REMOVED***an***REMOVED***assignment***REMOVED***(i.e.,***REMOVED***bindingType***REMOVED***is***REMOVED***BIND_NONE).

pp$7.checkLValSimple***REMOVED***=***REMOVED***function(expr,***REMOVED***bindingType,***REMOVED***checkClashes)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***bindingType***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***bindingType***REMOVED***=***REMOVED***BIND_NONE;

***REMOVED******REMOVED***var***REMOVED***isBind***REMOVED***=***REMOVED***bindingType***REMOVED***!==***REMOVED***BIND_NONE;

***REMOVED******REMOVED***switch***REMOVED***(expr.type)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.strict***REMOVED***&&***REMOVED***this.reservedWordsStrictBind.test(expr.name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(expr.start,***REMOVED***(isBind***REMOVED***?***REMOVED***"Binding***REMOVED***"***REMOVED***:***REMOVED***"Assigning***REMOVED***to***REMOVED***")***REMOVED***+***REMOVED***expr.name***REMOVED***+***REMOVED***"***REMOVED***in***REMOVED***strict***REMOVED***mode");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***===***REMOVED***BIND_LEXICAL***REMOVED***&&***REMOVED***expr.name***REMOVED***===***REMOVED***"let")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(expr.start,***REMOVED***"let***REMOVED***is***REMOVED***disallowed***REMOVED***as***REMOVED***a***REMOVED***lexically***REMOVED***bound***REMOVED***name");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkClashes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(checkClashes,***REMOVED***expr.name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(expr.start,***REMOVED***"Argument***REMOVED***name***REMOVED***clash");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkClashes[expr.name]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***!==***REMOVED***BIND_OUTSIDE)***REMOVED***{***REMOVED***this.declareName(expr.name,***REMOVED***bindingType,***REMOVED***expr.start);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***case***REMOVED***"ChainExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(expr.start,***REMOVED***"Optional***REMOVED***chaining***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***left-hand***REMOVED***side");
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***case***REMOVED***"MemberExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBind)***REMOVED***{***REMOVED***this.raiseRecoverable(expr.start,***REMOVED***"Binding***REMOVED***member***REMOVED***expression");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBind)***REMOVED***{***REMOVED***this.raiseRecoverable(expr.start,***REMOVED***"Binding***REMOVED***parenthesized***REMOVED***expression");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.checkLValSimple(expr.expression,***REMOVED***bindingType,***REMOVED***checkClashes)

***REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(expr.start,***REMOVED***(isBind***REMOVED***?***REMOVED***"Binding"***REMOVED***:***REMOVED***"Assigning***REMOVED***to")***REMOVED***+***REMOVED***"***REMOVED***rvalue");
***REMOVED******REMOVED***}
};

pp$7.checkLValPattern***REMOVED***=***REMOVED***function(expr,***REMOVED***bindingType,***REMOVED***checkClashes)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***bindingType***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***bindingType***REMOVED***=***REMOVED***BIND_NONE;

***REMOVED******REMOVED***switch***REMOVED***(expr.type)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***expr.properties;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValInnerPattern(prop,***REMOVED***bindingType,***REMOVED***checkClashes);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i$1***REMOVED***=***REMOVED***0,***REMOVED***list$1***REMOVED***=***REMOVED***expr.elements;***REMOVED***i$1***REMOVED***<***REMOVED***list$1.length;***REMOVED***i$1***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elem***REMOVED***=***REMOVED***list$1[i$1];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elem)***REMOVED***{***REMOVED***this.checkLValInnerPattern(elem,***REMOVED***bindingType,***REMOVED***checkClashes);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValSimple(expr,***REMOVED***bindingType,***REMOVED***checkClashes);
***REMOVED******REMOVED***}
};

pp$7.checkLValInnerPattern***REMOVED***=***REMOVED***function(expr,***REMOVED***bindingType,***REMOVED***checkClashes)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***bindingType***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***bindingType***REMOVED***=***REMOVED***BIND_NONE;

***REMOVED******REMOVED***switch***REMOVED***(expr.type)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***"Property":
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***AssignmentProperty***REMOVED***has***REMOVED***type***REMOVED***===***REMOVED***"Property"
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValInnerPattern(expr.value,***REMOVED***bindingType,***REMOVED***checkClashes);
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***case***REMOVED***"AssignmentPattern":
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValPattern(expr.left,***REMOVED***bindingType,***REMOVED***checkClashes);
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***case***REMOVED***"RestElement":
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValPattern(expr.argument,***REMOVED***bindingType,***REMOVED***checkClashes);
***REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValPattern(expr,***REMOVED***bindingType,***REMOVED***checkClashes);
***REMOVED******REMOVED***}
};

//***REMOVED***The***REMOVED***algorithm***REMOVED***used***REMOVED***to***REMOVED***determine***REMOVED***whether***REMOVED***a***REMOVED***regexp***REMOVED***can***REMOVED***appear***REMOVED***at***REMOVED***a
//***REMOVED***given***REMOVED***point***REMOVED***in***REMOVED***the***REMOVED***program***REMOVED***is***REMOVED***loosely***REMOVED***based***REMOVED***on***REMOVED***sweet.js'***REMOVED***approach.
//***REMOVED***See***REMOVED***https://github.com/mozilla/sweet.js/wiki/design


var***REMOVED***TokContext***REMOVED***=***REMOVED***function***REMOVED***TokContext(token,***REMOVED***isExpr,***REMOVED***preserveSpace,***REMOVED***override,***REMOVED***generator)***REMOVED***{
***REMOVED******REMOVED***this.token***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED***this.isExpr***REMOVED***=***REMOVED***!!isExpr;
***REMOVED******REMOVED***this.preserveSpace***REMOVED***=***REMOVED***!!preserveSpace;
***REMOVED******REMOVED***this.override***REMOVED***=***REMOVED***override;
***REMOVED******REMOVED***this.generator***REMOVED***=***REMOVED***!!generator;
};

var***REMOVED***types***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***b_stat:***REMOVED***new***REMOVED***TokContext("{",***REMOVED***false),
***REMOVED******REMOVED***b_expr:***REMOVED***new***REMOVED***TokContext("{",***REMOVED***true),
***REMOVED******REMOVED***b_tmpl:***REMOVED***new***REMOVED***TokContext("${",***REMOVED***false),
***REMOVED******REMOVED***p_stat:***REMOVED***new***REMOVED***TokContext("(",***REMOVED***false),
***REMOVED******REMOVED***p_expr:***REMOVED***new***REMOVED***TokContext("(",***REMOVED***true),
***REMOVED******REMOVED***q_tmpl:***REMOVED***new***REMOVED***TokContext("`",***REMOVED***true,***REMOVED***true,***REMOVED***function***REMOVED***(p)***REMOVED***{***REMOVED***return***REMOVED***p.tryReadTemplateToken();***REMOVED***}),
***REMOVED******REMOVED***f_stat:***REMOVED***new***REMOVED***TokContext("function",***REMOVED***false),
***REMOVED******REMOVED***f_expr:***REMOVED***new***REMOVED***TokContext("function",***REMOVED***true),
***REMOVED******REMOVED***f_expr_gen:***REMOVED***new***REMOVED***TokContext("function",***REMOVED***true,***REMOVED***false,***REMOVED***null,***REMOVED***true),
***REMOVED******REMOVED***f_gen:***REMOVED***new***REMOVED***TokContext("function",***REMOVED***false,***REMOVED***false,***REMOVED***null,***REMOVED***true)
};

var***REMOVED***pp$6***REMOVED***=***REMOVED***Parser.prototype;

pp$6.initialContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***[types.b_stat]
};

pp$6.curContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.context[this.context.length***REMOVED***-***REMOVED***1]
};

pp$6.braceIsBlock***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***parent***REMOVED***=***REMOVED***this.curContext();
***REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***===***REMOVED***types.f_expr***REMOVED***||***REMOVED***parent***REMOVED***===***REMOVED***types.f_stat)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(prevType***REMOVED***===***REMOVED***types$1.colon***REMOVED***&&***REMOVED***(parent***REMOVED***===***REMOVED***types.b_stat***REMOVED***||***REMOVED***parent***REMOVED***===***REMOVED***types.b_expr))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***!parent.isExpr***REMOVED***}

***REMOVED******REMOVED***//***REMOVED***The***REMOVED***check***REMOVED***for***REMOVED***`tt.name***REMOVED***&&***REMOVED***exprAllowed`***REMOVED***detects***REMOVED***whether***REMOVED***we***REMOVED***are
***REMOVED******REMOVED***//***REMOVED***after***REMOVED***a***REMOVED***`yield`***REMOVED***or***REMOVED***`of`***REMOVED***construct.***REMOVED***See***REMOVED***the***REMOVED***`updateContext`***REMOVED***for
***REMOVED******REMOVED***//***REMOVED***`tt.name`.
***REMOVED******REMOVED***if***REMOVED***(prevType***REMOVED***===***REMOVED***types$1._return***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.name***REMOVED***&&***REMOVED***this.exprAllowed)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***lineBreak.test(this.input.slice(this.lastTokEnd,***REMOVED***this.start))***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(prevType***REMOVED***===***REMOVED***types$1._else***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.semi***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.eof***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.parenR***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.arrow)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***true***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(prevType***REMOVED***===***REMOVED***types$1.braceL)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***parent***REMOVED***===***REMOVED***types.b_stat***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(prevType***REMOVED***===***REMOVED***types$1._var***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1._const***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.name)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***!this.exprAllowed
};

pp$6.inGeneratorContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***this.context.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***1;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***context***REMOVED***=***REMOVED***this.context[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.token***REMOVED***===***REMOVED***"function")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***context.generator***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

pp$6.updateContext***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***update,***REMOVED***type***REMOVED***=***REMOVED***this.type;
***REMOVED******REMOVED***if***REMOVED***(type.keyword***REMOVED***&&***REMOVED***prevType***REMOVED***===***REMOVED***types$1.dot)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.exprAllowed***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(update***REMOVED***=***REMOVED***type.updateContext)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***update.call(this,***REMOVED***prevType);***REMOVED***}
***REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.exprAllowed***REMOVED***=***REMOVED***type.beforeExpr;***REMOVED***}
};

//***REMOVED***Used***REMOVED***to***REMOVED***handle***REMOVED***egde***REMOVED***cases***REMOVED***when***REMOVED***token***REMOVED***context***REMOVED***could***REMOVED***not***REMOVED***be***REMOVED***inferred***REMOVED***correctly***REMOVED***during***REMOVED***tokenization***REMOVED***phase

pp$6.overrideContext***REMOVED***=***REMOVED***function(tokenCtx)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.curContext()***REMOVED***!==***REMOVED***tokenCtx)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.context[this.context.length***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***tokenCtx;
***REMOVED******REMOVED***}
};

//***REMOVED***Token-specific***REMOVED***context***REMOVED***update***REMOVED***code

types$1.parenR.updateContext***REMOVED***=***REMOVED***types$1.braceR.updateContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.context.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***out***REMOVED***=***REMOVED***this.context.pop();
***REMOVED******REMOVED***if***REMOVED***(out***REMOVED***===***REMOVED***types.b_stat***REMOVED***&&***REMOVED***this.curContext().token***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***=***REMOVED***this.context.pop();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***!out.isExpr;
};

types$1.braceL.updateContext***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***this.context.push(this.braceIsBlock(prevType)***REMOVED***?***REMOVED***types.b_stat***REMOVED***:***REMOVED***types.b_expr);
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***true;
};

types$1.dollarBraceL.updateContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.context.push(types.b_tmpl);
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***true;
};

types$1.parenL.updateContext***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***statementParens***REMOVED***=***REMOVED***prevType***REMOVED***===***REMOVED***types$1._if***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1._for***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1._with***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1._while;
***REMOVED******REMOVED***this.context.push(statementParens***REMOVED***?***REMOVED***types.p_stat***REMOVED***:***REMOVED***types.p_expr);
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***true;
};

types$1.incDec.updateContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***tokExprAllowed***REMOVED***stays***REMOVED***unchanged
};

types$1._function.updateContext***REMOVED***=***REMOVED***types$1._class.updateContext***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(prevType.beforeExpr***REMOVED***&&***REMOVED***prevType***REMOVED***!==***REMOVED***types$1._else***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(prevType***REMOVED***===***REMOVED***types$1.semi***REMOVED***&&***REMOVED***this.curContext()***REMOVED***!==***REMOVED***types.p_stat)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(prevType***REMOVED***===***REMOVED***types$1._return***REMOVED***&&***REMOVED***lineBreak.test(this.input.slice(this.lastTokEnd,***REMOVED***this.start)))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!((prevType***REMOVED***===***REMOVED***types$1.colon***REMOVED***||***REMOVED***prevType***REMOVED***===***REMOVED***types$1.braceL)***REMOVED***&&***REMOVED***this.curContext()***REMOVED***===***REMOVED***types.b_stat))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.context.push(types.f_expr);***REMOVED***}
***REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.context.push(types.f_stat);***REMOVED***}
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***false;
};

types$1.backQuote.updateContext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.curContext()***REMOVED***===***REMOVED***types.q_tmpl)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.context.pop();***REMOVED***}
***REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.context.push(types.q_tmpl);***REMOVED***}
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***false;
};

types$1.star.updateContext***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(prevType***REMOVED***===***REMOVED***types$1._function)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this.context.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.context[index]***REMOVED***===***REMOVED***types.f_expr)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.context[index]***REMOVED***=***REMOVED***types.f_expr_gen;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.context[index]***REMOVED***=***REMOVED***types.f_gen;***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***true;
};

types$1.name.updateContext***REMOVED***=***REMOVED***function(prevType)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***allowed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***prevType***REMOVED***!==***REMOVED***types$1.dot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.value***REMOVED***===***REMOVED***"of"***REMOVED***&&***REMOVED***!this.exprAllowed***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.value***REMOVED***===***REMOVED***"yield"***REMOVED***&&***REMOVED***this.inGeneratorContext())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***allowed***REMOVED***=***REMOVED***true;***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.exprAllowed***REMOVED***=***REMOVED***allowed;
};

//***REMOVED***A***REMOVED***recursive***REMOVED***descent***REMOVED***parser***REMOVED***operates***REMOVED***by***REMOVED***defining***REMOVED***functions***REMOVED***for***REMOVED***all
//***REMOVED***syntactic***REMOVED***elements,***REMOVED***and***REMOVED***recursively***REMOVED***calling***REMOVED***those,***REMOVED***each***REMOVED***function
//***REMOVED***advancing***REMOVED***the***REMOVED***input***REMOVED***stream***REMOVED***and***REMOVED***returning***REMOVED***an***REMOVED***AST***REMOVED***node.***REMOVED***Precedence
//***REMOVED***of***REMOVED***constructs***REMOVED***(for***REMOVED***example,***REMOVED***the***REMOVED***fact***REMOVED***that***REMOVED***`!x[1]`***REMOVED***means***REMOVED***`!(x[1])`
//***REMOVED***instead***REMOVED***of***REMOVED***`(!x)[1]`***REMOVED***is***REMOVED***handled***REMOVED***by***REMOVED***the***REMOVED***fact***REMOVED***that***REMOVED***the***REMOVED***parser
//***REMOVED***function***REMOVED***that***REMOVED***parses***REMOVED***unary***REMOVED***prefix***REMOVED***operators***REMOVED***is***REMOVED***called***REMOVED***first,***REMOVED***and
//***REMOVED***in***REMOVED***turn***REMOVED***calls***REMOVED***the***REMOVED***function***REMOVED***that***REMOVED***parses***REMOVED***`[]`***REMOVED***subscripts***REMOVED***—***REMOVED***that
//***REMOVED***way,***REMOVED***it'll***REMOVED***receive***REMOVED***the***REMOVED***node***REMOVED***for***REMOVED***`x[1]`***REMOVED***already***REMOVED***parsed,***REMOVED***and***REMOVED***wraps
//***REMOVED****that****REMOVED***in***REMOVED***the***REMOVED***unary***REMOVED***operator***REMOVED***node.
//
//***REMOVED***Acorn***REMOVED***uses***REMOVED***an***REMOVED***[operator***REMOVED***precedence***REMOVED***parser][opp]***REMOVED***to***REMOVED***handle***REMOVED***binary
//***REMOVED***operator***REMOVED***precedence,***REMOVED***because***REMOVED***it***REMOVED***is***REMOVED***much***REMOVED***more***REMOVED***compact***REMOVED***than***REMOVED***using
//***REMOVED***the***REMOVED***technique***REMOVED***outlined***REMOVED***above,***REMOVED***which***REMOVED***uses***REMOVED***different,***REMOVED***nesting
//***REMOVED***functions***REMOVED***to***REMOVED***specify***REMOVED***precedence,***REMOVED***for***REMOVED***all***REMOVED***of***REMOVED***the***REMOVED***ten***REMOVED***binary
//***REMOVED***precedence***REMOVED***levels***REMOVED***that***REMOVED***JavaScript***REMOVED***defines.
//
//***REMOVED***[opp]:***REMOVED***http://en.wikipedia.org/wiki/Operator-precedence_parser


var***REMOVED***pp$5***REMOVED***=***REMOVED***Parser.prototype;

//***REMOVED***Check***REMOVED***if***REMOVED***property***REMOVED***name***REMOVED***clashes***REMOVED***with***REMOVED***already***REMOVED***added.
//***REMOVED***Object/class***REMOVED***getters***REMOVED***and***REMOVED***setters***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***to***REMOVED***clash***REMOVED***—
//***REMOVED***either***REMOVED***with***REMOVED***each***REMOVED***other***REMOVED***or***REMOVED***with***REMOVED***an***REMOVED***init***REMOVED***property***REMOVED***—***REMOVED***and***REMOVED***in
//***REMOVED***strict***REMOVED***mode,***REMOVED***init***REMOVED***properties***REMOVED***are***REMOVED***also***REMOVED***not***REMOVED***allowed***REMOVED***to***REMOVED***be***REMOVED***repeated.

pp$5.checkPropClash***REMOVED***=***REMOVED***function(prop,***REMOVED***propHash,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&***REMOVED***prop.type***REMOVED***===***REMOVED***"SpreadElement")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***(prop.computed***REMOVED***||***REMOVED***prop.method***REMOVED***||***REMOVED***prop.shorthand))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***prop.key;
***REMOVED******REMOVED***var***REMOVED***name;
***REMOVED******REMOVED***switch***REMOVED***(key.type)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***"Identifier":***REMOVED***name***REMOVED***=***REMOVED***key.name;***REMOVED***break
***REMOVED******REMOVED***case***REMOVED***"Literal":***REMOVED***name***REMOVED***=***REMOVED***String(key.value);***REMOVED***break
***REMOVED******REMOVED***default:***REMOVED***return
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***kind***REMOVED***=***REMOVED***prop.kind;
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"__proto__"***REMOVED***&&***REMOVED***kind***REMOVED***===***REMOVED***"init")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propHash.proto)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.doubleProto***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refDestructuringErrors.doubleProto***REMOVED***=***REMOVED***key.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(key.start,***REMOVED***"Redefinition***REMOVED***of***REMOVED***__proto__***REMOVED***property");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propHash.proto***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return
***REMOVED******REMOVED***}
***REMOVED******REMOVED***name***REMOVED***=***REMOVED***"$"***REMOVED***+***REMOVED***name;
***REMOVED******REMOVED***var***REMOVED***other***REMOVED***=***REMOVED***propHash[name];
***REMOVED******REMOVED***if***REMOVED***(other)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***redefinition;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"init")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redefinition***REMOVED***=***REMOVED***this.strict***REMOVED***&&***REMOVED***other.init***REMOVED***||***REMOVED***other.get***REMOVED***||***REMOVED***other.set;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redefinition***REMOVED***=***REMOVED***other.init***REMOVED***||***REMOVED***other[kind];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(redefinition)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(key.start,***REMOVED***"Redefinition***REMOVED***of***REMOVED***property");***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***other***REMOVED***=***REMOVED***propHash[name]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***other[kind]***REMOVED***=***REMOVED***true;
};

//***REMOVED***###***REMOVED***Expression***REMOVED***parsing

//***REMOVED***These***REMOVED***nest,***REMOVED***from***REMOVED***the***REMOVED***most***REMOVED***general***REMOVED***expression***REMOVED***type***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***to
//***REMOVED***'atomic',***REMOVED***nondivisible***REMOVED***expression***REMOVED***types***REMOVED***at***REMOVED***the***REMOVED***bottom.***REMOVED***Most***REMOVED***of
//***REMOVED***the***REMOVED***functions***REMOVED***will***REMOVED***simply***REMOVED***let***REMOVED***the***REMOVED***function(s)***REMOVED***below***REMOVED***them***REMOVED***parse,
//***REMOVED***and,***REMOVED****if****REMOVED***the***REMOVED***syntactic***REMOVED***construct***REMOVED***they***REMOVED***handle***REMOVED***is***REMOVED***present,***REMOVED***wrap
//***REMOVED***the***REMOVED***AST***REMOVED***node***REMOVED***that***REMOVED***the***REMOVED***inner***REMOVED***parser***REMOVED***gave***REMOVED***them***REMOVED***in***REMOVED***another***REMOVED***node.

//***REMOVED***Parse***REMOVED***a***REMOVED***full***REMOVED***expression.***REMOVED***The***REMOVED***optional***REMOVED***arguments***REMOVED***are***REMOVED***used***REMOVED***to
//***REMOVED***forbid***REMOVED***the***REMOVED***`in`***REMOVED***operator***REMOVED***(in***REMOVED***for***REMOVED***loops***REMOVED***initalization***REMOVED***expressions)
//***REMOVED***and***REMOVED***provide***REMOVED***reference***REMOVED***for***REMOVED***storing***REMOVED***'='***REMOVED***operator***REMOVED***inside***REMOVED***shorthand
//***REMOVED***property***REMOVED***assignment***REMOVED***in***REMOVED***contexts***REMOVED***where***REMOVED***both***REMOVED***object***REMOVED***expression
//***REMOVED***and***REMOVED***object***REMOVED***pattern***REMOVED***might***REMOVED***appear***REMOVED***(so***REMOVED***it's***REMOVED***possible***REMOVED***to***REMOVED***raise
//***REMOVED***delayed***REMOVED***syntax***REMOVED***error***REMOVED***at***REMOVED***correct***REMOVED***position).

pp$5.parseExpression***REMOVED***=***REMOVED***function(forInit,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***var***REMOVED***expr***REMOVED***=***REMOVED***this.parseMaybeAssign(forInit,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.comma)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expressions***REMOVED***=***REMOVED***[expr];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(types$1.comma))***REMOVED***{***REMOVED***node.expressions.push(this.parseMaybeAssign(forInit,***REMOVED***refDestructuringErrors));***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SequenceExpression")
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***expr
};

//***REMOVED***Parse***REMOVED***an***REMOVED***assignment***REMOVED***expression.***REMOVED***This***REMOVED***includes***REMOVED***applications***REMOVED***of
//***REMOVED***operators***REMOVED***like***REMOVED***`+=`.

pp$5.parseMaybeAssign***REMOVED***=***REMOVED***function(forInit,***REMOVED***refDestructuringErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.isContextual("yield"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inGenerator)***REMOVED***{***REMOVED***return***REMOVED***this.parseYield(forInit)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***tokenizer***REMOVED***will***REMOVED***assume***REMOVED***an***REMOVED***expression***REMOVED***is***REMOVED***allowed***REMOVED***after
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`yield`,***REMOVED***but***REMOVED***this***REMOVED***isn't***REMOVED***that***REMOVED***kind***REMOVED***of***REMOVED***yield
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{***REMOVED***this.exprAllowed***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***ownDestructuringErrors***REMOVED***=***REMOVED***false,***REMOVED***oldParenAssign***REMOVED***=***REMOVED***-1,***REMOVED***oldTrailingComma***REMOVED***=***REMOVED***-1,***REMOVED***oldDoubleProto***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***oldParenAssign***REMOVED***=***REMOVED***refDestructuringErrors.parenthesizedAssign;
***REMOVED******REMOVED******REMOVED******REMOVED***oldTrailingComma***REMOVED***=***REMOVED***refDestructuringErrors.trailingComma;
***REMOVED******REMOVED******REMOVED******REMOVED***oldDoubleProto***REMOVED***=***REMOVED***refDestructuringErrors.doubleProto;
***REMOVED******REMOVED******REMOVED******REMOVED***refDestructuringErrors.parenthesizedAssign***REMOVED***=***REMOVED***refDestructuringErrors.trailingComma***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***refDestructuringErrors***REMOVED***=***REMOVED***new***REMOVED***DestructuringErrors;
***REMOVED******REMOVED******REMOVED******REMOVED***ownDestructuringErrors***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.parenL***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.potentialArrowAt***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED***this.potentialArrowInForAwait***REMOVED***=***REMOVED***forInit***REMOVED***===***REMOVED***"await";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***left***REMOVED***=***REMOVED***this.parseMaybeConditional(forInit,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED***if***REMOVED***(afterLeftParse)***REMOVED***{***REMOVED***left***REMOVED***=***REMOVED***afterLeftParse.call(this,***REMOVED***left,***REMOVED***startPos,***REMOVED***startLoc);***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.type.isAssign)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.eq)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***left***REMOVED***=***REMOVED***this.toAssignable(left,***REMOVED***false,***REMOVED***refDestructuringErrors);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ownDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refDestructuringErrors.parenthesizedAssign***REMOVED***=***REMOVED***refDestructuringErrors.trailingComma***REMOVED***=***REMOVED***refDestructuringErrors.doubleProto***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.shorthandAssign***REMOVED***>=***REMOVED***left.start)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***refDestructuringErrors.shorthandAssign***REMOVED***=***REMOVED***-1;***REMOVED***}***REMOVED***//***REMOVED***reset***REMOVED***because***REMOVED***shorthand***REMOVED***default***REMOVED***was***REMOVED***used***REMOVED***correctly
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.eq)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkLValPattern(left);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkLValSimple(left);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.parseMaybeAssign(forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldDoubleProto***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***refDestructuringErrors.doubleProto***REMOVED***=***REMOVED***oldDoubleProto;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"AssignmentExpression")
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ownDestructuringErrors)***REMOVED***{***REMOVED***this.checkExpressionErrors(refDestructuringErrors,***REMOVED***true);***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(oldParenAssign***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***refDestructuringErrors.parenthesizedAssign***REMOVED***=***REMOVED***oldParenAssign;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(oldTrailingComma***REMOVED***>***REMOVED***-1)***REMOVED***{***REMOVED***refDestructuringErrors.trailingComma***REMOVED***=***REMOVED***oldTrailingComma;***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***left
};

//***REMOVED***Parse***REMOVED***a***REMOVED***ternary***REMOVED***conditional***REMOVED***(`?:`)***REMOVED***operator.

pp$5.parseMaybeConditional***REMOVED***=***REMOVED***function(forInit,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***var***REMOVED***expr***REMOVED***=***REMOVED***this.parseExprOps(forInit,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED***if***REMOVED***(this.checkExpressionErrors(refDestructuringErrors))***REMOVED***{***REMOVED***return***REMOVED***expr***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.question))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***node.consequent***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.colon);
***REMOVED******REMOVED******REMOVED******REMOVED***node.alternate***REMOVED***=***REMOVED***this.parseMaybeAssign(forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ConditionalExpression")
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***expr
};

//***REMOVED***Start***REMOVED***the***REMOVED***precedence***REMOVED***parser.

pp$5.parseExprOps***REMOVED***=***REMOVED***function(forInit,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***var***REMOVED***expr***REMOVED***=***REMOVED***this.parseMaybeUnary(refDestructuringErrors,***REMOVED***false,***REMOVED***false,***REMOVED***forInit);
***REMOVED******REMOVED***if***REMOVED***(this.checkExpressionErrors(refDestructuringErrors))***REMOVED***{***REMOVED***return***REMOVED***expr***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***expr.start***REMOVED***===***REMOVED***startPos***REMOVED***&&***REMOVED***expr.type***REMOVED***===***REMOVED***"ArrowFunctionExpression"***REMOVED***?***REMOVED***expr***REMOVED***:***REMOVED***this.parseExprOp(expr,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***-1,***REMOVED***forInit)
};

//***REMOVED***Parse***REMOVED***binary***REMOVED***operators***REMOVED***with***REMOVED***the***REMOVED***operator***REMOVED***precedence***REMOVED***parsing
//***REMOVED***algorithm.***REMOVED***`left`***REMOVED***is***REMOVED***the***REMOVED***left-hand***REMOVED***side***REMOVED***of***REMOVED***the***REMOVED***operator.
//***REMOVED***`minPrec`***REMOVED***provides***REMOVED***context***REMOVED***that***REMOVED***allows***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***stop***REMOVED***and
//***REMOVED***defer***REMOVED***further***REMOVED***parser***REMOVED***to***REMOVED***one***REMOVED***of***REMOVED***its***REMOVED***callers***REMOVED***when***REMOVED***it***REMOVED***encounters***REMOVED***an
//***REMOVED***operator***REMOVED***that***REMOVED***has***REMOVED***a***REMOVED***lower***REMOVED***precedence***REMOVED***than***REMOVED***the***REMOVED***set***REMOVED***it***REMOVED***is***REMOVED***parsing.

pp$5.parseExprOp***REMOVED***=***REMOVED***function(left,***REMOVED***leftStartPos,***REMOVED***leftStartLoc,***REMOVED***minPrec,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***prec***REMOVED***=***REMOVED***this.type.binop;
***REMOVED******REMOVED***if***REMOVED***(prec***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***(!forInit***REMOVED***||***REMOVED***this.type***REMOVED***!==***REMOVED***types$1._in))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prec***REMOVED***>***REMOVED***minPrec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***logical***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.logicalOR***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.logicalAND;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***coalesce***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.coalesce;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(coalesce)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Handle***REMOVED***the***REMOVED***precedence***REMOVED***of***REMOVED***`tt.coalesce`***REMOVED***as***REMOVED***equal***REMOVED***to***REMOVED***the***REMOVED***range***REMOVED***of***REMOVED***logical***REMOVED***expressions.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***other***REMOVED***words,***REMOVED***`node.right`***REMOVED***shouldn't***REMOVED***contain***REMOVED***logical***REMOVED***expressions***REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***check***REMOVED***the***REMOVED***mixed***REMOVED***error.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prec***REMOVED***=***REMOVED***types$1.logicalAND.binop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***op***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***right***REMOVED***=***REMOVED***this.parseExprOp(this.parseMaybeUnary(null,***REMOVED***false,***REMOVED***false,***REMOVED***forInit),***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***prec,***REMOVED***forInit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.buildBinary(leftStartPos,***REMOVED***leftStartLoc,***REMOVED***left,***REMOVED***right,***REMOVED***op,***REMOVED***logical***REMOVED***||***REMOVED***coalesce);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((logical***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.coalesce)***REMOVED***||***REMOVED***(coalesce***REMOVED***&&***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.logicalOR***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.logicalAND)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Logical***REMOVED***expressions***REMOVED***and***REMOVED***coalesce***REMOVED***expressions***REMOVED***cannot***REMOVED***be***REMOVED***mixed.***REMOVED***Wrap***REMOVED***either***REMOVED***by***REMOVED***parentheses");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprOp(node,***REMOVED***leftStartPos,***REMOVED***leftStartLoc,***REMOVED***minPrec,***REMOVED***forInit)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***left
};

pp$5.buildBinary***REMOVED***=***REMOVED***function(startPos,***REMOVED***startLoc,***REMOVED***left,***REMOVED***right,***REMOVED***op,***REMOVED***logical)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(right.type***REMOVED***===***REMOVED***"PrivateIdentifier")***REMOVED***{***REMOVED***this.raise(right.start,***REMOVED***"Private***REMOVED***identifier***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***left***REMOVED***side***REMOVED***of***REMOVED***binary***REMOVED***expression");***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***op;
***REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***right;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***logical***REMOVED***?***REMOVED***"LogicalExpression"***REMOVED***:***REMOVED***"BinaryExpression")
};

//***REMOVED***Parse***REMOVED***unary***REMOVED***operators,***REMOVED***both***REMOVED***prefix***REMOVED***and***REMOVED***postfix.

pp$5.parseMaybeUnary***REMOVED***=***REMOVED***function(refDestructuringErrors,***REMOVED***sawUnary,***REMOVED***incDec,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc,***REMOVED***expr;
***REMOVED******REMOVED***if***REMOVED***(this.isContextual("await")***REMOVED***&&***REMOVED***this.canAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.parseAwait(forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***sawUnary***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type.prefix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode(),***REMOVED***update***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.incDec;
***REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***node.prefix***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeUnary(null,***REMOVED***true,***REMOVED***update,***REMOVED***forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refDestructuringErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(update)***REMOVED***{***REMOVED***this.checkLValSimple(node.argument);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.strict***REMOVED***&&***REMOVED***node.operator***REMOVED***===***REMOVED***"delete"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument.type***REMOVED***===***REMOVED***"Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"Deleting***REMOVED***local***REMOVED***variable***REMOVED***in***REMOVED***strict***REMOVED***mode");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node.operator***REMOVED***===***REMOVED***"delete"***REMOVED***&&***REMOVED***isPrivateFieldAccess(node.argument))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"Private***REMOVED***fields***REMOVED***can***REMOVED***not***REMOVED***be***REMOVED***deleted");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{***REMOVED***sawUnary***REMOVED***=***REMOVED***true;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***update***REMOVED***?***REMOVED***"UpdateExpression"***REMOVED***:***REMOVED***"UnaryExpression");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!sawUnary***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.privateId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((forInit***REMOVED***||***REMOVED***this.privateNameStack.length***REMOVED***===***REMOVED***0)***REMOVED***&&***REMOVED***this.options.checkPrivateFields)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.parsePrivateIdent();
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***only***REMOVED***could***REMOVED***be***REMOVED***private***REMOVED***fields***REMOVED***in***REMOVED***'in',***REMOVED***such***REMOVED***as***REMOVED***#x***REMOVED***in***REMOVED***obj
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1._in)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.parseExprSubscripts(refDestructuringErrors,***REMOVED***forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.checkExpressionErrors(refDestructuringErrors))***REMOVED***{***REMOVED***return***REMOVED***expr***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.type.postfix***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node$1***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node$1.operator***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node$1.prefix***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node$1.argument***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValSimple(expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.finishNode(node$1,***REMOVED***"UpdateExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(!incDec***REMOVED***&&***REMOVED***this.eat(types$1.starstar))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sawUnary)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected(this.lastTokStart);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***this.buildBinary(startPos,***REMOVED***startLoc,***REMOVED***expr,***REMOVED***this.parseMaybeUnary(null,***REMOVED***false,***REMOVED***false,***REMOVED***forInit),***REMOVED***"**",***REMOVED***false)***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr
***REMOVED******REMOVED***}
};

function***REMOVED***isPrivateFieldAccess(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***===***REMOVED***"MemberExpression"***REMOVED***&&***REMOVED***node.property.type***REMOVED***===***REMOVED***"PrivateIdentifier"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***===***REMOVED***"ChainExpression"***REMOVED***&&***REMOVED***isPrivateFieldAccess(node.expression)
***REMOVED******REMOVED***)
}

//***REMOVED***Parse***REMOVED***call,***REMOVED***dot,***REMOVED***and***REMOVED***`[]`-subscript***REMOVED***expressions.

pp$5.parseExprSubscripts***REMOVED***=***REMOVED***function(refDestructuringErrors,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***var***REMOVED***expr***REMOVED***=***REMOVED***this.parseExprAtom(refDestructuringErrors,***REMOVED***forInit);
***REMOVED******REMOVED***if***REMOVED***(expr.type***REMOVED***===***REMOVED***"ArrowFunctionExpression"***REMOVED***&&***REMOVED***this.input.slice(this.lastTokStart,***REMOVED***this.lastTokEnd)***REMOVED***!==***REMOVED***")")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***expr***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this.parseSubscripts(expr,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***false,***REMOVED***forInit);
***REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors***REMOVED***&&***REMOVED***result.type***REMOVED***===***REMOVED***"MemberExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.parenthesizedAssign***REMOVED***>=***REMOVED***result.start)***REMOVED***{***REMOVED***refDestructuringErrors.parenthesizedAssign***REMOVED***=***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.parenthesizedBind***REMOVED***>=***REMOVED***result.start)***REMOVED***{***REMOVED***refDestructuringErrors.parenthesizedBind***REMOVED***=***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.trailingComma***REMOVED***>=***REMOVED***result.start)***REMOVED***{***REMOVED***refDestructuringErrors.trailingComma***REMOVED***=***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result
};

pp$5.parseSubscripts***REMOVED***=***REMOVED***function(base,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***maybeAsyncArrow***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8***REMOVED***&&***REMOVED***base.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***base.name***REMOVED***===***REMOVED***"async"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lastTokEnd***REMOVED***===***REMOVED***base.end***REMOVED***&&***REMOVED***!this.canInsertSemicolon()***REMOVED***&&***REMOVED***base.end***REMOVED***-***REMOVED***base.start***REMOVED***===***REMOVED***5***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.potentialArrowAt***REMOVED***===***REMOVED***base.start;
***REMOVED******REMOVED***var***REMOVED***optionalChained***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***element***REMOVED***=***REMOVED***this.parseSubscript(base,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***maybeAsyncArrow,***REMOVED***optionalChained,***REMOVED***forInit);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element.optional)***REMOVED***{***REMOVED***optionalChained***REMOVED***=***REMOVED***true;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***===***REMOVED***base***REMOVED***||***REMOVED***element.type***REMOVED***===***REMOVED***"ArrowFunctionExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalChained)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***chainNode***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chainNode.expression***REMOVED***=***REMOVED***element;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element***REMOVED***=***REMOVED***this.finishNode(chainNode,***REMOVED***"ChainExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***element
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***element;
***REMOVED******REMOVED***}
};

pp$5.shouldParseAsyncArrow***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!this.canInsertSemicolon()***REMOVED***&&***REMOVED***this.eat(types$1.arrow)
};

pp$5.parseSubscriptAsyncArrow***REMOVED***=***REMOVED***function(startPos,***REMOVED***startLoc,***REMOVED***exprList,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.parseArrowExpression(this.startNodeAt(startPos,***REMOVED***startLoc),***REMOVED***exprList,***REMOVED***true,***REMOVED***forInit)
};

pp$5.parseSubscript***REMOVED***=***REMOVED***function(base,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***maybeAsyncArrow,***REMOVED***optionalChained,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***optionalSupported***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***11;
***REMOVED******REMOVED***var***REMOVED***optional***REMOVED***=***REMOVED***optionalSupported***REMOVED***&&***REMOVED***this.eat(types$1.questionDot);
***REMOVED******REMOVED***if***REMOVED***(noCalls***REMOVED***&&***REMOVED***optional)***REMOVED***{***REMOVED***this.raise(this.lastTokStart,***REMOVED***"Optional***REMOVED***chaining***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***the***REMOVED***callee***REMOVED***of***REMOVED***new***REMOVED***expressions");***REMOVED***}

***REMOVED******REMOVED***var***REMOVED***computed***REMOVED***=***REMOVED***this.eat(types$1.bracketL);
***REMOVED******REMOVED***if***REMOVED***(computed***REMOVED***||***REMOVED***(optional***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.parenL***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.backQuote)***REMOVED***||***REMOVED***this.eat(types$1.dot))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.bracketR);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.privateId***REMOVED***&&***REMOVED***base.type***REMOVED***!==***REMOVED***"Super")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parsePrivateIdent();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseIdent(this.options.allowReserved***REMOVED***!==***REMOVED***"never");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.computed***REMOVED***=***REMOVED***!!computed;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalSupported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"MemberExpression");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!noCalls***REMOVED***&&***REMOVED***this.eat(types$1.parenL))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***refDestructuringErrors***REMOVED***=***REMOVED***new***REMOVED***DestructuringErrors,***REMOVED***oldYieldPos***REMOVED***=***REMOVED***this.yieldPos,***REMOVED***oldAwaitPos***REMOVED***=***REMOVED***this.awaitPos,***REMOVED***oldAwaitIdentPos***REMOVED***=***REMOVED***this.awaitIdentPos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***exprList***REMOVED***=***REMOVED***this.parseExprList(types$1.parenR,***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8,***REMOVED***false,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeAsyncArrow***REMOVED***&&***REMOVED***!optional***REMOVED***&&***REMOVED***this.shouldParseAsyncArrow())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkPatternErrors(refDestructuringErrors,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkYieldAwaitInDefaultParams();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.awaitIdentPos***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.awaitIdentPos,***REMOVED***"Cannot***REMOVED***use***REMOVED***'await'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***an***REMOVED***async***REMOVED***function");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***oldAwaitIdentPos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSubscriptAsyncArrow(startPos,***REMOVED***startLoc,***REMOVED***exprList,***REMOVED***forInit)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refDestructuringErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos***REMOVED***||***REMOVED***this.yieldPos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos***REMOVED***||***REMOVED***this.awaitPos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***oldAwaitIdentPos***REMOVED***||***REMOVED***this.awaitIdentPos;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node$1***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node$1.callee***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***node$1.arguments***REMOVED***=***REMOVED***exprList;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalSupported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node$1.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***this.finishNode(node$1,***REMOVED***"CallExpression");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.backQuote)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optional***REMOVED***||***REMOVED***optionalChained)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(this.start,***REMOVED***"Optional***REMOVED***chaining***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***the***REMOVED***tag***REMOVED***of***REMOVED***tagged***REMOVED***template***REMOVED***expressions");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node$2***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node$2.tag***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***node$2.quasi***REMOVED***=***REMOVED***this.parseTemplate({isTagged:***REMOVED***true});
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***this.finishNode(node$2,***REMOVED***"TaggedTemplateExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***base
};

//***REMOVED***Parse***REMOVED***an***REMOVED***atomic***REMOVED***expression***REMOVED***—***REMOVED***either***REMOVED***a***REMOVED***single***REMOVED***token***REMOVED***that***REMOVED***is***REMOVED***an
//***REMOVED***expression,***REMOVED***an***REMOVED***expression***REMOVED***started***REMOVED***by***REMOVED***a***REMOVED***keyword***REMOVED***like***REMOVED***`function`***REMOVED***or
//***REMOVED***`new`,***REMOVED***or***REMOVED***an***REMOVED***expression***REMOVED***wrapped***REMOVED***in***REMOVED***punctuation***REMOVED***like***REMOVED***`()`,***REMOVED***`[]`,
//***REMOVED***or***REMOVED***`{}`.

pp$5.parseExprAtom***REMOVED***=***REMOVED***function(refDestructuringErrors,***REMOVED***forInit,***REMOVED***forNew)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***If***REMOVED***a***REMOVED***division***REMOVED***operator***REMOVED***appears***REMOVED***in***REMOVED***an***REMOVED***expression***REMOVED***position,***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***tokenizer***REMOVED***got***REMOVED***confused,***REMOVED***and***REMOVED***we***REMOVED***force***REMOVED***it***REMOVED***to***REMOVED***read***REMOVED***a***REMOVED***regexp***REMOVED***instead.
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.slash)***REMOVED***{***REMOVED***this.readRegexp();***REMOVED***}

***REMOVED******REMOVED***var***REMOVED***node,***REMOVED***canBeArrow***REMOVED***=***REMOVED***this.potentialArrowAt***REMOVED***===***REMOVED***this.start;
***REMOVED******REMOVED***switch***REMOVED***(this.type)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***types$1._super:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.allowSuper)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"'super'***REMOVED***keyword***REMOVED***outside***REMOVED***a***REMOVED***method");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.parenL***REMOVED***&&***REMOVED***!this.allowDirectSuper)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(node.start,***REMOVED***"super()***REMOVED***call***REMOVED***outside***REMOVED***constructor***REMOVED***of***REMOVED***a***REMOVED***subclass");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***`super`***REMOVED***keyword***REMOVED***can***REMOVED***appear***REMOVED***at***REMOVED***below:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***SuperProperty:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super***REMOVED***[***REMOVED***Expression***REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super***REMOVED***.***REMOVED***IdentifierName
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***SuperCall:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super***REMOVED***(***REMOVED***Arguments***REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.dot***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.bracketL***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.parenL)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Super")

***REMOVED******REMOVED***case***REMOVED***types$1._this:
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ThisExpression")

***REMOVED******REMOVED***case***REMOVED***types$1.name:
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc,***REMOVED***containsEsc***REMOVED***=***REMOVED***this.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***id***REMOVED***=***REMOVED***this.parseIdent(false);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***8***REMOVED***&&***REMOVED***!containsEsc***REMOVED***&&***REMOVED***id.name***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***!this.canInsertSemicolon()***REMOVED***&&***REMOVED***this.eat(types$1._function))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.overrideContext(types.f_expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(this.startNodeAt(startPos,***REMOVED***startLoc),***REMOVED***0,***REMOVED***false,***REMOVED***true,***REMOVED***forInit)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canBeArrow***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.arrow))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***this.parseArrowExpression(this.startNodeAt(startPos,***REMOVED***startLoc),***REMOVED***[id],***REMOVED***false,***REMOVED***forInit)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***8***REMOVED***&&***REMOVED***id.name***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.name***REMOVED***&&***REMOVED***!containsEsc***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!this.potentialArrowInForAwait***REMOVED***||***REMOVED***this.value***REMOVED***!==***REMOVED***"of"***REMOVED***||***REMOVED***this.containsEsc))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***=***REMOVED***this.parseIdent(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.canInsertSemicolon()***REMOVED***||***REMOVED***!this.eat(types$1.arrow))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseArrowExpression(this.startNodeAt(startPos,***REMOVED***startLoc),***REMOVED***[id],***REMOVED***true,***REMOVED***forInit)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id

***REMOVED******REMOVED***case***REMOVED***types$1.regexp:
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.parseLiteral(value.value);
***REMOVED******REMOVED******REMOVED******REMOVED***node.regex***REMOVED***=***REMOVED***{pattern:***REMOVED***value.pattern,***REMOVED***flags:***REMOVED***value.flags};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node

***REMOVED******REMOVED***case***REMOVED***types$1.num:***REMOVED***case***REMOVED***types$1.string:
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(this.value)

***REMOVED******REMOVED***case***REMOVED***types$1._null:***REMOVED***case***REMOVED***types$1._true:***REMOVED***case***REMOVED***types$1._false:
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1._null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.type***REMOVED***===***REMOVED***types$1._true;
***REMOVED******REMOVED******REMOVED******REMOVED***node.raw***REMOVED***=***REMOVED***this.type.keyword;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Literal")

***REMOVED******REMOVED***case***REMOVED***types$1.parenL:
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***this.start,***REMOVED***expr***REMOVED***=***REMOVED***this.parseParenAndDistinguishExpression(canBeArrow,***REMOVED***forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.parenthesizedAssign***REMOVED***<***REMOVED***0***REMOVED***&&***REMOVED***!this.isSimpleAssignTarget(expr))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***refDestructuringErrors.parenthesizedAssign***REMOVED***=***REMOVED***start;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.parenthesizedBind***REMOVED***<***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***refDestructuringErrors.parenthesizedBind***REMOVED***=***REMOVED***start;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr

***REMOVED******REMOVED***case***REMOVED***types$1.bracketL:
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.elements***REMOVED***=***REMOVED***this.parseExprList(types$1.bracketR,***REMOVED***true,***REMOVED***true,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ArrayExpression")

***REMOVED******REMOVED***case***REMOVED***types$1.braceL:
***REMOVED******REMOVED******REMOVED******REMOVED***this.overrideContext(types.b_expr);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObj(false,***REMOVED***refDestructuringErrors)

***REMOVED******REMOVED***case***REMOVED***types$1._function:
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(node,***REMOVED***0)

***REMOVED******REMOVED***case***REMOVED***types$1._class:
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(this.startNode(),***REMOVED***false)

***REMOVED******REMOVED***case***REMOVED***types$1._new:
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseNew()

***REMOVED******REMOVED***case***REMOVED***types$1.backQuote:
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTemplate()

***REMOVED******REMOVED***case***REMOVED***types$1._import:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***11)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprImport(forNew)
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.unexpected()
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprAtomDefault()
***REMOVED******REMOVED***}
};

pp$5.parseExprAtomDefault***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.unexpected();
};

pp$5.parseExprImport***REMOVED***=***REMOVED***function(forNew)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();

***REMOVED******REMOVED***//***REMOVED***Consume***REMOVED***`import`***REMOVED***as***REMOVED***an***REMOVED***identifier***REMOVED***for***REMOVED***`import.meta`.
***REMOVED******REMOVED***//***REMOVED***Because***REMOVED***`this.parseIdent(true)`***REMOVED***doesn't***REMOVED***check***REMOVED***escape***REMOVED***sequences,***REMOVED***it***REMOVED***needs***REMOVED***the***REMOVED***check***REMOVED***of***REMOVED***`this.containsEsc`.
***REMOVED******REMOVED***if***REMOVED***(this.containsEsc)***REMOVED***{***REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Escape***REMOVED***sequence***REMOVED***in***REMOVED***keyword***REMOVED***import");***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***meta***REMOVED***=***REMOVED***this.parseIdent(true);

***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.parenL***REMOVED***&&***REMOVED***!forNew)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseDynamicImport(node)
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.dot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.meta***REMOVED***=***REMOVED***meta;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportMeta(node)
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED***}
};

pp$5.parseDynamicImport***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();***REMOVED***//***REMOVED***skip***REMOVED***`(`

***REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***node.source.
***REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseMaybeAssign();

***REMOVED******REMOVED***//***REMOVED***Verify***REMOVED***ending.
***REMOVED******REMOVED***if***REMOVED***(!this.eat(types$1.parenR))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***errorPos***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.comma)***REMOVED***&&***REMOVED***this.eat(types$1.parenR))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(errorPos,***REMOVED***"Trailing***REMOVED***comma***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***import()");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(errorPos);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportExpression")
};

pp$5.parseImportMeta***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***this.next();***REMOVED***//***REMOVED***skip***REMOVED***`.`

***REMOVED******REMOVED***var***REMOVED***containsEsc***REMOVED***=***REMOVED***this.containsEsc;
***REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseIdent(true);

***REMOVED******REMOVED***if***REMOVED***(node.property.name***REMOVED***!==***REMOVED***"meta")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.property.start,***REMOVED***"The***REMOVED***only***REMOVED***valid***REMOVED***meta***REMOVED***property***REMOVED***for***REMOVED***import***REMOVED***is***REMOVED***'import.meta'");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(containsEsc)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"'import.meta'***REMOVED***must***REMOVED***not***REMOVED***contain***REMOVED***escaped***REMOVED***characters");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.sourceType***REMOVED***!==***REMOVED***"module"***REMOVED***&&***REMOVED***!this.options.allowImportExportEverywhere)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"Cannot***REMOVED***use***REMOVED***'import.meta'***REMOVED***outside***REMOVED***a***REMOVED***module");***REMOVED***}

***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"MetaProperty")
};

pp$5.parseLiteral***REMOVED***=***REMOVED***function(value)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***node.raw***REMOVED***=***REMOVED***this.input.slice(this.start,***REMOVED***this.end);
***REMOVED******REMOVED***if***REMOVED***(node.raw.charCodeAt(node.raw.length***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***110)***REMOVED***{***REMOVED***node.bigint***REMOVED***=***REMOVED***node.raw.slice(0,***REMOVED***-1).replace(/_/g,***REMOVED***"");***REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Literal")
};

pp$5.parseParenExpression***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.expect(types$1.parenL);
***REMOVED******REMOVED***var***REMOVED***val***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED***this.expect(types$1.parenR);
***REMOVED******REMOVED***return***REMOVED***val
};

pp$5.shouldParseArrow***REMOVED***=***REMOVED***function(exprList)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!this.canInsertSemicolon()
};

pp$5.parseParenAndDistinguishExpression***REMOVED***=***REMOVED***function(canBeArrow,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc,***REMOVED***val,***REMOVED***allowTrailingComma***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8;
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***innerStartPos***REMOVED***=***REMOVED***this.start,***REMOVED***innerStartLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***exprList***REMOVED***=***REMOVED***[],***REMOVED***first***REMOVED***=***REMOVED***true,***REMOVED***lastIsComma***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***refDestructuringErrors***REMOVED***=***REMOVED***new***REMOVED***DestructuringErrors,***REMOVED***oldYieldPos***REMOVED***=***REMOVED***this.yieldPos,***REMOVED***oldAwaitPos***REMOVED***=***REMOVED***this.awaitPos,***REMOVED***spreadStart;
***REMOVED******REMOVED******REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Do***REMOVED***not***REMOVED***save***REMOVED***awaitIdentPos***REMOVED***to***REMOVED***allow***REMOVED***checking***REMOVED***awaits***REMOVED***nested***REMOVED***in***REMOVED***parameters
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.parenR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***?***REMOVED***first***REMOVED***=***REMOVED***false***REMOVED***:***REMOVED***this.expect(types$1.comma);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowTrailingComma***REMOVED***&&***REMOVED***this.afterTrailingComma(types$1.parenR,***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastIsComma***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.ellipsis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spreadStart***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprList.push(this.parseParenItem(this.parseRestBinding()));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.comma)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Comma***REMOVED***is***REMOVED***not***REMOVED***permitted***REMOVED***after***REMOVED***the***REMOVED***rest***REMOVED***element"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprList.push(this.parseMaybeAssign(false,***REMOVED***refDestructuringErrors,***REMOVED***this.parseParenItem));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***innerEndPos***REMOVED***=***REMOVED***this.lastTokEnd,***REMOVED***innerEndLoc***REMOVED***=***REMOVED***this.lastTokEndLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.parenR);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canBeArrow***REMOVED***&&***REMOVED***this.shouldParseArrow(exprList)***REMOVED***&&***REMOVED***this.eat(types$1.arrow))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkPatternErrors(refDestructuringErrors,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkYieldAwaitInDefaultParams();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseParenArrowList(startPos,***REMOVED***startLoc,***REMOVED***exprList,***REMOVED***forInit)
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!exprList.length***REMOVED***||***REMOVED***lastIsComma)***REMOVED***{***REMOVED***this.unexpected(this.lastTokStart);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spreadStart)***REMOVED***{***REMOVED***this.unexpected(spreadStart);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refDestructuringErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos***REMOVED***||***REMOVED***this.yieldPos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos***REMOVED***||***REMOVED***this.awaitPos;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exprList.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***this.startNodeAt(innerStartPos,***REMOVED***innerStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val.expressions***REMOVED***=***REMOVED***exprList;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishNodeAt(val,***REMOVED***"SequenceExpression",***REMOVED***innerEndPos,***REMOVED***innerEndLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***exprList[0];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***this.parseParenExpression();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(this.options.preserveParens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***par***REMOVED***=***REMOVED***this.startNodeAt(startPos,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***par.expression***REMOVED***=***REMOVED***val;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(par,***REMOVED***"ParenthesizedExpression")
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***val
***REMOVED******REMOVED***}
};

pp$5.parseParenItem***REMOVED***=***REMOVED***function(item)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***item
};

pp$5.parseParenArrowList***REMOVED***=***REMOVED***function(startPos,***REMOVED***startLoc,***REMOVED***exprList,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.parseArrowExpression(this.startNodeAt(startPos,***REMOVED***startLoc),***REMOVED***exprList,***REMOVED***false,***REMOVED***forInit)
};

//***REMOVED***New's***REMOVED***precedence***REMOVED***is***REMOVED***slightly***REMOVED***tricky.***REMOVED***It***REMOVED***must***REMOVED***allow***REMOVED***its***REMOVED***argument***REMOVED***to
//***REMOVED***be***REMOVED***a***REMOVED***`[]`***REMOVED***or***REMOVED***dot***REMOVED***subscript***REMOVED***expression,***REMOVED***but***REMOVED***not***REMOVED***a***REMOVED***call***REMOVED***—***REMOVED***at***REMOVED***least,
//***REMOVED***not***REMOVED***without***REMOVED***wrapping***REMOVED***it***REMOVED***in***REMOVED***parentheses.***REMOVED***Thus,***REMOVED***it***REMOVED***uses***REMOVED***the***REMOVED***noCalls
//***REMOVED***argument***REMOVED***to***REMOVED***parseSubscripts***REMOVED***to***REMOVED***prevent***REMOVED***it***REMOVED***from***REMOVED***consuming***REMOVED***the
//***REMOVED***argument***REMOVED***list.

var***REMOVED***empty***REMOVED***=***REMOVED***[];

pp$5.parseNew***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.containsEsc)***REMOVED***{***REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Escape***REMOVED***sequence***REMOVED***in***REMOVED***keyword***REMOVED***new");***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***var***REMOVED***meta***REMOVED***=***REMOVED***this.parseIdent(true);
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***this.eat(types$1.dot))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.meta***REMOVED***=***REMOVED***meta;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***containsEsc***REMOVED***=***REMOVED***this.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseIdent(true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.property.name***REMOVED***!==***REMOVED***"target")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.property.start,***REMOVED***"The***REMOVED***only***REMOVED***valid***REMOVED***meta***REMOVED***property***REMOVED***for***REMOVED***new***REMOVED***is***REMOVED***'new.target'");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(containsEsc)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"'new.target'***REMOVED***must***REMOVED***not***REMOVED***contain***REMOVED***escaped***REMOVED***characters");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.allowNewDotTarget)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"'new.target'***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***functions***REMOVED***and***REMOVED***class***REMOVED***static***REMOVED***block");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"MetaProperty")
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***startPos***REMOVED***=***REMOVED***this.start,***REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***this.parseSubscripts(this.parseExprAtom(null,***REMOVED***false,***REMOVED***true),***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.parenL))***REMOVED***{***REMOVED***node.arguments***REMOVED***=***REMOVED***this.parseExprList(types$1.parenR,***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8,***REMOVED***false);***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{***REMOVED***node.arguments***REMOVED***=***REMOVED***empty;***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"NewExpression")
};

//***REMOVED***Parse***REMOVED***template***REMOVED***expression.

pp$5.parseTemplateElement***REMOVED***=***REMOVED***function(ref)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isTagged***REMOVED***=***REMOVED***ref.isTagged;

***REMOVED******REMOVED***var***REMOVED***elem***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.invalidTemplate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isTagged)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Bad***REMOVED***escape***REMOVED***sequence***REMOVED***in***REMOVED***untagged***REMOVED***template***REMOVED***literal");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***elem.value***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw:***REMOVED***this.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cooked:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***elem.value***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw:***REMOVED***this.input.slice(this.start,***REMOVED***this.end).replace(/\r\n?/g,***REMOVED***"\n"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cooked:***REMOVED***this.value
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***elem.tail***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.backQuote;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(elem,***REMOVED***"TemplateElement")
};

pp$5.parseTemplate***REMOVED***=***REMOVED***function(ref)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***ref***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***ref***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***var***REMOVED***isTagged***REMOVED***=***REMOVED***ref.isTagged;***REMOVED***if***REMOVED***(***REMOVED***isTagged***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***isTagged***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.expressions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***var***REMOVED***curElt***REMOVED***=***REMOVED***this.parseTemplateElement({isTagged:***REMOVED***isTagged});
***REMOVED******REMOVED***node.quasis***REMOVED***=***REMOVED***[curElt];
***REMOVED******REMOVED***while***REMOVED***(!curElt.tail)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.eof)***REMOVED***{***REMOVED***this.raise(this.pos,***REMOVED***"Unterminated***REMOVED***template***REMOVED***literal");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.dollarBraceL);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expressions.push(this.parseExpression());
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.braceR);
***REMOVED******REMOVED******REMOVED******REMOVED***node.quasis.push(curElt***REMOVED***=***REMOVED***this.parseTemplateElement({isTagged:***REMOVED***isTagged}));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TemplateLiteral")
};

pp$5.isAsyncProp***REMOVED***=***REMOVED***function(prop)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!prop.computed***REMOVED***&&***REMOVED***prop.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***prop.key.name***REMOVED***===***REMOVED***"async"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***(this.type***REMOVED***===***REMOVED***types$1.name***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.num***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.string***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.bracketL***REMOVED***||***REMOVED***this.type.keyword***REMOVED***||***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.star))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***!lineBreak.test(this.input.slice(this.lastTokEnd,***REMOVED***this.start))
};

//***REMOVED***Parse***REMOVED***an***REMOVED***object***REMOVED***literal***REMOVED***or***REMOVED***binding***REMOVED***pattern.

pp$5.parseObj***REMOVED***=***REMOVED***function(isPattern,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode(),***REMOVED***first***REMOVED***=***REMOVED***true,***REMOVED***propHash***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***node.properties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***while***REMOVED***(!this.eat(types$1.braceR))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.comma);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***5***REMOVED***&&***REMOVED***this.afterTrailingComma(types$1.braceR))***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***first***REMOVED***=***REMOVED***false;***REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***this.parseProperty(isPattern,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPattern)***REMOVED***{***REMOVED***this.checkPropClash(prop,***REMOVED***propHash,***REMOVED***refDestructuringErrors);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.properties.push(prop);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isPattern***REMOVED***?***REMOVED***"ObjectPattern"***REMOVED***:***REMOVED***"ObjectExpression")
};

pp$5.parseProperty***REMOVED***=***REMOVED***function(isPattern,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***this.startNode(),***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***startPos,***REMOVED***startLoc;
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&***REMOVED***this.eat(types$1.ellipsis))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.argument***REMOVED***=***REMOVED***this.parseIdent(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.comma)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Comma***REMOVED***is***REMOVED***not***REMOVED***permitted***REMOVED***after***REMOVED***the***REMOVED***rest***REMOVED***element");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(prop,***REMOVED***"RestElement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***argument.
***REMOVED******REMOVED******REMOVED******REMOVED***prop.argument***REMOVED***=***REMOVED***this.parseMaybeAssign(false,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***disallow***REMOVED***trailing***REMOVED***comma***REMOVED***via***REMOVED***`this.toAssignable()`.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.comma***REMOVED***&&***REMOVED***refDestructuringErrors***REMOVED***&&***REMOVED***refDestructuringErrors.trailingComma***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refDestructuringErrors.trailingComma***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Finish
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(prop,***REMOVED***"SpreadElement")
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prop.method***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***prop.shorthand***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern***REMOVED***||***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startPos***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPattern)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***isGenerator***REMOVED***=***REMOVED***this.eat(types$1.star);***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***containsEsc***REMOVED***=***REMOVED***this.containsEsc;
***REMOVED******REMOVED***this.parsePropertyName(prop);
***REMOVED******REMOVED***if***REMOVED***(!isPattern***REMOVED***&&***REMOVED***!containsEsc***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8***REMOVED***&&***REMOVED***!isGenerator***REMOVED***&&***REMOVED***this.isAsyncProp(prop))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isAsync***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***isGenerator***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&***REMOVED***this.eat(types$1.star);
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(prop);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isAsync***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.parsePropertyValue(prop,***REMOVED***isPattern,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***refDestructuringErrors,***REMOVED***containsEsc);
***REMOVED******REMOVED***return***REMOVED***this.finishNode(prop,***REMOVED***"Property")
};

pp$5.parseGetterSetter***REMOVED***=***REMOVED***function(prop)***REMOVED***{
***REMOVED******REMOVED***prop.kind***REMOVED***=***REMOVED***prop.key.name;
***REMOVED******REMOVED***this.parsePropertyName(prop);
***REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.parseMethod(false);
***REMOVED******REMOVED***var***REMOVED***paramCount***REMOVED***=***REMOVED***prop.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***if***REMOVED***(prop.value.params.length***REMOVED***!==***REMOVED***paramCount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***prop.value.start;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.kind***REMOVED***===***REMOVED***"get")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(start,***REMOVED***"getter***REMOVED***should***REMOVED***have***REMOVED***no***REMOVED***params");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(start,***REMOVED***"setter***REMOVED***should***REMOVED***have***REMOVED***exactly***REMOVED***one***REMOVED***param");***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.kind***REMOVED***===***REMOVED***"set"***REMOVED***&&***REMOVED***prop.value.params[0].type***REMOVED***===***REMOVED***"RestElement")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(prop.value.params[0].start,***REMOVED***"Setter***REMOVED***cannot***REMOVED***use***REMOVED***rest***REMOVED***params");***REMOVED***}
***REMOVED******REMOVED***}
};

pp$5.parsePropertyValue***REMOVED***=***REMOVED***function(prop,***REMOVED***isPattern,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***startPos,***REMOVED***startLoc,***REMOVED***refDestructuringErrors,***REMOVED***containsEsc)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***((isGenerator***REMOVED***||***REMOVED***isAsync)***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.colon)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.unexpected();***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.colon))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***isPattern***REMOVED***?***REMOVED***this.parseMaybeDefault(this.start,***REMOVED***this.startLoc)***REMOVED***:***REMOVED***this.parseMaybeAssign(false,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***prop.kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.parenL)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prop.kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED******REMOVED******REMOVED***prop.method***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.parseMethod(isGenerator,***REMOVED***isAsync);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isPattern***REMOVED***&&***REMOVED***!containsEsc***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***5***REMOVED***&&***REMOVED***!prop.computed***REMOVED***&&***REMOVED***prop.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(prop.key.name***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***prop.key.name***REMOVED***===***REMOVED***"set")***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.comma***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.braceR***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.eq))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isGenerator***REMOVED***||***REMOVED***isAsync)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseGetterSetter(prop);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***!prop.computed***REMOVED***&&***REMOVED***prop.key.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isGenerator***REMOVED***||***REMOVED***isAsync)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkUnreserved(prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.key.name***REMOVED***===***REMOVED***"await"***REMOVED***&&***REMOVED***!this.awaitIdentPos)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***startPos;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prop.kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.parseMaybeDefault(startPos,***REMOVED***startLoc,***REMOVED***this.copyNode(prop.key));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.eq***REMOVED***&&***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors.shorthandAssign***REMOVED***<***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***refDestructuringErrors.shorthandAssign***REMOVED***=***REMOVED***this.start;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.parseMaybeDefault(startPos,***REMOVED***startLoc,***REMOVED***this.copyNode(prop.key));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.copyNode(prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prop.shorthand***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
};

pp$5.parsePropertyName***REMOVED***=***REMOVED***function(prop)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(types$1.bracketL))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.computed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.key***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.bracketR);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***prop.key
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***prop.key***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***types$1.num***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.string***REMOVED***?***REMOVED***this.parseExprAtom()***REMOVED***:***REMOVED***this.parseIdent(this.options.allowReserved***REMOVED***!==***REMOVED***"never")
};

//***REMOVED***Initialize***REMOVED***empty***REMOVED***function***REMOVED***node.

pp$5.initFunction***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{***REMOVED***node.generator***REMOVED***=***REMOVED***node.expression***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***8)***REMOVED***{***REMOVED***node.async***REMOVED***=***REMOVED***false;***REMOVED***}
};

//***REMOVED***Parse***REMOVED***object***REMOVED***or***REMOVED***class***REMOVED***method.

pp$5.parseMethod***REMOVED***=***REMOVED***function(isGenerator,***REMOVED***isAsync,***REMOVED***allowDirectSuper)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode(),***REMOVED***oldYieldPos***REMOVED***=***REMOVED***this.yieldPos,***REMOVED***oldAwaitPos***REMOVED***=***REMOVED***this.awaitPos,***REMOVED***oldAwaitIdentPos***REMOVED***=***REMOVED***this.awaitIdentPos;

***REMOVED******REMOVED***this.initFunction(node);
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***node.generator***REMOVED***=***REMOVED***isGenerator;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***8)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***node.async***REMOVED***=***REMOVED***!!isAsync;***REMOVED***}

***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.enterScope(functionFlags(isAsync,***REMOVED***node.generator)***REMOVED***|***REMOVED***SCOPE_SUPER***REMOVED***|***REMOVED***(allowDirectSuper***REMOVED***?***REMOVED***SCOPE_DIRECT_SUPER***REMOVED***:***REMOVED***0));

***REMOVED******REMOVED***this.expect(types$1.parenL);
***REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***this.parseBindingList(types$1.parenR,***REMOVED***false,***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***8);
***REMOVED******REMOVED***this.checkYieldAwaitInDefaultParams();
***REMOVED******REMOVED***this.parseFunctionBody(node,***REMOVED***false,***REMOVED***true,***REMOVED***false);

***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos;
***REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos;
***REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***oldAwaitIdentPos;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionExpression")
};

//***REMOVED***Parse***REMOVED***arrow***REMOVED***function***REMOVED***expression***REMOVED***with***REMOVED***given***REMOVED***parameters.

pp$5.parseArrowExpression***REMOVED***=***REMOVED***function(node,***REMOVED***params,***REMOVED***isAsync,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***oldYieldPos***REMOVED***=***REMOVED***this.yieldPos,***REMOVED***oldAwaitPos***REMOVED***=***REMOVED***this.awaitPos,***REMOVED***oldAwaitIdentPos***REMOVED***=***REMOVED***this.awaitIdentPos;

***REMOVED******REMOVED***this.enterScope(functionFlags(isAsync,***REMOVED***false)***REMOVED***|***REMOVED***SCOPE_ARROW);
***REMOVED******REMOVED***this.initFunction(node);
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***8)***REMOVED***{***REMOVED***node.async***REMOVED***=***REMOVED***!!isAsync;***REMOVED***}

***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***this.toAssignableList(params,***REMOVED***true);
***REMOVED******REMOVED***this.parseFunctionBody(node,***REMOVED***true,***REMOVED***false,***REMOVED***forInit);

***REMOVED******REMOVED***this.yieldPos***REMOVED***=***REMOVED***oldYieldPos;
***REMOVED******REMOVED***this.awaitPos***REMOVED***=***REMOVED***oldAwaitPos;
***REMOVED******REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***oldAwaitIdentPos;
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ArrowFunctionExpression")
};

//***REMOVED***Parse***REMOVED***function***REMOVED***body***REMOVED***and***REMOVED***check***REMOVED***parameters.

pp$5.parseFunctionBody***REMOVED***=***REMOVED***function(node,***REMOVED***isArrowFunction,***REMOVED***isMethod,***REMOVED***forInit)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isExpression***REMOVED***=***REMOVED***isArrowFunction***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***types$1.braceL;
***REMOVED******REMOVED***var***REMOVED***oldStrict***REMOVED***=***REMOVED***this.strict,***REMOVED***useStrict***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***if***REMOVED***(isExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseMaybeAssign(forInit);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkParams(node,***REMOVED***false);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nonSimple***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***7***REMOVED***&&***REMOVED***!this.isSimpleParamList(node.params);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!oldStrict***REMOVED***||***REMOVED***nonSimple)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***useStrict***REMOVED***=***REMOVED***this.strictDirective(this.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***strict***REMOVED***mode***REMOVED***function,***REMOVED***verify***REMOVED***that***REMOVED***argument***REMOVED***names
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***are***REMOVED***not***REMOVED***repeated,***REMOVED***and***REMOVED***it***REMOVED***does***REMOVED***not***REMOVED***try***REMOVED***to***REMOVED***bind***REMOVED***the***REMOVED***words***REMOVED***`eval`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***or***REMOVED***`arguments`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(useStrict***REMOVED***&&***REMOVED***nonSimple)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(node.start,***REMOVED***"Illegal***REMOVED***'use***REMOVED***strict'***REMOVED***directive***REMOVED***in***REMOVED***function***REMOVED***with***REMOVED***non-simple***REMOVED***parameter***REMOVED***list");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Start***REMOVED***a***REMOVED***new***REMOVED***scope***REMOVED***with***REMOVED***regard***REMOVED***to***REMOVED***labels***REMOVED***and***REMOVED***the***REMOVED***`inFunction`
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***flag***REMOVED***(restore***REMOVED***them***REMOVED***to***REMOVED***their***REMOVED***old***REMOVED***value***REMOVED***afterwards).
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldLabels***REMOVED***=***REMOVED***this.labels;
***REMOVED******REMOVED******REMOVED******REMOVED***this.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(useStrict)***REMOVED***{***REMOVED***this.strict***REMOVED***=***REMOVED***true;***REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Add***REMOVED***the***REMOVED***params***REMOVED***to***REMOVED***varDeclaredNames***REMOVED***to***REMOVED***ensure***REMOVED***that***REMOVED***an***REMOVED***error***REMOVED***is***REMOVED***thrown
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***a***REMOVED***let/const***REMOVED***declaration***REMOVED***in***REMOVED***the***REMOVED***function***REMOVED***clashes***REMOVED***with***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***params.
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkParams(node,***REMOVED***!oldStrict***REMOVED***&&***REMOVED***!useStrict***REMOVED***&&***REMOVED***!isArrowFunction***REMOVED***&&***REMOVED***!isMethod***REMOVED***&&***REMOVED***this.isSimpleParamList(node.params));
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***the***REMOVED***function***REMOVED***name***REMOVED***isn't***REMOVED***a***REMOVED***forbidden***REMOVED***identifier***REMOVED***in***REMOVED***strict***REMOVED***mode,***REMOVED***e.g.***REMOVED***'eval'
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.strict***REMOVED***&&***REMOVED***node.id)***REMOVED***{***REMOVED***this.checkLValSimple(node.id,***REMOVED***BIND_OUTSIDE);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseBlock(false,***REMOVED***undefined,***REMOVED***useStrict***REMOVED***&&***REMOVED***!oldStrict);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.adaptDirectivePrologue(node.body.body);
***REMOVED******REMOVED******REMOVED******REMOVED***this.labels***REMOVED***=***REMOVED***oldLabels;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.exitScope();
};

pp$5.isSimpleParamList***REMOVED***=***REMOVED***function(params)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***params;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***param***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(param.type***REMOVED***!==***REMOVED***"Identifier")***REMOVED***{***REMOVED***return***REMOVED***false
***REMOVED******REMOVED***}***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true
};

//***REMOVED***Checks***REMOVED***function***REMOVED***params***REMOVED***for***REMOVED***various***REMOVED***disallowed***REMOVED***patterns***REMOVED***such***REMOVED***as***REMOVED***using***REMOVED***"eval"
//***REMOVED***or***REMOVED***"arguments"***REMOVED***and***REMOVED***duplicate***REMOVED***parameters.

pp$5.checkParams***REMOVED***=***REMOVED***function(node,***REMOVED***allowDuplicates)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***nameHash***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.params;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***param***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLValInnerPattern(param,***REMOVED***BIND_VAR,***REMOVED***allowDuplicates***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***nameHash);
***REMOVED******REMOVED***}
};

//***REMOVED***Parses***REMOVED***a***REMOVED***comma-separated***REMOVED***list***REMOVED***of***REMOVED***expressions,***REMOVED***and***REMOVED***returns***REMOVED***them***REMOVED***as
//***REMOVED***an***REMOVED***array.***REMOVED***`close`***REMOVED***is***REMOVED***the***REMOVED***token***REMOVED***type***REMOVED***that***REMOVED***ends***REMOVED***the***REMOVED***list,***REMOVED***and
//***REMOVED***`allowEmpty`***REMOVED***can***REMOVED***be***REMOVED***turned***REMOVED***on***REMOVED***to***REMOVED***allow***REMOVED***subsequent***REMOVED***commas***REMOVED***with
//***REMOVED***nothing***REMOVED***in***REMOVED***between***REMOVED***them***REMOVED***to***REMOVED***be***REMOVED***parsed***REMOVED***as***REMOVED***`null`***REMOVED***(which***REMOVED***is***REMOVED***needed
//***REMOVED***for***REMOVED***array***REMOVED***literals).

pp$5.parseExprList***REMOVED***=***REMOVED***function(close,***REMOVED***allowTrailingComma,***REMOVED***allowEmpty,***REMOVED***refDestructuringErrors)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***elts***REMOVED***=***REMOVED***[],***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***while***REMOVED***(!this.eat(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(types$1.comma);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowTrailingComma***REMOVED***&&***REMOVED***this.afterTrailingComma(close))***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***first***REMOVED***=***REMOVED***false;***REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***elt***REMOVED***=***REMOVED***(void***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowEmpty***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.comma)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***elt***REMOVED***=***REMOVED***null;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.ellipsis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elt***REMOVED***=***REMOVED***this.parseSpread(refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refDestructuringErrors***REMOVED***&&***REMOVED***this.type***REMOVED***===***REMOVED***types$1.comma***REMOVED***&&***REMOVED***refDestructuringErrors.trailingComma***REMOVED***<***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***refDestructuringErrors.trailingComma***REMOVED***=***REMOVED***this.start;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elt***REMOVED***=***REMOVED***this.parseMaybeAssign(false,***REMOVED***refDestructuringErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***elts.push(elt);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***elts
};

pp$5.checkUnreserved***REMOVED***=***REMOVED***function(ref)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***ref.start;
***REMOVED******REMOVED***var***REMOVED***end***REMOVED***=***REMOVED***ref.end;
***REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***ref.name;

***REMOVED******REMOVED***if***REMOVED***(this.inGenerator***REMOVED***&&***REMOVED***name***REMOVED***===***REMOVED***"yield")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(start,***REMOVED***"Cannot***REMOVED***use***REMOVED***'yield'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***a***REMOVED***generator");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.inAsync***REMOVED***&&***REMOVED***name***REMOVED***===***REMOVED***"await")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(start,***REMOVED***"Cannot***REMOVED***use***REMOVED***'await'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***an***REMOVED***async***REMOVED***function");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.currentThisScope().inClassFieldInit***REMOVED***&&***REMOVED***name***REMOVED***===***REMOVED***"arguments")
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(start,***REMOVED***"Cannot***REMOVED***use***REMOVED***'arguments'***REMOVED***in***REMOVED***class***REMOVED***field***REMOVED***initializer");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.inClassStaticBlock***REMOVED***&&***REMOVED***(name***REMOVED***===***REMOVED***"arguments"***REMOVED***||***REMOVED***name***REMOVED***===***REMOVED***"await"))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(start,***REMOVED***("Cannot***REMOVED***use***REMOVED***"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"***REMOVED***in***REMOVED***class***REMOVED***static***REMOVED***initialization***REMOVED***block"));***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.keywords.test(name))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raise(start,***REMOVED***("Unexpected***REMOVED***keyword***REMOVED***'"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"'"));***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***6***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***this.input.slice(start,***REMOVED***end).indexOf("\\")***REMOVED***!==***REMOVED***-1)***REMOVED***{***REMOVED***return***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***re***REMOVED***=***REMOVED***this.strict***REMOVED***?***REMOVED***this.reservedWordsStrict***REMOVED***:***REMOVED***this.reservedWords;
***REMOVED******REMOVED***if***REMOVED***(re.test(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.inAsync***REMOVED***&&***REMOVED***name***REMOVED***===***REMOVED***"await")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(start,***REMOVED***"Cannot***REMOVED***use***REMOVED***keyword***REMOVED***'await'***REMOVED***outside***REMOVED***an***REMOVED***async***REMOVED***function");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.raiseRecoverable(start,***REMOVED***("The***REMOVED***keyword***REMOVED***'"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"'***REMOVED***is***REMOVED***reserved"));
***REMOVED******REMOVED***}
};

//***REMOVED***Parse***REMOVED***the***REMOVED***next***REMOVED***token***REMOVED***as***REMOVED***an***REMOVED***identifier.***REMOVED***If***REMOVED***`liberal`***REMOVED***is***REMOVED***true***REMOVED***(used
//***REMOVED***when***REMOVED***parsing***REMOVED***properties),***REMOVED***it***REMOVED***will***REMOVED***also***REMOVED***convert***REMOVED***keywords***REMOVED***into
//***REMOVED***identifiers.

pp$5.parseIdent***REMOVED***=***REMOVED***function(liberal)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.parseIdentNode();
***REMOVED******REMOVED***this.next(!!liberal);
***REMOVED******REMOVED***this.finishNode(node,***REMOVED***"Identifier");
***REMOVED******REMOVED***if***REMOVED***(!liberal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkUnreserved(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.name***REMOVED***===***REMOVED***"await"***REMOVED***&&***REMOVED***!this.awaitIdentPos)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.awaitIdentPos***REMOVED***=***REMOVED***node.start;***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node
};

pp$5.parseIdentNode***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type.keyword)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.type.keyword;

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***fix***REMOVED***https://github.com/acornjs/acorn/issues/575
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`class`***REMOVED***and***REMOVED***`function`***REMOVED***keywords***REMOVED***push***REMOVED***new***REMOVED***context***REMOVED***into***REMOVED***this.context.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***But***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***chance***REMOVED***to***REMOVED***pop***REMOVED***the***REMOVED***context***REMOVED***if***REMOVED***the***REMOVED***keyword***REMOVED***is***REMOVED***consumed***REMOVED***as***REMOVED***an***REMOVED***identifier***REMOVED***such***REMOVED***as***REMOVED***a***REMOVED***property***REMOVED***name.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***previous***REMOVED***token***REMOVED***is***REMOVED***a***REMOVED***dot,***REMOVED***this***REMOVED***does***REMOVED***not***REMOVED***apply***REMOVED***because***REMOVED***the***REMOVED***context-managing***REMOVED***code***REMOVED***already***REMOVED***ignored***REMOVED***the***REMOVED***keyword
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node.name***REMOVED***===***REMOVED***"class"***REMOVED***||***REMOVED***node.name***REMOVED***===***REMOVED***"function")***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.lastTokEnd***REMOVED***!==***REMOVED***this.lastTokStart***REMOVED***+***REMOVED***1***REMOVED***||***REMOVED***this.input.charCodeAt(this.lastTokStart)***REMOVED***!==***REMOVED***46))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.context.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node
};

pp$5.parsePrivateIdent***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.privateId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***this.finishNode(node,***REMOVED***"PrivateIdentifier");

***REMOVED******REMOVED***//***REMOVED***For***REMOVED***validating***REMOVED***existence
***REMOVED******REMOVED***if***REMOVED***(this.options.checkPrivateFields)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.privateNameStack.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(node.start,***REMOVED***("Private***REMOVED***field***REMOVED***'#"***REMOVED***+***REMOVED***(node.name)***REMOVED***+***REMOVED***"'***REMOVED***must***REMOVED***be***REMOVED***declared***REMOVED***in***REMOVED***an***REMOVED***enclosing***REMOVED***class"));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.privateNameStack[this.privateNameStack.length***REMOVED***-***REMOVED***1].used.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***node
};

//***REMOVED***Parses***REMOVED***yield***REMOVED***expression***REMOVED***inside***REMOVED***generator.

pp$5.parseYield***REMOVED***=***REMOVED***function(forInit)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.yieldPos)***REMOVED***{***REMOVED***this.yieldPos***REMOVED***=***REMOVED***this.start;***REMOVED***}

***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.semi***REMOVED***||***REMOVED***this.canInsertSemicolon()***REMOVED***||***REMOVED***(this.type***REMOVED***!==***REMOVED***types$1.star***REMOVED***&&***REMOVED***!this.type.startsExpr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.delegate***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.delegate***REMOVED***=***REMOVED***this.eat(types$1.star);
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeAssign(forInit);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"YieldExpression")
};

pp$5.parseAwait***REMOVED***=***REMOVED***function(forInit)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.awaitPos)***REMOVED***{***REMOVED***this.awaitPos***REMOVED***=***REMOVED***this.start;***REMOVED***}

***REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeUnary(null,***REMOVED***true,***REMOVED***false,***REMOVED***forInit);
***REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"AwaitExpression")
};

var***REMOVED***pp$4***REMOVED***=***REMOVED***Parser.prototype;

//***REMOVED***This***REMOVED***function***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***raise***REMOVED***exceptions***REMOVED***on***REMOVED***parse***REMOVED***errors.***REMOVED***It
//***REMOVED***takes***REMOVED***an***REMOVED***offset***REMOVED***integer***REMOVED***(into***REMOVED***the***REMOVED***current***REMOVED***`input`)***REMOVED***to***REMOVED***indicate
//***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***error,***REMOVED***attaches***REMOVED***the***REMOVED***position***REMOVED***to***REMOVED***the***REMOVED***end
//***REMOVED***of***REMOVED***the***REMOVED***error***REMOVED***message,***REMOVED***and***REMOVED***then***REMOVED***raises***REMOVED***a***REMOVED***`SyntaxError`***REMOVED***with***REMOVED***that
//***REMOVED***message.

pp$4.raise***REMOVED***=***REMOVED***function(pos,***REMOVED***message)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***loc***REMOVED***=***REMOVED***getLineInfo(this.input,***REMOVED***pos);
***REMOVED******REMOVED***message***REMOVED***+=***REMOVED***"***REMOVED***("***REMOVED***+***REMOVED***loc.line***REMOVED***+***REMOVED***":"***REMOVED***+***REMOVED***loc.column***REMOVED***+***REMOVED***")";
***REMOVED******REMOVED***var***REMOVED***err***REMOVED***=***REMOVED***new***REMOVED***SyntaxError(message);
***REMOVED******REMOVED***err.pos***REMOVED***=***REMOVED***pos;***REMOVED***err.loc***REMOVED***=***REMOVED***loc;***REMOVED***err.raisedAt***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***throw***REMOVED***err
};

pp$4.raiseRecoverable***REMOVED***=***REMOVED***pp$4.raise;

pp$4.curPosition***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Position(this.curLine,***REMOVED***this.pos***REMOVED***-***REMOVED***this.lineStart)
***REMOVED******REMOVED***}
};

var***REMOVED***pp$3***REMOVED***=***REMOVED***Parser.prototype;

var***REMOVED***Scope***REMOVED***=***REMOVED***function***REMOVED***Scope(flags)***REMOVED***{
***REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***flags;
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***var-declared***REMOVED***names***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***lexical***REMOVED***scope
***REMOVED******REMOVED***this.var***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***lexically-declared***REMOVED***names***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***lexical***REMOVED***scope
***REMOVED******REMOVED***this.lexical***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***lexically-declared***REMOVED***FunctionDeclaration***REMOVED***names***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***lexical***REMOVED***scope
***REMOVED******REMOVED***this.functions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***//***REMOVED***A***REMOVED***switch***REMOVED***to***REMOVED***disallow***REMOVED***the***REMOVED***identifier***REMOVED***reference***REMOVED***'arguments'
***REMOVED******REMOVED***this.inClassFieldInit***REMOVED***=***REMOVED***false;
};

//***REMOVED***The***REMOVED***functions***REMOVED***in***REMOVED***this***REMOVED***module***REMOVED***keep***REMOVED***track***REMOVED***of***REMOVED***declared***REMOVED***variables***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***scope***REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***detect***REMOVED***duplicate***REMOVED***variable***REMOVED***names.

pp$3.enterScope***REMOVED***=***REMOVED***function(flags)***REMOVED***{
***REMOVED******REMOVED***this.scopeStack.push(new***REMOVED***Scope(flags));
};

pp$3.exitScope***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.scopeStack.pop();
};

//***REMOVED***The***REMOVED***spec***REMOVED***says:
//***REMOVED***>***REMOVED***At***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***of***REMOVED***a***REMOVED***function,***REMOVED***or***REMOVED***script,***REMOVED***function***REMOVED***declarations***REMOVED***are
//***REMOVED***>***REMOVED***treated***REMOVED***like***REMOVED***var***REMOVED***declarations***REMOVED***rather***REMOVED***than***REMOVED***like***REMOVED***lexical***REMOVED***declarations.
pp$3.treatFunctionsAsVarInScope***REMOVED***=***REMOVED***function(scope)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_FUNCTION)***REMOVED***||***REMOVED***!this.inModule***REMOVED***&&***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_TOP)
};

pp$3.declareName***REMOVED***=***REMOVED***function(name,***REMOVED***bindingType,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***redeclared***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***===***REMOVED***BIND_LEXICAL)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope***REMOVED***=***REMOVED***this.currentScope();
***REMOVED******REMOVED******REMOVED******REMOVED***redeclared***REMOVED***=***REMOVED***scope.lexical.indexOf(name)***REMOVED***>***REMOVED***-1***REMOVED***||***REMOVED***scope.functions.indexOf(name)***REMOVED***>***REMOVED***-1***REMOVED***||***REMOVED***scope.var.indexOf(name)***REMOVED***>***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***scope.lexical.push(name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inModule***REMOVED***&&***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_TOP))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***delete***REMOVED***this.undefinedExports[name];***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(bindingType***REMOVED***===***REMOVED***BIND_SIMPLE_CATCH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope$1***REMOVED***=***REMOVED***this.currentScope();
***REMOVED******REMOVED******REMOVED******REMOVED***scope$1.lexical.push(name);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(bindingType***REMOVED***===***REMOVED***BIND_FUNCTION)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope$2***REMOVED***=***REMOVED***this.currentScope();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.treatFunctionsAsVar)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***redeclared***REMOVED***=***REMOVED***scope$2.lexical.indexOf(name)***REMOVED***>***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***redeclared***REMOVED***=***REMOVED***scope$2.lexical.indexOf(name)***REMOVED***>***REMOVED***-1***REMOVED***||***REMOVED***scope$2.var.indexOf(name)***REMOVED***>***REMOVED***-1;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***scope$2.functions.push(name);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***--i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope$3***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope$3.lexical.indexOf(name)***REMOVED***>***REMOVED***-1***REMOVED***&&***REMOVED***!((scope$3.flags***REMOVED***&***REMOVED***SCOPE_SIMPLE_CATCH)***REMOVED***&&***REMOVED***scope$3.lexical[0]***REMOVED***===***REMOVED***name)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.treatFunctionsAsVarInScope(scope$3)***REMOVED***&&***REMOVED***scope$3.functions.indexOf(name)***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redeclared***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope$3.var.push(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inModule***REMOVED***&&***REMOVED***(scope$3.flags***REMOVED***&***REMOVED***SCOPE_TOP))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***delete***REMOVED***this.undefinedExports[name];***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope$3.flags***REMOVED***&***REMOVED***SCOPE_VAR)***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(redeclared)***REMOVED***{***REMOVED***this.raiseRecoverable(pos,***REMOVED***("Identifier***REMOVED***'"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"'***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***declared"));***REMOVED***}
};

pp$3.checkLocalExport***REMOVED***=***REMOVED***function(id)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***scope.functions***REMOVED***must***REMOVED***be***REMOVED***empty***REMOVED***as***REMOVED***Module***REMOVED***code***REMOVED***is***REMOVED***always***REMOVED***strict.
***REMOVED******REMOVED***if***REMOVED***(this.scopeStack[0].lexical.indexOf(id.name)***REMOVED***===***REMOVED***-1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopeStack[0].var.indexOf(id.name)***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedExports[id.name]***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED***}
};

pp$3.currentScope***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.scopeStack[this.scopeStack.length***REMOVED***-***REMOVED***1]
};

pp$3.currentVarScope***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_VAR)***REMOVED***{***REMOVED***return***REMOVED***scope***REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***Could***REMOVED***be***REMOVED***useful***REMOVED***for***REMOVED***`this`,***REMOVED***`new.target`,***REMOVED***`super()`,***REMOVED***`super.property`,***REMOVED***and***REMOVED***`super[property]`.
pp$3.currentThisScope***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scope***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.flags***REMOVED***&***REMOVED***SCOPE_VAR***REMOVED***&&***REMOVED***!(scope.flags***REMOVED***&***REMOVED***SCOPE_ARROW))***REMOVED***{***REMOVED***return***REMOVED***scope***REMOVED***}
***REMOVED******REMOVED***}
};

var***REMOVED***Node***REMOVED***=***REMOVED***function***REMOVED***Node(parser,***REMOVED***pos,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(parser.options.locations)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.loc***REMOVED***=***REMOVED***new***REMOVED***SourceLocation(parser,***REMOVED***loc);***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(parser.options.directSourceFile)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.sourceFile***REMOVED***=***REMOVED***parser.options.directSourceFile;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(parser.options.ranges)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.range***REMOVED***=***REMOVED***[pos,***REMOVED***0];***REMOVED***}
};

//***REMOVED***Start***REMOVED***an***REMOVED***AST***REMOVED***node,***REMOVED***attaching***REMOVED***a***REMOVED***start***REMOVED***offset.

var***REMOVED***pp$2***REMOVED***=***REMOVED***Parser.prototype;

pp$2.startNode***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Node(this,***REMOVED***this.start,***REMOVED***this.startLoc)
};

pp$2.startNodeAt***REMOVED***=***REMOVED***function(pos,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Node(this,***REMOVED***pos,***REMOVED***loc)
};

//***REMOVED***Finish***REMOVED***an***REMOVED***AST***REMOVED***node,***REMOVED***adding***REMOVED***`type`***REMOVED***and***REMOVED***`end`***REMOVED***properties.

function***REMOVED***finishNodeAt(node,***REMOVED***type,***REMOVED***pos,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED***node.end***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***if***REMOVED***(this.options.locations)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***node.loc.end***REMOVED***=***REMOVED***loc;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ranges)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***node.range[1]***REMOVED***=***REMOVED***pos;***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node
}

pp$2.finishNode***REMOVED***=***REMOVED***function(node,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***finishNodeAt.call(this,***REMOVED***node,***REMOVED***type,***REMOVED***this.lastTokEnd,***REMOVED***this.lastTokEndLoc)
};

//***REMOVED***Finish***REMOVED***node***REMOVED***at***REMOVED***given***REMOVED***position

pp$2.finishNodeAt***REMOVED***=***REMOVED***function(node,***REMOVED***type,***REMOVED***pos,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***finishNodeAt.call(this,***REMOVED***node,***REMOVED***type,***REMOVED***pos,***REMOVED***loc)
};

pp$2.copyNode***REMOVED***=***REMOVED***function(node)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***newNode***REMOVED***=***REMOVED***new***REMOVED***Node(this,***REMOVED***node.start,***REMOVED***this.startLoc);
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***prop***REMOVED***in***REMOVED***node)***REMOVED***{***REMOVED***newNode[prop]***REMOVED***=***REMOVED***node[prop];***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***newNode
};

//***REMOVED***This***REMOVED***file***REMOVED***contains***REMOVED***Unicode***REMOVED***properties***REMOVED***extracted***REMOVED***from***REMOVED***the***REMOVED***ECMAScript***REMOVED***specification.
//***REMOVED***The***REMOVED***lists***REMOVED***are***REMOVED***extracted***REMOVED***like***REMOVED***so:
//***REMOVED***$$('#table-binary-unicode-properties***REMOVED***>***REMOVED***figure***REMOVED***>***REMOVED***table***REMOVED***>***REMOVED***tbody***REMOVED***>***REMOVED***tr***REMOVED***>***REMOVED***td:nth-child(1)***REMOVED***code').map(el***REMOVED***=>***REMOVED***el.innerText)

//***REMOVED***#table-binary-unicode-properties
var***REMOVED***ecma9BinaryProperties***REMOVED***=***REMOVED***"ASCII***REMOVED***ASCII_Hex_Digit***REMOVED***AHex***REMOVED***Alphabetic***REMOVED***Alpha***REMOVED***Any***REMOVED***Assigned***REMOVED***Bidi_Control***REMOVED***Bidi_C***REMOVED***Bidi_Mirrored***REMOVED***Bidi_M***REMOVED***Case_Ignorable***REMOVED***CI***REMOVED***Cased***REMOVED***Changes_When_Casefolded***REMOVED***CWCF***REMOVED***Changes_When_Casemapped***REMOVED***CWCM***REMOVED***Changes_When_Lowercased***REMOVED***CWL***REMOVED***Changes_When_NFKC_Casefolded***REMOVED***CWKCF***REMOVED***Changes_When_Titlecased***REMOVED***CWT***REMOVED***Changes_When_Uppercased***REMOVED***CWU***REMOVED***Dash***REMOVED***Default_Ignorable_Code_Point***REMOVED***DI***REMOVED***Deprecated***REMOVED***Dep***REMOVED***Diacritic***REMOVED***Dia***REMOVED***Emoji***REMOVED***Emoji_Component***REMOVED***Emoji_Modifier***REMOVED***Emoji_Modifier_Base***REMOVED***Emoji_Presentation***REMOVED***Extender***REMOVED***Ext***REMOVED***Grapheme_Base***REMOVED***Gr_Base***REMOVED***Grapheme_Extend***REMOVED***Gr_Ext***REMOVED***Hex_Digit***REMOVED***Hex***REMOVED***IDS_Binary_Operator***REMOVED***IDSB***REMOVED***IDS_Trinary_Operator***REMOVED***IDST***REMOVED***ID_Continue***REMOVED***IDC***REMOVED***ID_Start***REMOVED***IDS***REMOVED***Ideographic***REMOVED***Ideo***REMOVED***Join_Control***REMOVED***Join_C***REMOVED***Logical_Order_Exception***REMOVED***LOE***REMOVED***Lowercase***REMOVED***Lower***REMOVED***Math***REMOVED***Noncharacter_Code_Point***REMOVED***NChar***REMOVED***Pattern_Syntax***REMOVED***Pat_Syn***REMOVED***Pattern_White_Space***REMOVED***Pat_WS***REMOVED***Quotation_Mark***REMOVED***QMark***REMOVED***Radical***REMOVED***Regional_Indicator***REMOVED***RI***REMOVED***Sentence_Terminal***REMOVED***STerm***REMOVED***Soft_Dotted***REMOVED***SD***REMOVED***Terminal_Punctuation***REMOVED***Term***REMOVED***Unified_Ideograph***REMOVED***UIdeo***REMOVED***Uppercase***REMOVED***Upper***REMOVED***Variation_Selector***REMOVED***VS***REMOVED***White_Space***REMOVED***space***REMOVED***XID_Continue***REMOVED***XIDC***REMOVED***XID_Start***REMOVED***XIDS";
var***REMOVED***ecma10BinaryProperties***REMOVED***=***REMOVED***ecma9BinaryProperties***REMOVED***+***REMOVED***"***REMOVED***Extended_Pictographic";
var***REMOVED***ecma11BinaryProperties***REMOVED***=***REMOVED***ecma10BinaryProperties;
var***REMOVED***ecma12BinaryProperties***REMOVED***=***REMOVED***ecma11BinaryProperties***REMOVED***+***REMOVED***"***REMOVED***EBase***REMOVED***EComp***REMOVED***EMod***REMOVED***EPres***REMOVED***ExtPict";
var***REMOVED***ecma13BinaryProperties***REMOVED***=***REMOVED***ecma12BinaryProperties;
var***REMOVED***ecma14BinaryProperties***REMOVED***=***REMOVED***ecma13BinaryProperties;

var***REMOVED***unicodeBinaryProperties***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***9:***REMOVED***ecma9BinaryProperties,
***REMOVED******REMOVED***10:***REMOVED***ecma10BinaryProperties,
***REMOVED******REMOVED***11:***REMOVED***ecma11BinaryProperties,
***REMOVED******REMOVED***12:***REMOVED***ecma12BinaryProperties,
***REMOVED******REMOVED***13:***REMOVED***ecma13BinaryProperties,
***REMOVED******REMOVED***14:***REMOVED***ecma14BinaryProperties
};

//***REMOVED***#table-binary-unicode-properties-of-strings
var***REMOVED***ecma14BinaryPropertiesOfStrings***REMOVED***=***REMOVED***"Basic_Emoji***REMOVED***Emoji_Keycap_Sequence***REMOVED***RGI_Emoji_Modifier_Sequence***REMOVED***RGI_Emoji_Flag_Sequence***REMOVED***RGI_Emoji_Tag_Sequence***REMOVED***RGI_Emoji_ZWJ_Sequence***REMOVED***RGI_Emoji";

var***REMOVED***unicodeBinaryPropertiesOfStrings***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***9:***REMOVED***"",
***REMOVED******REMOVED***10:***REMOVED***"",
***REMOVED******REMOVED***11:***REMOVED***"",
***REMOVED******REMOVED***12:***REMOVED***"",
***REMOVED******REMOVED***13:***REMOVED***"",
***REMOVED******REMOVED***14:***REMOVED***ecma14BinaryPropertiesOfStrings
};

//***REMOVED***#table-unicode-general-category-values
var***REMOVED***unicodeGeneralCategoryValues***REMOVED***=***REMOVED***"Cased_Letter***REMOVED***LC***REMOVED***Close_Punctuation***REMOVED***Pe***REMOVED***Connector_Punctuation***REMOVED***Pc***REMOVED***Control***REMOVED***Cc***REMOVED***cntrl***REMOVED***Currency_Symbol***REMOVED***Sc***REMOVED***Dash_Punctuation***REMOVED***Pd***REMOVED***Decimal_Number***REMOVED***Nd***REMOVED***digit***REMOVED***Enclosing_Mark***REMOVED***Me***REMOVED***Final_Punctuation***REMOVED***Pf***REMOVED***Format***REMOVED***Cf***REMOVED***Initial_Punctuation***REMOVED***Pi***REMOVED***Letter***REMOVED***L***REMOVED***Letter_Number***REMOVED***Nl***REMOVED***Line_Separator***REMOVED***Zl***REMOVED***Lowercase_Letter***REMOVED***Ll***REMOVED***Mark***REMOVED***M***REMOVED***Combining_Mark***REMOVED***Math_Symbol***REMOVED***Sm***REMOVED***Modifier_Letter***REMOVED***Lm***REMOVED***Modifier_Symbol***REMOVED***Sk***REMOVED***Nonspacing_Mark***REMOVED***Mn***REMOVED***Number***REMOVED***N***REMOVED***Open_Punctuation***REMOVED***Ps***REMOVED***Other***REMOVED***C***REMOVED***Other_Letter***REMOVED***Lo***REMOVED***Other_Number***REMOVED***No***REMOVED***Other_Punctuation***REMOVED***Po***REMOVED***Other_Symbol***REMOVED***So***REMOVED***Paragraph_Separator***REMOVED***Zp***REMOVED***Private_Use***REMOVED***Co***REMOVED***Punctuation***REMOVED***P***REMOVED***punct***REMOVED***Separator***REMOVED***Z***REMOVED***Space_Separator***REMOVED***Zs***REMOVED***Spacing_Mark***REMOVED***Mc***REMOVED***Surrogate***REMOVED***Cs***REMOVED***Symbol***REMOVED***S***REMOVED***Titlecase_Letter***REMOVED***Lt***REMOVED***Unassigned***REMOVED***Cn***REMOVED***Uppercase_Letter***REMOVED***Lu";

//***REMOVED***#table-unicode-script-values
var***REMOVED***ecma9ScriptValues***REMOVED***=***REMOVED***"Adlam***REMOVED***Adlm***REMOVED***Ahom***REMOVED***Anatolian_Hieroglyphs***REMOVED***Hluw***REMOVED***Arabic***REMOVED***Arab***REMOVED***Armenian***REMOVED***Armn***REMOVED***Avestan***REMOVED***Avst***REMOVED***Balinese***REMOVED***Bali***REMOVED***Bamum***REMOVED***Bamu***REMOVED***Bassa_Vah***REMOVED***Bass***REMOVED***Batak***REMOVED***Batk***REMOVED***Bengali***REMOVED***Beng***REMOVED***Bhaiksuki***REMOVED***Bhks***REMOVED***Bopomofo***REMOVED***Bopo***REMOVED***Brahmi***REMOVED***Brah***REMOVED***Braille***REMOVED***Brai***REMOVED***Buginese***REMOVED***Bugi***REMOVED***Buhid***REMOVED***Buhd***REMOVED***Canadian_Aboriginal***REMOVED***Cans***REMOVED***Carian***REMOVED***Cari***REMOVED***Caucasian_Albanian***REMOVED***Aghb***REMOVED***Chakma***REMOVED***Cakm***REMOVED***Cham***REMOVED***Cham***REMOVED***Cherokee***REMOVED***Cher***REMOVED***Common***REMOVED***Zyyy***REMOVED***Coptic***REMOVED***Copt***REMOVED***Qaac***REMOVED***Cuneiform***REMOVED***Xsux***REMOVED***Cypriot***REMOVED***Cprt***REMOVED***Cyrillic***REMOVED***Cyrl***REMOVED***Deseret***REMOVED***Dsrt***REMOVED***Devanagari***REMOVED***Deva***REMOVED***Duployan***REMOVED***Dupl***REMOVED***Egyptian_Hieroglyphs***REMOVED***Egyp***REMOVED***Elbasan***REMOVED***Elba***REMOVED***Ethiopic***REMOVED***Ethi***REMOVED***Georgian***REMOVED***Geor***REMOVED***Glagolitic***REMOVED***Glag***REMOVED***Gothic***REMOVED***Goth***REMOVED***Grantha***REMOVED***Gran***REMOVED***Greek***REMOVED***Grek***REMOVED***Gujarati***REMOVED***Gujr***REMOVED***Gurmukhi***REMOVED***Guru***REMOVED***Han***REMOVED***Hani***REMOVED***Hangul***REMOVED***Hang***REMOVED***Hanunoo***REMOVED***Hano***REMOVED***Hatran***REMOVED***Hatr***REMOVED***Hebrew***REMOVED***Hebr***REMOVED***Hiragana***REMOVED***Hira***REMOVED***Imperial_Aramaic***REMOVED***Armi***REMOVED***Inherited***REMOVED***Zinh***REMOVED***Qaai***REMOVED***Inscriptional_Pahlavi***REMOVED***Phli***REMOVED***Inscriptional_Parthian***REMOVED***Prti***REMOVED***Javanese***REMOVED***Java***REMOVED***Kaithi***REMOVED***Kthi***REMOVED***Kannada***REMOVED***Knda***REMOVED***Katakana***REMOVED***Kana***REMOVED***Kayah_Li***REMOVED***Kali***REMOVED***Kharoshthi***REMOVED***Khar***REMOVED***Khmer***REMOVED***Khmr***REMOVED***Khojki***REMOVED***Khoj***REMOVED***Khudawadi***REMOVED***Sind***REMOVED***Lao***REMOVED***Laoo***REMOVED***Latin***REMOVED***Latn***REMOVED***Lepcha***REMOVED***Lepc***REMOVED***Limbu***REMOVED***Limb***REMOVED***Linear_A***REMOVED***Lina***REMOVED***Linear_B***REMOVED***Linb***REMOVED***Lisu***REMOVED***Lisu***REMOVED***Lycian***REMOVED***Lyci***REMOVED***Lydian***REMOVED***Lydi***REMOVED***Mahajani***REMOVED***Mahj***REMOVED***Malayalam***REMOVED***Mlym***REMOVED***Mandaic***REMOVED***Mand***REMOVED***Manichaean***REMOVED***Mani***REMOVED***Marchen***REMOVED***Marc***REMOVED***Masaram_Gondi***REMOVED***Gonm***REMOVED***Meetei_Mayek***REMOVED***Mtei***REMOVED***Mende_Kikakui***REMOVED***Mend***REMOVED***Meroitic_Cursive***REMOVED***Merc***REMOVED***Meroitic_Hieroglyphs***REMOVED***Mero***REMOVED***Miao***REMOVED***Plrd***REMOVED***Modi***REMOVED***Mongolian***REMOVED***Mong***REMOVED***Mro***REMOVED***Mroo***REMOVED***Multani***REMOVED***Mult***REMOVED***Myanmar***REMOVED***Mymr***REMOVED***Nabataean***REMOVED***Nbat***REMOVED***New_Tai_Lue***REMOVED***Talu***REMOVED***Newa***REMOVED***Newa***REMOVED***Nko***REMOVED***Nkoo***REMOVED***Nushu***REMOVED***Nshu***REMOVED***Ogham***REMOVED***Ogam***REMOVED***Ol_Chiki***REMOVED***Olck***REMOVED***Old_Hungarian***REMOVED***Hung***REMOVED***Old_Italic***REMOVED***Ital***REMOVED***Old_North_Arabian***REMOVED***Narb***REMOVED***Old_Permic***REMOVED***Perm***REMOVED***Old_Persian***REMOVED***Xpeo***REMOVED***Old_South_Arabian***REMOVED***Sarb***REMOVED***Old_Turkic***REMOVED***Orkh***REMOVED***Oriya***REMOVED***Orya***REMOVED***Osage***REMOVED***Osge***REMOVED***Osmanya***REMOVED***Osma***REMOVED***Pahawh_Hmong***REMOVED***Hmng***REMOVED***Palmyrene***REMOVED***Palm***REMOVED***Pau_Cin_Hau***REMOVED***Pauc***REMOVED***Phags_Pa***REMOVED***Phag***REMOVED***Phoenician***REMOVED***Phnx***REMOVED***Psalter_Pahlavi***REMOVED***Phlp***REMOVED***Rejang***REMOVED***Rjng***REMOVED***Runic***REMOVED***Runr***REMOVED***Samaritan***REMOVED***Samr***REMOVED***Saurashtra***REMOVED***Saur***REMOVED***Sharada***REMOVED***Shrd***REMOVED***Shavian***REMOVED***Shaw***REMOVED***Siddham***REMOVED***Sidd***REMOVED***SignWriting***REMOVED***Sgnw***REMOVED***Sinhala***REMOVED***Sinh***REMOVED***Sora_Sompeng***REMOVED***Sora***REMOVED***Soyombo***REMOVED***Soyo***REMOVED***Sundanese***REMOVED***Sund***REMOVED***Syloti_Nagri***REMOVED***Sylo***REMOVED***Syriac***REMOVED***Syrc***REMOVED***Tagalog***REMOVED***Tglg***REMOVED***Tagbanwa***REMOVED***Tagb***REMOVED***Tai_Le***REMOVED***Tale***REMOVED***Tai_Tham***REMOVED***Lana***REMOVED***Tai_Viet***REMOVED***Tavt***REMOVED***Takri***REMOVED***Takr***REMOVED***Tamil***REMOVED***Taml***REMOVED***Tangut***REMOVED***Tang***REMOVED***Telugu***REMOVED***Telu***REMOVED***Thaana***REMOVED***Thaa***REMOVED***Thai***REMOVED***Thai***REMOVED***Tibetan***REMOVED***Tibt***REMOVED***Tifinagh***REMOVED***Tfng***REMOVED***Tirhuta***REMOVED***Tirh***REMOVED***Ugaritic***REMOVED***Ugar***REMOVED***Vai***REMOVED***Vaii***REMOVED***Warang_Citi***REMOVED***Wara***REMOVED***Yi***REMOVED***Yiii***REMOVED***Zanabazar_Square***REMOVED***Zanb";
var***REMOVED***ecma10ScriptValues***REMOVED***=***REMOVED***ecma9ScriptValues***REMOVED***+***REMOVED***"***REMOVED***Dogra***REMOVED***Dogr***REMOVED***Gunjala_Gondi***REMOVED***Gong***REMOVED***Hanifi_Rohingya***REMOVED***Rohg***REMOVED***Makasar***REMOVED***Maka***REMOVED***Medefaidrin***REMOVED***Medf***REMOVED***Old_Sogdian***REMOVED***Sogo***REMOVED***Sogdian***REMOVED***Sogd";
var***REMOVED***ecma11ScriptValues***REMOVED***=***REMOVED***ecma10ScriptValues***REMOVED***+***REMOVED***"***REMOVED***Elymaic***REMOVED***Elym***REMOVED***Nandinagari***REMOVED***Nand***REMOVED***Nyiakeng_Puachue_Hmong***REMOVED***Hmnp***REMOVED***Wancho***REMOVED***Wcho";
var***REMOVED***ecma12ScriptValues***REMOVED***=***REMOVED***ecma11ScriptValues***REMOVED***+***REMOVED***"***REMOVED***Chorasmian***REMOVED***Chrs***REMOVED***Diak***REMOVED***Dives_Akuru***REMOVED***Khitan_Small_Script***REMOVED***Kits***REMOVED***Yezi***REMOVED***Yezidi";
var***REMOVED***ecma13ScriptValues***REMOVED***=***REMOVED***ecma12ScriptValues***REMOVED***+***REMOVED***"***REMOVED***Cypro_Minoan***REMOVED***Cpmn***REMOVED***Old_Uyghur***REMOVED***Ougr***REMOVED***Tangsa***REMOVED***Tnsa***REMOVED***Toto***REMOVED***Vithkuqi***REMOVED***Vith";
var***REMOVED***ecma14ScriptValues***REMOVED***=***REMOVED***ecma13ScriptValues***REMOVED***+***REMOVED***"***REMOVED***Hrkt***REMOVED***Katakana_Or_Hiragana***REMOVED***Kawi***REMOVED***Nag_Mundari***REMOVED***Nagm***REMOVED***Unknown***REMOVED***Zzzz";

var***REMOVED***unicodeScriptValues***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***9:***REMOVED***ecma9ScriptValues,
***REMOVED******REMOVED***10:***REMOVED***ecma10ScriptValues,
***REMOVED******REMOVED***11:***REMOVED***ecma11ScriptValues,
***REMOVED******REMOVED***12:***REMOVED***ecma12ScriptValues,
***REMOVED******REMOVED***13:***REMOVED***ecma13ScriptValues,
***REMOVED******REMOVED***14:***REMOVED***ecma14ScriptValues
};

var***REMOVED***data***REMOVED***=***REMOVED***{};
function***REMOVED***buildUnicodeData(ecmaVersion)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***d***REMOVED***=***REMOVED***data[ecmaVersion]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***binary:***REMOVED***wordsRegexp(unicodeBinaryProperties[ecmaVersion]***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***unicodeGeneralCategoryValues),
***REMOVED******REMOVED******REMOVED******REMOVED***binaryOfStrings:***REMOVED***wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),
***REMOVED******REMOVED******REMOVED******REMOVED***nonBinary:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***General_Category:***REMOVED***wordsRegexp(unicodeGeneralCategoryValues),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Script:***REMOVED***wordsRegexp(unicodeScriptValues[ecmaVersion])
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***d.nonBinary.Script_Extensions***REMOVED***=***REMOVED***d.nonBinary.Script;

***REMOVED******REMOVED***d.nonBinary.gc***REMOVED***=***REMOVED***d.nonBinary.General_Category;
***REMOVED******REMOVED***d.nonBinary.sc***REMOVED***=***REMOVED***d.nonBinary.Script;
***REMOVED******REMOVED***d.nonBinary.scx***REMOVED***=***REMOVED***d.nonBinary.Script_Extensions;
}

for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***[9,***REMOVED***10,***REMOVED***11,***REMOVED***12,***REMOVED***13,***REMOVED***14];***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ecmaVersion***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED***buildUnicodeData(ecmaVersion);
}

var***REMOVED***pp$1***REMOVED***=***REMOVED***Parser.prototype;

var***REMOVED***RegExpValidationState***REMOVED***=***REMOVED***function***REMOVED***RegExpValidationState(parser)***REMOVED***{
***REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***parser;
***REMOVED******REMOVED***this.validFlags***REMOVED***=***REMOVED***"gim"***REMOVED***+***REMOVED***(parser.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***?***REMOVED***"uy"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***(parser.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***?***REMOVED***"s"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***(parser.options.ecmaVersion***REMOVED***>=***REMOVED***13***REMOVED***?***REMOVED***"d"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***(parser.options.ecmaVersion***REMOVED***>=***REMOVED***15***REMOVED***?***REMOVED***"v"***REMOVED***:***REMOVED***"");
***REMOVED******REMOVED***this.unicodeProperties***REMOVED***=***REMOVED***data[parser.options.ecmaVersion***REMOVED***>=***REMOVED***14***REMOVED***?***REMOVED***14***REMOVED***:***REMOVED***parser.options.ecmaVersion];
***REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.switchU***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this.switchV***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this.switchN***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.lastStringValue***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***this.lastAssertionIsQuantifiable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this.numCapturingParens***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.maxBackReference***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.groupNames***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.backReferenceNames***REMOVED***=***REMOVED***[];
};

RegExpValidationState.prototype.reset***REMOVED***=***REMOVED***function***REMOVED***reset***REMOVED***(start,***REMOVED***pattern,***REMOVED***flags)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***unicodeSets***REMOVED***=***REMOVED***flags.indexOf("v")***REMOVED***!==***REMOVED***-1;
***REMOVED******REMOVED***var***REMOVED***unicode***REMOVED***=***REMOVED***flags.indexOf("u")***REMOVED***!==***REMOVED***-1;
***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***start***REMOVED***|***REMOVED***0;
***REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***pattern***REMOVED***+***REMOVED***"";
***REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***flags;
***REMOVED******REMOVED***if***REMOVED***(unicodeSets***REMOVED***&&***REMOVED***this.parser.options.ecmaVersion***REMOVED***>=***REMOVED***15)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.switchU***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.switchV***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.switchN***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.switchU***REMOVED***=***REMOVED***unicode***REMOVED***&&***REMOVED***this.parser.options.ecmaVersion***REMOVED***>=***REMOVED***6;
***REMOVED******REMOVED******REMOVED******REMOVED***this.switchV***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.switchN***REMOVED***=***REMOVED***unicode***REMOVED***&&***REMOVED***this.parser.options.ecmaVersion***REMOVED***>=***REMOVED***9;
***REMOVED******REMOVED***}
};

RegExpValidationState.prototype.raise***REMOVED***=***REMOVED***function***REMOVED***raise***REMOVED***(message)***REMOVED***{
***REMOVED******REMOVED***this.parser.raiseRecoverable(this.start,***REMOVED***("Invalid***REMOVED***regular***REMOVED***expression:***REMOVED***/"***REMOVED***+***REMOVED***(this.source)***REMOVED***+***REMOVED***"/:***REMOVED***"***REMOVED***+***REMOVED***message));
};

//***REMOVED***If***REMOVED***u***REMOVED***flag***REMOVED***is***REMOVED***given,***REMOVED***this***REMOVED***returns***REMOVED***the***REMOVED***code***REMOVED***point***REMOVED***at***REMOVED***the***REMOVED***index***REMOVED***(it***REMOVED***combines***REMOVED***a***REMOVED***surrogate***REMOVED***pair).
//***REMOVED***Otherwise,***REMOVED***this***REMOVED***returns***REMOVED***the***REMOVED***code***REMOVED***unit***REMOVED***of***REMOVED***the***REMOVED***index***REMOVED***(can***REMOVED***be***REMOVED***a***REMOVED***part***REMOVED***of***REMOVED***a***REMOVED***surrogate***REMOVED***pair).
RegExpValidationState.prototype.at***REMOVED***=***REMOVED***function***REMOVED***at***REMOVED***(i,***REMOVED***forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***var***REMOVED***s***REMOVED***=***REMOVED***this.source;
***REMOVED******REMOVED***var***REMOVED***l***REMOVED***=***REMOVED***s.length;
***REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>=***REMOVED***l)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***c***REMOVED***=***REMOVED***s.charCodeAt(i);
***REMOVED******REMOVED***if***REMOVED***(!(forceU***REMOVED***||***REMOVED***this.switchU)***REMOVED***||***REMOVED***c***REMOVED***<=***REMOVED***0xD7FF***REMOVED***||***REMOVED***c***REMOVED***>=***REMOVED***0xE000***REMOVED***||***REMOVED***i***REMOVED***+***REMOVED***1***REMOVED***>=***REMOVED***l)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***c
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***s.charCodeAt(i***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***return***REMOVED***next***REMOVED***>=***REMOVED***0xDC00***REMOVED***&&***REMOVED***next***REMOVED***<=***REMOVED***0xDFFF***REMOVED***?***REMOVED***(c***REMOVED***<<***REMOVED***10)***REMOVED***+***REMOVED***next***REMOVED***-***REMOVED***0x35FDC00***REMOVED***:***REMOVED***c
};

RegExpValidationState.prototype.nextIndex***REMOVED***=***REMOVED***function***REMOVED***nextIndex***REMOVED***(i,***REMOVED***forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***var***REMOVED***s***REMOVED***=***REMOVED***this.source;
***REMOVED******REMOVED***var***REMOVED***l***REMOVED***=***REMOVED***s.length;
***REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>=***REMOVED***l)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***l
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***c***REMOVED***=***REMOVED***s.charCodeAt(i),***REMOVED***next;
***REMOVED******REMOVED***if***REMOVED***(!(forceU***REMOVED***||***REMOVED***this.switchU)***REMOVED***||***REMOVED***c***REMOVED***<=***REMOVED***0xD7FF***REMOVED***||***REMOVED***c***REMOVED***>=***REMOVED***0xE000***REMOVED***||***REMOVED***i***REMOVED***+***REMOVED***1***REMOVED***>=***REMOVED***l***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(next***REMOVED***=***REMOVED***s.charCodeAt(i***REMOVED***+***REMOVED***1))***REMOVED***<***REMOVED***0xDC00***REMOVED***||***REMOVED***next***REMOVED***>***REMOVED***0xDFFF)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***+***REMOVED***1
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***i***REMOVED***+***REMOVED***2
};

RegExpValidationState.prototype.current***REMOVED***=***REMOVED***function***REMOVED***current***REMOVED***(forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***return***REMOVED***this.at(this.pos,***REMOVED***forceU)
};

RegExpValidationState.prototype.lookahead***REMOVED***=***REMOVED***function***REMOVED***lookahead***REMOVED***(forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***return***REMOVED***this.at(this.nextIndex(this.pos,***REMOVED***forceU),***REMOVED***forceU)
};

RegExpValidationState.prototype.advance***REMOVED***=***REMOVED***function***REMOVED***advance***REMOVED***(forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***this.nextIndex(this.pos,***REMOVED***forceU);
};

RegExpValidationState.prototype.eat***REMOVED***=***REMOVED***function***REMOVED***eat***REMOVED***(ch,***REMOVED***forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***if***REMOVED***(this.current(forceU)***REMOVED***===***REMOVED***ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.advance(forceU);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

RegExpValidationState.prototype.eatChars***REMOVED***=***REMOVED***function***REMOVED***eatChars***REMOVED***(chs,***REMOVED***forceU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***chs;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.at(pos,***REMOVED***forceU);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current***REMOVED***===***REMOVED***-1***REMOVED***||***REMOVED***current***REMOVED***!==***REMOVED***ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***this.nextIndex(pos,***REMOVED***forceU);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***return***REMOVED***true
};

/**
***REMOVED*******REMOVED***Validate***REMOVED***the***REMOVED***flags***REMOVED***part***REMOVED***of***REMOVED***a***REMOVED***given***REMOVED***RegExpLiteral.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{RegExpValidationState}***REMOVED***state***REMOVED***The***REMOVED***state***REMOVED***to***REMOVED***validate***REMOVED***RegExp.
***REMOVED*******REMOVED***@returns***REMOVED***{void}
***REMOVED****/
pp$1.validateRegExpFlags***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***validFlags***REMOVED***=***REMOVED***state.validFlags;
***REMOVED******REMOVED***var***REMOVED***flags***REMOVED***=***REMOVED***state.flags;

***REMOVED******REMOVED***var***REMOVED***u***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***var***REMOVED***v***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***flags.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***flag***REMOVED***=***REMOVED***flags.charAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validFlags.indexOf(flag)***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(state.start,***REMOVED***"Invalid***REMOVED***regular***REMOVED***expression***REMOVED***flag");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags.indexOf(flag,***REMOVED***i***REMOVED***+***REMOVED***1)***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(state.start,***REMOVED***"Duplicate***REMOVED***regular***REMOVED***expression***REMOVED***flag");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flag***REMOVED***===***REMOVED***"u")***REMOVED***{***REMOVED***u***REMOVED***=***REMOVED***true;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flag***REMOVED***===***REMOVED***"v")***REMOVED***{***REMOVED***v***REMOVED***=***REMOVED***true;***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***15***REMOVED***&&***REMOVED***u***REMOVED***&&***REMOVED***v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(state.start,***REMOVED***"Invalid***REMOVED***regular***REMOVED***expression***REMOVED***flag");
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***Validate***REMOVED***the***REMOVED***pattern***REMOVED***part***REMOVED***of***REMOVED***a***REMOVED***given***REMOVED***RegExpLiteral.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{RegExpValidationState}***REMOVED***state***REMOVED***The***REMOVED***state***REMOVED***to***REMOVED***validate***REMOVED***RegExp.
***REMOVED*******REMOVED***@returns***REMOVED***{void}
***REMOVED****/
pp$1.validateRegExpPattern***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***this.regexp_pattern(state);

***REMOVED******REMOVED***//***REMOVED***The***REMOVED***goal***REMOVED***symbol***REMOVED***for***REMOVED***the***REMOVED***parse***REMOVED***is***REMOVED***|Pattern[~U,***REMOVED***~N]|.***REMOVED***If***REMOVED***the***REMOVED***result***REMOVED***of
***REMOVED******REMOVED***//***REMOVED***parsing***REMOVED***contains***REMOVED***a***REMOVED***|GroupName|,***REMOVED***reparse***REMOVED***with***REMOVED***the***REMOVED***goal***REMOVED***symbol
***REMOVED******REMOVED***//***REMOVED***|Pattern[~U,***REMOVED***+N]|***REMOVED***and***REMOVED***use***REMOVED***this***REMOVED***result***REMOVED***instead.***REMOVED***Throw***REMOVED***a***REMOVED****SyntaxError*
***REMOVED******REMOVED***//***REMOVED***exception***REMOVED***if***REMOVED***_P_***REMOVED***did***REMOVED***not***REMOVED***conform***REMOVED***to***REMOVED***the***REMOVED***grammar,***REMOVED***if***REMOVED***any***REMOVED***elements***REMOVED***of***REMOVED***_P_
***REMOVED******REMOVED***//***REMOVED***were***REMOVED***not***REMOVED***matched***REMOVED***by***REMOVED***the***REMOVED***parse,***REMOVED***or***REMOVED***if***REMOVED***any***REMOVED***Early***REMOVED***Error***REMOVED***conditions***REMOVED***exist.
***REMOVED******REMOVED***if***REMOVED***(!state.switchN***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&***REMOVED***state.groupNames.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.switchN***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_pattern(state);
***REMOVED******REMOVED***}
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
pp$1.regexp_pattern***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.lastStringValue***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***state.lastAssertionIsQuantifiable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***state.numCapturingParens***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.maxBackReference***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.groupNames.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.backReferenceNames.length***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***this.regexp_disjunction(state);

***REMOVED******REMOVED***if***REMOVED***(state.pos***REMOVED***!==***REMOVED***state.source.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***the***REMOVED***same***REMOVED***messages***REMOVED***as***REMOVED***V8.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x29***REMOVED***/****REMOVED***)***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Unmatched***REMOVED***')'");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x5D***REMOVED***/****REMOVED***]***REMOVED****/)***REMOVED***||***REMOVED***state.eat(0x7D***REMOVED***/****REMOVED***}***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Lone***REMOVED***quantifier***REMOVED***brackets");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state.maxBackReference***REMOVED***>***REMOVED***state.numCapturingParens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***escape");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***state.backReferenceNames;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.groupNames.indexOf(name)***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***named***REMOVED***capture***REMOVED***referenced");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
pp$1.regexp_disjunction***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***this.regexp_alternative(state);
***REMOVED******REMOVED***while***REMOVED***(state.eat(0x7C***REMOVED***/****REMOVED***|***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_alternative(state);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Make***REMOVED***the***REMOVED***same***REMOVED***message***REMOVED***as***REMOVED***V8.
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatQuantifier(state,***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Nothing***REMOVED***to***REMOVED***repeat");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x7B***REMOVED***/****REMOVED***{***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Lone***REMOVED***quantifier***REMOVED***brackets");
***REMOVED******REMOVED***}
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
pp$1.regexp_alternative***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***while***REMOVED***(state.pos***REMOVED***<***REMOVED***state.source.length***REMOVED***&&***REMOVED***this.regexp_eatTerm(state))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***}
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
pp$1.regexp_eatTerm***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatAssertion(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Handle***REMOVED***`QuantifiableAssertion***REMOVED***Quantifier`***REMOVED***alternative.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`state.lastAssertionIsQuantifiable`***REMOVED***is***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***last***REMOVED***eaten***REMOVED***Assertion
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***is***REMOVED***a***REMOVED***QuantifiableAssertion.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.lastAssertionIsQuantifiable***REMOVED***&&***REMOVED***this.regexp_eatQuantifier(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***the***REMOVED***same***REMOVED***message***REMOVED***as***REMOVED***V8.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***quantifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(state.switchU***REMOVED***?***REMOVED***this.regexp_eatAtom(state)***REMOVED***:***REMOVED***this.regexp_eatExtendedAtom(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatQuantifier(state);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
pp$1.regexp_eatAssertion***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***state.lastAssertionIsQuantifiable***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***//***REMOVED***^,***REMOVED***$
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5E***REMOVED***/****REMOVED***^***REMOVED****/)***REMOVED***||***REMOVED***state.eat(0x24***REMOVED***/****REMOVED***$***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***\b***REMOVED***\B
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5C***REMOVED***/****REMOVED***\***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x42***REMOVED***/****REMOVED***B***REMOVED****/)***REMOVED***||***REMOVED***state.eat(0x62***REMOVED***/****REMOVED***b***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Lookahead***REMOVED***/***REMOVED***Lookbehind
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x28***REMOVED***/****REMOVED***(***REMOVED****/)***REMOVED***&&***REMOVED***state.eat(0x3F***REMOVED***/****REMOVED***?***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lookbehind***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lookbehind***REMOVED***=***REMOVED***state.eat(0x3C***REMOVED***/****REMOVED***<***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x3D***REMOVED***/****REMOVED***=***REMOVED****/)***REMOVED***||***REMOVED***state.eat(0x21***REMOVED***/****REMOVED***!***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_disjunction(state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!state.eat(0x29***REMOVED***/****REMOVED***)***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Unterminated***REMOVED***group");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastAssertionIsQuantifiable***REMOVED***=***REMOVED***!lookbehind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
pp$1.regexp_eatQuantifier***REMOVED***=***REMOVED***function(state,***REMOVED***noError)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***noError***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***noError***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatQuantifierPrefix(state,***REMOVED***noError))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x3F***REMOVED***/****REMOVED***?***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
pp$1.regexp_eatQuantifierPrefix***REMOVED***=***REMOVED***function(state,***REMOVED***noError)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x2A***REMOVED***/****REMOVED*******REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x2B***REMOVED***/****REMOVED***+***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x3F***REMOVED***/****REMOVED***?***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatBracedQuantifier(state,***REMOVED***noError)
***REMOVED******REMOVED***)
};
pp$1.regexp_eatBracedQuantifier***REMOVED***=***REMOVED***function(state,***REMOVED***noError)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x7B***REMOVED***/****REMOVED***{***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***min***REMOVED***=***REMOVED***0,***REMOVED***max***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatDecimalDigits(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***min***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x2C***REMOVED***/****REMOVED***,***REMOVED****/)***REMOVED***&&***REMOVED***this.regexp_eatDecimalDigits(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***max***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x7D***REMOVED***/****REMOVED***}***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***SyntaxError***REMOVED***in***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#sec-term
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(max***REMOVED***!==***REMOVED***-1***REMOVED***&&***REMOVED***max***REMOVED***<***REMOVED***min***REMOVED***&&***REMOVED***!noError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("numbers***REMOVED***out***REMOVED***of***REMOVED***order***REMOVED***in***REMOVED***{}***REMOVED***quantifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.switchU***REMOVED***&&***REMOVED***!noError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Incomplete***REMOVED***quantifier");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
pp$1.regexp_eatAtom***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatPatternCharacters(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x2E***REMOVED***/****REMOVED***.***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatReverseSolidusAtomEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterClass(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatUncapturingGroup(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCapturingGroup(state)
***REMOVED******REMOVED***)
};
pp$1.regexp_eatReverseSolidusAtomEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5C***REMOVED***/****REMOVED***\***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatAtomEscape(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
pp$1.regexp_eatUncapturingGroup***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x28***REMOVED***/****REMOVED***(***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x3F***REMOVED***/****REMOVED***?***REMOVED****/)***REMOVED***&&***REMOVED***state.eat(0x3A***REMOVED***/****REMOVED***:***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_disjunction(state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x29***REMOVED***/****REMOVED***)***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Unterminated***REMOVED***group");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
pp$1.regexp_eatCapturingGroup***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x28***REMOVED***/****REMOVED***(***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***9)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_groupSpecifier(state);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(state.current()***REMOVED***===***REMOVED***0x3F***REMOVED***/****REMOVED***?***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***group");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_disjunction(state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x29***REMOVED***/****REMOVED***)***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.numCapturingParens***REMOVED***+=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Unterminated***REMOVED***group");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
pp$1.regexp_eatExtendedAtom***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x2E***REMOVED***/****REMOVED***.***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatReverseSolidusAtomEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterClass(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatUncapturingGroup(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCapturingGroup(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatInvalidBracedQuantifier(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatExtendedPatternCharacter(state)
***REMOVED******REMOVED***)
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
pp$1.regexp_eatInvalidBracedQuantifier***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatBracedQuantifier(state,***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Nothing***REMOVED***to***REMOVED***repeat");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
pp$1.regexp_eatSyntaxCharacter***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(isSyntaxCharacter(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
function***REMOVED***isSyntaxCharacter(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x24***REMOVED***/****REMOVED***$***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x28***REMOVED***/****REMOVED***(***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x2B***REMOVED***/****REMOVED***+***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x2E***REMOVED***/****REMOVED***.***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x3F***REMOVED***/****REMOVED***?***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x5B***REMOVED***/****REMOVED***[***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x5E***REMOVED***/****REMOVED***^***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x7B***REMOVED***/****REMOVED***{***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x7D***REMOVED***/****REMOVED***}***REMOVED****/
***REMOVED******REMOVED***)
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
//***REMOVED***But***REMOVED***eat***REMOVED***eager.
pp$1.regexp_eatPatternCharacters***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***while***REMOVED***((ch***REMOVED***=***REMOVED***state.current())***REMOVED***!==***REMOVED***-1***REMOVED***&&***REMOVED***!isSyntaxCharacter(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***state.pos***REMOVED***!==***REMOVED***start
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
pp$1.regexp_eatExtendedPatternCharacter***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***-1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***0x24***REMOVED***/****REMOVED***$***REMOVED****/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***!(ch***REMOVED***>=***REMOVED***0x28***REMOVED***/****REMOVED***(***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x2B***REMOVED***/****REMOVED***+***REMOVED****/)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***0x2E***REMOVED***/****REMOVED***.***REMOVED****/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***0x3F***REMOVED***/****REMOVED***?***REMOVED****/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***0x5B***REMOVED***/****REMOVED***[***REMOVED****/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***0x5E***REMOVED***/****REMOVED***^***REMOVED****/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***!==***REMOVED***0x7C***REMOVED***/****REMOVED***|***REMOVED****/
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***GroupSpecifier***REMOVED***::
//***REMOVED******REMOVED******REMOVED***[empty]
//***REMOVED******REMOVED******REMOVED***`?`***REMOVED***GroupName
pp$1.regexp_groupSpecifier***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x3F***REMOVED***/****REMOVED***?***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatGroupName(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.groupNames.indexOf(state.lastStringValue)***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Duplicate***REMOVED***capture***REMOVED***group***REMOVED***name");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.groupNames.push(state.lastStringValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***group");
***REMOVED******REMOVED***}
};

//***REMOVED***GroupName***REMOVED***::
//***REMOVED******REMOVED******REMOVED***`<`***REMOVED***RegExpIdentifierName***REMOVED***`>`
//***REMOVED***Note:***REMOVED***this***REMOVED***updates***REMOVED***`state.lastStringValue`***REMOVED***property***REMOVED***with***REMOVED***the***REMOVED***eaten***REMOVED***name.
pp$1.regexp_eatGroupName***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***state.lastStringValue***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x3C***REMOVED***/****REMOVED***<***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatRegExpIdentifierName(state)***REMOVED***&&***REMOVED***state.eat(0x3E***REMOVED***/****REMOVED***>***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***capture***REMOVED***group***REMOVED***name");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***RegExpIdentifierName***REMOVED***::
//***REMOVED******REMOVED******REMOVED***RegExpIdentifierStart
//***REMOVED******REMOVED******REMOVED***RegExpIdentifierName***REMOVED***RegExpIdentifierPart
//***REMOVED***Note:***REMOVED***this***REMOVED***updates***REMOVED***`state.lastStringValue`***REMOVED***property***REMOVED***with***REMOVED***the***REMOVED***eaten***REMOVED***name.
pp$1.regexp_eatRegExpIdentifierName***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***state.lastStringValue***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatRegExpIdentifierStart(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastStringValue***REMOVED***+=***REMOVED***codePointToString(state.lastIntValue);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.regexp_eatRegExpIdentifierPart(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastStringValue***REMOVED***+=***REMOVED***codePointToString(state.lastIntValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***RegExpIdentifierStart***REMOVED***::
//***REMOVED******REMOVED******REMOVED***UnicodeIDStart
//***REMOVED******REMOVED******REMOVED***`$`
//***REMOVED******REMOVED******REMOVED***`_`
//***REMOVED******REMOVED******REMOVED***`\`***REMOVED***RegExpUnicodeEscapeSequence[+U]
pp$1.regexp_eatRegExpIdentifierStart***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***var***REMOVED***forceU***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***11;
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current(forceU);
***REMOVED******REMOVED***state.advance(forceU);

***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x5C***REMOVED***/****REMOVED***\***REMOVED****/***REMOVED***&&***REMOVED***this.regexp_eatRegExpUnicodeEscapeSequence(state,***REMOVED***forceU))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isRegExpIdentifierStart(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***return***REMOVED***false
};
function***REMOVED***isRegExpIdentifierStart(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isIdentifierStart(ch,***REMOVED***true)***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x24***REMOVED***/****REMOVED***$***REMOVED****/***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x5F***REMOVED***/****REMOVED***_***REMOVED****/
}

//***REMOVED***RegExpIdentifierPart***REMOVED***::
//***REMOVED******REMOVED******REMOVED***UnicodeIDContinue
//***REMOVED******REMOVED******REMOVED***`$`
//***REMOVED******REMOVED******REMOVED***`_`
//***REMOVED******REMOVED******REMOVED***`\`***REMOVED***RegExpUnicodeEscapeSequence[+U]
//***REMOVED******REMOVED******REMOVED***<ZWNJ>
//***REMOVED******REMOVED******REMOVED***<ZWJ>
pp$1.regexp_eatRegExpIdentifierPart***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***var***REMOVED***forceU***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***11;
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current(forceU);
***REMOVED******REMOVED***state.advance(forceU);

***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x5C***REMOVED***/****REMOVED***\***REMOVED****/***REMOVED***&&***REMOVED***this.regexp_eatRegExpUnicodeEscapeSequence(state,***REMOVED***forceU))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isRegExpIdentifierPart(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***return***REMOVED***false
};
function***REMOVED***isRegExpIdentifierPart(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isIdentifierChar(ch,***REMOVED***true)***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x24***REMOVED***/****REMOVED***$***REMOVED****/***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x5F***REMOVED***/****REMOVED***_***REMOVED****/***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x200C***REMOVED***/****REMOVED***<ZWNJ>***REMOVED****/***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x200D***REMOVED***/****REMOVED***<ZWJ>***REMOVED****/
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
pp$1.regexp_eatAtomEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatBackReference(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterClassEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(state.switchN***REMOVED***&&***REMOVED***this.regexp_eatKGroupName(state))
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state.switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***the***REMOVED***same***REMOVED***message***REMOVED***as***REMOVED***V8.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.current()***REMOVED***===***REMOVED***0x63***REMOVED***/****REMOVED***c***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***unicode***REMOVED***escape");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***escape");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
pp$1.regexp_eatBackReference***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatDecimalEscape(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***For***REMOVED***SyntaxError***REMOVED***in***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n***REMOVED***>***REMOVED***state.maxBackReference)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.maxBackReference***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n***REMOVED***<=***REMOVED***state.numCapturingParens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
pp$1.regexp_eatKGroupName***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x6B***REMOVED***/****REMOVED***k***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatGroupName(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.backReferenceNames.push(state.lastStringValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***named***REMOVED***reference");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
pp$1.regexp_eatCharacterEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatControlEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCControlLetter(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatZero(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatHexEscapeSequence(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatRegExpUnicodeEscapeSequence(state,***REMOVED***false)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(!state.switchU***REMOVED***&&***REMOVED***this.regexp_eatLegacyOctalEscapeSequence(state))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatIdentityEscape(state)
***REMOVED******REMOVED***)
};
pp$1.regexp_eatCControlLetter***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x63***REMOVED***/****REMOVED***c***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatControlLetter(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
pp$1.regexp_eatZero***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.current()***REMOVED***===***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/***REMOVED***&&***REMOVED***!isDecimalDigit(state.lookahead()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
pp$1.regexp_eatControlEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x74***REMOVED***/****REMOVED***t***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x09;***REMOVED***/****REMOVED***\t***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x6E***REMOVED***/****REMOVED***n***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x0A;***REMOVED***/****REMOVED***\n***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x76***REMOVED***/****REMOVED***v***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x0B;***REMOVED***/****REMOVED***\v***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x66***REMOVED***/****REMOVED***f***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x0C;***REMOVED***/****REMOVED***\f***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x72***REMOVED***/****REMOVED***r***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x0D;***REMOVED***/****REMOVED***\r***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
pp$1.regexp_eatControlLetter***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(isControlLetter(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch***REMOVED***%***REMOVED***0x20;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};
function***REMOVED***isControlLetter(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***(ch***REMOVED***>=***REMOVED***0x41***REMOVED***/****REMOVED***A***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x5A***REMOVED***/****REMOVED***Z***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(ch***REMOVED***>=***REMOVED***0x61***REMOVED***/****REMOVED***a***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x7A***REMOVED***/****REMOVED***z***REMOVED****/)
***REMOVED******REMOVED***)
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
pp$1.regexp_eatRegExpUnicodeEscapeSequence***REMOVED***=***REMOVED***function(state,***REMOVED***forceU)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(***REMOVED***forceU***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***)***REMOVED***forceU***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***var***REMOVED***switchU***REMOVED***=***REMOVED***forceU***REMOVED***||***REMOVED***state.switchU;

***REMOVED******REMOVED***if***REMOVED***(state.eat(0x75***REMOVED***/****REMOVED***u***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatFixedHexDigits(state,***REMOVED***4))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lead***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(switchU***REMOVED***&&***REMOVED***lead***REMOVED***>=***REMOVED***0xD800***REMOVED***&&***REMOVED***lead***REMOVED***<=***REMOVED***0xDBFF)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***leadSurrogateEnd***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x5C***REMOVED***/****REMOVED***\***REMOVED****/)***REMOVED***&&***REMOVED***state.eat(0x75***REMOVED***/****REMOVED***u***REMOVED****/)***REMOVED***&&***REMOVED***this.regexp_eatFixedHexDigits(state,***REMOVED***4))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***trail***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(trail***REMOVED***>=***REMOVED***0xDC00***REMOVED***&&***REMOVED***trail***REMOVED***<=***REMOVED***0xDFFF)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***(lead***REMOVED***-***REMOVED***0xD800)***REMOVED*******REMOVED***0x400***REMOVED***+***REMOVED***(trail***REMOVED***-***REMOVED***0xDC00)***REMOVED***+***REMOVED***0x10000;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***leadSurrogateEnd;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***lead;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switchU***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x7B***REMOVED***/****REMOVED***{***REMOVED****/)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatHexDigits(state)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x7D***REMOVED***/****REMOVED***}***REMOVED****/)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isValidUnicode(state.lastIntValue)
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***unicode***REMOVED***escape");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***false
};
function***REMOVED***isValidUnicode(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***ch***REMOVED***>=***REMOVED***0***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x10FFFF
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
pp$1.regexp_eatIdentityEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatSyntaxCharacter(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x2F***REMOVED***/****REMOVED***/***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x2F;***REMOVED***/****REMOVED***/***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***!==***REMOVED***0x63***REMOVED***/****REMOVED***c***REMOVED****/***REMOVED***&&***REMOVED***(!state.switchN***REMOVED***||***REMOVED***ch***REMOVED***!==***REMOVED***0x6B***REMOVED***/****REMOVED***k***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
pp$1.regexp_eatDecimalEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***>=***REMOVED***0x31***REMOVED***/****REMOVED***1***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x39***REMOVED***/****REMOVED***9***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***10***REMOVED*******REMOVED***state.lastIntValue***REMOVED***+***REMOVED***(ch***REMOVED***-***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***((ch***REMOVED***=***REMOVED***state.current())***REMOVED***>=***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x39***REMOVED***/****REMOVED***9***REMOVED****/)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***Return***REMOVED***values***REMOVED***used***REMOVED***by***REMOVED***character***REMOVED***set***REMOVED***parsing***REMOVED***methods,***REMOVED***needed***REMOVED***to
//***REMOVED***forbid***REMOVED***negation***REMOVED***of***REMOVED***sets***REMOVED***that***REMOVED***can***REMOVED***match***REMOVED***strings.
var***REMOVED***CharSetNone***REMOVED***=***REMOVED***0;***REMOVED***//***REMOVED***Nothing***REMOVED***parsed
var***REMOVED***CharSetOk***REMOVED***=***REMOVED***1;***REMOVED***//***REMOVED***Construct***REMOVED***parsed,***REMOVED***cannot***REMOVED***contain***REMOVED***strings
var***REMOVED***CharSetString***REMOVED***=***REMOVED***2;***REMOVED***//***REMOVED***Construct***REMOVED***parsed,***REMOVED***can***REMOVED***contain***REMOVED***strings

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
pp$1.regexp_eatCharacterClassEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();

***REMOVED******REMOVED***if***REMOVED***(isCharacterClassEscape(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***CharSetOk
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***negate***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***state.switchU***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***9***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***((negate***REMOVED***=***REMOVED***ch***REMOVED***===***REMOVED***0x50***REMOVED***/****REMOVED***P***REMOVED****/)***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x70***REMOVED***/****REMOVED***p***REMOVED****/)
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x7B***REMOVED***/****REMOVED***{***REMOVED****/)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(result***REMOVED***=***REMOVED***this.regexp_eatUnicodePropertyValueExpression(state))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.eat(0x7D***REMOVED***/****REMOVED***}***REMOVED****/)
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(negate***REMOVED***&&***REMOVED***result***REMOVED***===***REMOVED***CharSetString)***REMOVED***{***REMOVED***state.raise("Invalid***REMOVED***property***REMOVED***name");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***property***REMOVED***name");
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***CharSetNone
};

function***REMOVED***isCharacterClassEscape(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x64***REMOVED***/****REMOVED***d***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x44***REMOVED***/****REMOVED***D***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x73***REMOVED***/****REMOVED***s***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x53***REMOVED***/****REMOVED***S***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x77***REMOVED***/****REMOVED***w***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x57***REMOVED***/****REMOVED***W***REMOVED****/
***REMOVED******REMOVED***)
}

//***REMOVED***UnicodePropertyValueExpression***REMOVED***::
//***REMOVED******REMOVED******REMOVED***UnicodePropertyName***REMOVED***`=`***REMOVED***UnicodePropertyValue
//***REMOVED******REMOVED******REMOVED***LoneUnicodePropertyNameOrValue
pp$1.regexp_eatUnicodePropertyValueExpression***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;

***REMOVED******REMOVED***//***REMOVED***UnicodePropertyName***REMOVED***`=`***REMOVED***UnicodePropertyValue
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatUnicodePropertyName(state)***REMOVED***&&***REMOVED***state.eat(0x3D***REMOVED***/****REMOVED***=***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***state.lastStringValue;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatUnicodePropertyValue(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***state.lastStringValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_validateUnicodePropertyNameAndValue(state,***REMOVED***name,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***CharSetOk
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;

***REMOVED******REMOVED***//***REMOVED***LoneUnicodePropertyNameOrValue
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatLoneUnicodePropertyNameOrValue(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nameOrValue***REMOVED***=***REMOVED***state.lastStringValue;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.regexp_validateUnicodePropertyNameOrValue(state,***REMOVED***nameOrValue)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***CharSetNone
};

pp$1.regexp_validateUnicodePropertyNameAndValue***REMOVED***=***REMOVED***function(state,***REMOVED***name,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!hasOwn(state.unicodeProperties.nonBinary,***REMOVED***name))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***state.raise("Invalid***REMOVED***property***REMOVED***name");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!state.unicodeProperties.nonBinary[name].test(value))
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***state.raise("Invalid***REMOVED***property***REMOVED***value");***REMOVED***}
};

pp$1.regexp_validateUnicodePropertyNameOrValue***REMOVED***=***REMOVED***function(state,***REMOVED***nameOrValue)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.unicodeProperties.binary.test(nameOrValue))***REMOVED***{***REMOVED***return***REMOVED***CharSetOk***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state.switchV***REMOVED***&&***REMOVED***state.unicodeProperties.binaryOfStrings.test(nameOrValue))***REMOVED***{***REMOVED***return***REMOVED***CharSetString***REMOVED***}
***REMOVED******REMOVED***state.raise("Invalid***REMOVED***property***REMOVED***name");
};

//***REMOVED***UnicodePropertyName***REMOVED***::
//***REMOVED******REMOVED******REMOVED***UnicodePropertyNameCharacters
pp$1.regexp_eatUnicodePropertyName***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.lastStringValue***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***while***REMOVED***(isUnicodePropertyNameCharacter(ch***REMOVED***=***REMOVED***state.current()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastStringValue***REMOVED***+=***REMOVED***codePointToString(ch);
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***state.lastStringValue***REMOVED***!==***REMOVED***""
};

function***REMOVED***isUnicodePropertyNameCharacter(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isControlLetter(ch)***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x5F***REMOVED***/****REMOVED***_***REMOVED****/
}

//***REMOVED***UnicodePropertyValue***REMOVED***::
//***REMOVED******REMOVED******REMOVED***UnicodePropertyValueCharacters
pp$1.regexp_eatUnicodePropertyValue***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.lastStringValue***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***while***REMOVED***(isUnicodePropertyValueCharacter(ch***REMOVED***=***REMOVED***state.current()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastStringValue***REMOVED***+=***REMOVED***codePointToString(ch);
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***state.lastStringValue***REMOVED***!==***REMOVED***""
};
function***REMOVED***isUnicodePropertyValueCharacter(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isUnicodePropertyNameCharacter(ch)***REMOVED***||***REMOVED***isDecimalDigit(ch)
}

//***REMOVED***LoneUnicodePropertyNameOrValue***REMOVED***::
//***REMOVED******REMOVED******REMOVED***UnicodePropertyValueCharacters
pp$1.regexp_eatLoneUnicodePropertyNameOrValue***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this.regexp_eatUnicodePropertyValue(state)
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
pp$1.regexp_eatCharacterClass***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5B***REMOVED***/****REMOVED***[***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***negate***REMOVED***=***REMOVED***state.eat(0x5E***REMOVED***/****REMOVED***^***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this.regexp_classContents(state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!state.eat(0x5D***REMOVED***/****REMOVED***]***REMOVED****/))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***state.raise("Unterminated***REMOVED***character***REMOVED***class");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(negate***REMOVED***&&***REMOVED***result***REMOVED***===***REMOVED***CharSetString)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***state.raise("Negated***REMOVED***character***REMOVED***class***REMOVED***may***REMOVED***contain***REMOVED***strings");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassContents
//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
pp$1.regexp_classContents***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state.current()***REMOVED***===***REMOVED***0x5D***REMOVED***/****REMOVED***]***REMOVED****/)***REMOVED***{***REMOVED***return***REMOVED***CharSetOk***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state.switchV)***REMOVED***{***REMOVED***return***REMOVED***this.regexp_classSetExpression(state)***REMOVED***}
***REMOVED******REMOVED***this.regexp_nonEmptyClassRanges(state);
***REMOVED******REMOVED***return***REMOVED***CharSetOk
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
pp$1.regexp_nonEmptyClassRanges***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***while***REMOVED***(this.regexp_eatClassAtom(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***left***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x2D***REMOVED***/****REMOVED***-***REMOVED****/)***REMOVED***&&***REMOVED***this.regexp_eatClassAtom(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***right***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.switchU***REMOVED***&&***REMOVED***(left***REMOVED***===***REMOVED***-1***REMOVED***||***REMOVED***right***REMOVED***===***REMOVED***-1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***character***REMOVED***class");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left***REMOVED***!==***REMOVED***-1***REMOVED***&&***REMOVED***right***REMOVED***!==***REMOVED***-1***REMOVED***&&***REMOVED***left***REMOVED***>***REMOVED***right)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Range***REMOVED***out***REMOVED***of***REMOVED***order***REMOVED***in***REMOVED***character***REMOVED***class");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
pp$1.regexp_eatClassAtom***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;

***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5C***REMOVED***/****REMOVED***\***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassEscape(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***the***REMOVED***same***REMOVED***message***REMOVED***as***REMOVED***V8.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch$1***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch$1***REMOVED***===***REMOVED***0x63***REMOVED***/****REMOVED***c***REMOVED****/***REMOVED***||***REMOVED***isOctalDigit(ch$1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***class***REMOVED***escape");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***escape");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***!==***REMOVED***0x5D***REMOVED***/****REMOVED***]***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
pp$1.regexp_eatClassEscape***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;

***REMOVED******REMOVED***if***REMOVED***(state.eat(0x62***REMOVED***/****REMOVED***b***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x08;***REMOVED***/****REMOVED***<BS>***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(state.switchU***REMOVED***&&***REMOVED***state.eat(0x2D***REMOVED***/****REMOVED***-***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x2D;***REMOVED***/****REMOVED***-***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(!state.switchU***REMOVED***&&***REMOVED***state.eat(0x63***REMOVED***/****REMOVED***c***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassControlLetter(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterClassEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterEscape(state)
***REMOVED******REMOVED***)
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetExpression
//***REMOVED***https://tc39.es/ecma262/#prod-ClassUnion
//***REMOVED***https://tc39.es/ecma262/#prod-ClassIntersection
//***REMOVED***https://tc39.es/ecma262/#prod-ClassSubtraction
pp$1.regexp_classSetExpression***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***CharSetOk,***REMOVED***subResult;
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassSetRange(state))***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(subResult***REMOVED***=***REMOVED***this.regexp_eatClassSetOperand(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subResult***REMOVED***===***REMOVED***CharSetString)***REMOVED***{***REMOVED***result***REMOVED***=***REMOVED***CharSetString;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://tc39.es/ecma262/#prod-ClassIntersection
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(state.eatChars([0x26,***REMOVED***0x26]***REMOVED***/****REMOVED***&&***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.current()***REMOVED***!==***REMOVED***0x26***REMOVED***/****REMOVED***&***REMOVED****/***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(subResult***REMOVED***=***REMOVED***this.regexp_eatClassSetOperand(state))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subResult***REMOVED***!==***REMOVED***CharSetString)***REMOVED***{***REMOVED***result***REMOVED***=***REMOVED***CharSetOk;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***character***REMOVED***in***REMOVED***character***REMOVED***class");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***!==***REMOVED***state.pos)***REMOVED***{***REMOVED***return***REMOVED***result***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://tc39.es/ecma262/#prod-ClassSubtraction
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(state.eatChars([0x2D,***REMOVED***0x2D]***REMOVED***/****REMOVED***--***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassSetOperand(state))***REMOVED***{***REMOVED***continue***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***character***REMOVED***in***REMOVED***character***REMOVED***class");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***!==***REMOVED***state.pos)***REMOVED***{***REMOVED***return***REMOVED***result***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***character***REMOVED***in***REMOVED***character***REMOVED***class");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***https://tc39.es/ecma262/#prod-ClassUnion
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassSetRange(state))***REMOVED***{***REMOVED***continue***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***subResult***REMOVED***=***REMOVED***this.regexp_eatClassSetOperand(state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!subResult)***REMOVED***{***REMOVED***return***REMOVED***result***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subResult***REMOVED***===***REMOVED***CharSetString)***REMOVED***{***REMOVED***result***REMOVED***=***REMOVED***CharSetString;***REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetRange
pp$1.regexp_eatClassSetRange***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassSetCharacter(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***left***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x2D***REMOVED***/****REMOVED***-***REMOVED****/)***REMOVED***&&***REMOVED***this.regexp_eatClassSetCharacter(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***right***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left***REMOVED***!==***REMOVED***-1***REMOVED***&&***REMOVED***right***REMOVED***!==***REMOVED***-1***REMOVED***&&***REMOVED***left***REMOVED***>***REMOVED***right)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Range***REMOVED***out***REMOVED***of***REMOVED***order***REMOVED***in***REMOVED***character***REMOVED***class");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetOperand
pp$1.regexp_eatClassSetOperand***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatClassSetCharacter(state))***REMOVED***{***REMOVED***return***REMOVED***CharSetOk***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.regexp_eatClassStringDisjunction(state)***REMOVED***||***REMOVED***this.regexp_eatNestedClass(state)
};

//***REMOVED***https://tc39.es/ecma262/#prod-NestedClass
pp$1.regexp_eatNestedClass***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5B***REMOVED***/****REMOVED***[***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***negate***REMOVED***=***REMOVED***state.eat(0x5E***REMOVED***/****REMOVED***^***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this.regexp_classContents(state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x5D***REMOVED***/****REMOVED***]***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(negate***REMOVED***&&***REMOVED***result***REMOVED***===***REMOVED***CharSetString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Negated***REMOVED***character***REMOVED***class***REMOVED***may***REMOVED***contain***REMOVED***strings");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5C***REMOVED***/****REMOVED***\***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result$1***REMOVED***=***REMOVED***this.regexp_eatCharacterClassEscape(state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result$1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result$1
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***null
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassStringDisjunction
pp$1.regexp_eatClassStringDisjunction***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eatChars([0x5C,***REMOVED***0x71]***REMOVED***/****REMOVED***\q***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x7B***REMOVED***/****REMOVED***{***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this.regexp_classStringDisjunctionContents(state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x7D***REMOVED***/****REMOVED***}***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***the***REMOVED***same***REMOVED***message***REMOVED***as***REMOVED***V8.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***escape");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***null
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents
pp$1.regexp_classStringDisjunctionContents***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this.regexp_classString(state);
***REMOVED******REMOVED***while***REMOVED***(state.eat(0x7C***REMOVED***/****REMOVED***|***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_classString(state)***REMOVED***===***REMOVED***CharSetString)***REMOVED***{***REMOVED***result***REMOVED***=***REMOVED***CharSetString;***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassString
//***REMOVED***https://tc39.es/ecma262/#prod-NonEmptyClassString
pp$1.regexp_classString***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***count***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***while***REMOVED***(this.regexp_eatClassSetCharacter(state))***REMOVED***{***REMOVED***count++;***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***count***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***CharSetOk***REMOVED***:***REMOVED***CharSetString
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetCharacter
pp$1.regexp_eatClassSetCharacter***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x5C***REMOVED***/****REMOVED***\***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatCharacterEscape(state)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp_eatClassSetReservedPunctuator(state)
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.eat(0x62***REMOVED***/****REMOVED***b***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0x08;***REMOVED***/****REMOVED***<BS>***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***state.lookahead()***REMOVED***&&***REMOVED***isClassSetReservedDoublePunctuatorCharacter(ch))***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isClassSetSyntaxCharacter(ch))***REMOVED***{***REMOVED***return***REMOVED***false***REMOVED***}
***REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED***return***REMOVED***true
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator
function***REMOVED***isClassSetReservedDoublePunctuatorCharacter(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x21***REMOVED***/****REMOVED***!***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x23***REMOVED***/****REMOVED***#***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x26***REMOVED***/****REMOVED***&***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x2A***REMOVED***/****REMOVED*******REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x2C***REMOVED***/****REMOVED***,***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x2E***REMOVED***/****REMOVED***.***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x3A***REMOVED***/****REMOVED***:***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x40***REMOVED***/****REMOVED***@***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x5E***REMOVED***/****REMOVED***^***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x60***REMOVED***/****REMOVED***`***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x7E***REMOVED***/****REMOVED***~***REMOVED****/
***REMOVED******REMOVED***)
}

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter
function***REMOVED***isClassSetSyntaxCharacter(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x28***REMOVED***/****REMOVED***(***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x29***REMOVED***/****REMOVED***)***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x2D***REMOVED***/****REMOVED***-***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x2F***REMOVED***/****REMOVED***/***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x5B***REMOVED***/****REMOVED***[***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x5D***REMOVED***/****REMOVED***]***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x7B***REMOVED***/****REMOVED***{***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x7D***REMOVED***/****REMOVED***}***REMOVED****/
***REMOVED******REMOVED***)
}

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
pp$1.regexp_eatClassSetReservedPunctuator***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(isClassSetReservedPunctuator(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
function***REMOVED***isClassSetReservedPunctuator(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x21***REMOVED***/****REMOVED***!***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x23***REMOVED***/****REMOVED***#***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x25***REMOVED***/****REMOVED***%***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x26***REMOVED***/****REMOVED***&***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x2C***REMOVED***/****REMOVED***,***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x2D***REMOVED***/****REMOVED***-***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***>=***REMOVED***0x3A***REMOVED***/****REMOVED***:***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x3E***REMOVED***/****REMOVED***>***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x40***REMOVED***/****REMOVED***@***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x60***REMOVED***/****REMOVED***`***REMOVED****/***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***===***REMOVED***0x7E***REMOVED***/****REMOVED***~***REMOVED****/
***REMOVED******REMOVED***)
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
pp$1.regexp_eatClassControlLetter***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(isDecimalDigit(ch)***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x5F***REMOVED***/****REMOVED***_***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch***REMOVED***%***REMOVED***0x20;
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$1.regexp_eatHexEscapeSequence***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***if***REMOVED***(state.eat(0x78***REMOVED***/****REMOVED***x***REMOVED****/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatFixedHexDigits(state,***REMOVED***2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.switchU)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.raise("Invalid***REMOVED***escape");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
pp$1.regexp_eatDecimalDigits***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***while***REMOVED***(isDecimalDigit(ch***REMOVED***=***REMOVED***state.current()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***10***REMOVED*******REMOVED***state.lastIntValue***REMOVED***+***REMOVED***(ch***REMOVED***-***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/);
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***state.pos***REMOVED***!==***REMOVED***start
};
function***REMOVED***isDecimalDigit(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***ch***REMOVED***>=***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x39***REMOVED***/****REMOVED***9***REMOVED****/
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
pp$1.regexp_eatHexDigits***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***while***REMOVED***(isHexDigit(ch***REMOVED***=***REMOVED***state.current()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***16***REMOVED*******REMOVED***state.lastIntValue***REMOVED***+***REMOVED***hexToInt(ch);
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***state.pos***REMOVED***!==***REMOVED***start
};
function***REMOVED***isHexDigit(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***(ch***REMOVED***>=***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x39***REMOVED***/****REMOVED***9***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(ch***REMOVED***>=***REMOVED***0x41***REMOVED***/****REMOVED***A***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x46***REMOVED***/****REMOVED***F***REMOVED****/)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(ch***REMOVED***>=***REMOVED***0x61***REMOVED***/****REMOVED***a***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x66***REMOVED***/****REMOVED***f***REMOVED****/)
***REMOVED******REMOVED***)
}
function***REMOVED***hexToInt(ch)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***>=***REMOVED***0x41***REMOVED***/****REMOVED***A***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x46***REMOVED***/****REMOVED***F***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***10***REMOVED***+***REMOVED***(ch***REMOVED***-***REMOVED***0x41***REMOVED***/****REMOVED***A***REMOVED****/)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***>=***REMOVED***0x61***REMOVED***/****REMOVED***a***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x66***REMOVED***/****REMOVED***f***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***10***REMOVED***+***REMOVED***(ch***REMOVED***-***REMOVED***0x61***REMOVED***/****REMOVED***a***REMOVED****/)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ch***REMOVED***-***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
//***REMOVED***Allows***REMOVED***only***REMOVED***0-377(octal)***REMOVED***i.e.***REMOVED***0-255(decimal).
pp$1.regexp_eatLegacyOctalEscapeSequence***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.regexp_eatOctalDigit(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***n1***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp_eatOctalDigit(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***n2***REMOVED***=***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***<=***REMOVED***3***REMOVED***&&***REMOVED***this.regexp_eatOctalDigit(state))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***n1***REMOVED*******REMOVED***64***REMOVED***+***REMOVED***n2***REMOVED*******REMOVED***8***REMOVED***+***REMOVED***state.lastIntValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***n1***REMOVED*******REMOVED***8***REMOVED***+***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***n1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false
};

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
pp$1.regexp_eatOctalDigit***REMOVED***=***REMOVED***function(state)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED***if***REMOVED***(isOctalDigit(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***ch***REMOVED***-***REMOVED***0x30;***REMOVED***/****REMOVED***0***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true
***REMOVED******REMOVED***}
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***return***REMOVED***false
};
function***REMOVED***isOctalDigit(ch)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***ch***REMOVED***>=***REMOVED***0x30***REMOVED***/****REMOVED***0***REMOVED****/***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***0x37***REMOVED***/****REMOVED***7***REMOVED****/
}

//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
//***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
//***REMOVED***And***REMOVED***HexDigit***REMOVED***HexDigit***REMOVED***in***REMOVED***https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$1.regexp_eatFixedHexDigits***REMOVED***=***REMOVED***function(state,***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***state.pos;
***REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***state.current();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isHexDigit(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastIntValue***REMOVED***=***REMOVED***16***REMOVED*******REMOVED***state.lastIntValue***REMOVED***+***REMOVED***hexToInt(ch);
***REMOVED******REMOVED******REMOVED******REMOVED***state.advance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true
};

//***REMOVED***Object***REMOVED***type***REMOVED***used***REMOVED***to***REMOVED***represent***REMOVED***tokens.***REMOVED***Note***REMOVED***that***REMOVED***normally,***REMOVED***tokens
//***REMOVED***simply***REMOVED***exist***REMOVED***as***REMOVED***properties***REMOVED***on***REMOVED***the***REMOVED***parser***REMOVED***object.***REMOVED***This***REMOVED***is***REMOVED***only
//***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***onToken***REMOVED***callback***REMOVED***and***REMOVED***the***REMOVED***external***REMOVED***tokenizer.

var***REMOVED***Token***REMOVED***=***REMOVED***function***REMOVED***Token(p)***REMOVED***{
***REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***p.type;
***REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***p.value;
***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***p.start;
***REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***p.end;
***REMOVED******REMOVED***if***REMOVED***(p.options.locations)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.loc***REMOVED***=***REMOVED***new***REMOVED***SourceLocation(p,***REMOVED***p.startLoc,***REMOVED***p.endLoc);***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(p.options.ranges)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.range***REMOVED***=***REMOVED***[p.start,***REMOVED***p.end];***REMOVED***}
};

//***REMOVED***##***REMOVED***Tokenizer

var***REMOVED***pp***REMOVED***=***REMOVED***Parser.prototype;

//***REMOVED***Move***REMOVED***to***REMOVED***the***REMOVED***next***REMOVED***token

pp.next***REMOVED***=***REMOVED***function(ignoreEscapeSequenceInKeyword)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!ignoreEscapeSequenceInKeyword***REMOVED***&&***REMOVED***this.type.keyword***REMOVED***&&***REMOVED***this.containsEsc)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.raiseRecoverable(this.start,***REMOVED***"Escape***REMOVED***sequence***REMOVED***in***REMOVED***keyword***REMOVED***"***REMOVED***+***REMOVED***this.type.keyword);***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.onToken)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.options.onToken(new***REMOVED***Token(this));***REMOVED***}

***REMOVED******REMOVED***this.lastTokEnd***REMOVED***=***REMOVED***this.end;
***REMOVED******REMOVED***this.lastTokStart***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED***this.lastTokEndLoc***REMOVED***=***REMOVED***this.endLoc;
***REMOVED******REMOVED***this.lastTokStartLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED***this.nextToken();
};

pp.getToken***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Token(this)
};

//***REMOVED***If***REMOVED***we're***REMOVED***in***REMOVED***an***REMOVED***ES6***REMOVED***environment,***REMOVED***make***REMOVED***parsers***REMOVED***iterable
if***REMOVED***(typeof***REMOVED***Symbol***REMOVED***!==***REMOVED***"undefined")
***REMOVED******REMOVED***{***REMOVED***pp[Symbol.iterator]***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***this$1$1***REMOVED***=***REMOVED***this;

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***token***REMOVED***=***REMOVED***this$1$1.getToken();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***done:***REMOVED***token.type***REMOVED***===***REMOVED***types$1.eof,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***token
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};***REMOVED***}

//***REMOVED***Toggle***REMOVED***strict***REMOVED***mode.***REMOVED***Re-reads***REMOVED***the***REMOVED***next***REMOVED***number***REMOVED***or***REMOVED***string***REMOVED***to***REMOVED***please
//***REMOVED***pedantic***REMOVED***tests***REMOVED***(`"use***REMOVED***strict";***REMOVED***010;`***REMOVED***should***REMOVED***fail).

//***REMOVED***Read***REMOVED***a***REMOVED***single***REMOVED***token,***REMOVED***updating***REMOVED***the***REMOVED***parser***REMOVED***object's***REMOVED***token-related
//***REMOVED***properties.

pp.nextToken***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***curContext***REMOVED***=***REMOVED***this.curContext();
***REMOVED******REMOVED***if***REMOVED***(!curContext***REMOVED***||***REMOVED***!curContext.preserveSpace)***REMOVED***{***REMOVED***this.skipSpace();***REMOVED***}

***REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{***REMOVED***this.startLoc***REMOVED***=***REMOVED***this.curPosition();***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***>=***REMOVED***this.input.length)***REMOVED***{***REMOVED***return***REMOVED***this.finishToken(types$1.eof)***REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(curContext.override)***REMOVED***{***REMOVED***return***REMOVED***curContext.override(this)***REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{***REMOVED***this.readToken(this.fullCharCodeAtPos());***REMOVED***}
};

pp.readToken***REMOVED***=***REMOVED***function(code)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Identifier***REMOVED***or***REMOVED***keyword.***REMOVED***'\uXXXX'***REMOVED***sequences***REMOVED***are***REMOVED***allowed***REMOVED***in
***REMOVED******REMOVED***//***REMOVED***identifiers,***REMOVED***so***REMOVED***'\'***REMOVED***also***REMOVED***dispatches***REMOVED***to***REMOVED***that.
***REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(code,***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***92***REMOVED***/****REMOVED***'\'***REMOVED****/)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***return***REMOVED***this.readWord()***REMOVED***}

***REMOVED******REMOVED***return***REMOVED***this.getTokenFromCode(code)
};

pp.fullCharCodeAtPos***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***0xd7ff***REMOVED***||***REMOVED***code***REMOVED***>=***REMOVED***0xdc00)***REMOVED***{***REMOVED***return***REMOVED***code***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***return***REMOVED***next***REMOVED***<=***REMOVED***0xdbff***REMOVED***||***REMOVED***next***REMOVED***>=***REMOVED***0xe000***REMOVED***?***REMOVED***code***REMOVED***:***REMOVED***(code***REMOVED***<<***REMOVED***10)***REMOVED***+***REMOVED***next***REMOVED***-***REMOVED***0x35fdc00
};

pp.skipBlockComment***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***startLoc***REMOVED***=***REMOVED***this.options.onComment***REMOVED***&&***REMOVED***this.curPosition();
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***this.pos,***REMOVED***end***REMOVED***=***REMOVED***this.input.indexOf("*/",***REMOVED***this.pos***REMOVED***+=***REMOVED***2);
***REMOVED******REMOVED***if***REMOVED***(end***REMOVED***===***REMOVED***-1)***REMOVED***{***REMOVED***this.raise(this.pos***REMOVED***-***REMOVED***2,***REMOVED***"Unterminated***REMOVED***comment");***REMOVED***}
***REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***end***REMOVED***+***REMOVED***2;
***REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***nextBreak***REMOVED***=***REMOVED***(void***REMOVED***0),***REMOVED***pos***REMOVED***=***REMOVED***start;***REMOVED***(nextBreak***REMOVED***=***REMOVED***nextLineBreak(this.input,***REMOVED***pos,***REMOVED***this.pos))***REMOVED***>***REMOVED***-1;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***this.lineStart***REMOVED***=***REMOVED***nextBreak;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.onComment)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.options.onComment(true,***REMOVED***this.input.slice(start***REMOVED***+***REMOVED***2,***REMOVED***end),***REMOVED***start,***REMOVED***this.pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc,***REMOVED***this.curPosition());***REMOVED***}
};

pp.skipLineComment***REMOVED***=***REMOVED***function(startSkip)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***var***REMOVED***startLoc***REMOVED***=***REMOVED***this.options.onComment***REMOVED***&&***REMOVED***this.curPosition();
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+=***REMOVED***startSkip);
***REMOVED******REMOVED***while***REMOVED***(this.pos***REMOVED***<***REMOVED***this.input.length***REMOVED***&&***REMOVED***!isNewLine(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(++this.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.onComment)
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.options.onComment(false,***REMOVED***this.input.slice(start***REMOVED***+***REMOVED***startSkip,***REMOVED***this.pos),***REMOVED***start,***REMOVED***this.pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc,***REMOVED***this.curPosition());***REMOVED***}
};

//***REMOVED***Called***REMOVED***at***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***parse***REMOVED***and***REMOVED***after***REMOVED***every***REMOVED***token.***REMOVED***Skips
//***REMOVED***whitespace***REMOVED***and***REMOVED***comments,***REMOVED***and.

pp.skipSpace***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***loop:***REMOVED***while***REMOVED***(this.pos***REMOVED***<***REMOVED***this.input.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***32:***REMOVED***case***REMOVED***160:***REMOVED***//***REMOVED***'***REMOVED***'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***10)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:***REMOVED***case***REMOVED***8232:***REMOVED***case***REMOVED***8233:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lineStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:***REMOVED***//***REMOVED***'/'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***42:***REMOVED***//***REMOVED***'*'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.skipBlockComment();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.skipLineComment(2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***loop
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***>***REMOVED***8***REMOVED***&&***REMOVED***ch***REMOVED***<***REMOVED***14***REMOVED***||***REMOVED***ch***REMOVED***>=***REMOVED***5760***REMOVED***&&***REMOVED***nonASCIIwhitespace.test(String.fromCharCode(ch)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***loop
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***Called***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***every***REMOVED***token.***REMOVED***Sets***REMOVED***`end`,***REMOVED***`val`,***REMOVED***and
//***REMOVED***maintains***REMOVED***`context`***REMOVED***and***REMOVED***`exprAllowed`,***REMOVED***and***REMOVED***skips***REMOVED***the***REMOVED***space***REMOVED***after
//***REMOVED***the***REMOVED***token,***REMOVED***so***REMOVED***that***REMOVED***the***REMOVED***next***REMOVED***one's***REMOVED***`start`***REMOVED***will***REMOVED***point***REMOVED***at***REMOVED***the
//***REMOVED***right***REMOVED***position.

pp.finishToken***REMOVED***=***REMOVED***function(type,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{***REMOVED***this.endLoc***REMOVED***=***REMOVED***this.curPosition();***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***prevType***REMOVED***=***REMOVED***this.type;
***REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***val;

***REMOVED******REMOVED***this.updateContext(prevType);
};

//***REMOVED***###***REMOVED***Token***REMOVED***reading

//***REMOVED***This***REMOVED***is***REMOVED***the***REMOVED***function***REMOVED***that***REMOVED***is***REMOVED***called***REMOVED***to***REMOVED***fetch***REMOVED***the***REMOVED***next***REMOVED***token.***REMOVED***It
//***REMOVED***is***REMOVED***somewhat***REMOVED***obscure,***REMOVED***because***REMOVED***it***REMOVED***works***REMOVED***in***REMOVED***character***REMOVED***codes***REMOVED***rather
//***REMOVED***than***REMOVED***characters,***REMOVED***and***REMOVED***because***REMOVED***operator***REMOVED***parsing***REMOVED***has***REMOVED***been***REMOVED***inlined
//***REMOVED***into***REMOVED***it.
//
//***REMOVED***All***REMOVED***in***REMOVED***the***REMOVED***name***REMOVED***of***REMOVED***speed.
//
pp.readToken_dot***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***next***REMOVED***<=***REMOVED***57)***REMOVED***{***REMOVED***return***REMOVED***this.readNumber(true)***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***next2***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***46***REMOVED***&&***REMOVED***next2***REMOVED***===***REMOVED***46)***REMOVED***{***REMOVED***//***REMOVED***46***REMOVED***=***REMOVED***dot***REMOVED***'.'
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***3;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.ellipsis)
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.dot)
***REMOVED******REMOVED***}
};

pp.readToken_slash***REMOVED***=***REMOVED***function()***REMOVED***{***REMOVED***//***REMOVED***'/'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***if***REMOVED***(this.exprAllowed)***REMOVED***{***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.readRegexp()***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***2)***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.slash,***REMOVED***1)
};

pp.readToken_mult_modulo_exp***REMOVED***=***REMOVED***function(code)***REMOVED***{***REMOVED***//***REMOVED***'%*'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***var***REMOVED***size***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED***var***REMOVED***tokentype***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***42***REMOVED***?***REMOVED***types$1.star***REMOVED***:***REMOVED***types$1.modulo;

***REMOVED******REMOVED***//***REMOVED***exponentiation***REMOVED***operator***REMOVED********REMOVED***and***REMOVED*****=
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***7***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***42***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***42)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***++size;
***REMOVED******REMOVED******REMOVED******REMOVED***tokentype***REMOVED***=***REMOVED***types$1.starstar;
***REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***size***REMOVED***+***REMOVED***1)***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(tokentype,***REMOVED***size)
};

pp.readToken_pipe_amp***REMOVED***=***REMOVED***function(code)***REMOVED***{***REMOVED***//***REMOVED***'|&'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***12)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next2***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next2***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***3)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishOp(code***REMOVED***===***REMOVED***124***REMOVED***?***REMOVED***types$1.logicalOR***REMOVED***:***REMOVED***types$1.logicalAND,***REMOVED***2)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***2)***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(code***REMOVED***===***REMOVED***124***REMOVED***?***REMOVED***types$1.bitwiseOR***REMOVED***:***REMOVED***types$1.bitwiseAND,***REMOVED***1)
};

pp.readToken_caret***REMOVED***=***REMOVED***function()***REMOVED***{***REMOVED***//***REMOVED***'^'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***2)***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.bitwiseXOR,***REMOVED***1)
};

pp.readToken_plus_min***REMOVED***=***REMOVED***function(code)***REMOVED***{***REMOVED***//***REMOVED***'+-'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***45***REMOVED***&&***REMOVED***!this.inModule***REMOVED***&&***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***62***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.lastTokEnd***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***lineBreak.test(this.input.slice(this.lastTokEnd,***REMOVED***this.pos))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***`-->`***REMOVED***line***REMOVED***comment
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.skipLineComment(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.skipSpace();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nextToken()
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.incDec,***REMOVED***2)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***2)***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.plusMin,***REMOVED***1)
};

pp.readToken_lt_gt***REMOVED***=***REMOVED***function(code)***REMOVED***{***REMOVED***//***REMOVED***'<>'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***var***REMOVED***size***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***size***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***62***REMOVED***&&***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***62***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***size)***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***size***REMOVED***+***REMOVED***1)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.bitShift,***REMOVED***size)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***33***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***60***REMOVED***&&***REMOVED***!this.inModule***REMOVED***&&***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***45***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***3)***REMOVED***===***REMOVED***45)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`<!--`,***REMOVED***an***REMOVED***XML-style***REMOVED***comment***REMOVED***that***REMOVED***should***REMOVED***be***REMOVED***interpreted***REMOVED***as***REMOVED***a***REMOVED***line***REMOVED***comment
***REMOVED******REMOVED******REMOVED******REMOVED***this.skipLineComment(4);
***REMOVED******REMOVED******REMOVED******REMOVED***this.skipSpace();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nextToken()
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***size***REMOVED***=***REMOVED***2;***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.relational,***REMOVED***size)
};

pp.readToken_eq_excl***REMOVED***=***REMOVED***function(code)***REMOVED***{***REMOVED***//***REMOVED***'=!'
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.equality,***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***61***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***2)***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***61***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***62***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{***REMOVED***//***REMOVED***'=>'
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.arrow)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(code***REMOVED***===***REMOVED***61***REMOVED***?***REMOVED***types$1.eq***REMOVED***:***REMOVED***types$1.prefix,***REMOVED***1)
};

pp.readToken_question***REMOVED***=***REMOVED***function()***REMOVED***{***REMOVED***//***REMOVED***'?'
***REMOVED******REMOVED***var***REMOVED***ecmaVersion***REMOVED***=***REMOVED***this.options.ecmaVersion;
***REMOVED******REMOVED***if***REMOVED***(ecmaVersion***REMOVED***>=***REMOVED***11)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***46)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next2***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next2***REMOVED***<***REMOVED***48***REMOVED***||***REMOVED***next2***REMOVED***>***REMOVED***57)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.questionDot,***REMOVED***2)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***63)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ecmaVersion***REMOVED***>=***REMOVED***12)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next2$1***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next2$1***REMOVED***===***REMOVED***61)***REMOVED***{***REMOVED***return***REMOVED***this.finishOp(types$1.assign,***REMOVED***3)***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.coalesce,***REMOVED***2)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.question,***REMOVED***1)
};

pp.readToken_numberSign***REMOVED***=***REMOVED***function()***REMOVED***{***REMOVED***//***REMOVED***'#'
***REMOVED******REMOVED***var***REMOVED***ecmaVersion***REMOVED***=***REMOVED***this.options.ecmaVersion;
***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***35;***REMOVED***//***REMOVED***'#'
***REMOVED******REMOVED***if***REMOVED***(ecmaVersion***REMOVED***>=***REMOVED***13)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***this.fullCharCodeAtPos();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(code,***REMOVED***true)***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***92***REMOVED***/****REMOVED***'\'***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.privateId,***REMOVED***this.readWord1())
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this.raise(this.pos,***REMOVED***"Unexpected***REMOVED***character***REMOVED***'"***REMOVED***+***REMOVED***codePointToString(code)***REMOVED***+***REMOVED***"'");
};

pp.getTokenFromCode***REMOVED***=***REMOVED***function(code)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***The***REMOVED***interpretation***REMOVED***of***REMOVED***a***REMOVED***dot***REMOVED***depends***REMOVED***on***REMOVED***whether***REMOVED***it***REMOVED***is***REMOVED***followed
***REMOVED******REMOVED***//***REMOVED***by***REMOVED***a***REMOVED***digit***REMOVED***or***REMOVED***another***REMOVED***two***REMOVED***dots.
***REMOVED******REMOVED***case***REMOVED***46:***REMOVED***//***REMOVED***'.'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_dot()

***REMOVED******REMOVED***//***REMOVED***Punctuation***REMOVED***tokens.
***REMOVED******REMOVED***case***REMOVED***40:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.parenL)
***REMOVED******REMOVED***case***REMOVED***41:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.parenR)
***REMOVED******REMOVED***case***REMOVED***59:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.semi)
***REMOVED******REMOVED***case***REMOVED***44:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.comma)
***REMOVED******REMOVED***case***REMOVED***91:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.bracketL)
***REMOVED******REMOVED***case***REMOVED***93:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.bracketR)
***REMOVED******REMOVED***case***REMOVED***123:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.braceL)
***REMOVED******REMOVED***case***REMOVED***125:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.braceR)
***REMOVED******REMOVED***case***REMOVED***58:***REMOVED***++this.pos;***REMOVED***return***REMOVED***this.finishToken(types$1.colon)

***REMOVED******REMOVED***case***REMOVED***96:***REMOVED***//***REMOVED***'`'
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***6)***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.backQuote)

***REMOVED******REMOVED***case***REMOVED***48:***REMOVED***//***REMOVED***'0'
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***120***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***88)***REMOVED***{***REMOVED***return***REMOVED***this.readRadixNumber(16)***REMOVED***}***REMOVED***//***REMOVED***'0x',***REMOVED***'0X'***REMOVED***-***REMOVED***hex***REMOVED***number
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***111***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***79)***REMOVED***{***REMOVED***return***REMOVED***this.readRadixNumber(8)***REMOVED***}***REMOVED***//***REMOVED***'0o',***REMOVED***'0O'***REMOVED***-***REMOVED***octal***REMOVED***number
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***98***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***66)***REMOVED***{***REMOVED***return***REMOVED***this.readRadixNumber(2)***REMOVED***}***REMOVED***//***REMOVED***'0b',***REMOVED***'0B'***REMOVED***-***REMOVED***binary***REMOVED***number
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Anything***REMOVED***else***REMOVED***beginning***REMOVED***with***REMOVED***a***REMOVED***digit***REMOVED***is***REMOVED***an***REMOVED***integer,***REMOVED***octal
***REMOVED******REMOVED***//***REMOVED***number,***REMOVED***or***REMOVED***float.
***REMOVED******REMOVED***case***REMOVED***49:***REMOVED***case***REMOVED***50:***REMOVED***case***REMOVED***51:***REMOVED***case***REMOVED***52:***REMOVED***case***REMOVED***53:***REMOVED***case***REMOVED***54:***REMOVED***case***REMOVED***55:***REMOVED***case***REMOVED***56:***REMOVED***case***REMOVED***57:***REMOVED***//***REMOVED***1-9
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readNumber(false)

***REMOVED******REMOVED***//***REMOVED***Quotes***REMOVED***produce***REMOVED***strings.
***REMOVED******REMOVED***case***REMOVED***34:***REMOVED***case***REMOVED***39:***REMOVED***//***REMOVED***'"',***REMOVED***"'"
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readString(code)

***REMOVED******REMOVED***//***REMOVED***Operators***REMOVED***are***REMOVED***parsed***REMOVED***inline***REMOVED***in***REMOVED***tiny***REMOVED***state***REMOVED***machines.***REMOVED***'='***REMOVED***(61)***REMOVED***is
***REMOVED******REMOVED***//***REMOVED***often***REMOVED***referred***REMOVED***to.***REMOVED***`finishOp`***REMOVED***simply***REMOVED***skips***REMOVED***the***REMOVED***amount***REMOVED***of
***REMOVED******REMOVED***//***REMOVED***characters***REMOVED***it***REMOVED***is***REMOVED***given***REMOVED***as***REMOVED***second***REMOVED***argument,***REMOVED***and***REMOVED***returns***REMOVED***a***REMOVED***token
***REMOVED******REMOVED***//***REMOVED***of***REMOVED***the***REMOVED***type***REMOVED***given***REMOVED***by***REMOVED***its***REMOVED***first***REMOVED***argument.
***REMOVED******REMOVED***case***REMOVED***47:***REMOVED***//***REMOVED***'/'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_slash()

***REMOVED******REMOVED***case***REMOVED***37:***REMOVED***case***REMOVED***42:***REMOVED***//***REMOVED***'%*'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_mult_modulo_exp(code)

***REMOVED******REMOVED***case***REMOVED***124:***REMOVED***case***REMOVED***38:***REMOVED***//***REMOVED***'|&'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_pipe_amp(code)

***REMOVED******REMOVED***case***REMOVED***94:***REMOVED***//***REMOVED***'^'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_caret()

***REMOVED******REMOVED***case***REMOVED***43:***REMOVED***case***REMOVED***45:***REMOVED***//***REMOVED***'+-'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_plus_min(code)

***REMOVED******REMOVED***case***REMOVED***60:***REMOVED***case***REMOVED***62:***REMOVED***//***REMOVED***'<>'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_lt_gt(code)

***REMOVED******REMOVED***case***REMOVED***61:***REMOVED***case***REMOVED***33:***REMOVED***//***REMOVED***'=!'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_eq_excl(code)

***REMOVED******REMOVED***case***REMOVED***63:***REMOVED***//***REMOVED***'?'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_question()

***REMOVED******REMOVED***case***REMOVED***126:***REMOVED***//***REMOVED***'~'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishOp(types$1.prefix,***REMOVED***1)

***REMOVED******REMOVED***case***REMOVED***35:***REMOVED***//***REMOVED***'#'
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.readToken_numberSign()
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this.raise(this.pos,***REMOVED***"Unexpected***REMOVED***character***REMOVED***'"***REMOVED***+***REMOVED***codePointToString(code)***REMOVED***+***REMOVED***"'");
};

pp.finishOp***REMOVED***=***REMOVED***function(type,***REMOVED***size)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***this.input.slice(this.pos,***REMOVED***this.pos***REMOVED***+***REMOVED***size);
***REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***size;
***REMOVED******REMOVED***return***REMOVED***this.finishToken(type,***REMOVED***str)
};

pp.readRegexp***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***escaped,***REMOVED***inClass,***REMOVED***start***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***>=***REMOVED***this.input.length)***REMOVED***{***REMOVED***this.raise(start,***REMOVED***"Unterminated***REMOVED***regular***REMOVED***expression");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charAt(this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lineBreak.test(ch))***REMOVED***{***REMOVED***this.raise(start,***REMOVED***"Unterminated***REMOVED***regular***REMOVED***expression");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!escaped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***"[")***REMOVED***{***REMOVED***inClass***REMOVED***=***REMOVED***true;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***"]"***REMOVED***&&***REMOVED***inClass)***REMOVED***{***REMOVED***inClass***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***"/"***REMOVED***&&***REMOVED***!inClass)***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***ch***REMOVED***===***REMOVED***"\\";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***escaped***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***pattern***REMOVED***=***REMOVED***this.input.slice(start,***REMOVED***this.pos);
***REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED***var***REMOVED***flagsStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***var***REMOVED***flags***REMOVED***=***REMOVED***this.readWord1();
***REMOVED******REMOVED***if***REMOVED***(this.containsEsc)***REMOVED***{***REMOVED***this.unexpected(flagsStart);***REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Validate***REMOVED***pattern
***REMOVED******REMOVED***var***REMOVED***state***REMOVED***=***REMOVED***this.regexpState***REMOVED***||***REMOVED***(this.regexpState***REMOVED***=***REMOVED***new***REMOVED***RegExpValidationState(this));
***REMOVED******REMOVED***state.reset(start,***REMOVED***pattern,***REMOVED***flags);
***REMOVED******REMOVED***this.validateRegExpFlags(state);
***REMOVED******REMOVED***this.validateRegExpPattern(state);

***REMOVED******REMOVED***//***REMOVED***Create***REMOVED***Literal#value***REMOVED***property***REMOVED***value.
***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***new***REMOVED***RegExp(pattern,***REMOVED***flags);
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ESTree***REMOVED***requires***REMOVED***null***REMOVED***if***REMOVED***it***REMOVED***failed***REMOVED***to***REMOVED***instantiate***REMOVED***RegExp***REMOVED***object.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.regexp,***REMOVED***{pattern:***REMOVED***pattern,***REMOVED***flags:***REMOVED***flags,***REMOVED***value:***REMOVED***value})
};

//***REMOVED***Read***REMOVED***an***REMOVED***integer***REMOVED***in***REMOVED***the***REMOVED***given***REMOVED***radix.***REMOVED***Return***REMOVED***null***REMOVED***if***REMOVED***zero***REMOVED***digits
//***REMOVED***were***REMOVED***read,***REMOVED***the***REMOVED***integer***REMOVED***value***REMOVED***otherwise.***REMOVED***When***REMOVED***`len`***REMOVED***is***REMOVED***given,***REMOVED***this
//***REMOVED***will***REMOVED***return***REMOVED***`null`***REMOVED***unless***REMOVED***the***REMOVED***integer***REMOVED***has***REMOVED***exactly***REMOVED***`len`***REMOVED***digits.

pp.readInt***REMOVED***=***REMOVED***function(radix,***REMOVED***len,***REMOVED***maybeLegacyOctalNumericLiteral)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***`len`***REMOVED***is***REMOVED***used***REMOVED***for***REMOVED***character***REMOVED***escape***REMOVED***sequences.***REMOVED***In***REMOVED***that***REMOVED***case,***REMOVED***disallow***REMOVED***separators.
***REMOVED******REMOVED***var***REMOVED***allowSeparators***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***12***REMOVED***&&***REMOVED***len***REMOVED***===***REMOVED***undefined;

***REMOVED******REMOVED***//***REMOVED***`maybeLegacyOctalNumericLiteral`***REMOVED***is***REMOVED***true***REMOVED***if***REMOVED***it***REMOVED***doesn't***REMOVED***have***REMOVED***prefix***REMOVED***(0x,0o,0b)
***REMOVED******REMOVED***//***REMOVED***and***REMOVED***isn't***REMOVED***fraction***REMOVED***part***REMOVED***nor***REMOVED***exponent***REMOVED***part.***REMOVED***In***REMOVED***that***REMOVED***case,***REMOVED***if***REMOVED***the***REMOVED***first***REMOVED***digit
***REMOVED******REMOVED***//***REMOVED***is***REMOVED***zero***REMOVED***then***REMOVED***disallow***REMOVED***separators.
***REMOVED******REMOVED***var***REMOVED***isLegacyOctalNumericLiteral***REMOVED***=***REMOVED***maybeLegacyOctalNumericLiteral***REMOVED***&&***REMOVED***this.input.charCodeAt(this.pos)***REMOVED***===***REMOVED***48;

***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***this.pos,***REMOVED***total***REMOVED***=***REMOVED***0,***REMOVED***lastCode***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***e***REMOVED***=***REMOVED***len***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***Infinity***REMOVED***:***REMOVED***len;***REMOVED***i***REMOVED***<***REMOVED***e;***REMOVED***++i,***REMOVED***++this.pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos),***REMOVED***val***REMOVED***=***REMOVED***(void***REMOVED***0);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowSeparators***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***95)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLegacyOctalNumericLiteral)***REMOVED***{***REMOVED***this.raiseRecoverable(this.pos,***REMOVED***"Numeric***REMOVED***separator***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***legacy***REMOVED***octal***REMOVED***numeric***REMOVED***literals");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastCode***REMOVED***===***REMOVED***95)***REMOVED***{***REMOVED***this.raiseRecoverable(this.pos,***REMOVED***"Numeric***REMOVED***separator***REMOVED***must***REMOVED***be***REMOVED***exactly***REMOVED***one***REMOVED***underscore");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***0)***REMOVED***{***REMOVED***this.raiseRecoverable(this.pos,***REMOVED***"Numeric***REMOVED***separator***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***at***REMOVED***the***REMOVED***first***REMOVED***of***REMOVED***digits");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastCode***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***>=***REMOVED***97)***REMOVED***{***REMOVED***val***REMOVED***=***REMOVED***code***REMOVED***-***REMOVED***97***REMOVED***+***REMOVED***10;***REMOVED***}***REMOVED***//***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***>=***REMOVED***65)***REMOVED***{***REMOVED***val***REMOVED***=***REMOVED***code***REMOVED***-***REMOVED***65***REMOVED***+***REMOVED***10;***REMOVED***}***REMOVED***//***REMOVED***A
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***57)***REMOVED***{***REMOVED***val***REMOVED***=***REMOVED***code***REMOVED***-***REMOVED***48;***REMOVED***}***REMOVED***//***REMOVED***0-9
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{***REMOVED***val***REMOVED***=***REMOVED***Infinity;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***>=***REMOVED***radix)***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***lastCode***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***total***REMOVED***=***REMOVED***total***REMOVED*******REMOVED***radix***REMOVED***+***REMOVED***val;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(allowSeparators***REMOVED***&&***REMOVED***lastCode***REMOVED***===***REMOVED***95)***REMOVED***{***REMOVED***this.raiseRecoverable(this.pos***REMOVED***-***REMOVED***1,***REMOVED***"Numeric***REMOVED***separator***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***at***REMOVED***the***REMOVED***last***REMOVED***of***REMOVED***digits");***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***===***REMOVED***start***REMOVED***||***REMOVED***len***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***this.pos***REMOVED***-***REMOVED***start***REMOVED***!==***REMOVED***len)***REMOVED***{***REMOVED***return***REMOVED***null***REMOVED***}

***REMOVED******REMOVED***return***REMOVED***total
};

function***REMOVED***stringToNumber(str,***REMOVED***isLegacyOctalNumericLiteral)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isLegacyOctalNumericLiteral)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parseInt(str,***REMOVED***8)
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***`parseFloat(value)`***REMOVED***stops***REMOVED***parsing***REMOVED***at***REMOVED***the***REMOVED***first***REMOVED***numeric***REMOVED***separator***REMOVED***then***REMOVED***returns***REMOVED***a***REMOVED***wrong***REMOVED***value.
***REMOVED******REMOVED***return***REMOVED***parseFloat(str.replace(/_/g,***REMOVED***""))
}

function***REMOVED***stringToBigInt(str)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***BigInt***REMOVED***!==***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***`BigInt(value)`***REMOVED***throws***REMOVED***syntax***REMOVED***error***REMOVED***if***REMOVED***the***REMOVED***string***REMOVED***contains***REMOVED***numeric***REMOVED***separators.
***REMOVED******REMOVED***return***REMOVED***BigInt(str.replace(/_/g,***REMOVED***""))
}

pp.readRadixNumber***REMOVED***=***REMOVED***function(radix)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***2;***REMOVED***//***REMOVED***0x
***REMOVED******REMOVED***var***REMOVED***val***REMOVED***=***REMOVED***this.readInt(radix);
***REMOVED******REMOVED***if***REMOVED***(val***REMOVED***==***REMOVED***null)***REMOVED***{***REMOVED***this.raise(this.start***REMOVED***+***REMOVED***2,***REMOVED***"Expected***REMOVED***number***REMOVED***in***REMOVED***radix***REMOVED***"***REMOVED***+***REMOVED***radix);***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***11***REMOVED***&&***REMOVED***this.input.charCodeAt(this.pos)***REMOVED***===***REMOVED***110)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***stringToBigInt(this.input.slice(start,***REMOVED***this.pos));
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isIdentifierStart(this.fullCharCodeAtPos()))***REMOVED***{***REMOVED***this.raise(this.pos,***REMOVED***"Identifier***REMOVED***directly***REMOVED***after***REMOVED***number");***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.num,***REMOVED***val)
};

//***REMOVED***Read***REMOVED***an***REMOVED***integer,***REMOVED***octal***REMOVED***integer,***REMOVED***or***REMOVED***floating-point***REMOVED***number.

pp.readNumber***REMOVED***=***REMOVED***function(startsWithDot)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***if***REMOVED***(!startsWithDot***REMOVED***&&***REMOVED***this.readInt(10,***REMOVED***undefined,***REMOVED***true)***REMOVED***===***REMOVED***null)***REMOVED***{***REMOVED***this.raise(start,***REMOVED***"Invalid***REMOVED***number");***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***octal***REMOVED***=***REMOVED***this.pos***REMOVED***-***REMOVED***start***REMOVED***>=***REMOVED***2***REMOVED***&&***REMOVED***this.input.charCodeAt(start)***REMOVED***===***REMOVED***48;
***REMOVED******REMOVED***if***REMOVED***(octal***REMOVED***&&***REMOVED***this.strict)***REMOVED***{***REMOVED***this.raise(start,***REMOVED***"Invalid***REMOVED***number");***REMOVED***}
***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED***if***REMOVED***(!octal***REMOVED***&&***REMOVED***!startsWithDot***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***11***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***110)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***val$1***REMOVED***=***REMOVED***stringToBigInt(this.input.slice(start,***REMOVED***this.pos));
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(this.fullCharCodeAtPos()))***REMOVED***{***REMOVED***this.raise(this.pos,***REMOVED***"Identifier***REMOVED***directly***REMOVED***after***REMOVED***number");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.num,***REMOVED***val$1)
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(octal***REMOVED***&&***REMOVED***/[89]/.test(this.input.slice(start,***REMOVED***this.pos)))***REMOVED***{***REMOVED***octal***REMOVED***=***REMOVED***false;***REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***46***REMOVED***&&***REMOVED***!octal)***REMOVED***{***REMOVED***//***REMOVED***'.'
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.readInt(10);
***REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***((next***REMOVED***===***REMOVED***69***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***101)***REMOVED***&&***REMOVED***!octal)***REMOVED***{***REMOVED***//***REMOVED***'eE'
***REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(++this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***43***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***45)***REMOVED***{***REMOVED***++this.pos;***REMOVED***}***REMOVED***//***REMOVED***'+-'
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.readInt(10)***REMOVED***===***REMOVED***null)***REMOVED***{***REMOVED***this.raise(start,***REMOVED***"Invalid***REMOVED***number");***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(this.fullCharCodeAtPos()))***REMOVED***{***REMOVED***this.raise(this.pos,***REMOVED***"Identifier***REMOVED***directly***REMOVED***after***REMOVED***number");***REMOVED***}

***REMOVED******REMOVED***var***REMOVED***val***REMOVED***=***REMOVED***stringToNumber(this.input.slice(start,***REMOVED***this.pos),***REMOVED***octal);
***REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.num,***REMOVED***val)
};

//***REMOVED***Read***REMOVED***a***REMOVED***string***REMOVED***value,***REMOVED***interpreting***REMOVED***backslash-escapes.

pp.readCodePoint***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos),***REMOVED***code;

***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***123)***REMOVED***{***REMOVED***//***REMOVED***'{'
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***6)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***codePos***REMOVED***=***REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***this.readHexChar(this.input.indexOf("}",***REMOVED***this.pos)***REMOVED***-***REMOVED***this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***>***REMOVED***0x10FFFF)***REMOVED***{***REMOVED***this.invalidStringToken(codePos,***REMOVED***"Code***REMOVED***point***REMOVED***out***REMOVED***of***REMOVED***bounds");***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***this.readHexChar(4);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***code
};

pp.readString***REMOVED***=***REMOVED***function(quote)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***out***REMOVED***=***REMOVED***"",***REMOVED***chunkStart***REMOVED***=***REMOVED***++this.pos;
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***>=***REMOVED***this.input.length)***REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"Unterminated***REMOVED***string***REMOVED***constant");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***quote)***REMOVED***{***REMOVED***break***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***92)***REMOVED***{***REMOVED***//***REMOVED***'\'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.readEscapedChar(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***0x2028***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***0x2029)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***<***REMOVED***10)***REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"Unterminated***REMOVED***string***REMOVED***constant");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.curLine++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lineStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNewLine(ch))***REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"Unterminated***REMOVED***string***REMOVED***constant");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos++);
***REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.string,***REMOVED***out)
};

//***REMOVED***Reads***REMOVED***template***REMOVED***string***REMOVED***tokens.

var***REMOVED***INVALID_TEMPLATE_ESCAPE_ERROR***REMOVED***=***REMOVED***{};

pp.tryReadTemplateToken***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.inTemplateElement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.readTmplToken();
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err***REMOVED***===***REMOVED***INVALID_TEMPLATE_ESCAPE_ERROR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readInvalidTemplateToken();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this.inTemplateElement***REMOVED***=***REMOVED***false;
};

pp.invalidStringToken***REMOVED***=***REMOVED***function(position,***REMOVED***message)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(this.inTemplateElement***REMOVED***&&***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***9)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***INVALID_TEMPLATE_ESCAPE_ERROR
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(position,***REMOVED***message);
***REMOVED******REMOVED***}
};

pp.readTmplToken***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***out***REMOVED***=***REMOVED***"",***REMOVED***chunkStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***>=***REMOVED***this.input.length)***REMOVED***{***REMOVED***this.raise(this.start,***REMOVED***"Unterminated***REMOVED***template");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***96***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***36***REMOVED***&&***REMOVED***this.input.charCodeAt(this.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***123)***REMOVED***{***REMOVED***//***REMOVED***'`',***REMOVED***'${'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***===***REMOVED***this.start***REMOVED***&&***REMOVED***(this.type***REMOVED***===***REMOVED***types$1.template***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***types$1.invalidTemplate))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***36)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.dollarBraceL)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.backQuote)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.template,***REMOVED***out)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***92)***REMOVED***{***REMOVED***//***REMOVED***'\'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.readEscapedChar(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isNewLine(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(this.pos)***REMOVED***===***REMOVED***10)***REMOVED***{***REMOVED***++this.pos;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***"\n";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***String.fromCharCode(ch);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lineStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

//***REMOVED***Reads***REMOVED***a***REMOVED***template***REMOVED***token***REMOVED***to***REMOVED***search***REMOVED***for***REMOVED***the***REMOVED***end,***REMOVED***without***REMOVED***validating***REMOVED***any***REMOVED***escape***REMOVED***sequences
pp.readInvalidTemplateToken***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(;***REMOVED***this.pos***REMOVED***<***REMOVED***this.input.length;***REMOVED***this.pos++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.input[this.pos])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"\\":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"$":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input[this.pos***REMOVED***+***REMOVED***1]***REMOVED***!==***REMOVED***"{")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***falls***REMOVED***through
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"`":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(types$1.invalidTemplate,***REMOVED***this.input.slice(this.start,***REMOVED***this.pos))

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***no***REMOVED***default
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***this.raise(this.start,***REMOVED***"Unterminated***REMOVED***template");
};

//***REMOVED***Used***REMOVED***to***REMOVED***read***REMOVED***escaped***REMOVED***characters

pp.readEscapedChar***REMOVED***=***REMOVED***function(inTemplate)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(++this.pos);
***REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED***switch***REMOVED***(ch)***REMOVED***{
***REMOVED******REMOVED***case***REMOVED***110:***REMOVED***return***REMOVED***"\n"***REMOVED***//***REMOVED***'n'***REMOVED***->***REMOVED***'\n'
***REMOVED******REMOVED***case***REMOVED***114:***REMOVED***return***REMOVED***"\r"***REMOVED***//***REMOVED***'r'***REMOVED***->***REMOVED***'\r'
***REMOVED******REMOVED***case***REMOVED***120:***REMOVED***return***REMOVED***String.fromCharCode(this.readHexChar(2))***REMOVED***//***REMOVED***'x'
***REMOVED******REMOVED***case***REMOVED***117:***REMOVED***return***REMOVED***codePointToString(this.readCodePoint())***REMOVED***//***REMOVED***'u'
***REMOVED******REMOVED***case***REMOVED***116:***REMOVED***return***REMOVED***"\t"***REMOVED***//***REMOVED***'t'***REMOVED***->***REMOVED***'\t'
***REMOVED******REMOVED***case***REMOVED***98:***REMOVED***return***REMOVED***"\b"***REMOVED***//***REMOVED***'b'***REMOVED***->***REMOVED***'\b'
***REMOVED******REMOVED***case***REMOVED***118:***REMOVED***return***REMOVED***"\u000b"***REMOVED***//***REMOVED***'v'***REMOVED***->***REMOVED***'\u000b'
***REMOVED******REMOVED***case***REMOVED***102:***REMOVED***return***REMOVED***"\f"***REMOVED***//***REMOVED***'f'***REMOVED***->***REMOVED***'\f'
***REMOVED******REMOVED***case***REMOVED***13:***REMOVED***if***REMOVED***(this.input.charCodeAt(this.pos)***REMOVED***===***REMOVED***10)***REMOVED***{***REMOVED***++this.pos;***REMOVED***}***REMOVED***//***REMOVED***'\r\n'
***REMOVED******REMOVED***case***REMOVED***10:***REMOVED***//***REMOVED***'***REMOVED***\n'
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.locations)***REMOVED***{***REMOVED***this.lineStart***REMOVED***=***REMOVED***this.pos;***REMOVED***++this.curLine;***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***""
***REMOVED******REMOVED***case***REMOVED***56:
***REMOVED******REMOVED***case***REMOVED***57:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.invalidStringToken(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***-***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Invalid***REMOVED***escape***REMOVED***sequence"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inTemplate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***codePos***REMOVED***=***REMOVED***this.pos***REMOVED***-***REMOVED***1;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.invalidStringToken(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***codePos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Invalid***REMOVED***escape***REMOVED***sequence***REMOVED***in***REMOVED***template***REMOVED***string"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***55)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***octalStr***REMOVED***=***REMOVED***this.input.substr(this.pos***REMOVED***-***REMOVED***1,***REMOVED***3).match(/^[0-7]+/)[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***octal***REMOVED***=***REMOVED***parseInt(octalStr,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(octal***REMOVED***>***REMOVED***255)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***octalStr***REMOVED***=***REMOVED***octalStr.slice(0,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***octal***REMOVED***=***REMOVED***parseInt(octalStr,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***octalStr.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((octalStr***REMOVED***!==***REMOVED***"0"***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***56***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***57)***REMOVED***&&***REMOVED***(this.strict***REMOVED***||***REMOVED***inTemplate))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.invalidStringToken(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***-***REMOVED***1***REMOVED***-***REMOVED***octalStr.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inTemplate
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***"Octal***REMOVED***literal***REMOVED***in***REMOVED***template***REMOVED***string"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***"Octal***REMOVED***literal***REMOVED***in***REMOVED***strict***REMOVED***mode"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String.fromCharCode(octal)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNewLine(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Unicode***REMOVED***new***REMOVED***line***REMOVED***characters***REMOVED***after***REMOVED***\***REMOVED***get***REMOVED***removed***REMOVED***from***REMOVED***output***REMOVED***in***REMOVED***both
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***template***REMOVED***literals***REMOVED***and***REMOVED***strings
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***""
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String.fromCharCode(ch)
***REMOVED******REMOVED***}
};

//***REMOVED***Used***REMOVED***to***REMOVED***read***REMOVED***character***REMOVED***escape***REMOVED***sequences***REMOVED***('\x',***REMOVED***'\u',***REMOVED***'\U').

pp.readHexChar***REMOVED***=***REMOVED***function(len)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***codePos***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***this.readInt(16,***REMOVED***len);
***REMOVED******REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***null)***REMOVED***{***REMOVED***this.invalidStringToken(codePos,***REMOVED***"Bad***REMOVED***character***REMOVED***escape***REMOVED***sequence");***REMOVED***}
***REMOVED******REMOVED***return***REMOVED***n
};

//***REMOVED***Read***REMOVED***an***REMOVED***identifier,***REMOVED***and***REMOVED***return***REMOVED***it***REMOVED***as***REMOVED***a***REMOVED***string.***REMOVED***Sets***REMOVED***`this.containsEsc`
//***REMOVED***to***REMOVED***whether***REMOVED***the***REMOVED***word***REMOVED***contained***REMOVED***a***REMOVED***'\u'***REMOVED***escape.
//
//***REMOVED***Incrementally***REMOVED***adds***REMOVED***only***REMOVED***escaped***REMOVED***chars,***REMOVED***adding***REMOVED***other***REMOVED***chunks***REMOVED***as-is
//***REMOVED***as***REMOVED***a***REMOVED***micro-optimization.

pp.readWord1***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.containsEsc***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***var***REMOVED***word***REMOVED***=***REMOVED***"",***REMOVED***first***REMOVED***=***REMOVED***true,***REMOVED***chunkStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED***var***REMOVED***astral***REMOVED***=***REMOVED***this.options.ecmaVersion***REMOVED***>=***REMOVED***6;
***REMOVED******REMOVED***while***REMOVED***(this.pos***REMOVED***<***REMOVED***this.input.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ch***REMOVED***=***REMOVED***this.fullCharCodeAtPos();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierChar(ch,***REMOVED***astral))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***ch***REMOVED***<=***REMOVED***0xffff***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***92)***REMOVED***{***REMOVED***//***REMOVED***"\"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.containsEsc***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(++this.pos)***REMOVED***!==***REMOVED***117)***REMOVED***//***REMOVED***"u"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.invalidStringToken(this.pos,***REMOVED***"Expecting***REMOVED***Unicode***REMOVED***escape***REMOVED***sequence***REMOVED***\\uXXXX");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***esc***REMOVED***=***REMOVED***this.readCodePoint();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(first***REMOVED***?***REMOVED***isIdentifierStart***REMOVED***:***REMOVED***isIdentifierChar)(esc,***REMOVED***astral))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.invalidStringToken(escStart,***REMOVED***"Invalid***REMOVED***Unicode***REMOVED***escape");***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***codePointToString(esc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***word***REMOVED***+***REMOVED***this.input.slice(chunkStart,***REMOVED***this.pos)
};

//***REMOVED***Read***REMOVED***an***REMOVED***identifier***REMOVED***or***REMOVED***keyword***REMOVED***token.***REMOVED***Will***REMOVED***check***REMOVED***for***REMOVED***reserved
//***REMOVED***words***REMOVED***when***REMOVED***necessary.

pp.readWord***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***word***REMOVED***=***REMOVED***this.readWord1();
***REMOVED******REMOVED***var***REMOVED***type***REMOVED***=***REMOVED***types$1.name;
***REMOVED******REMOVED***if***REMOVED***(this.keywords.test(word))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***keywords[word];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this.finishToken(type,***REMOVED***word)
};

//***REMOVED***Acorn***REMOVED***is***REMOVED***a***REMOVED***tiny,***REMOVED***fast***REMOVED***JavaScript***REMOVED***parser***REMOVED***written***REMOVED***in***REMOVED***JavaScript.
//
//***REMOVED***Acorn***REMOVED***was***REMOVED***written***REMOVED***by***REMOVED***Marijn***REMOVED***Haverbeke,***REMOVED***Ingvar***REMOVED***Stepanyan,***REMOVED***and
//***REMOVED***various***REMOVED***contributors***REMOVED***and***REMOVED***released***REMOVED***under***REMOVED***an***REMOVED***MIT***REMOVED***license.
//
//***REMOVED***Git***REMOVED***repositories***REMOVED***for***REMOVED***Acorn***REMOVED***are***REMOVED***available***REMOVED***at
//
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***http://marijnhaverbeke.nl/git/acorn
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***https://github.com/acornjs/acorn.git
//
//***REMOVED***Please***REMOVED***use***REMOVED***the***REMOVED***[github***REMOVED***bug***REMOVED***tracker][ghbt]***REMOVED***to***REMOVED***report***REMOVED***issues.
//
//***REMOVED***[ghbt]:***REMOVED***https://github.com/acornjs/acorn/issues
//
//***REMOVED***[walk]:***REMOVED***util/walk.js


var***REMOVED***version***REMOVED***=***REMOVED***"8.10.0";

Parser.acorn***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***Parser:***REMOVED***Parser,
***REMOVED******REMOVED***version:***REMOVED***version,
***REMOVED******REMOVED***defaultOptions:***REMOVED***defaultOptions,
***REMOVED******REMOVED***Position:***REMOVED***Position,
***REMOVED******REMOVED***SourceLocation:***REMOVED***SourceLocation,
***REMOVED******REMOVED***getLineInfo:***REMOVED***getLineInfo,
***REMOVED******REMOVED***Node:***REMOVED***Node,
***REMOVED******REMOVED***TokenType:***REMOVED***TokenType,
***REMOVED******REMOVED***tokTypes:***REMOVED***types$1,
***REMOVED******REMOVED***keywordTypes:***REMOVED***keywords,
***REMOVED******REMOVED***TokContext:***REMOVED***TokContext,
***REMOVED******REMOVED***tokContexts:***REMOVED***types,
***REMOVED******REMOVED***isIdentifierChar:***REMOVED***isIdentifierChar,
***REMOVED******REMOVED***isIdentifierStart:***REMOVED***isIdentifierStart,
***REMOVED******REMOVED***Token:***REMOVED***Token,
***REMOVED******REMOVED***isNewLine:***REMOVED***isNewLine,
***REMOVED******REMOVED***lineBreak:***REMOVED***lineBreak,
***REMOVED******REMOVED***lineBreakG:***REMOVED***lineBreakG,
***REMOVED******REMOVED***nonASCIIwhitespace:***REMOVED***nonASCIIwhitespace
};

//***REMOVED***The***REMOVED***main***REMOVED***exported***REMOVED***interface***REMOVED***(under***REMOVED***`self.acorn`***REMOVED***when***REMOVED***in***REMOVED***the
//***REMOVED***browser)***REMOVED***is***REMOVED***a***REMOVED***`parse`***REMOVED***function***REMOVED***that***REMOVED***takes***REMOVED***a***REMOVED***code***REMOVED***string***REMOVED***and
//***REMOVED***returns***REMOVED***an***REMOVED***abstract***REMOVED***syntax***REMOVED***tree***REMOVED***as***REMOVED***specified***REMOVED***by***REMOVED***[Mozilla***REMOVED***parser
//***REMOVED***API][api].
//
//***REMOVED***[api]:***REMOVED***https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API

function***REMOVED***parse(input,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***Parser.parse(input,***REMOVED***options)
}

//***REMOVED***This***REMOVED***function***REMOVED***tries***REMOVED***to***REMOVED***parse***REMOVED***a***REMOVED***single***REMOVED***expression***REMOVED***at***REMOVED***a***REMOVED***given
//***REMOVED***offset***REMOVED***in***REMOVED***a***REMOVED***string.***REMOVED***Useful***REMOVED***for***REMOVED***parsing***REMOVED***mixed-language***REMOVED***formats
//***REMOVED***that***REMOVED***embed***REMOVED***JavaScript***REMOVED***expressions.

function***REMOVED***parseExpressionAt(input,***REMOVED***pos,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***Parser.parseExpressionAt(input,***REMOVED***pos,***REMOVED***options)
}

//***REMOVED***Acorn***REMOVED***is***REMOVED***organized***REMOVED***as***REMOVED***a***REMOVED***tokenizer***REMOVED***and***REMOVED***a***REMOVED***recursive-descent***REMOVED***parser.
//***REMOVED***The***REMOVED***`tokenizer`***REMOVED***export***REMOVED***provides***REMOVED***an***REMOVED***interface***REMOVED***to***REMOVED***the***REMOVED***tokenizer.

function***REMOVED***tokenizer(input,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***Parser.tokenizer(input,***REMOVED***options)
}

const***REMOVED***_acorn***REMOVED***=***REMOVED***/*#__PURE__*/Object.defineProperty({
***REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED***Node,
***REMOVED******REMOVED***Parser,
***REMOVED******REMOVED***Position,
***REMOVED******REMOVED***SourceLocation,
***REMOVED******REMOVED***TokContext,
***REMOVED******REMOVED***Token,
***REMOVED******REMOVED***TokenType,
***REMOVED******REMOVED***defaultOptions,
***REMOVED******REMOVED***getLineInfo,
***REMOVED******REMOVED***isIdentifierChar,
***REMOVED******REMOVED***isIdentifierStart,
***REMOVED******REMOVED***isNewLine,
***REMOVED******REMOVED***keywordTypes:***REMOVED***keywords,
***REMOVED******REMOVED***lineBreak,
***REMOVED******REMOVED***lineBreakG,
***REMOVED******REMOVED***nonASCIIwhitespace,
***REMOVED******REMOVED***parse,
***REMOVED******REMOVED***parseExpressionAt,
***REMOVED******REMOVED***tokContexts:***REMOVED***types,
***REMOVED******REMOVED***tokTypes:***REMOVED***types$1,
***REMOVED******REMOVED***tokenizer,
***REMOVED******REMOVED***version
},***REMOVED***Symbol.toStringTag,***REMOVED***{***REMOVED***value:***REMOVED***'Module'***REMOVED***});

function***REMOVED***flru***REMOVED***(max)***REMOVED***{
	var***REMOVED***num,***REMOVED***curr,***REMOVED***prev;
	var***REMOVED***limit***REMOVED***=***REMOVED***max***REMOVED***||***REMOVED***1;

	function***REMOVED***keep(key,***REMOVED***value)***REMOVED***{
		if***REMOVED***(++num***REMOVED***>***REMOVED***limit)***REMOVED***{
			prev***REMOVED***=***REMOVED***curr;
			reset(1);
			++num;
		}
		curr[key]***REMOVED***=***REMOVED***value;
	}

	function***REMOVED***reset(isPartial)***REMOVED***{
		num***REMOVED***=***REMOVED***0;
		curr***REMOVED***=***REMOVED***Object.create(null);
		isPartial***REMOVED***||***REMOVED***(prev=Object.create(null));
	}

	reset();

	return***REMOVED***{
		clear:***REMOVED***reset,
		has:***REMOVED***function***REMOVED***(key)***REMOVED***{
			return***REMOVED***curr[key]***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***||***REMOVED***prev[key]***REMOVED***!==***REMOVED***void***REMOVED***0;
		},
		get:***REMOVED***function***REMOVED***(key)***REMOVED***{
			var***REMOVED***val***REMOVED***=***REMOVED***curr[key];
			if***REMOVED***(val***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***return***REMOVED***val;
			if***REMOVED***((val=prev[key])***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
				keep(key,***REMOVED***val);
				return***REMOVED***val;
			}
		},
		set:***REMOVED***function***REMOVED***(key,***REMOVED***value)***REMOVED***{
			if***REMOVED***(curr[key]***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
				curr[key]***REMOVED***=***REMOVED***value;
			}***REMOVED***else***REMOVED***{
				keep(key,***REMOVED***value);
			}
		}
	};
}

function***REMOVED***resolveIdViaPlugins(source,***REMOVED***importer,***REMOVED***pluginDriver,***REMOVED***moduleLoaderResolveId,***REMOVED***skip,***REMOVED***customOptions,***REMOVED***isEntry,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***skipped***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***replaceContext***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(skip)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipped***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***skippedCall***REMOVED***of***REMOVED***skip)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***===***REMOVED***skippedCall.source***REMOVED***&&***REMOVED***importer***REMOVED***===***REMOVED***skippedCall.importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipped.add(skippedCall.plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replaceContext***REMOVED***=***REMOVED***(pluginContext,***REMOVED***plugin)***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...pluginContext,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve:***REMOVED***(source,***REMOVED***importer,***REMOVED***{***REMOVED***assertions,***REMOVED***custom,***REMOVED***isEntry,***REMOVED***skipSelf***REMOVED***}***REMOVED***=***REMOVED***BLANK)***REMOVED***=>***REMOVED***moduleLoaderResolveId(source,***REMOVED***importer,***REMOVED***custom,***REMOVED***isEntry,***REMOVED***assertions***REMOVED***||***REMOVED***EMPTY_OBJECT,***REMOVED***skipSelf***REMOVED***?***REMOVED***[...skip,***REMOVED***{***REMOVED***importer,***REMOVED***plugin,***REMOVED***source***REMOVED***}]***REMOVED***:***REMOVED***skip)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginDriver.hookFirstAndGetPlugin('resolveId',***REMOVED***[source,***REMOVED***importer,***REMOVED***{***REMOVED***assertions,***REMOVED***custom:***REMOVED***customOptions,***REMOVED***isEntry***REMOVED***}],***REMOVED***replaceContext,***REMOVED***skipped);
}

async***REMOVED***function***REMOVED***resolveId(source,***REMOVED***importer,***REMOVED***preserveSymlinks,***REMOVED***pluginDriver,***REMOVED***moduleLoaderResolveId,***REMOVED***skip,***REMOVED***customOptions,***REMOVED***isEntry,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pluginResult***REMOVED***=***REMOVED***await***REMOVED***resolveIdViaPlugins(source,***REMOVED***importer,***REMOVED***pluginDriver,***REMOVED***moduleLoaderResolveId,***REMOVED***skip,***REMOVED***customOptions,***REMOVED***isEntry,***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginResult***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[resolveIdResult,***REMOVED***plugin]***REMOVED***=***REMOVED***pluginResult;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resolveIdResult***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***!resolveIdResult.resolvedBy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...resolveIdResult,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedBy:***REMOVED***plugin.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resolveIdResult***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***resolveIdResult,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedBy:***REMOVED***plugin.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveIdResult;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***external***REMOVED***modules***REMOVED***(non-entry***REMOVED***modules***REMOVED***that***REMOVED***start***REMOVED***with***REMOVED***neither***REMOVED***'.'***REMOVED***or***REMOVED***'/')
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***are***REMOVED***skipped***REMOVED***at***REMOVED***this***REMOVED***stage.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importer***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***!isAbsolute(source)***REMOVED***&&***REMOVED***source[0]***REMOVED***!==***REMOVED***'.')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`resolve`***REMOVED***processes***REMOVED***paths***REMOVED***from***REMOVED***right***REMOVED***to***REMOVED***left,***REMOVED***prepending***REMOVED***them***REMOVED***until***REMOVED***an
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***absolute***REMOVED***path***REMOVED***is***REMOVED***created.***REMOVED***Absolute***REMOVED***importees***REMOVED***therefore***REMOVED***shortcircuit***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***resolve***REMOVED***call***REMOVED***and***REMOVED***require***REMOVED***no***REMOVED***special***REMOVED***handing***REMOVED***on***REMOVED***our***REMOVED***part.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***See***REMOVED***https://nodejs.org/api/path.html#path_path_resolve_paths
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***addJsExtensionIfNecessary(importer***REMOVED***?***REMOVED***node_path.resolve(node_path.dirname(importer),***REMOVED***source)***REMOVED***:***REMOVED***node_path.resolve(source),***REMOVED***preserveSymlinks);
}
async***REMOVED***function***REMOVED***addJsExtensionIfNecessary(file,***REMOVED***preserveSymlinks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***((await***REMOVED***findFile(file,***REMOVED***preserveSymlinks))***REMOVED***??
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(await***REMOVED***findFile(file***REMOVED***+***REMOVED***'.mjs',***REMOVED***preserveSymlinks))***REMOVED***??
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(await***REMOVED***findFile(file***REMOVED***+***REMOVED***'.js',***REMOVED***preserveSymlinks)));
}
async***REMOVED***function***REMOVED***findFile(file,***REMOVED***preserveSymlinks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stats***REMOVED***=***REMOVED***await***REMOVED***promises.lstat(file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!preserveSymlinks***REMOVED***&&***REMOVED***stats.isSymbolicLink())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***await***REMOVED***findFile(await***REMOVED***promises.realpath(file),***REMOVED***preserveSymlinks);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((preserveSymlinks***REMOVED***&&***REMOVED***stats.isSymbolicLink())***REMOVED***||***REMOVED***stats.isFile())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***case
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***node_path.basename(file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***files***REMOVED***=***REMOVED***await***REMOVED***promises.readdir(node_path.dirname(file));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(files.includes(name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***file;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***suppress
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

async***REMOVED***function***REMOVED***transform(source,***REMOVED***module,***REMOVED***pluginDriver,***REMOVED***log)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***module.id;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemapChain***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***originalSourcemap***REMOVED***=***REMOVED***source.map***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***decodedSourcemap(source.map);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalCode***REMOVED***=***REMOVED***source.code;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ast***REMOVED***=***REMOVED***source.ast;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***transformDependencies***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***emittedFiles***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***customTransformCache***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useCustomTransformCache***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***(customTransformCache***REMOVED***=***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***pluginName***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentSource***REMOVED***=***REMOVED***source.code;
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***transformReducer(previousCode,***REMOVED***result,***REMOVED***plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***map;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***result***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(result***REMOVED***&&***REMOVED***typeof***REMOVED***result***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.updateOptions(result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.code***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.map***REMOVED***||***REMOVED***result.ast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(LOGLEVEL_WARN,***REMOVED***logNoTransformMapOrAstWithoutCode(plugin.name));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***previousCode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***code,***REMOVED***map,***REMOVED***ast***REMOVED***}***REMOVED***=***REMOVED***result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***previousCode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***strict***REMOVED***null***REMOVED***check***REMOVED***allows***REMOVED***'null'***REMOVED***maps***REMOVED***to***REMOVED***not***REMOVED***be***REMOVED***pushed***REMOVED***to***REMOVED***the***REMOVED***chain,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***while***REMOVED***'undefined'***REMOVED***gets***REMOVED***the***REMOVED***missing***REMOVED***map***REMOVED***warning
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapChain.push(decodedSourcemap(typeof***REMOVED***map***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***JSON.parse(map)***REMOVED***:***REMOVED***map)***REMOVED***||***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***missing:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin:***REMOVED***plugin.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentSource***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getLogHandler***REMOVED***=***REMOVED***(handler)***REMOVED***=>***REMOVED***(log,***REMOVED***pos)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log***REMOVED***=***REMOVED***normalizeLog(log);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***augmentCodeLocation(log,***REMOVED***pos,***REMOVED***currentSource,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log.hook***REMOVED***=***REMOVED***'transform';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handler(log);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***await***REMOVED***pluginDriver.hookReduceArg0('transform',***REMOVED***[currentSource,***REMOVED***id],***REMOVED***transformReducer,***REMOVED***(pluginContext,***REMOVED***plugin)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginName***REMOVED***=***REMOVED***plugin.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...pluginContext,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addWatchFile(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transformDependencies.push(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginContext.addWatchFile(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache:***REMOVED***customTransformCache
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***pluginContext.cache
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***getTrackedPluginCache(pluginContext.cache,***REMOVED***useCustomTransformCache),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debug:***REMOVED***getLogHandler(pluginContext.debug),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitFile(emittedFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emittedFiles.push(emittedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginDriver.emitFile(emittedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(error_,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***error_***REMOVED***===***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error_***REMOVED***=***REMOVED***{***REMOVED***message:***REMOVED***error_***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***augmentCodeLocation(error_,***REMOVED***pos,***REMOVED***currentSource,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error_.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error_.hook***REMOVED***=***REMOVED***'transform';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pluginContext.error(error_);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getCombinedSourcemap()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***combinedMap***REMOVED***=***REMOVED***collapseSourcemap(id,***REMOVED***originalCode,***REMOVED***originalSourcemap,***REMOVED***sourcemapChain,***REMOVED***log);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!combinedMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***magicString***REMOVED***=***REMOVED***new***REMOVED***MagicString(originalCode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***magicString.generateMap({***REMOVED***hires:***REMOVED***true,***REMOVED***includeContent:***REMOVED***true,***REMOVED***source:***REMOVED***id***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalSourcemap***REMOVED***!==***REMOVED***combinedMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalSourcemap***REMOVED***=***REMOVED***combinedMap;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapChain.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***SourceMap({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...combinedMap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesContent:***REMOVED***combinedMap.sourcesContent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***info:***REMOVED***getLogHandler(pluginContext.info),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setAssetSource()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error(logInvalidSetAssetSourceCall());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn:***REMOVED***getLogHandler(pluginContext.warn)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logPluginError(error_,***REMOVED***pluginName,***REMOVED***{***REMOVED***hook:***REMOVED***'transform',***REMOVED***id***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!customTransformCache***REMOVED***&&***REMOVED***//***REMOVED***files***REMOVED***emitted***REMOVED***by***REMOVED***a***REMOVED***transform***REMOVED***hook***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***emitted***REMOVED***again***REMOVED***if***REMOVED***the***REMOVED***hook***REMOVED***is***REMOVED***skipped
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emittedFiles.length***REMOVED***>***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.transformFiles***REMOVED***=***REMOVED***emittedFiles;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customTransformCache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalCode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalSourcemap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapChain,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transformDependencies
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

const***REMOVED***RESOLVE_DEPENDENCIES***REMOVED***=***REMOVED***'resolveDependencies';
class***REMOVED***ModuleLoader***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(graph,***REMOVED***modulesById,***REMOVED***options,***REMOVED***pluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph***REMOVED***=***REMOVED***graph;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesById***REMOVED***=***REMOVED***modulesById;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver***REMOVED***=***REMOVED***pluginDriver;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexedEntryModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.latestLoadModulesPromise***REMOVED***=***REMOVED***Promise.resolve();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.moduleLoadPromises***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesWithLoadedDependencies***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nextChunkNamePriority***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nextEntryModuleIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resolveId***REMOVED***=***REMOVED***async***REMOVED***(source,***REMOVED***importer,***REMOVED***customOptions,***REMOVED***isEntry,***REMOVED***assertions,***REMOVED***skip***REMOVED***=***REMOVED***null)***REMOVED***=>***REMOVED***this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(this.options.external(source,***REMOVED***importer,***REMOVED***false)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***await***REMOVED***resolveId(source,***REMOVED***importer,***REMOVED***this.options.preserveSymlinks,***REMOVED***this.pluginDriver,***REMOVED***this.resolveId,***REMOVED***skip,***REMOVED***customOptions,***REMOVED***typeof***REMOVED***isEntry***REMOVED***===***REMOVED***'boolean'***REMOVED***?***REMOVED***isEntry***REMOVED***:***REMOVED***!importer,***REMOVED***assertions),***REMOVED***importer,***REMOVED***source),***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasModuleSideEffects***REMOVED***=***REMOVED***options.treeshake
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***options.treeshake.moduleSideEffects
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***addAdditionalModules(unresolvedModules,***REMOVED***isAddForManualChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.extendLoadModulesPromise(Promise.all(unresolvedModules.map(id***REMOVED***=>***REMOVED***this.loadEntryModule(id,***REMOVED***false,***REMOVED***undefined,***REMOVED***null,***REMOVED***isAddForManualChunks))));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.awaitLoadModulesPromise();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***addEntryModules(unresolvedEntryModules,***REMOVED***isUserDefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstEntryModuleIndex***REMOVED***=***REMOVED***this.nextEntryModuleIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nextEntryModuleIndex***REMOVED***+=***REMOVED***unresolvedEntryModules.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstChunkNamePriority***REMOVED***=***REMOVED***this.nextChunkNamePriority;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nextChunkNamePriority***REMOVED***+=***REMOVED***unresolvedEntryModules.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newEntryModules***REMOVED***=***REMOVED***await***REMOVED***this.extendLoadModulesPromise(Promise.all(unresolvedEntryModules.map(({***REMOVED***id,***REMOVED***importer***REMOVED***})***REMOVED***=>***REMOVED***this.loadEntryModule(id,***REMOVED***true,***REMOVED***importer,***REMOVED***null))).then(entryModules***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[index,***REMOVED***entryModule]***REMOVED***of***REMOVED***entryModules.entries())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryModule.isUserDefinedEntryPoint***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryModule.isUserDefinedEntryPoint***REMOVED***||***REMOVED***isUserDefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addChunkNamesToModule(entryModule,***REMOVED***unresolvedEntryModules[index],***REMOVED***isUserDefined,***REMOVED***firstChunkNamePriority***REMOVED***+***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingIndexedModule***REMOVED***=***REMOVED***this.indexedEntryModules.find(indexedModule***REMOVED***=>***REMOVED***indexedModule.module***REMOVED***===***REMOVED***entryModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingIndexedModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingIndexedModule.index***REMOVED***=***REMOVED***Math.min(existingIndexedModule.index,***REMOVED***firstEntryModuleIndex***REMOVED***+***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexedEntryModules.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***firstEntryModuleIndex***REMOVED***+***REMOVED***index,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***entryModule
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexedEntryModules.sort(({***REMOVED***index:***REMOVED***indexA***REMOVED***},***REMOVED***{***REMOVED***index:***REMOVED***indexB***REMOVED***})***REMOVED***=>***REMOVED***indexA***REMOVED***>***REMOVED***indexB***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entryModules;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.awaitLoadModulesPromise();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryModules:***REMOVED***this.indexedEntryModules.map(({***REMOVED***module***REMOVED***})***REMOVED***=>***REMOVED***module),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitEntryModules:***REMOVED***[...this.implicitEntryModules],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newEntryModules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***emitChunk({***REMOVED***fileName,***REMOVED***id,***REMOVED***importer,***REMOVED***name,***REMOVED***implicitlyLoadedAfterOneOf,***REMOVED***preserveSignature***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unresolvedModule***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***fileName***REMOVED***||***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importer,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***name***REMOVED***||***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***implicitlyLoadedAfterOneOf
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***await***REMOVED***this.addEntryWithImplicitDependants(unresolvedModule,***REMOVED***implicitlyLoadedAfterOneOf)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(await***REMOVED***this.addEntryModules([unresolvedModule],***REMOVED***false)).newEntryModules[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveSignature***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.preserveSignature***REMOVED***=***REMOVED***preserveSignature;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***preloadModule(resolvedId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***await***REMOVED***this.fetchModule(this.getResolvedIdWithDefaults(resolvedId,***REMOVED***EMPTY_OBJECT),***REMOVED***undefined,***REMOVED***false,***REMOVED***resolvedId.resolveDependencies***REMOVED***?***REMOVED***RESOLVE_DEPENDENCIES***REMOVED***:***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module.info;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***addEntryWithImplicitDependants(unresolvedModule,***REMOVED***implicitlyLoadedAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chunkNamePriority***REMOVED***=***REMOVED***this.nextChunkNamePriority++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.extendLoadModulesPromise(this.loadEntryModule(unresolvedModule.id,***REMOVED***false,***REMOVED***unresolvedModule.importer,***REMOVED***null).then(async***REMOVED***(entryModule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addChunkNamesToModule(entryModule,***REMOVED***unresolvedModule,***REMOVED***false,***REMOVED***chunkNamePriority);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!entryModule.info.isEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules.add(entryModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***implicitlyLoadedAfterModules***REMOVED***=***REMOVED***await***REMOVED***Promise.all(implicitlyLoadedAfter.map(id***REMOVED***=>***REMOVED***this.loadEntryModule(id,***REMOVED***false,***REMOVED***unresolvedModule.importer,***REMOVED***entryModule.id)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***implicitlyLoadedAfterModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryModule.implicitlyLoadedAfter.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependant***REMOVED***of***REMOVED***entryModule.implicitlyLoadedAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependant.implicitlyLoadedBefore.add(entryModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entryModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***addModuleSource(id,***REMOVED***importer,***REMOVED***module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***await***REMOVED***this.graph.fileOperationQueue.run(async***REMOVED***()***REMOVED***=>***REMOVED***(await***REMOVED***this.pluginDriver.hookFirst('load',***REMOVED***[id]))***REMOVED***??***REMOVED***(await***REMOVED***promises.readFile(id,***REMOVED***'utf8')));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***message***REMOVED***=***REMOVED***`Could***REMOVED***not***REMOVED***load***REMOVED***${id}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message***REMOVED***+=***REMOVED***`***REMOVED***(imported***REMOVED***by***REMOVED***${relativeId(importer)})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message***REMOVED***+=***REMOVED***`:***REMOVED***${error_.message}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error_.message***REMOVED***=***REMOVED***message;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error_;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceDescription***REMOVED***=***REMOVED***typeof***REMOVED***source***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{***REMOVED***code:***REMOVED***source***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***source***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***source***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***typeof***REMOVED***source.code***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***source
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***error(logBadLoader(id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cachedModule***REMOVED***=***REMOVED***this.graph.cachedModules.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cachedModule***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!cachedModule.customTransformCache***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cachedModule.originalCode***REMOVED***===***REMOVED***sourceDescription.code***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(await***REMOVED***this.pluginDriver.hookFirst('shouldTransformCachedModule',***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***cachedModule.ast,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***cachedModule.code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***cachedModule.id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***cachedModule.meta,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***cachedModule.moduleSideEffects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedSources:***REMOVED***cachedModule.resolvedIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamedExports:***REMOVED***cachedModule.syntheticNamedExports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***])))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cachedModule.transformFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***emittedFile***REMOVED***of***REMOVED***cachedModule.transformFiles)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver.emitFile(emittedFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.setSource(cachedModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.updateOptions(sourceDescription);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.setSource(await***REMOVED***transform(sourceDescription,***REMOVED***module,***REMOVED***this.pluginDriver,***REMOVED***this.options.onLog));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***awaitLoadModulesPromise()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***startingPromise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startingPromise***REMOVED***=***REMOVED***this.latestLoadModulesPromise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***startingPromise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(startingPromise***REMOVED***!==***REMOVED***this.latestLoadModulesPromise);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***extendLoadModulesPromise(loadNewModulesPromise)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.latestLoadModulesPromise***REMOVED***=***REMOVED***Promise.all([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loadNewModulesPromise,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.latestLoadModulesPromise
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.latestLoadModulesPromise.catch(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Avoid***REMOVED***unhandled***REMOVED***Promise***REMOVED***rejections***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***loadNewModulesPromise;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fetchDynamicDependencies(module,***REMOVED***resolveDynamicImportPromises)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***await***REMOVED***Promise.all(resolveDynamicImportPromises.map(resolveDynamicImportPromise***REMOVED***=>***REMOVED***resolveDynamicImportPromise.then(async***REMOVED***([dynamicImport,***REMOVED***resolvedId])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolvedId***REMOVED***===***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resolvedId***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImport.resolution***REMOVED***=***REMOVED***resolvedId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(dynamicImport.resolution***REMOVED***=***REMOVED***await***REMOVED***this.fetchResolvedDependency(relativeId(resolvedId.id),***REMOVED***module.id,***REMOVED***resolvedId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.dynamicDependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.dynamicImporters.push(module.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***preload,***REMOVED***then***REMOVED***this***REMOVED***method***REMOVED***always***REMOVED***waits***REMOVED***for***REMOVED***the***REMOVED***dependencies***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***module***REMOVED***to***REMOVED***be***REMOVED***resolved.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Otherwise,***REMOVED***if***REMOVED***the***REMOVED***module***REMOVED***does***REMOVED***not***REMOVED***exist,***REMOVED***it***REMOVED***waits***REMOVED***for***REMOVED***the***REMOVED***module***REMOVED***and***REMOVED***all
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***its***REMOVED***dependencies***REMOVED***to***REMOVED***be***REMOVED***loaded.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Otherwise,***REMOVED***it***REMOVED***returns***REMOVED***immediately.
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fetchModule({***REMOVED***assertions,***REMOVED***id,***REMOVED***meta,***REMOVED***moduleSideEffects,***REMOVED***syntheticNamedExports***REMOVED***},***REMOVED***importer,***REMOVED***isEntry,***REMOVED***isPreload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingModule***REMOVED***=***REMOVED***this.modulesById.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingModule***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importer***REMOVED***&&***REMOVED***doAssertionsDiffer(assertions,***REMOVED***existingModule.info.assertions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logInconsistentImportAssertions(existingModule.info.assertions,***REMOVED***assertions,***REMOVED***id,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.handleExistingModule(existingModule,***REMOVED***isEntry,***REMOVED***isPreload);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***existingModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingModule***REMOVED***instanceof***REMOVED***ExternalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logExternalModulesCannotBeTransformedToModules(existingModule.id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***module***REMOVED***=***REMOVED***new***REMOVED***Module(this.graph,***REMOVED***id,***REMOVED***this.options,***REMOVED***isEntry,***REMOVED***moduleSideEffects,***REMOVED***syntheticNamedExports,***REMOVED***meta,***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesById.set(id,***REMOVED***module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.graph.watchFiles[id]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loadPromise***REMOVED***=***REMOVED***this.addModuleSource(id,***REMOVED***importer,***REMOVED***module).then(()***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getResolveStaticDependencyPromises(module),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getResolveDynamicImportPromises(module),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loadAndResolveDependenciesPromise
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loadAndResolveDependenciesPromise***REMOVED***=***REMOVED***waitForDependencyResolution(loadPromise).then(()***REMOVED***=>***REMOVED***this.pluginDriver.hookParallel('moduleParsed',***REMOVED***[module.info]));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loadAndResolveDependenciesPromise.catch(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***avoid***REMOVED***unhandled***REMOVED***promise***REMOVED***rejections***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.moduleLoadPromises.set(module,***REMOVED***loadPromise);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolveDependencyPromises***REMOVED***=***REMOVED***await***REMOVED***loadPromise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPreload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.fetchModuleDependencies(module,***REMOVED***...resolveDependencyPromises);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(isPreload***REMOVED***===***REMOVED***RESOLVE_DEPENDENCIES)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***loadAndResolveDependenciesPromise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fetchModuleDependencies(module,***REMOVED***resolveStaticDependencyPromises,***REMOVED***resolveDynamicDependencyPromises,***REMOVED***loadAndResolveDependenciesPromise)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.modulesWithLoadedDependencies.has(module))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesWithLoadedDependencies.add(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fetchStaticDependencies(module,***REMOVED***resolveStaticDependencyPromises),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fetchDynamicDependencies(module,***REMOVED***resolveDynamicDependencyPromises)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.linkImports();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***handle***REMOVED***errors***REMOVED***when***REMOVED***resolving***REMOVED***dependencies***REMOVED***or***REMOVED***in***REMOVED***moduleParsed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***loadAndResolveDependenciesPromise;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***fetchResolvedDependency(source,***REMOVED***importer,***REMOVED***resolvedId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolvedId.external)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***assertions,***REMOVED***external,***REMOVED***id,***REMOVED***moduleSideEffects,***REMOVED***meta***REMOVED***}***REMOVED***=***REMOVED***resolvedId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***externalModule***REMOVED***=***REMOVED***this.modulesById.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!externalModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalModule***REMOVED***=***REMOVED***new***REMOVED***ExternalModule(this.options,***REMOVED***id,***REMOVED***moduleSideEffects,***REMOVED***meta,***REMOVED***external***REMOVED***!==***REMOVED***'absolute'***REMOVED***&&***REMOVED***isAbsolute(id),***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesById.set(id,***REMOVED***externalModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!(externalModule***REMOVED***instanceof***REMOVED***ExternalModule))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInternalIdCannotBeExternal(source,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(doAssertionsDiffer(externalModule.info.assertions,***REMOVED***assertions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logInconsistentImportAssertions(externalModule.info.assertions,***REMOVED***assertions,***REMOVED***source,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.resolve(externalModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fetchModule(resolvedId,***REMOVED***importer,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fetchStaticDependencies(module,***REMOVED***resolveStaticDependencyPromises)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***await***REMOVED***Promise.all(resolveStaticDependencyPromises.map(resolveStaticDependencyPromise***REMOVED***=>***REMOVED***resolveStaticDependencyPromise.then(([source,***REMOVED***resolvedId])***REMOVED***=>***REMOVED***this.fetchResolvedDependency(source,***REMOVED***module.id,***REMOVED***resolvedId)))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.dependencies.add(dependency);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.importers.push(module.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.treeshake***REMOVED***||***REMOVED***module.info.moduleSideEffects***REMOVED***===***REMOVED***'no-treeshake')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependency***REMOVED***of***REMOVED***module.dependencies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dependency***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependency.importedFromNotTreeshaken***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getNormalizedResolvedIdWithoutDefaults(resolveIdResult,***REMOVED***importer,***REMOVED***source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***makeAbsoluteExternalsRelative***REMOVED***}***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolveIdResult)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resolveIdResult***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***external***REMOVED***=***REMOVED***resolveIdResult.external***REMOVED***||***REMOVED***this.options.external(resolveIdResult.id,***REMOVED***importer,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...resolveIdResult,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***external***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(external***REMOVED***===***REMOVED***'relative'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isAbsolute(resolveIdResult.id)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(external***REMOVED***===***REMOVED***true***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isNotAbsoluteExternal(resolveIdResult.id,***REMOVED***source,***REMOVED***makeAbsoluteExternalsRelative))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'absolute')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***external***REMOVED***=***REMOVED***this.options.external(resolveIdResult,***REMOVED***importer,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***external***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(isNotAbsoluteExternal(resolveIdResult,***REMOVED***source,***REMOVED***makeAbsoluteExternalsRelative)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'absolute'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***external***REMOVED***&&***REMOVED***makeAbsoluteExternalsRelative
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***normalizeRelativeExternalId(resolveIdResult,***REMOVED***importer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***resolveIdResult
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***makeAbsoluteExternalsRelative
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***normalizeRelativeExternalId(source,***REMOVED***importer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolveIdResult***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***!this.options.external(id,***REMOVED***importer,***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***isNotAbsoluteExternal(id,***REMOVED***source,***REMOVED***makeAbsoluteExternalsRelative)***REMOVED***||***REMOVED***'absolute',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getResolveDynamicImportPromises(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***module.dynamicImports.map(async***REMOVED***(dynamicImport)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolvedId***REMOVED***=***REMOVED***await***REMOVED***this.resolveDynamicImport(module,***REMOVED***typeof***REMOVED***dynamicImport.argument***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***dynamicImport.argument
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***dynamicImport.argument.esTreeNode,***REMOVED***module.id,***REMOVED***getAssertionsFromImportExpression(dynamicImport.node));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolvedId***REMOVED***&&***REMOVED***typeof***REMOVED***resolvedId***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImport.id***REMOVED***=***REMOVED***resolvedId.id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[dynamicImport,***REMOVED***resolvedId];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getResolveStaticDependencyPromises(module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array.from(module.sourcesWithAssertions,***REMOVED***async***REMOVED***([source,***REMOVED***assertions])***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(module.resolvedIds[source]***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.resolvedIds[source]***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.handleInvalidResolvedId(await***REMOVED***this.resolveId(source,***REMOVED***module.id,***REMOVED***EMPTY_OBJECT,***REMOVED***false,***REMOVED***assertions),***REMOVED***source,***REMOVED***module.id,***REMOVED***assertions))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getResolvedIdWithDefaults(resolvedId,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resolvedId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***external***REMOVED***=***REMOVED***resolvedId.external***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertions:***REMOVED***resolvedId.assertions***REMOVED***||***REMOVED***assertions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***resolvedId.id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***resolvedId.meta***REMOVED***||***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***resolvedId.moduleSideEffects***REMOVED***??***REMOVED***this.hasModuleSideEffects(resolvedId.id,***REMOVED***!!external),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedBy:***REMOVED***resolvedId.resolvedBy***REMOVED***??***REMOVED***'rollup',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamedExports:***REMOVED***resolvedId.syntheticNamedExports***REMOVED***??***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***handleExistingModule(module,***REMOVED***isEntry,***REMOVED***isPreload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loadPromise***REMOVED***=***REMOVED***this.moduleLoadPromises.get(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPreload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isPreload***REMOVED***===***REMOVED***RESOLVE_DEPENDENCIES
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***waitForDependencyResolution(loadPromise)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***loadPromise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.info.isEntry***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules.delete(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependant***REMOVED***of***REMOVED***module.implicitlyLoadedAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependant.implicitlyLoadedBefore.delete(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.implicitlyLoadedAfter.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fetchModuleDependencies(module,***REMOVED***...(await***REMOVED***loadPromise));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***handleInvalidResolvedId(resolvedId,***REMOVED***source,***REMOVED***importer,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolvedId***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRelative(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logUnresolvedImport(source,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logUnresolvedImportTreatedAsExternal(source,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***this.hasModuleSideEffects(source,***REMOVED***true),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedBy:***REMOVED***'rollup',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntheticNamedExports:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(resolvedId.external***REMOVED***&&***REMOVED***resolvedId.syntheticNamedExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logExternalSyntheticExports(source,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolvedId;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***loadEntryModule(unresolvedId,***REMOVED***isEntry,***REMOVED***importer,***REMOVED***implicitlyLoadedBefore,***REMOVED***isLoadForManualChunks***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolveIdResult***REMOVED***=***REMOVED***await***REMOVED***resolveId(unresolvedId,***REMOVED***importer,***REMOVED***this.options.preserveSymlinks,***REMOVED***this.pluginDriver,***REMOVED***this.resolveId,***REMOVED***null,***REMOVED***EMPTY_OBJECT,***REMOVED***true,***REMOVED***EMPTY_OBJECT);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolveIdResult***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(implicitlyLoadedBefore***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***logUnresolvedEntry(unresolvedId)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***logUnresolvedImplicitDependant(unresolvedId,***REMOVED***implicitlyLoadedBefore));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isExternalModules***REMOVED***=***REMOVED***typeof***REMOVED***resolveIdResult***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***resolveIdResult.external;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolveIdResult***REMOVED***===***REMOVED***false***REMOVED***||***REMOVED***isExternalModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(implicitlyLoadedBefore***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***isExternalModules***REMOVED***&&***REMOVED***isLoadForManualChunks
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***logExternalModulesCannotBeIncludedInManualChunks(unresolvedId)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***logEntryCannotBeExternal(unresolvedId)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***logImplicitDependantCannotBeExternal(unresolvedId,***REMOVED***implicitlyLoadedBefore));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fetchModule(this.getResolvedIdWithDefaults(typeof***REMOVED***resolveIdResult***REMOVED***===***REMOVED***'object'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***resolveIdResult
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{***REMOVED***id:***REMOVED***resolveIdResult***REMOVED***},***REMOVED***EMPTY_OBJECT),***REMOVED***undefined,***REMOVED***isEntry,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***resolveDynamicImport(module,***REMOVED***specifier,***REMOVED***importer,***REMOVED***assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolution***REMOVED***=***REMOVED***await***REMOVED***this.pluginDriver.hookFirst('resolveDynamicImport',***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importer,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***assertions***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***specifier***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resolution***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolution;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resolution)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getResolvedIdWithDefaults(resolution,***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolution***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingResolution***REMOVED***=***REMOVED***module.resolvedIds[specifier];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingResolution)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doAssertionsDiffer(existingResolution.assertions,***REMOVED***assertions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logInconsistentImportAssertions(existingResolution.assertions,***REMOVED***assertions,***REMOVED***specifier,***REMOVED***importer));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***existingResolution;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(module.resolvedIds[specifier]***REMOVED***=***REMOVED***this.handleInvalidResolvedId(await***REMOVED***this.resolveId(specifier,***REMOVED***module.id,***REMOVED***EMPTY_OBJECT,***REMOVED***false,***REMOVED***assertions),***REMOVED***specifier,***REMOVED***module.id,***REMOVED***assertions));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.handleInvalidResolvedId(this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(resolution,***REMOVED***importer,***REMOVED***specifier),***REMOVED***assertions),***REMOVED***specifier,***REMOVED***importer,***REMOVED***assertions);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***normalizeRelativeExternalId(source,***REMOVED***importer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isRelative(source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***importer
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***node_path.resolve(importer,***REMOVED***'..',***REMOVED***source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***node_path.resolve(source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***source;
}
function***REMOVED***addChunkNamesToModule(module,***REMOVED***{***REMOVED***fileName,***REMOVED***name***REMOVED***},***REMOVED***isUserDefined,***REMOVED***priority)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fileName***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.chunkFileNames.add(fileName);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Always***REMOVED***keep***REMOVED***chunkNames***REMOVED***sorted***REMOVED***by***REMOVED***priority
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***namePosition***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(module.chunkNames[namePosition]?.priority***REMOVED***<***REMOVED***priority)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namePosition++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.chunkNames.splice(namePosition,***REMOVED***0,***REMOVED***{***REMOVED***isUserDefined,***REMOVED***name,***REMOVED***priority***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***isNotAbsoluteExternal(id,***REMOVED***source,***REMOVED***makeAbsoluteExternalsRelative)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(makeAbsoluteExternalsRelative***REMOVED***===***REMOVED***true***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(makeAbsoluteExternalsRelative***REMOVED***===***REMOVED***'ifRelativeSource'***REMOVED***&&***REMOVED***isRelative(source))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isAbsolute(id));
}
async***REMOVED***function***REMOVED***waitForDependencyResolution(loadPromise)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[resolveStaticDependencyPromises,***REMOVED***resolveDynamicImportPromises]***REMOVED***=***REMOVED***await***REMOVED***loadPromise;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.all([...resolveStaticDependencyPromises,***REMOVED***...resolveDynamicImportPromises]);
}

class***REMOVED***GlobalScope***REMOVED***extends***REMOVED***Scope$1***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set('undefined',***REMOVED***new***REMOVED***UndefinedVariable());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***findVariable(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***variable***REMOVED***=***REMOVED***this.variables.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!variable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variable***REMOVED***=***REMOVED***new***REMOVED***GlobalVariable(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.variables.set(name,***REMOVED***variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variable;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

class***REMOVED***Queue***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(maxParallel)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maxParallel***REMOVED***=***REMOVED***maxParallel;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.queue***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.workerCount***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***run(task)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.queue.push({***REMOVED***reject,***REMOVED***resolve,***REMOVED***task***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.work();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***work()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.workerCount***REMOVED***>=***REMOVED***this.maxParallel)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.workerCount++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***entry;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((entry***REMOVED***=***REMOVED***this.queue.shift()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***reject,***REMOVED***resolve,***REMOVED***task***REMOVED***}***REMOVED***=***REMOVED***entry;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***await***REMOVED***task();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve(result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(error);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.workerCount--;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***normalizeEntryModules(entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(entryModules))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entryModules.map(id***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedAfter:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importer:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.entries(entryModules).map(([name,***REMOVED***id])***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileName:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implicitlyLoadedAfter:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importer:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED***}));
}
class***REMOVED***Graph***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(options,***REMOVED***watcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.astLru***REMOVED***=***REMOVED***flru(5);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cachedModules***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deoptimizationTracker***REMOVED***=***REMOVED***new***REMOVED***PathTracker();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.entryModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modulesById***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.needsTreeshakingPass***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.phase***REMOVED***=***REMOVED***BuildPhase.LOAD_AND_PARSE;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***GlobalScope();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.watchFiles***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.watchMode***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.externalModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.implicitEntryModules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modules***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getModuleInfo***REMOVED***=***REMOVED***(moduleId)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundModule***REMOVED***=***REMOVED***this.modulesById.get(moduleId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!foundModule)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***foundModule.info;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.cache***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.cache?.modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***options.cache.modules)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cachedModules.set(module.id,***REMOVED***module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginCache***REMOVED***=***REMOVED***options.cache?.plugins***REMOVED***||***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***increment***REMOVED***access***REMOVED***counter
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***in***REMOVED***this.pluginCache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***this.pluginCache[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***value***REMOVED***of***REMOVED***Object.values(cache))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value[0]++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(watcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.watchMode***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handleChange***REMOVED***=***REMOVED***(...parameters)***REMOVED***=>***REMOVED***this.pluginDriver.hookParallel('watchChange',***REMOVED***parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handleClose***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***this.pluginDriver.hookParallel('closeWatcher',***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watcher.onCurrentRun('change',***REMOVED***handleChange);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watcher.onCurrentRun('close',***REMOVED***handleClose);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pluginDriver***REMOVED***=***REMOVED***new***REMOVED***PluginDriver(this,***REMOVED***options,***REMOVED***options.plugins,***REMOVED***this.pluginCache);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.acornParser***REMOVED***=***REMOVED***Parser.extend(...options.acornInjectPlugins);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.moduleLoader***REMOVED***=***REMOVED***new***REMOVED***ModuleLoader(this,***REMOVED***this.modulesById,***REMOVED***this.options,***REMOVED***this.pluginDriver);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fileOperationQueue***REMOVED***=***REMOVED***new***REMOVED***Queue(options.maxParallelFileOps);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pureFunctions***REMOVED***=***REMOVED***getPureFunctions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***build()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('generate***REMOVED***module***REMOVED***graph',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.generateModuleGraph();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('generate***REMOVED***module***REMOVED***graph',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('sort***REMOVED***and***REMOVED***bind***REMOVED***modules',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.phase***REMOVED***=***REMOVED***BuildPhase.ANALYSE;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sortModules();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('sort***REMOVED***and***REMOVED***bind***REMOVED***modules',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('mark***REMOVED***included***REMOVED***statements',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.includeStatements();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('mark***REMOVED***included***REMOVED***statements',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.phase***REMOVED***=***REMOVED***BuildPhase.GENERATE;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***contextParse(code,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onCommentOrig***REMOVED***=***REMOVED***options.onComment;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comments***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.onComment***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onCommentOrig***REMOVED***&&***REMOVED***typeof***REMOVED***onCommentOrig***REMOVED***==***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(block,***REMOVED***text,***REMOVED***start,***REMOVED***end,***REMOVED***...parameters)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments.push({***REMOVED***end,***REMOVED***start,***REMOVED***type:***REMOVED***block***REMOVED***?***REMOVED***'Block'***REMOVED***:***REMOVED***'Line',***REMOVED***value:***REMOVED***text***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***onCommentOrig.call(options,***REMOVED***block,***REMOVED***text,***REMOVED***start,***REMOVED***end,***REMOVED***...parameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***comments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ast***REMOVED***=***REMOVED***this.acornParser.parse(code,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...this.options.acorn,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***onCommentOrig***REMOVED***==***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onCommentOrig.push(...comments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.onComment***REMOVED***=***REMOVED***onCommentOrig;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addAnnotations(comments,***REMOVED***ast,***REMOVED***code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ast;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***getCache()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***handle***REMOVED***plugin***REMOVED***cache***REMOVED***eviction
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***in***REMOVED***this.pluginCache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***this.pluginCache[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allDeleted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***value]***REMOVED***of***REMOVED***Object.entries(cache))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value[0]***REMOVED***>=***REMOVED***this.options.experimentalCacheExpiry)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***cache[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allDeleted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allDeleted)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.pluginCache[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules:***REMOVED***this.modules.map(module***REMOVED***=>***REMOVED***module.toJSON()),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***this.pluginCache
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***generateModuleGraph()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***entryModules:***REMOVED***this.entryModules,***REMOVED***implicitEntryModules:***REMOVED***this.implicitEntryModules***REMOVED***}***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***this.moduleLoader.addEntryModules(normalizeEntryModules(this.options.input),***REMOVED***true));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.entryModules.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('You***REMOVED***must***REMOVED***supply***REMOVED***options.input***REMOVED***to***REMOVED***rollup');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.modulesById.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module***REMOVED***instanceof***REMOVED***Module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.externalModules.push(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***includeStatements()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entryModules***REMOVED***=***REMOVED***[...this.entryModules,***REMOVED***...this.implicitEntryModules];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markModuleAndImpureDependenciesAsExecuted(module);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.treeshake)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***treeshakingPass***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart(`treeshaking***REMOVED***pass***REMOVED***${treeshakingPass}`,***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.needsTreeshakingPass***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.isExecuted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.info.moduleSideEffects***REMOVED***===***REMOVED***'no-treeshake')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.includeAllInBundle();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.include();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(treeshakingPass***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***only***REMOVED***include***REMOVED***exports***REMOVED***after***REMOVED***the***REMOVED***first***REMOVED***pass***REMOVED***to***REMOVED***avoid***REMOVED***issues***REMOVED***with
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***TDZ***REMOVED***detection***REMOVED***logic
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***entryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(module.preserveSignature***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.includeAllExports(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.needsTreeshakingPass***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd(`treeshaking***REMOVED***pass***REMOVED***${treeshakingPass++}`,***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.needsTreeshakingPass);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.modules)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.includeAllInBundle();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***externalModule***REMOVED***of***REMOVED***this.externalModules)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalModule.warnUnusedImports();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.implicitEntryModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***dependant***REMOVED***of***REMOVED***module.implicitlyLoadedAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(dependant.info.isEntry***REMOVED***||***REMOVED***dependant.isIncluded()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logImplicitDependantIsNotIncluded(dependant));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***sortModules()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***orderedModules,***REMOVED***cyclePaths***REMOVED***}***REMOVED***=***REMOVED***analyseModuleExecution(this.entryModules);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***cyclePath***REMOVED***of***REMOVED***cyclePaths)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options.onLog(LOGLEVEL_WARN,***REMOVED***logCircularDependency(cyclePath));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.modules***REMOVED***=***REMOVED***orderedModules;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.bindReferences();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.warnForMissingExports();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***warnForMissingExports()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***module***REMOVED***of***REMOVED***this.modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***importDescription***REMOVED***of***REMOVED***module.importDescriptions.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importDescription.name***REMOVED***!==***REMOVED***'*'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!importDescription.module.getVariableForExportName(importDescription.name)[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***module.log(LOGLEVEL_WARN,***REMOVED***logMissingExport(importDescription.name,***REMOVED***module.id,***REMOVED***importDescription.module.id),***REMOVED***importDescription.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***formatAction([pluginName,***REMOVED***hookName,***REMOVED***parameters])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***action***REMOVED***=***REMOVED***`(${pluginName})***REMOVED***${hookName}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***JSON.stringify;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(hookName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'resolveId':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${action}***REMOVED***${s(parameters[0])}***REMOVED***${s(parameters[1])}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'load':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${action}***REMOVED***${s(parameters[0])}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'transform':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${action}***REMOVED***${s(parameters[1])}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'shouldTransformCachedModule':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${action}***REMOVED***${s(parameters[0].id)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'moduleParsed':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${action}***REMOVED***${s(parameters[0].id)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***action;
}
let***REMOVED***handleBeforeExit***REMOVED***=***REMOVED***null;
const***REMOVED***rejectByPluginDriver***REMOVED***=***REMOVED***new***REMOVED***Map();
async***REMOVED***function***REMOVED***catchUnfinishedHookActions(pluginDriver,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***emptyEventLoopPromise***REMOVED***=***REMOVED***new***REMOVED***Promise((_,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rejectByPluginDriver.set(pluginDriver,***REMOVED***reject);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!handleBeforeExit)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***only***REMOVED***ever***REMOVED***create***REMOVED***a***REMOVED***single***REMOVED***event***REMOVED***listener***REMOVED***to***REMOVED***avoid***REMOVED***max***REMOVED***listener***REMOVED***and
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***other***REMOVED***issues
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleBeforeExit***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[pluginDriver,***REMOVED***reject]***REMOVED***of***REMOVED***rejectByPluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unfulfilledActions***REMOVED***=***REMOVED***pluginDriver.getUnfulfilledHookActions();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(new***REMOVED***Error(`Unexpected***REMOVED***early***REMOVED***exit.***REMOVED***This***REMOVED***happens***REMOVED***when***REMOVED***Promises***REMOVED***returned***REMOVED***by***REMOVED***plugins***REMOVED***cannot***REMOVED***resolve.***REMOVED***Unfinished***REMOVED***hook***REMOVED***action(s)***REMOVED***on***REMOVED***exit:\n`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[...unfulfilledActions].map(formatAction).join('\n')));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$1.once('beforeExit',***REMOVED***handleBeforeExit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***await***REMOVED***Promise.race([callback(),***REMOVED***emptyEventLoopPromise]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rejectByPluginDriver.delete(pluginDriver);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rejectByPluginDriver.size***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$1.off('beforeExit',***REMOVED***handleBeforeExit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleBeforeExit***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

const***REMOVED***leftCurlyBrace***REMOVED***=***REMOVED***"{".charCodeAt(0);
const***REMOVED***space***REMOVED***=***REMOVED***"***REMOVED***".charCodeAt(0);

const***REMOVED***keyword***REMOVED***=***REMOVED***"assert";
const***REMOVED***FUNC_STATEMENT***REMOVED***=***REMOVED***1,***REMOVED***FUNC_NULLABLE_ID***REMOVED***=***REMOVED***4;

function***REMOVED***importAssertions(Parser)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Use***REMOVED***supplied***REMOVED***version***REMOVED***acorn***REMOVED***version***REMOVED***if***REMOVED***present,***REMOVED***to***REMOVED***avoid
***REMOVED******REMOVED***//***REMOVED***reference***REMOVED***mismatches***REMOVED***due***REMOVED***to***REMOVED***different***REMOVED***acorn***REMOVED***versions.***REMOVED***This
***REMOVED******REMOVED***//***REMOVED***allows***REMOVED***this***REMOVED***plugin***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***Rollup***REMOVED***which***REMOVED***supplies
***REMOVED******REMOVED***//***REMOVED***its***REMOVED***own***REMOVED***internal***REMOVED***version***REMOVED***of***REMOVED***acorn***REMOVED***and***REMOVED***thereby***REMOVED***sidesteps
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***package***REMOVED***manager.
***REMOVED******REMOVED***const***REMOVED***acorn***REMOVED***=***REMOVED***Parser.acorn***REMOVED***||***REMOVED***_acorn;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***tokTypes:***REMOVED***tt,***REMOVED***TokenType***REMOVED***}***REMOVED***=***REMOVED***acorn;

***REMOVED******REMOVED***return***REMOVED***class***REMOVED***extends***REMOVED***Parser***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assertToken***REMOVED***=***REMOVED***new***REMOVED***TokenType(keyword);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***_codeAt(i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.input.charCodeAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***_eat(t)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***t)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***readToken(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***<***REMOVED***keyword.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._codeAt(this.pos***REMOVED***+***REMOVED***i)***REMOVED***!==***REMOVED***keyword.charCodeAt(i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.readToken(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ensure***REMOVED***that***REMOVED***the***REMOVED***keyword***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***correct***REMOVED***location
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ie***REMOVED***`assert{...`***REMOVED***or***REMOVED***`assert***REMOVED***{...`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._codeAt(this.pos***REMOVED***+***REMOVED***i)***REMOVED***===***REMOVED***leftCurlyBrace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Found***REMOVED***'{'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this._codeAt(this.pos***REMOVED***+***REMOVED***i)***REMOVED***===***REMOVED***space)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***white***REMOVED***space***REMOVED***is***REMOVED***allowed***REMOVED***between***REMOVED***`assert`***REMOVED***and***REMOVED***`{`,***REMOVED***so***REMOVED***continue.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.readToken(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***we're***REMOVED***inside***REMOVED***a***REMOVED***dynamic***REMOVED***import***REMOVED***expression***REMOVED***we'll***REMOVED***parse
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***`assert`***REMOVED***keyword***REMOVED***as***REMOVED***a***REMOVED***standard***REMOVED***object***REMOVED***property***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ie***REMOVED***`import(""./foo.json",***REMOVED***{***REMOVED***assert:***REMOVED***{***REMOVED***type:***REMOVED***"json"***REMOVED***}***REMOVED***})`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type.label***REMOVED***===***REMOVED***"{")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.readToken(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***+=***REMOVED***keyword.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishToken(this.assertToken);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***parseDynamicImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();***REMOVED***//***REMOVED***skip***REMOVED***`(`

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***node.source.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseMaybeAssign();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(tt.comma))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***obj***REMOVED***=***REMOVED***this.parseObj(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***[obj];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._eat(tt.parenR);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ported***REMOVED***from***REMOVED***acorn/src/statement.js***REMOVED***pp.parseExport
***REMOVED******REMOVED******REMOVED******REMOVED***parseExport(node,***REMOVED***exports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED*******REMOVED***from***REMOVED***'...'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(tt.star))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.ecmaVersion***REMOVED***>=***REMOVED***11)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual("as"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***this.parseIdent(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(exports,***REMOVED***node.exported.name,***REMOVED***this.lastTokStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual("from");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***tt.string)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseExprAtom();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***this.assertToken***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***tt._with)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertions***REMOVED***=***REMOVED***this.parseImportAssertions();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.assertions***REMOVED***=***REMOVED***assertions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportAllDeclaration")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(tt._default))***REMOVED***{***REMOVED***//***REMOVED***export***REMOVED***default***REMOVED***...
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(exports,***REMOVED***"default",***REMOVED***this.lastTokStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isAsync;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***tt._function***REMOVED***||***REMOVED***(isAsync***REMOVED***=***REMOVED***this.isAsyncFunction()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***fNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsync)***REMOVED***{***REMOVED***this.next();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseFunction(fNode,***REMOVED***FUNC_STATEMENT***REMOVED***|***REMOVED***FUNC_NULLABLE_ID,***REMOVED***false,***REMOVED***isAsync);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***tt._class)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseClass(cNode,***REMOVED***"nullableID");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportDefaultDeclaration")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***var|const|let|function|class***REMOVED***...
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldParseExportStatement())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseStatement(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.declaration.type***REMOVED***===***REMOVED***"VariableDeclaration")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkVariableExport(exports,***REMOVED***node.declaration.declarations);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***this.checkExport(exports,***REMOVED***node.declaration.id.name,***REMOVED***node.declaration.id.start);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***//***REMOVED***export***REMOVED***{***REMOVED***x,***REMOVED***y***REMOVED***as***REMOVED***z***REMOVED***}***REMOVED***[from***REMOVED***'...']
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***this.parseExportSpecifiers(exports);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual("from"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***tt.string)***REMOVED***{***REMOVED***this.unexpected();***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseExprAtom();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***this.assertToken***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***tt._with)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertions***REMOVED***=***REMOVED***this.parseImportAssertions();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.assertions***REMOVED***=***REMOVED***assertions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***list***REMOVED***=***REMOVED***node.specifiers;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***for***REMOVED***keywords***REMOVED***used***REMOVED***as***REMOVED***local***REMOVED***names
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spec***REMOVED***=***REMOVED***list[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkUnreserved(spec.local);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***if***REMOVED***export***REMOVED***is***REMOVED***defined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLocalExport(spec.local);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportNamedDeclaration")
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***parseImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***import***REMOVED***'...'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***tt.string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***this.parseImportSpecifiers();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual("from");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***===***REMOVED***tt.string***REMOVED***?***REMOVED***this.parseExprAtom()***REMOVED***:***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***this.assertToken***REMOVED***||***REMOVED***this.type***REMOVED***==***REMOVED***tt._with)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assertions***REMOVED***=***REMOVED***this.parseImportAssertions();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(assertions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.assertions***REMOVED***=***REMOVED***assertions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***parseImportAssertions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._eat(tt.braceL);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***this.parseAssertEntries();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._eat(tt.braceR);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrs;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***parseAssertEntries()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrNames***REMOVED***=***REMOVED***new***REMOVED***Set();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***tt.braceR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***parse***REMOVED***AssertionKey***REMOVED***:***REMOVED***IdentifierName,***REMOVED***StringLiteral
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***assertionKeyNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***tt.string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertionKeyNode***REMOVED***=***REMOVED***this.parseLiteral(this.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertionKeyNode***REMOVED***=***REMOVED***this.parseIdent(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***assertionKeyNode;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***if***REMOVED***we***REMOVED***already***REMOVED***have***REMOVED***an***REMOVED***entry***REMOVED***for***REMOVED***an***REMOVED***attribute
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***a***REMOVED***duplicate***REMOVED***entry***REMOVED***is***REMOVED***found,***REMOVED***throw***REMOVED***an***REMOVED***error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***now***REMOVED***this***REMOVED***logic***REMOVED***will***REMOVED***come***REMOVED***into***REMOVED***play***REMOVED***only***REMOVED***when***REMOVED***someone***REMOVED***declares***REMOVED***`type`***REMOVED***twice
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrNames.has(node.key.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(this.pos,***REMOVED***"Duplicated***REMOVED***key***REMOVED***in***REMOVED***assertions");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrNames.add(node.key.name);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***!==***REMOVED***tt.string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Only***REMOVED***string***REMOVED***is***REMOVED***supported***REMOVED***as***REMOVED***an***REMOVED***assertion***REMOVED***value"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.parseLiteral(this.value);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs.push(this.finishNode(node,***REMOVED***"ImportAttribute"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(tt.comma));

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrs;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}

async***REMOVED***function***REMOVED***normalizeInputOptions(config,***REMOVED***watchMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***are***REMOVED***options***REMOVED***that***REMOVED***may***REMOVED***trigger***REMOVED***special***REMOVED***warnings***REMOVED***or***REMOVED***behaviour***REMOVED***later
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***user***REMOVED***did***REMOVED***not***REMOVED***select***REMOVED***an***REMOVED***explicit***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unsetOptions***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***config.context***REMOVED***??***REMOVED***'undefined';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***await***REMOVED***normalizePluginOption(config.plugins);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logLevel***REMOVED***=***REMOVED***config.logLevel***REMOVED***||***REMOVED***LOGLEVEL_INFO;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onLog***REMOVED***=***REMOVED***getLogger(plugins,***REMOVED***getOnLog(config,***REMOVED***logLevel),***REMOVED***watchMode,***REMOVED***logLevel);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***strictDeprecations***REMOVED***=***REMOVED***config.strictDeprecations***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxParallelFileOps***REMOVED***=***REMOVED***getMaxParallelFileOps(config,***REMOVED***onLog,***REMOVED***strictDeprecations);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acorn:***REMOVED***getAcorn(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acornInjectPlugins:***REMOVED***getAcornInjectPlugins(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache:***REMOVED***getCache(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalCacheExpiry:***REMOVED***config.experimentalCacheExpiry***REMOVED***??***REMOVED***10,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalLogSideEffects:***REMOVED***config.experimentalLogSideEffects***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***external:***REMOVED***getIdMatcher(config.external),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inlineDynamicImports:***REMOVED***getInlineDynamicImports$1(config,***REMOVED***onLog,***REMOVED***strictDeprecations),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***input:***REMOVED***getInput(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logLevel,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***makeAbsoluteExternalsRelative:***REMOVED***config.makeAbsoluteExternalsRelative***REMOVED***??***REMOVED***'ifRelativeSource',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunks:***REMOVED***getManualChunks$1(config,***REMOVED***onLog,***REMOVED***strictDeprecations),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxParallelFileOps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxParallelFileReads:***REMOVED***maxParallelFileOps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleContext:***REMOVED***getModuleContext(config,***REMOVED***context),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onLog,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onwarn:***REMOVED***warning***REMOVED***=>***REMOVED***onLog(LOGLEVEL_WARN,***REMOVED***warning),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***perf:***REMOVED***config.perf***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveEntrySignatures:***REMOVED***config.preserveEntrySignatures***REMOVED***??***REMOVED***'exports-only',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveModules:***REMOVED***getPreserveModules$1(config,***REMOVED***onLog,***REMOVED***strictDeprecations),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveSymlinks:***REMOVED***config.preserveSymlinks***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shimMissingExports:***REMOVED***config.shimMissingExports***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictDeprecations,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeshake:***REMOVED***getTreeshake(config)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***warnUnknownOptions(config,***REMOVED***[...Object.keys(options),***REMOVED***'watch'],***REMOVED***'input***REMOVED***options',***REMOVED***onLog,***REMOVED***/^(output)$/);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***options,***REMOVED***unsetOptions***REMOVED***};
}
const***REMOVED***getAcorn***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***ecmaVersion:***REMOVED***'latest',
***REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***'module',
***REMOVED******REMOVED******REMOVED******REMOVED***...config.acorn
});
const***REMOVED***getAcornInjectPlugins***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***importAssertions,
***REMOVED******REMOVED******REMOVED******REMOVED***...ensureArray$1(config.acornInjectPlugins)
];
const***REMOVED***getCache***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***config.cache***REMOVED***===***REMOVED***true***REMOVED***//***REMOVED***`true`***REMOVED***is***REMOVED***the***REMOVED***default
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***config.cache?.cache***REMOVED***||***REMOVED***config.cache;
const***REMOVED***getIdMatcher***REMOVED***=***REMOVED***(option)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(option***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***option***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(id,***REMOVED***...parameters)***REMOVED***=>***REMOVED***(!id.startsWith('\0')***REMOVED***&&***REMOVED***option(id,***REMOVED***...parameters))***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(option)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ids***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***value***REMOVED***of***REMOVED***ensureArray$1(option))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***instanceof***REMOVED***RegExp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchers.push(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids.add(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(id,***REMOVED***..._arguments)***REMOVED***=>***REMOVED***ids.has(id)***REMOVED***||***REMOVED***matchers.some(matcher***REMOVED***=>***REMOVED***matcher.test(id));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***false;
};
const***REMOVED***getInlineDynamicImports$1***REMOVED***=***REMOVED***(config,***REMOVED***log,***REMOVED***strictDeprecations)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configInlineDynamicImports***REMOVED***=***REMOVED***config.inlineDynamicImports;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configInlineDynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecationWithOptions('The***REMOVED***"inlineDynamicImports"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"output.inlineDynamicImports"***REMOVED***option***REMOVED***instead.',***REMOVED***URL_OUTPUT_INLINEDYNAMICIMPORTS,***REMOVED***true,***REMOVED***log,***REMOVED***strictDeprecations);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configInlineDynamicImports;
};
const***REMOVED***getInput***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configInput***REMOVED***=***REMOVED***config.input;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configInput***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***typeof***REMOVED***configInput***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***[configInput]***REMOVED***:***REMOVED***configInput;
};
const***REMOVED***getManualChunks$1***REMOVED***=***REMOVED***(config,***REMOVED***log,***REMOVED***strictDeprecations)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configManualChunks***REMOVED***=***REMOVED***config.manualChunks;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configManualChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecationWithOptions('The***REMOVED***"manualChunks"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"output.manualChunks"***REMOVED***option***REMOVED***instead.',***REMOVED***URL_OUTPUT_MANUALCHUNKS,***REMOVED***true,***REMOVED***log,***REMOVED***strictDeprecations);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configManualChunks;
};
const***REMOVED***getMaxParallelFileOps***REMOVED***=***REMOVED***(config,***REMOVED***log,***REMOVED***strictDeprecations)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxParallelFileReads***REMOVED***=***REMOVED***config.maxParallelFileReads;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***maxParallelFileReads***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecationWithOptions('The***REMOVED***"maxParallelFileReads"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"maxParallelFileOps"***REMOVED***option***REMOVED***instead.',***REMOVED***URL_MAXPARALLELFILEOPS,***REMOVED***true,***REMOVED***log,***REMOVED***strictDeprecations);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxParallelFileOps***REMOVED***=***REMOVED***config.maxParallelFileOps***REMOVED***??***REMOVED***maxParallelFileReads;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***maxParallelFileOps***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maxParallelFileOps***REMOVED***<=***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***maxParallelFileOps;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***20;
};
const***REMOVED***getModuleContext***REMOVED***=***REMOVED***(config,***REMOVED***context)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configModuleContext***REMOVED***=***REMOVED***config.moduleContext;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***configModuleContext***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id***REMOVED***=>***REMOVED***configModuleContext(id)***REMOVED***??***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configModuleContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***contextByModuleId***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***moduleContext]***REMOVED***of***REMOVED***Object.entries(configModuleContext))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contextByModuleId[node_path.resolve(key)]***REMOVED***=***REMOVED***moduleContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id***REMOVED***=>***REMOVED***contextByModuleId[id]***REMOVED***??***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***context;
};
const***REMOVED***getPreserveModules$1***REMOVED***=***REMOVED***(config,***REMOVED***log,***REMOVED***strictDeprecations)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configPreserveModules***REMOVED***=***REMOVED***config.preserveModules;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configPreserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecationWithOptions('The***REMOVED***"preserveModules"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"output.preserveModules"***REMOVED***option***REMOVED***instead.',***REMOVED***URL_OUTPUT_PRESERVEMODULES,***REMOVED***true,***REMOVED***log,***REMOVED***strictDeprecations);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configPreserveModules;
};
const***REMOVED***getTreeshake***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configTreeshake***REMOVED***=***REMOVED***config.treeshake;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configTreeshake***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configWithPreset***REMOVED***=***REMOVED***getOptionWithPreset(config.treeshake,***REMOVED***treeshakePresets,***REMOVED***'treeshake',***REMOVED***URL_TREESHAKE,***REMOVED***'false,***REMOVED***true,***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotations:***REMOVED***configWithPreset.annotations***REMOVED***!==***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***correctVarValueBeforeDeclaration:***REMOVED***configWithPreset.correctVarValueBeforeDeclaration***REMOVED***===***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualPureFunctions:***REMOVED***configWithPreset.manualPureFunctions***REMOVED***??***REMOVED***EMPTY_ARRAY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moduleSideEffects:***REMOVED***getHasModuleSideEffects(configWithPreset.moduleSideEffects),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyReadSideEffects:***REMOVED***configWithPreset.propertyReadSideEffects***REMOVED***===***REMOVED***'always'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***'always'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***configWithPreset.propertyReadSideEffects***REMOVED***!==***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tryCatchDeoptimization:***REMOVED***configWithPreset.tryCatchDeoptimization***REMOVED***!==***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unknownGlobalSideEffects:***REMOVED***configWithPreset.unknownGlobalSideEffects***REMOVED***!==***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***};
};
const***REMOVED***getHasModuleSideEffects***REMOVED***=***REMOVED***(moduleSideEffectsOption)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***moduleSideEffectsOption***REMOVED***===***REMOVED***'boolean')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***moduleSideEffectsOption;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moduleSideEffectsOption***REMOVED***===***REMOVED***'no-external')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(_id,***REMOVED***external)***REMOVED***=>***REMOVED***!external;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***moduleSideEffectsOption***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(id,***REMOVED***external)***REMOVED***=>***REMOVED***id.startsWith('\0')***REMOVED***?***REMOVED***true***REMOVED***:***REMOVED***moduleSideEffectsOption(id,***REMOVED***external)***REMOVED***!==***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(moduleSideEffectsOption))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ids***REMOVED***=***REMOVED***new***REMOVED***Set(moduleSideEffectsOption);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id***REMOVED***=>***REMOVED***ids.has(id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moduleSideEffectsOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error(logInvalidOption('treeshake.moduleSideEffects',***REMOVED***URL_TREESHAKE_MODULESIDEEFFECTS,***REMOVED***'please***REMOVED***use***REMOVED***one***REMOVED***of***REMOVED***false,***REMOVED***"no-external",***REMOVED***a***REMOVED***function***REMOVED***or***REMOVED***an***REMOVED***array'));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***true;
};

//***REMOVED***https://datatracker.ietf.org/doc/html/rfc2396
//***REMOVED***eslint-disable-next-line***REMOVED***no-control-regex
const***REMOVED***INVALID_CHAR_REGEX***REMOVED***=***REMOVED***/[\u0000-\u001F"#$&*+,:;<=>?[\]^`{|}\u007F]/g;
const***REMOVED***DRIVE_LETTER_REGEX***REMOVED***=***REMOVED***/^[a-z]:/i;
function***REMOVED***sanitizeFileName(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***DRIVE_LETTER_REGEX.exec(name);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***driveLetter***REMOVED***=***REMOVED***match***REMOVED***?***REMOVED***match[0]***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***`:`***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***as***REMOVED***part***REMOVED***of***REMOVED***a***REMOVED***windows***REMOVED***drive***REMOVED***letter***REMOVED***(ex:***REMOVED***C:\foo)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Otherwise,***REMOVED***avoid***REMOVED***them***REMOVED***because***REMOVED***they***REMOVED***can***REMOVED***refer***REMOVED***to***REMOVED***NTFS***REMOVED***alternate***REMOVED***data***REMOVED***streams.
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***driveLetter***REMOVED***+***REMOVED***name.slice(driveLetter.length).replace(INVALID_CHAR_REGEX,***REMOVED***'_');
}

async***REMOVED***function***REMOVED***normalizeOutputOptions(config,***REMOVED***inputOptions,***REMOVED***unsetInputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***are***REMOVED***options***REMOVED***that***REMOVED***may***REMOVED***trigger***REMOVED***special***REMOVED***warnings***REMOVED***or***REMOVED***behaviour***REMOVED***later
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***user***REMOVED***did***REMOVED***not***REMOVED***select***REMOVED***an***REMOVED***explicit***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unsetOptions***REMOVED***=***REMOVED***new***REMOVED***Set(unsetInputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***compact***REMOVED***=***REMOVED***config.compact***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***format***REMOVED***=***REMOVED***getFormat(config);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inlineDynamicImports***REMOVED***=***REMOVED***getInlineDynamicImports(config,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preserveModules***REMOVED***=***REMOVED***getPreserveModules(config,***REMOVED***inlineDynamicImports,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***file***REMOVED***=***REMOVED***getFile(config,***REMOVED***preserveModules,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preferConst***REMOVED***=***REMOVED***getPreferConst(config,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***generatedCode***REMOVED***=***REMOVED***getGeneratedCode(config,***REMOVED***preferConst);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***amd:***REMOVED***getAmd(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assetFileNames:***REMOVED***config.assetFileNames***REMOVED***??***REMOVED***'assets/[name]-[hash][extname]',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***banner:***REMOVED***getAddon(config,***REMOVED***'banner'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkFileNames:***REMOVED***config.chunkFileNames***REMOVED***??***REMOVED***'[name]-[hash].js',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compact,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dir:***REMOVED***getDir(config,***REMOVED***file),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportFunction:***REMOVED***getDynamicImportFunction(config,***REMOVED***inputOptions,***REMOVED***format),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicImportInCjs:***REMOVED***config.dynamicImportInCjs***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entryFileNames:***REMOVED***getEntryFileNames(config,***REMOVED***unsetOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***esModule:***REMOVED***config.esModule***REMOVED***??***REMOVED***'if-default-prop',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalDeepDynamicChunkOptimization:***REMOVED***getExperimentalDeepDynamicChunkOptimization(config,***REMOVED***inputOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***experimentalMinChunkSize:***REMOVED***config.experimentalMinChunkSize***REMOVED***??***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports:***REMOVED***getExports(config,***REMOVED***unsetOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend:***REMOVED***config.extend***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalImportAssertions:***REMOVED***config.externalImportAssertions***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***externalLiveBindings:***REMOVED***config.externalLiveBindings***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***footer:***REMOVED***getAddon(config,***REMOVED***'footer'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***format,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***freeze:***REMOVED***config.freeze***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedCode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globals:***REMOVED***config.globals***REMOVED***||***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistTransitiveImports:***REMOVED***config.hoistTransitiveImports***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indent:***REMOVED***getIndent(config,***REMOVED***compact),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inlineDynamicImports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***interop:***REMOVED***getInterop(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***intro:***REMOVED***getAddon(config,***REMOVED***'intro'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***manualChunks:***REMOVED***getManualChunks(config,***REMOVED***inlineDynamicImports,***REMOVED***preserveModules,***REMOVED***inputOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***minifyInternalExports:***REMOVED***getMinifyInternalExports(config,***REMOVED***format,***REMOVED***compact),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***config.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaceToStringTag:***REMOVED***getNamespaceToStringTag(config,***REMOVED***generatedCode,***REMOVED***inputOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noConflict:***REMOVED***config.noConflict***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outro:***REMOVED***getAddon(config,***REMOVED***'outro'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paths:***REMOVED***config.paths***REMOVED***||***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***await***REMOVED***normalizePluginOption(config.plugins),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preferConst,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveModules,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preserveModulesRoot:***REMOVED***getPreserveModulesRoot(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sanitizeFileName:***REMOVED***typeof***REMOVED***config.sanitizeFileName***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***config.sanitizeFileName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***config.sanitizeFileName***REMOVED***===***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***id***REMOVED***=>***REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***sanitizeFileName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemap:***REMOVED***config.sourcemap***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapBaseUrl:***REMOVED***getSourcemapBaseUrl(config),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapExcludeSources:***REMOVED***config.sourcemapExcludeSources***REMOVED***||***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFile:***REMOVED***config.sourcemapFile,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapFileNames:***REMOVED***getSourcemapFileNames(config,***REMOVED***unsetOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapIgnoreList:***REMOVED***typeof***REMOVED***config.sourcemapIgnoreList***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***config.sourcemapIgnoreList
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***config.sourcemapIgnoreList***REMOVED***===***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***relativeSourcePath***REMOVED***=>***REMOVED***relativeSourcePath.includes('node_modules'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemapPathTransform:***REMOVED***config.sourcemapPathTransform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strict:***REMOVED***config.strict***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***systemNullSetters:***REMOVED***config.systemNullSetters***REMOVED***??***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***config.validate***REMOVED***||***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***warnUnknownOptions(config,***REMOVED***Object.keys(outputOptions),***REMOVED***'output***REMOVED***options',***REMOVED***inputOptions.onLog);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***options:***REMOVED***outputOptions,***REMOVED***unsetOptions***REMOVED***};
}
const***REMOVED***getFile***REMOVED***=***REMOVED***(config,***REMOVED***preserveModules,***REMOVED***inputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***file***REMOVED***}***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***file***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.file',***REMOVED***URL_OUTPUT_DIR,***REMOVED***'you***REMOVED***must***REMOVED***set***REMOVED***"output.dir"***REMOVED***instead***REMOVED***of***REMOVED***"output.file"***REMOVED***when***REMOVED***using***REMOVED***the***REMOVED***"output.preserveModules"***REMOVED***option'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(inputOptions.input))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.file',***REMOVED***URL_OUTPUT_DIR,***REMOVED***'you***REMOVED***must***REMOVED***set***REMOVED***"output.dir"***REMOVED***instead***REMOVED***of***REMOVED***"output.file"***REMOVED***when***REMOVED***providing***REMOVED***named***REMOVED***inputs'));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***file;
};
const***REMOVED***getFormat***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configFormat***REMOVED***=***REMOVED***config.format;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(configFormat)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***undefined:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'es':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'esm':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'module':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'es';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'cjs':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'commonjs':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'cjs';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'system':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'systemjs':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'system';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'amd':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'iife':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'umd':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configFormat;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.format',***REMOVED***URL_OUTPUT_FORMAT,***REMOVED***`Valid***REMOVED***values***REMOVED***are***REMOVED***"amd",***REMOVED***"cjs",***REMOVED***"system",***REMOVED***"es",***REMOVED***"iife"***REMOVED***or***REMOVED***"umd"`,***REMOVED***configFormat));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
const***REMOVED***getInlineDynamicImports***REMOVED***=***REMOVED***(config,***REMOVED***inputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inlineDynamicImports***REMOVED***=***REMOVED***(config.inlineDynamicImports***REMOVED***??***REMOVED***inputOptions.inlineDynamicImports)***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***input***REMOVED***}***REMOVED***=***REMOVED***inputOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inlineDynamicImports***REMOVED***&&***REMOVED***(Array.isArray(input)***REMOVED***?***REMOVED***input***REMOVED***:***REMOVED***Object.keys(input)).length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.inlineDynamicImports',***REMOVED***URL_OUTPUT_INLINEDYNAMICIMPORTS,***REMOVED***'multiple***REMOVED***inputs***REMOVED***are***REMOVED***not***REMOVED***supported***REMOVED***when***REMOVED***"output.inlineDynamicImports"***REMOVED***is***REMOVED***true'));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inlineDynamicImports;
};
const***REMOVED***getPreserveModules***REMOVED***=***REMOVED***(config,***REMOVED***inlineDynamicImports,***REMOVED***inputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preserveModules***REMOVED***=***REMOVED***(config.preserveModules***REMOVED***??***REMOVED***inputOptions.preserveModules)***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inlineDynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.inlineDynamicImports',***REMOVED***URL_OUTPUT_INLINEDYNAMICIMPORTS,***REMOVED***`this***REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***for***REMOVED***"output.preserveModules"`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inputOptions.preserveEntrySignatures***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('preserveEntrySignatures',***REMOVED***URL_PRESERVEENTRYSIGNATURES,***REMOVED***'setting***REMOVED***this***REMOVED***option***REMOVED***to***REMOVED***false***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***for***REMOVED***"output.preserveModules"'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***preserveModules;
};
const***REMOVED***getPreferConst***REMOVED***=***REMOVED***(config,***REMOVED***inputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configPreferConst***REMOVED***=***REMOVED***config.preferConst;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configPreferConst***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation(`The***REMOVED***"output.preferConst"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"output.generatedCode.constBindings"***REMOVED***option***REMOVED***instead.`,***REMOVED***URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS,***REMOVED***true,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!configPreferConst;
};
const***REMOVED***getPreserveModulesRoot***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***preserveModulesRoot***REMOVED***}***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveModulesRoot***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***preserveModulesRoot***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node_path.resolve(preserveModulesRoot);
};
const***REMOVED***getAmd***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mergedOption***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***autoId:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***basePath:***REMOVED***'',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***define:***REMOVED***'define',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forceJsExtensionForImports:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...config.amd
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((mergedOption.autoId***REMOVED***||***REMOVED***mergedOption.basePath)***REMOVED***&&***REMOVED***mergedOption.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.amd.id',***REMOVED***URL_OUTPUT_AMD_ID,***REMOVED***'this***REMOVED***option***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***together***REMOVED***with***REMOVED***"output.amd.autoId"/"output.amd.basePath"'));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mergedOption.basePath***REMOVED***&&***REMOVED***!mergedOption.autoId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.amd.basePath',***REMOVED***URL_OUTPUT_AMD_BASEPATH,***REMOVED***'this***REMOVED***option***REMOVED***only***REMOVED***works***REMOVED***with***REMOVED***"output.amd.autoId"'));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mergedOption.autoId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***autoId:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***basePath:***REMOVED***mergedOption.basePath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***define:***REMOVED***mergedOption.define,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forceJsExtensionForImports:***REMOVED***mergedOption.forceJsExtensionForImports
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***autoId:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***define:***REMOVED***mergedOption.define,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forceJsExtensionForImports:***REMOVED***mergedOption.forceJsExtensionForImports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***mergedOption.id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
};
const***REMOVED***getAddon***REMOVED***=***REMOVED***(config,***REMOVED***name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configAddon***REMOVED***=***REMOVED***config[name];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***configAddon***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configAddon;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***configAddon***REMOVED***||***REMOVED***'';
};
//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prevent-abbreviations
const***REMOVED***getDir***REMOVED***=***REMOVED***(config,***REMOVED***file)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dir***REMOVED***}***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***dir***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***typeof***REMOVED***file***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.dir',***REMOVED***URL_OUTPUT_DIR,***REMOVED***'you***REMOVED***must***REMOVED***set***REMOVED***either***REMOVED***"output.file"***REMOVED***for***REMOVED***a***REMOVED***single-file***REMOVED***build***REMOVED***or***REMOVED***"output.dir"***REMOVED***when***REMOVED***generating***REMOVED***multiple***REMOVED***chunks'));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dir;
};
const***REMOVED***getDynamicImportFunction***REMOVED***=***REMOVED***(config,***REMOVED***inputOptions,***REMOVED***format)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configDynamicImportFunction***REMOVED***=***REMOVED***config.dynamicImportFunction;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configDynamicImportFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation(`The***REMOVED***"output.dynamicImportFunction"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"renderDynamicImport"***REMOVED***plugin***REMOVED***hook***REMOVED***instead.`,***REMOVED***URL_RENDERDYNAMICIMPORT,***REMOVED***true,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(format***REMOVED***!==***REMOVED***'es')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputOptions.onLog(LOGLEVEL_WARN,***REMOVED***logInvalidOption('output.dynamicImportFunction',***REMOVED***URL_OUTPUT_DYNAMICIMPORTFUNCTION,***REMOVED***'this***REMOVED***option***REMOVED***is***REMOVED***ignored***REMOVED***for***REMOVED***formats***REMOVED***other***REMOVED***than***REMOVED***"es"'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configDynamicImportFunction;
};
const***REMOVED***getEntryFileNames***REMOVED***=***REMOVED***(config,***REMOVED***unsetOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configEntryFileNames***REMOVED***=***REMOVED***config.entryFileNames;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configEntryFileNames***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unsetOptions.add('entryFileNames');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configEntryFileNames***REMOVED***??***REMOVED***'[name].js';
};
function***REMOVED***getExperimentalDeepDynamicChunkOptimization(config,***REMOVED***inputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configExperimentalDeepDynamicChunkOptimization***REMOVED***=***REMOVED***config.experimentalDeepDynamicChunkOptimization;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configExperimentalDeepDynamicChunkOptimization***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation(`The***REMOVED***"output.experimentalDeepDynamicChunkOptimization"***REMOVED***option***REMOVED***is***REMOVED***deprecated***REMOVED***as***REMOVED***Rollup***REMOVED***always***REMOVED***runs***REMOVED***the***REMOVED***full***REMOVED***chunking***REMOVED***algorithm***REMOVED***now.***REMOVED***The***REMOVED***option***REMOVED***should***REMOVED***be***REMOVED***removed.`,***REMOVED***URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION,***REMOVED***true,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configExperimentalDeepDynamicChunkOptimization***REMOVED***||***REMOVED***false;
}
function***REMOVED***getExports(config,***REMOVED***unsetOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configExports***REMOVED***=***REMOVED***config.exports;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configExports***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unsetOptions.add('exports');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!['default',***REMOVED***'named',***REMOVED***'none',***REMOVED***'auto'].includes(configExports))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidExportOptionValue(configExports));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configExports***REMOVED***||***REMOVED***'auto';
}
const***REMOVED***getGeneratedCode***REMOVED***=***REMOVED***(config,***REMOVED***preferConst)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configWithPreset***REMOVED***=***REMOVED***getOptionWithPreset(config.generatedCode,***REMOVED***generatedCodePresets,***REMOVED***'output.generatedCode',***REMOVED***URL_OUTPUT_GENERATEDCODE,***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrowFunctions:***REMOVED***configWithPreset.arrowFunctions***REMOVED***===***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constBindings:***REMOVED***configWithPreset.constBindings***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***preferConst,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***objectShorthand:***REMOVED***configWithPreset.objectShorthand***REMOVED***===***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedNamesAsProps:***REMOVED***configWithPreset.reservedNamesAsProps***REMOVED***!==***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***symbols:***REMOVED***configWithPreset.symbols***REMOVED***===***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***};
};
const***REMOVED***getIndent***REMOVED***=***REMOVED***(config,***REMOVED***compact)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(compact)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configIndent***REMOVED***=***REMOVED***config.indent;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configIndent***REMOVED***===***REMOVED***false***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***configIndent***REMOVED***??***REMOVED***true;
};
const***REMOVED***ALLOWED_INTEROP_TYPES***REMOVED***=***REMOVED***new***REMOVED***Set([
***REMOVED******REMOVED******REMOVED******REMOVED***'compat',
***REMOVED******REMOVED******REMOVED******REMOVED***'auto',
***REMOVED******REMOVED******REMOVED******REMOVED***'esModule',
***REMOVED******REMOVED******REMOVED******REMOVED***'default',
***REMOVED******REMOVED******REMOVED******REMOVED***'defaultOnly'
]);
const***REMOVED***getInterop***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configInterop***REMOVED***=***REMOVED***config.interop;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***configInterop***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***interopPerId***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***defaultInterop***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id***REMOVED***=>***REMOVED***id***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***defaultInterop***REMOVED***||***REMOVED***validateInterop((defaultInterop***REMOVED***=***REMOVED***configInterop(id)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***id***REMOVED***in***REMOVED***interopPerId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***interopPerId[id]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***validateInterop((interopPerId[id]***REMOVED***=***REMOVED***configInterop(id)));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configInterop***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***'default'***REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***validateInterop(configInterop);
};
const***REMOVED***validateInterop***REMOVED***=***REMOVED***(interop)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ALLOWED_INTEROP_TYPES.has(interop))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.interop',***REMOVED***URL_OUTPUT_INTEROP,***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***unicorn/prefer-spread
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`use***REMOVED***one***REMOVED***of***REMOVED***${Array.from(ALLOWED_INTEROP_TYPES,***REMOVED***value***REMOVED***=>***REMOVED***JSON.stringify(value)).join(',***REMOVED***')}`,***REMOVED***interop));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***interop;
};
const***REMOVED***getManualChunks***REMOVED***=***REMOVED***(config,***REMOVED***inlineDynamicImports,***REMOVED***preserveModules,***REMOVED***inputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configManualChunks***REMOVED***=***REMOVED***config.manualChunks***REMOVED***||***REMOVED***inputOptions.manualChunks;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configManualChunks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inlineDynamicImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.manualChunks',***REMOVED***URL_OUTPUT_MANUALCHUNKS,***REMOVED***'this***REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***for***REMOVED***"output.inlineDynamicImports"'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preserveModules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.manualChunks',***REMOVED***URL_OUTPUT_MANUALCHUNKS,***REMOVED***'this***REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***for***REMOVED***"output.preserveModules"'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configManualChunks***REMOVED***||***REMOVED***{};
};
const***REMOVED***getMinifyInternalExports***REMOVED***=***REMOVED***(config,***REMOVED***format,***REMOVED***compact)***REMOVED***=>***REMOVED***config.minifyInternalExports***REMOVED***??***REMOVED***(compact***REMOVED***||***REMOVED***format***REMOVED***===***REMOVED***'es'***REMOVED***||***REMOVED***format***REMOVED***===***REMOVED***'system');
const***REMOVED***getNamespaceToStringTag***REMOVED***=***REMOVED***(config,***REMOVED***generatedCode,***REMOVED***inputOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configNamespaceToStringTag***REMOVED***=***REMOVED***config.namespaceToStringTag;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configNamespaceToStringTag***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecation(`The***REMOVED***"output.namespaceToStringTag"***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***the***REMOVED***"output.generatedCode.symbols"***REMOVED***option***REMOVED***instead.`,***REMOVED***URL_OUTPUT_GENERATEDCODE_SYMBOLS,***REMOVED***true,***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configNamespaceToStringTag;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***generatedCode.symbols***REMOVED***||***REMOVED***false;
};
const***REMOVED***getSourcemapFileNames***REMOVED***=***REMOVED***(config,***REMOVED***unsetOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configSourcemapFileNames***REMOVED***=***REMOVED***config.sourcemapFileNames;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configSourcemapFileNames***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unsetOptions.add('sourcemapFileNames');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***configSourcemapFileNames;
};
const***REMOVED***getSourcemapBaseUrl***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***sourcemapBaseUrl***REMOVED***}***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcemapBaseUrl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isValidUrl(sourcemapBaseUrl))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***addTrailingSlashIfMissed(sourcemapBaseUrl);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logInvalidOption('output.sourcemapBaseUrl',***REMOVED***URL_OUTPUT_SOURCEMAPBASEURL,***REMOVED***`must***REMOVED***be***REMOVED***a***REMOVED***valid***REMOVED***URL,***REMOVED***received***REMOVED***${JSON.stringify(sourcemapBaseUrl)}`));
***REMOVED******REMOVED******REMOVED******REMOVED***}
};

function***REMOVED***rollup(rawInputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rollupInternal(rawInputOptions,***REMOVED***null);
}
async***REMOVED***function***REMOVED***rollupInternal(rawInputOptions,***REMOVED***watcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***options:***REMOVED***inputOptions,***REMOVED***unsetOptions:***REMOVED***unsetInputOptions***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***getInputOptions(rawInputOptions,***REMOVED***watcher***REMOVED***!==***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***initialiseTimers(inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***graph***REMOVED***=***REMOVED***new***REMOVED***Graph(inputOptions,***REMOVED***watcher);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***remove***REMOVED***the***REMOVED***cache***REMOVED***object***REMOVED***from***REMOVED***the***REMOVED***memory***REMOVED***after***REMOVED***graph***REMOVED***creation***REMOVED***(cache***REMOVED***is***REMOVED***not***REMOVED***used***REMOVED***anymore)
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useCache***REMOVED***=***REMOVED***rawInputOptions.cache***REMOVED***!==***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawInputOptions.cache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputOptions.cache***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawInputOptions.cache***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***timeStart('BUILD',***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***catchUnfinishedHookActions(graph.pluginDriver,***REMOVED***async***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('initialize',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***graph.pluginDriver.hookParallel('buildStart',***REMOVED***[inputOptions]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('initialize',***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***graph.build();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error_)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***watchFiles***REMOVED***=***REMOVED***Object.keys(graph.watchFiles);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(watchFiles.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error_.watchFiles***REMOVED***=***REMOVED***watchFiles;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***graph.pluginDriver.hookParallel('buildEnd',***REMOVED***[error_]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***graph.pluginDriver.hookParallel('closeBundle',***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error_;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***graph.pluginDriver.hookParallel('buildEnd',***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('BUILD',***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache:***REMOVED***useCache***REMOVED***?***REMOVED***graph.getCache()***REMOVED***:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***close()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.closed)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.closed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***graph.pluginDriver.hookParallel('closeBundle',***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closed:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***generate(rawOutputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.closed)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAlreadyClosed());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handleGenerateWrite(false,***REMOVED***inputOptions,***REMOVED***unsetInputOptions,***REMOVED***rawOutputOptions,***REMOVED***graph);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchFiles:***REMOVED***Object.keys(graph.watchFiles),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***write(rawOutputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.closed)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logAlreadyClosed());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handleGenerateWrite(true,***REMOVED***inputOptions,***REMOVED***unsetInputOptions,***REMOVED***rawOutputOptions,***REMOVED***graph);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inputOptions.perf)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.getTimings***REMOVED***=***REMOVED***getTimings;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
}
async***REMOVED***function***REMOVED***getInputOptions(initialInputOptions,***REMOVED***watchMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!initialInputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('You***REMOVED***must***REMOVED***supply***REMOVED***an***REMOVED***options***REMOVED***object***REMOVED***to***REMOVED***rollup');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***processedInputOptions***REMOVED***=***REMOVED***await***REMOVED***getProcessedInputOptions(initialInputOptions,***REMOVED***watchMode);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***options,***REMOVED***unsetOptions***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***normalizeInputOptions(processedInputOptions,***REMOVED***watchMode);
***REMOVED******REMOVED******REMOVED******REMOVED***normalizePlugins(options.plugins,***REMOVED***ANONYMOUS_PLUGIN_PREFIX);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***options,***REMOVED***unsetOptions***REMOVED***};
}
async***REMOVED***function***REMOVED***getProcessedInputOptions(inputOptions,***REMOVED***watchMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***getSortedValidatedPlugins('options',***REMOVED***await***REMOVED***normalizePluginOption(inputOptions.plugins));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logLevel***REMOVED***=***REMOVED***inputOptions.logLevel***REMOVED***||***REMOVED***LOGLEVEL_INFO;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logger***REMOVED***=***REMOVED***getLogger(plugins,***REMOVED***getOnLog(inputOptions,***REMOVED***logLevel),***REMOVED***watchMode,***REMOVED***logLevel);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***name,***REMOVED***options***REMOVED***}***REMOVED***=***REMOVED***plugin;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***'handler'***REMOVED***in***REMOVED***options***REMOVED***?***REMOVED***options.handler***REMOVED***:***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***processedOptions***REMOVED***=***REMOVED***await***REMOVED***handler.call({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debug:***REMOVED***getLogHandler(LOGLEVEL_DEBUG,***REMOVED***'PLUGIN_LOG',***REMOVED***logger,***REMOVED***name,***REMOVED***logLevel),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***(error_)***REMOVED***=>***REMOVED***error(logPluginError(normalizeLog(error_),***REMOVED***name,***REMOVED***{***REMOVED***hook:***REMOVED***'onLog'***REMOVED***})),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***info:***REMOVED***getLogHandler(LOGLEVEL_INFO,***REMOVED***'PLUGIN_LOG',***REMOVED***logger,***REMOVED***name,***REMOVED***logLevel),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{***REMOVED***rollupVersion:***REMOVED***version$1,***REMOVED***watchMode***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn:***REMOVED***getLogHandler(LOGLEVEL_WARN,***REMOVED***'PLUGIN_WARNING',***REMOVED***logger,***REMOVED***name,***REMOVED***logLevel)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***inputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(processedOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputOptions***REMOVED***=***REMOVED***processedOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inputOptions;
}
function***REMOVED***normalizePlugins(plugins,***REMOVED***anonymousPrefix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[index,***REMOVED***plugin]***REMOVED***of***REMOVED***plugins.entries())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!plugin.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin.name***REMOVED***=***REMOVED***`${anonymousPrefix}${index***REMOVED***+***REMOVED***1}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
async***REMOVED***function***REMOVED***handleGenerateWrite(isWrite,***REMOVED***inputOptions,***REMOVED***unsetInputOptions,***REMOVED***rawOutputOptions,***REMOVED***graph)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***options:***REMOVED***outputOptions,***REMOVED***outputPluginDriver,***REMOVED***unsetOptions***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***getOutputOptionsAndPluginDriver(rawOutputOptions,***REMOVED***graph.pluginDriver,***REMOVED***inputOptions,***REMOVED***unsetInputOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***catchUnfinishedHookActions(outputPluginDriver,***REMOVED***async***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bundle***REMOVED***=***REMOVED***new***REMOVED***Bundle(outputOptions,***REMOVED***unsetOptions,***REMOVED***inputOptions,***REMOVED***outputPluginDriver,***REMOVED***graph);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***generated***REMOVED***=***REMOVED***await***REMOVED***bundle.generate(isWrite);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isWrite)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeStart('WRITE',***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!outputOptions.dir***REMOVED***&&***REMOVED***!outputOptions.file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error(logMissingFileOrDirOption());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(Object.values(generated).map(chunk***REMOVED***=>***REMOVED***graph.fileOperationQueue.run(()***REMOVED***=>***REMOVED***writeOutputFile(chunk,***REMOVED***outputOptions))));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***outputPluginDriver.hookParallel('writeBundle',***REMOVED***[outputOptions,***REMOVED***generated]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeEnd('WRITE',***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createOutput(generated);
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
async***REMOVED***function***REMOVED***getOutputOptionsAndPluginDriver(rawOutputOptions,***REMOVED***inputPluginDriver,***REMOVED***inputOptions,***REMOVED***unsetInputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rawOutputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('You***REMOVED***must***REMOVED***supply***REMOVED***an***REMOVED***options***REMOVED***object');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawPlugins***REMOVED***=***REMOVED***await***REMOVED***normalizePluginOption(rawOutputOptions.plugins);
***REMOVED******REMOVED******REMOVED******REMOVED***normalizePlugins(rawPlugins,***REMOVED***ANONYMOUS_OUTPUT_PLUGIN_PREFIX);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outputPluginDriver***REMOVED***=***REMOVED***inputPluginDriver.createOutputPluginDriver(rawPlugins);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(await***REMOVED***getOutputOptions(inputOptions,***REMOVED***unsetInputOptions,***REMOVED***rawOutputOptions,***REMOVED***outputPluginDriver)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outputPluginDriver
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***getOutputOptions(inputOptions,***REMOVED***unsetInputOptions,***REMOVED***rawOutputOptions,***REMOVED***outputPluginDriver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***normalizeOutputOptions(outputPluginDriver.hookReduceArg0Sync('outputOptions',***REMOVED***[rawOutputOptions],***REMOVED***(outputOptions,***REMOVED***result)***REMOVED***=>***REMOVED***result***REMOVED***||***REMOVED***outputOptions,***REMOVED***pluginContext***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***emitError***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***pluginContext.error(logCannotEmitFromOptionsHook());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...pluginContext,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitFile:***REMOVED***emitError,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setAssetSource:***REMOVED***emitError
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***inputOptions,***REMOVED***unsetInputOptions);
}
function***REMOVED***createOutput(outputBundle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***output:***REMOVED***Object.values(outputBundle).filter(outputFile***REMOVED***=>***REMOVED***Object.keys(outputFile).length***REMOVED***>***REMOVED***0).sort((outputFileA,***REMOVED***outputFileB)***REMOVED***=>***REMOVED***getSortingFileType(outputFileA)***REMOVED***-***REMOVED***getSortingFileType(outputFileB))
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
var***REMOVED***SortingFileType;
(function***REMOVED***(SortingFileType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***SortingFileType[SortingFileType["ENTRY_CHUNK"]***REMOVED***=***REMOVED***0]***REMOVED***=***REMOVED***"ENTRY_CHUNK";
***REMOVED******REMOVED******REMOVED******REMOVED***SortingFileType[SortingFileType["SECONDARY_CHUNK"]***REMOVED***=***REMOVED***1]***REMOVED***=***REMOVED***"SECONDARY_CHUNK";
***REMOVED******REMOVED******REMOVED******REMOVED***SortingFileType[SortingFileType["ASSET"]***REMOVED***=***REMOVED***2]***REMOVED***=***REMOVED***"ASSET";
})(SortingFileType***REMOVED***||***REMOVED***(SortingFileType***REMOVED***=***REMOVED***{}));
function***REMOVED***getSortingFileType(file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file.type***REMOVED***===***REMOVED***'asset')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***SortingFileType.ASSET;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file.isEntry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***SortingFileType.ENTRY_CHUNK;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***SortingFileType.SECONDARY_CHUNK;
}
async***REMOVED***function***REMOVED***writeOutputFile(outputFile,***REMOVED***outputOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileName***REMOVED***=***REMOVED***node_path.resolve(outputOptions.dir***REMOVED***||***REMOVED***node_path.dirname(outputOptions.file),***REMOVED***outputFile.fileName);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'recursive:***REMOVED***true'***REMOVED***does***REMOVED***not***REMOVED***throw***REMOVED***if***REMOVED***the***REMOVED***folder***REMOVED***structure,***REMOVED***or***REMOVED***parts***REMOVED***of***REMOVED***it,***REMOVED***already***REMOVED***exist
***REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***promises.mkdir(node_path.dirname(fileName),***REMOVED***{***REMOVED***recursive:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promises.writeFile(fileName,***REMOVED***outputFile.type***REMOVED***===***REMOVED***'asset'***REMOVED***?***REMOVED***outputFile.source***REMOVED***:***REMOVED***outputFile.code);
}
/**
***REMOVED*******REMOVED***Auxiliary***REMOVED***function***REMOVED***for***REMOVED***defining***REMOVED***rollup***REMOVED***configuration
***REMOVED*******REMOVED***Mainly***REMOVED***to***REMOVED***facilitate***REMOVED***IDE***REMOVED***code***REMOVED***prompts,***REMOVED***after***REMOVED***all,***REMOVED***export***REMOVED***default***REMOVED***does***REMOVED***not
***REMOVED*******REMOVED***prompt,***REMOVED***even***REMOVED***if***REMOVED***you***REMOVED***add***REMOVED***@type***REMOVED***annotations,***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***accurate
***REMOVED*******REMOVED***@param***REMOVED***options
***REMOVED****/
function***REMOVED***defineConfig(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options;
}

exports.LOGLEVEL_DEBUG***REMOVED***=***REMOVED***LOGLEVEL_DEBUG;
exports.LOGLEVEL_WARN***REMOVED***=***REMOVED***LOGLEVEL_WARN;
exports.URL_AVOIDING_EVAL***REMOVED***=***REMOVED***URL_AVOIDING_EVAL;
exports.URL_NAME_IS_NOT_EXPORTED***REMOVED***=***REMOVED***URL_NAME_IS_NOT_EXPORTED;
exports.URL_OUTPUT_EXPORTS***REMOVED***=***REMOVED***URL_OUTPUT_EXPORTS;
exports.URL_OUTPUT_GLOBALS***REMOVED***=***REMOVED***URL_OUTPUT_GLOBALS;
exports.URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT***REMOVED***=***REMOVED***URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT;
exports.URL_THIS_IS_UNDEFINED***REMOVED***=***REMOVED***URL_THIS_IS_UNDEFINED;
exports.URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY***REMOVED***=***REMOVED***URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY;
exports.URL_WATCH***REMOVED***=***REMOVED***URL_WATCH;
exports.blue***REMOVED***=***REMOVED***blue;
exports.bold***REMOVED***=***REMOVED***bold;
exports.commandAliases***REMOVED***=***REMOVED***commandAliases;
exports.createFilter***REMOVED***=***REMOVED***createFilter;
exports.cyan***REMOVED***=***REMOVED***cyan$1;
exports.cyan$1***REMOVED***=***REMOVED***cyan;
exports.defineConfig***REMOVED***=***REMOVED***defineConfig;
exports.ensureArray***REMOVED***=***REMOVED***ensureArray$1;
exports.error***REMOVED***=***REMOVED***error;
exports.getAliasName***REMOVED***=***REMOVED***getAliasName;
exports.getAugmentedNamespace***REMOVED***=***REMOVED***getAugmentedNamespace;
exports.getNewArray***REMOVED***=***REMOVED***getNewArray;
exports.getOrCreate***REMOVED***=***REMOVED***getOrCreate;
exports.getRollupUrl***REMOVED***=***REMOVED***getRollupUrl;
exports.gray***REMOVED***=***REMOVED***gray;
exports.green***REMOVED***=***REMOVED***green;
exports.handleError***REMOVED***=***REMOVED***handleError;
exports.isWatchEnabled***REMOVED***=***REMOVED***isWatchEnabled;
exports.logCannotBundleConfigAsEsm***REMOVED***=***REMOVED***logCannotBundleConfigAsEsm;
exports.logCannotLoadConfigAsCjs***REMOVED***=***REMOVED***logCannotLoadConfigAsCjs;
exports.logCannotLoadConfigAsEsm***REMOVED***=***REMOVED***logCannotLoadConfigAsEsm;
exports.logDuplicateImportOptions***REMOVED***=***REMOVED***logDuplicateImportOptions;
exports.logFailAfterWarnings***REMOVED***=***REMOVED***logFailAfterWarnings;
exports.logInvalidOption***REMOVED***=***REMOVED***logInvalidOption;
exports.logMissingConfig***REMOVED***=***REMOVED***logMissingConfig;
exports.logMissingExternalConfig***REMOVED***=***REMOVED***logMissingExternalConfig;
exports.logOnlyInlineSourcemapsForStdout***REMOVED***=***REMOVED***logOnlyInlineSourcemapsForStdout;
exports.mergeOptions***REMOVED***=***REMOVED***mergeOptions;
exports.normalizePluginOption***REMOVED***=***REMOVED***normalizePluginOption;
exports.picomatch***REMOVED***=***REMOVED***picomatch;
exports.printQuotedStringList***REMOVED***=***REMOVED***printQuotedStringList;
exports.relativeId***REMOVED***=***REMOVED***relativeId;
exports.rollup***REMOVED***=***REMOVED***rollup;
exports.rollupInternal***REMOVED***=***REMOVED***rollupInternal;
exports.stderr***REMOVED***=***REMOVED***stderr;
exports.underline***REMOVED***=***REMOVED***underline;
exports.version***REMOVED***=***REMOVED***version$1;
exports.yellow***REMOVED***=***REMOVED***yellow;
//#***REMOVED***sourceMappingURL=rollup.js.map
