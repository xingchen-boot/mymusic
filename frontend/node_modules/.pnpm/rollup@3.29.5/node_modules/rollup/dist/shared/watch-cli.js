/*
***REMOVED******REMOVED***@license
	Rollup.js***REMOVED***v3.29.4
	Sat,***REMOVED***21***REMOVED***Sep***REMOVED***2024***REMOVED***06:29:06***REMOVED***GMT***REMOVED***-***REMOVED***commit***REMOVED***2ef77c00ec2635d42697cff2c0567ccc8db34fb4

	https://github.com/rollup/rollup

	Released***REMOVED***under***REMOVED***the***REMOVED***MIT***REMOVED***License.
*/
'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***Symbol.toStringTag,***REMOVED***{***REMOVED***value:***REMOVED***'Module'***REMOVED***});

const***REMOVED***promises***REMOVED***=***REMOVED***require('node:fs/promises');
const***REMOVED***process$2***REMOVED***=***REMOVED***require('node:process');
const***REMOVED***index***REMOVED***=***REMOVED***require('./index.js');
const***REMOVED***cli***REMOVED***=***REMOVED***require('../bin/rollup');
const***REMOVED***rollup***REMOVED***=***REMOVED***require('./rollup.js');
const***REMOVED***loadConfigFile_js***REMOVED***=***REMOVED***require('./loadConfigFile.js');
const***REMOVED***node_child_process***REMOVED***=***REMOVED***require('node:child_process');
const***REMOVED***watchProxy***REMOVED***=***REMOVED***require('./watch-proxy.js');
require('fs');
require('util');
require('stream');
require('path');
require('os');
require('./fsevents-importer.js');
require('events');
require('node:path');
require('tty');
require('node:perf_hooks');
require('node:crypto');
require('node:url');
require('../getLogFilter.js');

function***REMOVED***timeZone(date***REMOVED***=***REMOVED***new***REMOVED***Date())***REMOVED***{
	const***REMOVED***offset***REMOVED***=***REMOVED***date.getTimezoneOffset();
	const***REMOVED***absOffset***REMOVED***=***REMOVED***Math.abs(offset);
	const***REMOVED***hours***REMOVED***=***REMOVED***Math.floor(absOffset***REMOVED***/***REMOVED***60);
	const***REMOVED***minutes***REMOVED***=***REMOVED***absOffset***REMOVED***%***REMOVED***60;
	const***REMOVED***minutesOut***REMOVED***=***REMOVED***minutes***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***':'***REMOVED***+***REMOVED***('0'***REMOVED***+***REMOVED***minutes).slice(-2)***REMOVED***:***REMOVED***'';
	return***REMOVED***(offset***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***'+'***REMOVED***:***REMOVED***'-')***REMOVED***+***REMOVED***hours***REMOVED***+***REMOVED***minutesOut;
}

function***REMOVED***dateTime(options***REMOVED***=***REMOVED***{})***REMOVED***{
	let***REMOVED***{
		date***REMOVED***=***REMOVED***new***REMOVED***Date(),
		local***REMOVED***=***REMOVED***true,
		showTimeZone***REMOVED***=***REMOVED***false,
		showMilliseconds***REMOVED***=***REMOVED***false
	}***REMOVED***=***REMOVED***options;

	if***REMOVED***(local)***REMOVED***{
		//***REMOVED***Offset***REMOVED***the***REMOVED***date***REMOVED***so***REMOVED***it***REMOVED***will***REMOVED***return***REMOVED***the***REMOVED***correct***REMOVED***value***REMOVED***when***REMOVED***getting***REMOVED***the***REMOVED***ISO***REMOVED***string.
		date***REMOVED***=***REMOVED***new***REMOVED***Date(date.getTime()***REMOVED***-***REMOVED***(date.getTimezoneOffset()***REMOVED*******REMOVED***60000));
	}

	let***REMOVED***end***REMOVED***=***REMOVED***'';

	if***REMOVED***(showTimeZone)***REMOVED***{
		end***REMOVED***=***REMOVED***'***REMOVED***UTC'***REMOVED***+***REMOVED***(local***REMOVED***?***REMOVED***timeZone(date)***REMOVED***:***REMOVED***'');
	}

	if***REMOVED***(showMilliseconds***REMOVED***&&***REMOVED***date.getUTCMilliseconds()***REMOVED***>***REMOVED***0)***REMOVED***{
		end***REMOVED***=***REMOVED***`***REMOVED***${date.getUTCMilliseconds()}ms${end}`;
	}

	return***REMOVED***date
		.toISOString()
		.replace(/T/,***REMOVED***'***REMOVED***')
		.replace(/\..+/,***REMOVED***end);
}

/**
***REMOVED*******REMOVED***This***REMOVED***is***REMOVED***not***REMOVED***the***REMOVED***set***REMOVED***of***REMOVED***all***REMOVED***possible***REMOVED***signals.
***REMOVED****
***REMOVED*******REMOVED***It***REMOVED***IS,***REMOVED***however,***REMOVED***the***REMOVED***set***REMOVED***of***REMOVED***all***REMOVED***signals***REMOVED***that***REMOVED***trigger
***REMOVED*******REMOVED***an***REMOVED***exit***REMOVED***on***REMOVED***either***REMOVED***Linux***REMOVED***or***REMOVED***BSD***REMOVED***systems.***REMOVED******REMOVED***Linux***REMOVED***is***REMOVED***a
***REMOVED*******REMOVED***superset***REMOVED***of***REMOVED***the***REMOVED***signal***REMOVED***names***REMOVED***supported***REMOVED***on***REMOVED***BSD,***REMOVED***and
***REMOVED*******REMOVED***the***REMOVED***unknown***REMOVED***signals***REMOVED***just***REMOVED***fail***REMOVED***to***REMOVED***register,***REMOVED***so***REMOVED***we***REMOVED***can
***REMOVED*******REMOVED***catch***REMOVED***that***REMOVED***easily***REMOVED***enough.
***REMOVED****
***REMOVED*******REMOVED***Windows***REMOVED***signals***REMOVED***are***REMOVED***a***REMOVED***different***REMOVED***set,***REMOVED***since***REMOVED***there***REMOVED***are
***REMOVED*******REMOVED***signals***REMOVED***that***REMOVED***terminate***REMOVED***Windows***REMOVED***processes,***REMOVED***but***REMOVED***don't
***REMOVED*******REMOVED***terminate***REMOVED***(or***REMOVED***don't***REMOVED***even***REMOVED***exist)***REMOVED***on***REMOVED***Posix***REMOVED***systems.
***REMOVED****
***REMOVED*******REMOVED***Don't***REMOVED***bother***REMOVED***with***REMOVED***SIGKILL.***REMOVED******REMOVED***It's***REMOVED***uncatchable,***REMOVED***which
***REMOVED*******REMOVED***means***REMOVED***that***REMOVED***we***REMOVED***can't***REMOVED***fire***REMOVED***any***REMOVED***callbacks***REMOVED***anyway.
***REMOVED****
***REMOVED*******REMOVED***If***REMOVED***a***REMOVED***user***REMOVED***does***REMOVED***happen***REMOVED***to***REMOVED***register***REMOVED***a***REMOVED***handler***REMOVED***on***REMOVED***a***REMOVED***non-
***REMOVED*******REMOVED***fatal***REMOVED***signal***REMOVED***like***REMOVED***SIGWINCH***REMOVED***or***REMOVED***something,***REMOVED***and***REMOVED***then
***REMOVED*******REMOVED***exit,***REMOVED***it'll***REMOVED***end***REMOVED***up***REMOVED***firing***REMOVED***`process.emit('exit')`,***REMOVED***so
***REMOVED*******REMOVED***the***REMOVED***handler***REMOVED***will***REMOVED***be***REMOVED***fired***REMOVED***anyway.
***REMOVED****
***REMOVED*******REMOVED***SIGBUS,***REMOVED***SIGFPE,***REMOVED***SIGSEGV***REMOVED***and***REMOVED***SIGILL,***REMOVED***when***REMOVED***not***REMOVED***raised
***REMOVED*******REMOVED***artificially,***REMOVED***inherently***REMOVED***leave***REMOVED***the***REMOVED***process***REMOVED***in***REMOVED***a
***REMOVED*******REMOVED***state***REMOVED***from***REMOVED***which***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***safe***REMOVED***to***REMOVED***try***REMOVED***and***REMOVED***enter***REMOVED***JS
***REMOVED*******REMOVED***listeners.
***REMOVED****/
const***REMOVED***signals***REMOVED***=***REMOVED***[];
signals.push('SIGHUP',***REMOVED***'SIGINT',***REMOVED***'SIGTERM');
if***REMOVED***(process.platform***REMOVED***!==***REMOVED***'win32')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***signals.push('SIGALRM',***REMOVED***'SIGABRT',***REMOVED***'SIGVTALRM',***REMOVED***'SIGXCPU',***REMOVED***'SIGXFSZ',***REMOVED***'SIGUSR2',***REMOVED***'SIGTRAP',***REMOVED***'SIGSYS',***REMOVED***'SIGQUIT',***REMOVED***'SIGIOT'
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***should***REMOVED***detect***REMOVED***profiler***REMOVED***and***REMOVED***enable/disable***REMOVED***accordingly.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***see***REMOVED***#21
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'SIGPROF'
***REMOVED******REMOVED******REMOVED******REMOVED***);
}
if***REMOVED***(process.platform***REMOVED***===***REMOVED***'linux')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***signals.push('SIGIO',***REMOVED***'SIGPOLL',***REMOVED***'SIGPWR',***REMOVED***'SIGSTKFLT');
}

//***REMOVED***Note:***REMOVED***since***REMOVED***nyc***REMOVED***uses***REMOVED***this***REMOVED***module***REMOVED***to***REMOVED***output***REMOVED***coverage,***REMOVED***any***REMOVED***lines
//***REMOVED***that***REMOVED***are***REMOVED***in***REMOVED***the***REMOVED***direct***REMOVED***sync***REMOVED***flow***REMOVED***of***REMOVED***nyc's***REMOVED***outputCoverage***REMOVED***are
//***REMOVED***ignored,***REMOVED***since***REMOVED***we***REMOVED***can***REMOVED***never***REMOVED***get***REMOVED***coverage***REMOVED***for***REMOVED***them.
//***REMOVED***grab***REMOVED***a***REMOVED***reference***REMOVED***to***REMOVED***node's***REMOVED***real***REMOVED***process***REMOVED***object***REMOVED***right***REMOVED***away
const***REMOVED***processOk***REMOVED***=***REMOVED***(process)***REMOVED***=>***REMOVED***!!process***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process***REMOVED***===***REMOVED***'object'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.removeListener***REMOVED***===***REMOVED***'function'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.emit***REMOVED***===***REMOVED***'function'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.reallyExit***REMOVED***===***REMOVED***'function'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.listeners***REMOVED***===***REMOVED***'function'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.kill***REMOVED***===***REMOVED***'function'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.pid***REMOVED***===***REMOVED***'number'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***process.on***REMOVED***===***REMOVED***'function';
const***REMOVED***kExitEmitter***REMOVED***=***REMOVED***Symbol.for('signal-exit***REMOVED***emitter');
const***REMOVED***global***REMOVED***=***REMOVED***globalThis;
const***REMOVED***ObjectDefineProperty***REMOVED***=***REMOVED***Object.defineProperty.bind(Object);
//***REMOVED***teeny***REMOVED***special***REMOVED***purpose***REMOVED***ee
class***REMOVED***Emitter***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emitted***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***afterExit:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exit:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***listeners***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***afterExit:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exit:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***=***REMOVED***Math.random();
***REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(global[kExitEmitter])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***global[kExitEmitter];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ObjectDefineProperty(global,***REMOVED***kExitEmitter,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***on(ev,***REMOVED***fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.listeners[ev].push(fn);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***removeListener(ev,***REMOVED***fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***list***REMOVED***=***REMOVED***this.listeners[ev];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***list.indexOf(fn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***list.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***list.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***list.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***emit(ev,***REMOVED***code,***REMOVED***signal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.emitted[ev])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emitted[ev]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ret***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***fn***REMOVED***of***REMOVED***this.listeners[ev])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***=***REMOVED***fn(code,***REMOVED***signal)***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***ret;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ev***REMOVED***===***REMOVED***'exit')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***=***REMOVED***this.emit('afterExit',***REMOVED***code,***REMOVED***signal)***REMOVED***||***REMOVED***ret;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
class***REMOVED***SignalExitBase***REMOVED***{
}
const***REMOVED***signalExitWrap***REMOVED***=***REMOVED***(handler)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onExit(cb,***REMOVED***opts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handler.onExit(cb,***REMOVED***opts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***load()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handler.load();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unload()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***handler.unload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***};
};
class***REMOVED***SignalExitFallback***REMOVED***extends***REMOVED***SignalExitBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***onExit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***load()***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***unload()***REMOVED***{***REMOVED***}
}
class***REMOVED***SignalExit***REMOVED***extends***REMOVED***SignalExitBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"SIGHUP"***REMOVED***throws***REMOVED***an***REMOVED***`ENOSYS`***REMOVED***error***REMOVED***on***REMOVED***Windows,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***use***REMOVED***a***REMOVED***supported***REMOVED***signal***REMOVED***instead
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***#hupSig***REMOVED***=***REMOVED***process$1.platform***REMOVED***===***REMOVED***'win32'***REMOVED***?***REMOVED***'SIGINT'***REMOVED***:***REMOVED***'SIGHUP';
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***#emitter***REMOVED***=***REMOVED***new***REMOVED***Emitter();
***REMOVED******REMOVED******REMOVED******REMOVED***#process;
***REMOVED******REMOVED******REMOVED******REMOVED***#originalProcessEmit;
***REMOVED******REMOVED******REMOVED******REMOVED***#originalProcessReallyExit;
***REMOVED******REMOVED******REMOVED******REMOVED***#sigListeners***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***#loaded***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(process)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process***REMOVED***=***REMOVED***process;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***{***REMOVED***<signal>:***REMOVED***<listener***REMOVED***fn>,***REMOVED***...***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#sigListeners***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***sig***REMOVED***of***REMOVED***signals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#sigListeners[sig]***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***there***REMOVED***are***REMOVED***no***REMOVED***other***REMOVED***listeners,***REMOVED***an***REMOVED***exit***REMOVED***is***REMOVED***coming!
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Simplest***REMOVED***way:***REMOVED***remove***REMOVED***us***REMOVED***and***REMOVED***then***REMOVED***re-send***REMOVED***the***REMOVED***signal.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***know***REMOVED***that***REMOVED***this***REMOVED***will***REMOVED***kill***REMOVED***the***REMOVED***process,***REMOVED***so***REMOVED***we***REMOVED***can
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***safely***REMOVED***emit***REMOVED***now.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***listeners***REMOVED***=***REMOVED***this.#process.listeners(sig);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***count***REMOVED***}***REMOVED***=***REMOVED***this.#emitter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***is***REMOVED***a***REMOVED***workaround***REMOVED***for***REMOVED***the***REMOVED***fact***REMOVED***that***REMOVED***signal-exit***REMOVED***v3***REMOVED***and***REMOVED***signal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***exit***REMOVED***v4***REMOVED***are***REMOVED***not***REMOVED***aware***REMOVED***of***REMOVED***each***REMOVED***other,***REMOVED***and***REMOVED***each***REMOVED***will***REMOVED***attempt***REMOVED***to***REMOVED***let
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***other***REMOVED***handle***REMOVED***it,***REMOVED***so***REMOVED***neither***REMOVED***of***REMOVED***them***REMOVED***do.***REMOVED***To***REMOVED***correct***REMOVED***this,***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***detect***REMOVED***if***REMOVED***we're***REMOVED***the***REMOVED***only***REMOVED***handler***REMOVED****except****REMOVED***for***REMOVED***previous***REMOVED***versions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***of***REMOVED***signal-exit,***REMOVED***and***REMOVED***increment***REMOVED***by***REMOVED***the***REMOVED***count***REMOVED***of***REMOVED***listeners***REMOVED***it***REMOVED***has
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***created.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***process;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***p.__signal_exit_emitter__***REMOVED***===***REMOVED***'object'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***p.__signal_exit_emitter__.count***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***p.__signal_exit_emitter__.count;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(listeners.length***REMOVED***===***REMOVED***count)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***this.#emitter.emit('exit',***REMOVED***null,***REMOVED***sig);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***sig***REMOVED***===***REMOVED***'SIGHUP'***REMOVED***?***REMOVED***this.#hupSig***REMOVED***:***REMOVED***sig;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ret)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.kill(process.pid,***REMOVED***s);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#originalProcessReallyExit***REMOVED***=***REMOVED***process.reallyExit;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#originalProcessEmit***REMOVED***=***REMOVED***process.emit;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***onExit(cb,***REMOVED***opts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!processOk(this.#process))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#loaded***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.load();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ev***REMOVED***=***REMOVED***opts?.alwaysLast***REMOVED***?***REMOVED***'afterExit'***REMOVED***:***REMOVED***'exit';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.on(ev,***REMOVED***cb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.removeListener(ev,***REMOVED***cb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#emitter.listeners['exit'].length***REMOVED***===***REMOVED***0***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.listeners['afterExit'].length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***load()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#loaded)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#loaded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***is***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***onSignalExit's***REMOVED***that***REMOVED***are***REMOVED***in***REMOVED***play.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***It's***REMOVED***important***REMOVED***so***REMOVED***that***REMOVED***we***REMOVED***can***REMOVED***count***REMOVED***the***REMOVED***correct***REMOVED***number***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***listeners***REMOVED***on***REMOVED***signals,***REMOVED***and***REMOVED***don't***REMOVED***wait***REMOVED***for***REMOVED***the***REMOVED***other***REMOVED***one***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***handle***REMOVED***it***REMOVED***instead***REMOVED***of***REMOVED***us.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.count***REMOVED***+=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***sig***REMOVED***of***REMOVED***signals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fn***REMOVED***=***REMOVED***this.#sigListeners[sig];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fn)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.on(sig,***REMOVED***fn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(_)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.emit***REMOVED***=***REMOVED***(ev,***REMOVED***...a)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#processEmit(ev,***REMOVED***...a);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.reallyExit***REMOVED***=***REMOVED***(code)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#processReallyExit(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***unload()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#loaded)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#loaded***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signals.forEach(sig***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***listener***REMOVED***=***REMOVED***this.#sigListeners[sig];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!listener)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Listener***REMOVED***not***REMOVED***defined***REMOVED***for***REMOVED***signal:***REMOVED***'***REMOVED***+***REMOVED***sig);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.removeListener(sig,***REMOVED***listener);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(_)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.emit***REMOVED***=***REMOVED***this.#originalProcessEmit;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.reallyExit***REMOVED***=***REMOVED***this.#originalProcessReallyExit;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.count***REMOVED***-=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#processReallyExit(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!processOk(this.#process))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.exitCode***REMOVED***=***REMOVED***code***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.emit('exit',***REMOVED***this.#process.exitCode,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#originalProcessReallyExit.call(this.#process,***REMOVED***this.#process.exitCode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#processEmit(ev,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***og***REMOVED***=***REMOVED***this.#originalProcessEmit;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ev***REMOVED***===***REMOVED***'exit'***REMOVED***&&***REMOVED***processOk(this.#process))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***args[0]***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#process.exitCode***REMOVED***=***REMOVED***args[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***og.call(this.#process,***REMOVED***ev,***REMOVED***...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#emitter.emit('exit',***REMOVED***this.#process.exitCode,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***og.call(this.#process,***REMOVED***ev,***REMOVED***...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***process$1***REMOVED***=***REMOVED***globalThis.process;
//***REMOVED***wrap***REMOVED***so***REMOVED***that***REMOVED***we***REMOVED***call***REMOVED***the***REMOVED***method***REMOVED***on***REMOVED***the***REMOVED***actual***REMOVED***handler,***REMOVED***without
//***REMOVED***exporting***REMOVED***it***REMOVED***directly.
const***REMOVED***{***REMOVED***
/**
***REMOVED*******REMOVED***Called***REMOVED***when***REMOVED***the***REMOVED***process***REMOVED***is***REMOVED***exiting,***REMOVED***whether***REMOVED***via***REMOVED***signal,***REMOVED***explicit
***REMOVED*******REMOVED***exit,***REMOVED***or***REMOVED***running***REMOVED***out***REMOVED***of***REMOVED***stuff***REMOVED***to***REMOVED***do.
***REMOVED****
***REMOVED*******REMOVED***If***REMOVED***the***REMOVED***global***REMOVED***process***REMOVED***object***REMOVED***is***REMOVED***not***REMOVED***suitable***REMOVED***for***REMOVED***instrumentation,
***REMOVED*******REMOVED***then***REMOVED***this***REMOVED***will***REMOVED***be***REMOVED***a***REMOVED***no-op.
***REMOVED****
***REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***may***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***unload***REMOVED***signal-exit.
***REMOVED****/
onExit,***REMOVED***
/**
***REMOVED*******REMOVED***Load***REMOVED***the***REMOVED***listeners.***REMOVED******REMOVED***Likely***REMOVED***you***REMOVED***never***REMOVED***need***REMOVED***to***REMOVED***call***REMOVED***this,***REMOVED***unless
***REMOVED*******REMOVED***doing***REMOVED***a***REMOVED***rather***REMOVED***deep***REMOVED***integration***REMOVED***with***REMOVED***signal-exit***REMOVED***functionality.
***REMOVED*******REMOVED***Mostly***REMOVED***exposed***REMOVED***for***REMOVED***the***REMOVED***benefit***REMOVED***of***REMOVED***testing.
***REMOVED****
***REMOVED*******REMOVED***@internal
***REMOVED****/
load,***REMOVED***
/**
***REMOVED*******REMOVED***Unload***REMOVED***the***REMOVED***listeners.***REMOVED******REMOVED***Likely***REMOVED***you***REMOVED***never***REMOVED***need***REMOVED***to***REMOVED***call***REMOVED***this,***REMOVED***unless
***REMOVED*******REMOVED***doing***REMOVED***a***REMOVED***rather***REMOVED***deep***REMOVED***integration***REMOVED***with***REMOVED***signal-exit***REMOVED***functionality.
***REMOVED*******REMOVED***Mostly***REMOVED***exposed***REMOVED***for***REMOVED***the***REMOVED***benefit***REMOVED***of***REMOVED***testing.
***REMOVED****
***REMOVED*******REMOVED***@internal
***REMOVED****/
unload,***REMOVED***}***REMOVED***=***REMOVED***signalExitWrap(processOk(process$1)***REMOVED***?***REMOVED***new***REMOVED***SignalExit(process$1)***REMOVED***:***REMOVED***new***REMOVED***SignalExitFallback());

const***REMOVED***CLEAR_SCREEN***REMOVED***=***REMOVED***'\u001Bc';
function***REMOVED***getResetScreen(configs,***REMOVED***allowClearScreen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***clearScreen***REMOVED***=***REMOVED***allowClearScreen;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***config***REMOVED***of***REMOVED***configs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(config.watch***REMOVED***&&***REMOVED***config.watch.clearScreen***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearScreen***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(clearScreen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(heading)***REMOVED***=>***REMOVED***rollup.stderr(CLEAR_SCREEN***REMOVED***+***REMOVED***heading);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***firstRun***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(heading)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstRun)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(heading);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstRun***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

function***REMOVED***extractWatchHooks(command)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(command.watch))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***command.watch
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(value***REMOVED***=>***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'object')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.reduce((accumulator,***REMOVED***keyValueOption)***REMOVED***=>***REMOVED***({***REMOVED***...accumulator,***REMOVED***...keyValueOption***REMOVED***}),***REMOVED***{});
}
function***REMOVED***createWatchHooks(command)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***watchHooks***REMOVED***=***REMOVED***extractWatchHooks(command);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(hook)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(watchHooks[hook])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cmd***REMOVED***=***REMOVED***watchHooks[hook];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!command.silent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(rollup.cyan$1(`watch.${hook}***REMOVED***${rollup.bold(`$***REMOVED***${cmd}`)}`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***!!***REMOVED***important***REMOVED***-***REMOVED***use***REMOVED***stderr***REMOVED***for***REMOVED***all***REMOVED***writes***REMOVED***from***REMOVED***execSync
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stdio***REMOVED***=***REMOVED***[process.stdin,***REMOVED***process.stderr,***REMOVED***process.stderr];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node_child_process.execSync(cmd,***REMOVED***{***REMOVED***stdio:***REMOVED***command.silent***REMOVED***?***REMOVED***'ignore'***REMOVED***:***REMOVED***stdio***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(error.message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
}

async***REMOVED***function***REMOVED***watch(command)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***process$2.env.ROLLUP_WATCH***REMOVED***=***REMOVED***'true';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTTY***REMOVED***=***REMOVED***process$2.stderr.isTTY;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***silent***REMOVED***=***REMOVED***command.silent;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***watcher;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***configWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resetScreen;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configFile***REMOVED***=***REMOVED***command.config***REMOVED***?***REMOVED***await***REMOVED***cli.getConfigPath(command.config)***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***runWatchHook***REMOVED***=***REMOVED***createWatchHooks(command);
***REMOVED******REMOVED******REMOVED******REMOVED***onExit(close);
***REMOVED******REMOVED******REMOVED******REMOVED***process$2.on('uncaughtException',***REMOVED***closeWithError);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!process$2.stdin.isTTY)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$2.stdin.on('end',***REMOVED***close);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$2.stdin.resume();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***function***REMOVED***loadConfigFromFileAndTrack(configFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***configFileData***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***configFileRevision***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configWatcher***REMOVED***=***REMOVED***index.chokidar.watch(configFile).on('change',***REMOVED***reloadConfigFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***reloadConfigFile();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***function***REMOVED***reloadConfigFile()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newConfigFileData***REMOVED***=***REMOVED***await***REMOVED***promises.readFile(configFile,***REMOVED***'utf8');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newConfigFileData***REMOVED***===***REMOVED***configFileData)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configFileRevision++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentConfigFileRevision***REMOVED***=***REMOVED***configFileRevision;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configFileData)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(`\nReloading***REMOVED***updated***REMOVED***config...`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configFileData***REMOVED***=***REMOVED***newConfigFileData;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***options,***REMOVED***warnings***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***loadConfigFile_js.loadConfigFile(configFile,***REMOVED***command,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentConfigFileRevision***REMOVED***!==***REMOVED***configFileRevision)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(watcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***watcher.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start(options,***REMOVED***warnings);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.handleError(error,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***loadConfigFromFileAndTrack(configFile);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***options,***REMOVED***warnings***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***cli.loadConfigFromCommand(command,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***start(options,***REMOVED***warnings);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***function***REMOVED***start(configs,***REMOVED***warnings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watcher***REMOVED***=***REMOVED***watchProxy.watch(configs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watcher.on('event',***REMOVED***event***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(event.code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'ERROR':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnings.flush();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.handleError(event.error,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runWatchHook('onError');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'START':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!silent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resetScreen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetScreen***REMOVED***=***REMOVED***getResetScreen(configs,***REMOVED***isTTY);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetScreen(rollup.underline(`rollup***REMOVED***v${rollup.version}`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runWatchHook('onStart');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'BUNDLE_START':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!silent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***input***REMOVED***=***REMOVED***event.input;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***input***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***input***REMOVED***=***REMOVED***Array.isArray(input)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***input.join(',***REMOVED***')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***Object.values(input).join(',***REMOVED***');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(rollup.cyan$1(`bundles***REMOVED***${rollup.bold(input)}***REMOVED***→***REMOVED***${rollup.bold(event.output.map(rollup.relativeId).join(',***REMOVED***'))}...`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runWatchHook('onBundleStart');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'BUNDLE_END':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnings.flush();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!silent)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(rollup.green(`created***REMOVED***${rollup.bold(event.output.map(rollup.relativeId).join(',***REMOVED***'))}***REMOVED***in***REMOVED***${rollup.bold(cli.prettyMilliseconds(event.duration))}`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runWatchHook('onBundleEnd');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(event.result***REMOVED***&&***REMOVED***event.result.getTimings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cli.printTimings(event.result.getTimings());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'END':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runWatchHook('onEnd');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!silent***REMOVED***&&***REMOVED***isTTY)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rollup.stderr(`\n[${dateTime()}]***REMOVED***waiting***REMOVED***for***REMOVED***changes...`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***('result'***REMOVED***in***REMOVED***event***REMOVED***&&***REMOVED***event.result)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***event.result.close().catch(error***REMOVED***=>***REMOVED***rollup.handleError(error,***REMOVED***true));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***function***REMOVED***close(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$2.removeListener('uncaughtException',***REMOVED***closeWithError);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***removing***REMOVED***a***REMOVED***non-existent***REMOVED***listener***REMOVED***is***REMOVED***a***REMOVED***no-op
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$2.stdin.removeListener('end',***REMOVED***close);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(watcher)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***watcher.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configWatcher)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configWatcher.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process$2.exit(code);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***return***REMOVED***a***REMOVED***promise***REMOVED***that***REMOVED***never***REMOVED***resolves***REMOVED***to***REMOVED***keep***REMOVED***the***REMOVED***process***REMOVED***running
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise(()***REMOVED***=>***REMOVED***{***REMOVED***});
}
function***REMOVED***closeWithError(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***error.name***REMOVED***=***REMOVED***`Uncaught***REMOVED***${error.name}`;
***REMOVED******REMOVED******REMOVED******REMOVED***rollup.handleError(error);
}

exports.watch***REMOVED***=***REMOVED***watch;
//#***REMOVED***sourceMappingURL=watch-cli.js.map
