/**
****REMOVED***@vue/shared***REMOVED***v3.5.21
****REMOVED***(c)***REMOVED***2018-present***REMOVED***Yuxi***REMOVED***(Evan)***REMOVED***You***REMOVED***and***REMOVED***Vue***REMOVED***contributors
****REMOVED***@license***REMOVED***MIT
**/
'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

//***REMOVED***@__NO_SIDE_EFFECTS__
function***REMOVED***makeMap(str)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***str.split(","))***REMOVED***map[key]***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED***return***REMOVED***(val)***REMOVED***=>***REMOVED***val***REMOVED***in***REMOVED***map;
}

const***REMOVED***EMPTY_OBJ***REMOVED***=***REMOVED***{};
const***REMOVED***EMPTY_ARR***REMOVED***=***REMOVED***[];
const***REMOVED***NOOP***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
};
const***REMOVED***NO***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***false;
const***REMOVED***isOn***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key.charCodeAt(0)***REMOVED***===***REMOVED***111***REMOVED***&&***REMOVED***key.charCodeAt(1)***REMOVED***===***REMOVED***110***REMOVED***&&***REMOVED***//***REMOVED***uppercase***REMOVED***letter
(key.charCodeAt(2)***REMOVED***>***REMOVED***122***REMOVED***||***REMOVED***key.charCodeAt(2)***REMOVED***<***REMOVED***97);
const***REMOVED***isModelListener***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key.startsWith("onUpdate:");
const***REMOVED***extend***REMOVED***=***REMOVED***Object.assign;
const***REMOVED***remove***REMOVED***=***REMOVED***(arr,***REMOVED***el)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***arr.indexOf(el);
***REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***arr.splice(i,***REMOVED***1);
***REMOVED******REMOVED***}
};
const***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
const***REMOVED***hasOwn***REMOVED***=***REMOVED***(val,***REMOVED***key)***REMOVED***=>***REMOVED***hasOwnProperty.call(val,***REMOVED***key);
const***REMOVED***isArray***REMOVED***=***REMOVED***Array.isArray;
const***REMOVED***isMap***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Map]";
const***REMOVED***isSet***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Set]";
const***REMOVED***isDate***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Date]";
const***REMOVED***isRegExp***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***RegExp]";
const***REMOVED***isFunction***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"function";
const***REMOVED***isString***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"string";
const***REMOVED***isSymbol***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"symbol";
const***REMOVED***isObject***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***val***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"object";
const***REMOVED***isPromise***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(isObject(val)***REMOVED***||***REMOVED***isFunction(val))***REMOVED***&&***REMOVED***isFunction(val.then)***REMOVED***&&***REMOVED***isFunction(val.catch);
};
const***REMOVED***objectToString***REMOVED***=***REMOVED***Object.prototype.toString;
const***REMOVED***toTypeString***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***objectToString.call(value);
const***REMOVED***toRawType***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***toTypeString(value).slice(8,***REMOVED***-1);
};
const***REMOVED***isPlainObject***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Object]";
const***REMOVED***isIntegerKey***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***isString(key)***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"NaN"***REMOVED***&&***REMOVED***key[0]***REMOVED***!==***REMOVED***"-"***REMOVED***&&***REMOVED***""***REMOVED***+***REMOVED***parseInt(key,***REMOVED***10)***REMOVED***===***REMOVED***key;
const***REMOVED***isReservedProp***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***leading***REMOVED***comma***REMOVED***is***REMOVED***intentional***REMOVED***so***REMOVED***empty***REMOVED***string***REMOVED***""***REMOVED***is***REMOVED***also***REMOVED***included
***REMOVED******REMOVED***",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
);
const***REMOVED***isBuiltInDirective***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"
);
const***REMOVED***cacheStringFunction***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***return***REMOVED***((str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hit***REMOVED***=***REMOVED***cache[str];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hit***REMOVED***||***REMOVED***(cache[str]***REMOVED***=***REMOVED***fn(str));
***REMOVED******REMOVED***});
};
const***REMOVED***camelizeRE***REMOVED***=***REMOVED***/-\w/g;
const***REMOVED***camelize***REMOVED***=***REMOVED***cacheStringFunction(
***REMOVED******REMOVED***(str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str.replace(camelizeRE,***REMOVED***(c)***REMOVED***=>***REMOVED***c.slice(1).toUpperCase());
***REMOVED******REMOVED***}
);
const***REMOVED***hyphenateRE***REMOVED***=***REMOVED***/\B([A-Z])/g;
const***REMOVED***hyphenate***REMOVED***=***REMOVED***cacheStringFunction(
***REMOVED******REMOVED***(str)***REMOVED***=>***REMOVED***str.replace(hyphenateRE,***REMOVED***"-$1").toLowerCase()
);
const***REMOVED***capitalize***REMOVED***=***REMOVED***cacheStringFunction((str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***str.charAt(0).toUpperCase()***REMOVED***+***REMOVED***str.slice(1);
});
const***REMOVED***toHandlerKey***REMOVED***=***REMOVED***cacheStringFunction(
***REMOVED******REMOVED***(str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***str***REMOVED***?***REMOVED***`on${capitalize(str)}`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s;
***REMOVED******REMOVED***}
);
const***REMOVED***hasChanged***REMOVED***=***REMOVED***(value,***REMOVED***oldValue)***REMOVED***=>***REMOVED***!Object.is(value,***REMOVED***oldValue);
const***REMOVED***invokeArrayFns***REMOVED***=***REMOVED***(fns,***REMOVED***...arg)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***fns.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fns[i](...arg);
***REMOVED******REMOVED***}
};
const***REMOVED***def***REMOVED***=***REMOVED***(obj,***REMOVED***key,***REMOVED***value,***REMOVED***writable***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***Object.defineProperty(obj,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***writable,
***REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED***});
};
const***REMOVED***looseToNumber***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***parseFloat(val);
***REMOVED******REMOVED***return***REMOVED***isNaN(n)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***n;
};
const***REMOVED***toNumber***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***isString(val)***REMOVED***?***REMOVED***Number(val)***REMOVED***:***REMOVED***NaN;
***REMOVED******REMOVED***return***REMOVED***isNaN(n)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***n;
};
let***REMOVED***_globalThis;
const***REMOVED***getGlobalThis***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***_globalThis***REMOVED***||***REMOVED***(_globalThis***REMOVED***=***REMOVED***typeof***REMOVED***globalThis***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***globalThis***REMOVED***:***REMOVED***typeof***REMOVED***self***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***self***REMOVED***:***REMOVED***typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***window***REMOVED***:***REMOVED***typeof***REMOVED***global***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***global***REMOVED***:***REMOVED***{});
};
const***REMOVED***identRE***REMOVED***=***REMOVED***/^[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*$/;
function***REMOVED***genPropsAccessExp(name)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***identRE.test(name)***REMOVED***?***REMOVED***`__props.${name}`***REMOVED***:***REMOVED***`__props[${JSON.stringify(name)}]`;
}
function***REMOVED***genCacheKey(source,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***source***REMOVED***+***REMOVED***JSON.stringify(
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***(_,***REMOVED***val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***val.toString()***REMOVED***:***REMOVED***val
***REMOVED******REMOVED***);
}

const***REMOVED***PatchFlags***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"TEXT":***REMOVED***1,
***REMOVED******REMOVED***"1":***REMOVED***"TEXT",
***REMOVED******REMOVED***"CLASS":***REMOVED***2,
***REMOVED******REMOVED***"2":***REMOVED***"CLASS",
***REMOVED******REMOVED***"STYLE":***REMOVED***4,
***REMOVED******REMOVED***"4":***REMOVED***"STYLE",
***REMOVED******REMOVED***"PROPS":***REMOVED***8,
***REMOVED******REMOVED***"8":***REMOVED***"PROPS",
***REMOVED******REMOVED***"FULL_PROPS":***REMOVED***16,
***REMOVED******REMOVED***"16":***REMOVED***"FULL_PROPS",
***REMOVED******REMOVED***"NEED_HYDRATION":***REMOVED***32,
***REMOVED******REMOVED***"32":***REMOVED***"NEED_HYDRATION",
***REMOVED******REMOVED***"STABLE_FRAGMENT":***REMOVED***64,
***REMOVED******REMOVED***"64":***REMOVED***"STABLE_FRAGMENT",
***REMOVED******REMOVED***"KEYED_FRAGMENT":***REMOVED***128,
***REMOVED******REMOVED***"128":***REMOVED***"KEYED_FRAGMENT",
***REMOVED******REMOVED***"UNKEYED_FRAGMENT":***REMOVED***256,
***REMOVED******REMOVED***"256":***REMOVED***"UNKEYED_FRAGMENT",
***REMOVED******REMOVED***"NEED_PATCH":***REMOVED***512,
***REMOVED******REMOVED***"512":***REMOVED***"NEED_PATCH",
***REMOVED******REMOVED***"DYNAMIC_SLOTS":***REMOVED***1024,
***REMOVED******REMOVED***"1024":***REMOVED***"DYNAMIC_SLOTS",
***REMOVED******REMOVED***"DEV_ROOT_FRAGMENT":***REMOVED***2048,
***REMOVED******REMOVED***"2048":***REMOVED***"DEV_ROOT_FRAGMENT",
***REMOVED******REMOVED***"CACHED":***REMOVED***-1,
***REMOVED******REMOVED***"-1":***REMOVED***"CACHED",
***REMOVED******REMOVED***"BAIL":***REMOVED***-2,
***REMOVED******REMOVED***"-2":***REMOVED***"BAIL"
};
const***REMOVED***PatchFlagNames***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***[1]:***REMOVED***`TEXT`,
***REMOVED******REMOVED***[2]:***REMOVED***`CLASS`,
***REMOVED******REMOVED***[4]:***REMOVED***`STYLE`,
***REMOVED******REMOVED***[8]:***REMOVED***`PROPS`,
***REMOVED******REMOVED***[16]:***REMOVED***`FULL_PROPS`,
***REMOVED******REMOVED***[32]:***REMOVED***`NEED_HYDRATION`,
***REMOVED******REMOVED***[64]:***REMOVED***`STABLE_FRAGMENT`,
***REMOVED******REMOVED***[128]:***REMOVED***`KEYED_FRAGMENT`,
***REMOVED******REMOVED***[256]:***REMOVED***`UNKEYED_FRAGMENT`,
***REMOVED******REMOVED***[512]:***REMOVED***`NEED_PATCH`,
***REMOVED******REMOVED***[1024]:***REMOVED***`DYNAMIC_SLOTS`,
***REMOVED******REMOVED***[2048]:***REMOVED***`DEV_ROOT_FRAGMENT`,
***REMOVED******REMOVED***[-1]:***REMOVED***`CACHED`,
***REMOVED******REMOVED***[-2]:***REMOVED***`BAIL`
};

const***REMOVED***ShapeFlags***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"ELEMENT":***REMOVED***1,
***REMOVED******REMOVED***"1":***REMOVED***"ELEMENT",
***REMOVED******REMOVED***"FUNCTIONAL_COMPONENT":***REMOVED***2,
***REMOVED******REMOVED***"2":***REMOVED***"FUNCTIONAL_COMPONENT",
***REMOVED******REMOVED***"STATEFUL_COMPONENT":***REMOVED***4,
***REMOVED******REMOVED***"4":***REMOVED***"STATEFUL_COMPONENT",
***REMOVED******REMOVED***"TEXT_CHILDREN":***REMOVED***8,
***REMOVED******REMOVED***"8":***REMOVED***"TEXT_CHILDREN",
***REMOVED******REMOVED***"ARRAY_CHILDREN":***REMOVED***16,
***REMOVED******REMOVED***"16":***REMOVED***"ARRAY_CHILDREN",
***REMOVED******REMOVED***"SLOTS_CHILDREN":***REMOVED***32,
***REMOVED******REMOVED***"32":***REMOVED***"SLOTS_CHILDREN",
***REMOVED******REMOVED***"TELEPORT":***REMOVED***64,
***REMOVED******REMOVED***"64":***REMOVED***"TELEPORT",
***REMOVED******REMOVED***"SUSPENSE":***REMOVED***128,
***REMOVED******REMOVED***"128":***REMOVED***"SUSPENSE",
***REMOVED******REMOVED***"COMPONENT_SHOULD_KEEP_ALIVE":***REMOVED***256,
***REMOVED******REMOVED***"256":***REMOVED***"COMPONENT_SHOULD_KEEP_ALIVE",
***REMOVED******REMOVED***"COMPONENT_KEPT_ALIVE":***REMOVED***512,
***REMOVED******REMOVED***"512":***REMOVED***"COMPONENT_KEPT_ALIVE",
***REMOVED******REMOVED***"COMPONENT":***REMOVED***6,
***REMOVED******REMOVED***"6":***REMOVED***"COMPONENT"
};

const***REMOVED***SlotFlags***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"STABLE":***REMOVED***1,
***REMOVED******REMOVED***"1":***REMOVED***"STABLE",
***REMOVED******REMOVED***"DYNAMIC":***REMOVED***2,
***REMOVED******REMOVED***"2":***REMOVED***"DYNAMIC",
***REMOVED******REMOVED***"FORWARDED":***REMOVED***3,
***REMOVED******REMOVED***"3":***REMOVED***"FORWARDED"
};
const***REMOVED***slotFlagsText***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***[1]:***REMOVED***"STABLE",
***REMOVED******REMOVED***[2]:***REMOVED***"DYNAMIC",
***REMOVED******REMOVED***[3]:***REMOVED***"FORWARDED"
};

const***REMOVED***GLOBALS_ALLOWED***REMOVED***=***REMOVED***"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol";
const***REMOVED***isGloballyAllowed***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(GLOBALS_ALLOWED);
const***REMOVED***isGloballyWhitelisted***REMOVED***=***REMOVED***isGloballyAllowed;

const***REMOVED***range***REMOVED***=***REMOVED***2;
function***REMOVED***generateCodeFrame(source,***REMOVED***start***REMOVED***=***REMOVED***0,***REMOVED***end***REMOVED***=***REMOVED***source.length)***REMOVED***{
***REMOVED******REMOVED***start***REMOVED***=***REMOVED***Math.max(0,***REMOVED***Math.min(start,***REMOVED***source.length));
***REMOVED******REMOVED***end***REMOVED***=***REMOVED***Math.max(0,***REMOVED***Math.min(end,***REMOVED***source.length));
***REMOVED******REMOVED***if***REMOVED***(start***REMOVED***>***REMOVED***end)***REMOVED***return***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***lines***REMOVED***=***REMOVED***source.split(/(\r?\n)/);
***REMOVED******REMOVED***const***REMOVED***newlineSequences***REMOVED***=***REMOVED***lines.filter((_,***REMOVED***idx)***REMOVED***=>***REMOVED***idx***REMOVED***%***REMOVED***2***REMOVED***===***REMOVED***1);
***REMOVED******REMOVED***lines***REMOVED***=***REMOVED***lines.filter((_,***REMOVED***idx)***REMOVED***=>***REMOVED***idx***REMOVED***%***REMOVED***2***REMOVED***===***REMOVED***0);
***REMOVED******REMOVED***let***REMOVED***count***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***lines.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***lines[i].length***REMOVED***+***REMOVED***(newlineSequences[i]***REMOVED***&&***REMOVED***newlineSequences[i].length***REMOVED***||***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(count***REMOVED***>=***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***i***REMOVED***-***REMOVED***range;***REMOVED***j***REMOVED***<=***REMOVED***i***REMOVED***+***REMOVED***range***REMOVED***||***REMOVED***end***REMOVED***>***REMOVED***count;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(j***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***j***REMOVED***>=***REMOVED***lines.length)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***j***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${line}${"***REMOVED***".repeat(Math.max(3***REMOVED***-***REMOVED***String(line).length,***REMOVED***0))}|***REMOVED******REMOVED***${lines[j]}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lineLength***REMOVED***=***REMOVED***lines[j].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newLineSeqLength***REMOVED***=***REMOVED***newlineSequences[j]***REMOVED***&&***REMOVED***newlineSequences[j].length***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(j***REMOVED***===***REMOVED***i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pad***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***(count***REMOVED***-***REMOVED***(lineLength***REMOVED***+***REMOVED***newLineSeqLength));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***Math.max(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***>***REMOVED***count***REMOVED***?***REMOVED***lineLength***REMOVED***-***REMOVED***pad***REMOVED***:***REMOVED***end***REMOVED***-***REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.push(`***REMOVED******REMOVED******REMOVED***|***REMOVED******REMOVED***`***REMOVED***+***REMOVED***"***REMOVED***".repeat(pad)***REMOVED***+***REMOVED***"^".repeat(length));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(j***REMOVED***>***REMOVED***i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(end***REMOVED***>***REMOVED***count)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***Math.max(Math.min(end***REMOVED***-***REMOVED***count,***REMOVED***lineLength),***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.push(`***REMOVED******REMOVED******REMOVED***|***REMOVED******REMOVED***`***REMOVED***+***REMOVED***"^".repeat(length));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***lineLength***REMOVED***+***REMOVED***newLineSeqLength;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res.join("\n");
}

function***REMOVED***normalizeStyle(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***item***REMOVED***=***REMOVED***value[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***isString(item)***REMOVED***?***REMOVED***parseStringStyle(item)***REMOVED***:***REMOVED***normalizeStyle(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***normalized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res[key]***REMOVED***=***REMOVED***normalized[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isString(value)***REMOVED***||***REMOVED***isObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
}
const***REMOVED***listDelimiterRE***REMOVED***=***REMOVED***/;(?![^(]*\))/g;
const***REMOVED***propertyDelimiterRE***REMOVED***=***REMOVED***/:([^]+)/;
const***REMOVED***styleCommentRE***REMOVED***=***REMOVED***/\/\*[^]*?\*\//g;
function***REMOVED***parseStringStyle(cssText)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***cssText.replace(styleCommentRE,***REMOVED***"").split(listDelimiterRE).forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(item)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tmp***REMOVED***=***REMOVED***item.split(propertyDelimiterRE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmp.length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***(ret[tmp[0].trim()]***REMOVED***=***REMOVED***tmp[1].trim());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***stringifyStyle(styles)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!styles)***REMOVED***return***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(isString(styles))***REMOVED***return***REMOVED***styles;
***REMOVED******REMOVED***let***REMOVED***ret***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***styles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***styles[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(value)***REMOVED***||***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedKey***REMOVED***=***REMOVED***key.startsWith(`--`)***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***hyphenate(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***`${normalizedKey}:${value};`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***normalizeClass(value)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***res***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(isString(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***normalizeClass(value[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***+=***REMOVED***normalized***REMOVED***+***REMOVED***"***REMOVED***";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***in***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***+=***REMOVED***name***REMOVED***+***REMOVED***"***REMOVED***";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res.trim();
}
function***REMOVED***normalizeProps(props)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!props)***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED***let***REMOVED***{***REMOVED***class:***REMOVED***klass,***REMOVED***style***REMOVED***}***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED***if***REMOVED***(klass***REMOVED***&&***REMOVED***!isString(klass))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props.class***REMOVED***=***REMOVED***normalizeClass(klass);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(style)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props.style***REMOVED***=***REMOVED***normalizeStyle(style);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***props;
}

const***REMOVED***HTML_TAGS***REMOVED***=***REMOVED***"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
const***REMOVED***SVG_TAGS***REMOVED***=***REMOVED***"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
const***REMOVED***MATH_TAGS***REMOVED***=***REMOVED***"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics";
const***REMOVED***VOID_TAGS***REMOVED***=***REMOVED***"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr";
const***REMOVED***isHTMLTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(HTML_TAGS);
const***REMOVED***isSVGTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(SVG_TAGS);
const***REMOVED***isMathMLTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(MATH_TAGS);
const***REMOVED***isVoidTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(VOID_TAGS);

const***REMOVED***specialBooleanAttrs***REMOVED***=***REMOVED***`itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const***REMOVED***isSpecialBooleanAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(specialBooleanAttrs);
const***REMOVED***isBooleanAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***specialBooleanAttrs***REMOVED***+***REMOVED***`,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`
);
function***REMOVED***includeBooleanAttr(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!value***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***"";
}
const***REMOVED***unsafeAttrCharRE***REMOVED***=***REMOVED***/[>/="'\u0009\u000a\u000c\u0020]/;
const***REMOVED***attrValidationCache***REMOVED***=***REMOVED***{};
function***REMOVED***isSSRSafeAttrName(name)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(attrValidationCache.hasOwnProperty(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrValidationCache[name];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***isUnsafe***REMOVED***=***REMOVED***unsafeAttrCharRE.test(name);
***REMOVED******REMOVED***if***REMOVED***(isUnsafe)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***console.error(`unsafe***REMOVED***attribute***REMOVED***name:***REMOVED***${name}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***attrValidationCache[name]***REMOVED***=***REMOVED***!isUnsafe;
}
const***REMOVED***propsToAttrMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***acceptCharset:***REMOVED***"accept-charset",
***REMOVED******REMOVED***className:***REMOVED***"class",
***REMOVED******REMOVED***htmlFor:***REMOVED***"for",
***REMOVED******REMOVED***httpEquiv:***REMOVED***"http-equiv"
};
const***REMOVED***isKnownHtmlAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***`accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`
);
const***REMOVED***isKnownSvgAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`
);
const***REMOVED***isKnownMathMLAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***`accent,accentunder,actiontype,align,alignmentscope,altimg,altimg-height,altimg-valign,altimg-width,alttext,bevelled,close,columnsalign,columnlines,columnspan,denomalign,depth,dir,display,displaystyle,encoding,equalcolumns,equalrows,fence,fontstyle,fontweight,form,frame,framespacing,groupalign,height,href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indextype,justify,largetop,largeop,lquote,lspace,mathbackground,mathcolor,mathsize,mathvariant,maxsize,minlabelspacing,mode,other,overflow,position,rowalign,rowlines,rowspan,rquote,rspace,scriptlevel,scriptminsize,scriptsizemultiplier,selection,separator,separators,shift,side,src,stackalign,stretchy,subscriptshift,superscriptshift,symmetric,voffset,width,widths,xlink:href,xlink:show,xlink:type,xmlns`
);
function***REMOVED***isRenderableAttrValue(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***typeof***REMOVED***value;
***REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"string"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"number"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"boolean";
}

const***REMOVED***escapeRE***REMOVED***=***REMOVED***/["'&<>]/;
function***REMOVED***escapeHtml(string)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***str***REMOVED***=***REMOVED***""***REMOVED***+***REMOVED***string;
***REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***escapeRE.exec(str);
***REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***html***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***escaped;
***REMOVED******REMOVED***let***REMOVED***index;
***REMOVED******REMOVED***let***REMOVED***lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(index***REMOVED***=***REMOVED***match.index;***REMOVED***index***REMOVED***<***REMOVED***str.length;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(str.charCodeAt(index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***34:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&quot;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***38:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&amp;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***39:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&#39;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***60:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&lt;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***62:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&gt;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastIndex***REMOVED***!==***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***html***REMOVED***+=***REMOVED***str.slice(lastIndex,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***html***REMOVED***+=***REMOVED***escaped;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***lastIndex***REMOVED***!==***REMOVED***index***REMOVED***?***REMOVED***html***REMOVED***+***REMOVED***str.slice(lastIndex,***REMOVED***index)***REMOVED***:***REMOVED***html;
}
const***REMOVED***commentStripRE***REMOVED***=***REMOVED***/^-?>|<!--|-->|--!>|<!-$/g;
function***REMOVED***escapeHtmlComment(src)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***src.replace(commentStripRE,***REMOVED***"");
}
const***REMOVED***cssVarNameEscapeSymbolsRE***REMOVED***=***REMOVED***/[***REMOVED***!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;
function***REMOVED***getEscapedCssVarName(key,***REMOVED***doubleEscape)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***key.replace(
***REMOVED******REMOVED******REMOVED******REMOVED***cssVarNameEscapeSymbolsRE,
***REMOVED******REMOVED******REMOVED******REMOVED***(s)***REMOVED***=>***REMOVED***doubleEscape***REMOVED***?***REMOVED***s***REMOVED***===***REMOVED***'"'***REMOVED***?***REMOVED***'\\\\\\"'***REMOVED***:***REMOVED***`\\\\${s}`***REMOVED***:***REMOVED***`\\${s}`
***REMOVED******REMOVED***);
}

function***REMOVED***looseCompareArrays(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***!==***REMOVED***b.length)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***equal***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***equal***REMOVED***&&***REMOVED***i***REMOVED***<***REMOVED***a.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***equal***REMOVED***=***REMOVED***looseEqual(a[i],***REMOVED***b[i]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***equal;
}
function***REMOVED***looseEqual(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(a***REMOVED***===***REMOVED***b)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***let***REMOVED***aValidType***REMOVED***=***REMOVED***isDate(a);
***REMOVED******REMOVED***let***REMOVED***bValidType***REMOVED***=***REMOVED***isDate(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aValidType***REMOVED***&&***REMOVED***bValidType***REMOVED***?***REMOVED***a.getTime()***REMOVED***===***REMOVED***b.getTime()***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***aValidType***REMOVED***=***REMOVED***isSymbol(a);
***REMOVED******REMOVED***bValidType***REMOVED***=***REMOVED***isSymbol(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***===***REMOVED***b;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***aValidType***REMOVED***=***REMOVED***isArray(a);
***REMOVED******REMOVED***bValidType***REMOVED***=***REMOVED***isArray(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aValidType***REMOVED***&&***REMOVED***bValidType***REMOVED***?***REMOVED***looseCompareArrays(a,***REMOVED***b)***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***aValidType***REMOVED***=***REMOVED***isObject(a);
***REMOVED******REMOVED***bValidType***REMOVED***=***REMOVED***isObject(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!aValidType***REMOVED***||***REMOVED***!bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aKeysCount***REMOVED***=***REMOVED***Object.keys(a).length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bKeysCount***REMOVED***=***REMOVED***Object.keys(b).length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aKeysCount***REMOVED***!==***REMOVED***bKeysCount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***a)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aHasKey***REMOVED***=***REMOVED***a.hasOwnProperty(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bHasKey***REMOVED***=***REMOVED***b.hasOwnProperty(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aHasKey***REMOVED***&&***REMOVED***!bHasKey***REMOVED***||***REMOVED***!aHasKey***REMOVED***&&***REMOVED***bHasKey***REMOVED***||***REMOVED***!looseEqual(a[key],***REMOVED***b[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***String(a)***REMOVED***===***REMOVED***String(b);
}
function***REMOVED***looseIndexOf(arr,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***arr.findIndex((item)***REMOVED***=>***REMOVED***looseEqual(item,***REMOVED***val));
}

const***REMOVED***isRef***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(val***REMOVED***&&***REMOVED***val["__v_isRef"]***REMOVED***===***REMOVED***true);
};
const***REMOVED***toDisplayString***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isString(val)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***val***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***isArray(val)***REMOVED***||***REMOVED***isObject(val)***REMOVED***&&***REMOVED***(val.toString***REMOVED***===***REMOVED***objectToString***REMOVED***||***REMOVED***!isFunction(val.toString))***REMOVED***?***REMOVED***isRef(val)***REMOVED***?***REMOVED***toDisplayString(val.value)***REMOVED***:***REMOVED***JSON.stringify(val,***REMOVED***replacer,***REMOVED***2)***REMOVED***:***REMOVED***String(val);
};
const***REMOVED***replacer***REMOVED***=***REMOVED***(_key,***REMOVED***val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isRef(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***replacer(_key,***REMOVED***val.value);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isMap(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[`Map(${val.size})`]:***REMOVED***[...val.entries()].reduce(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(entries,***REMOVED***[key,***REMOVED***val2],***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entries[stringifySymbol(key,***REMOVED***i)***REMOVED***+***REMOVED***"***REMOVED***=>"]***REMOVED***=***REMOVED***val2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entries;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSet(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[`Set(${val.size})`]:***REMOVED***[...val.values()].map((v)***REMOVED***=>***REMOVED***stringifySymbol(v))
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSymbol(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stringifySymbol(val);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(val)***REMOVED***&&***REMOVED***!isArray(val)***REMOVED***&&***REMOVED***!isPlainObject(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(val);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***val;
};
const***REMOVED***stringifySymbol***REMOVED***=***REMOVED***(v,***REMOVED***i***REMOVED***=***REMOVED***"")***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Symbol.description***REMOVED***in***REMOVED***es2019+***REMOVED***so***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***cast***REMOVED***here***REMOVED***to***REMOVED***pass
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***lib:***REMOVED***es2016***REMOVED***check
***REMOVED******REMOVED******REMOVED******REMOVED***isSymbol(v)***REMOVED***?***REMOVED***`Symbol(${(_a***REMOVED***=***REMOVED***v.description)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_a***REMOVED***:***REMOVED***i})`***REMOVED***:***REMOVED***v
***REMOVED******REMOVED***);
};

function***REMOVED***normalizeCssVarValue(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"initial";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***===***REMOVED***""***REMOVED***?***REMOVED***"***REMOVED***"***REMOVED***:***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***String(value);
}

exports.EMPTY_ARR***REMOVED***=***REMOVED***EMPTY_ARR;
exports.EMPTY_OBJ***REMOVED***=***REMOVED***EMPTY_OBJ;
exports.NO***REMOVED***=***REMOVED***NO;
exports.NOOP***REMOVED***=***REMOVED***NOOP;
exports.PatchFlagNames***REMOVED***=***REMOVED***PatchFlagNames;
exports.PatchFlags***REMOVED***=***REMOVED***PatchFlags;
exports.ShapeFlags***REMOVED***=***REMOVED***ShapeFlags;
exports.SlotFlags***REMOVED***=***REMOVED***SlotFlags;
exports.camelize***REMOVED***=***REMOVED***camelize;
exports.capitalize***REMOVED***=***REMOVED***capitalize;
exports.cssVarNameEscapeSymbolsRE***REMOVED***=***REMOVED***cssVarNameEscapeSymbolsRE;
exports.def***REMOVED***=***REMOVED***def;
exports.escapeHtml***REMOVED***=***REMOVED***escapeHtml;
exports.escapeHtmlComment***REMOVED***=***REMOVED***escapeHtmlComment;
exports.extend***REMOVED***=***REMOVED***extend;
exports.genCacheKey***REMOVED***=***REMOVED***genCacheKey;
exports.genPropsAccessExp***REMOVED***=***REMOVED***genPropsAccessExp;
exports.generateCodeFrame***REMOVED***=***REMOVED***generateCodeFrame;
exports.getEscapedCssVarName***REMOVED***=***REMOVED***getEscapedCssVarName;
exports.getGlobalThis***REMOVED***=***REMOVED***getGlobalThis;
exports.hasChanged***REMOVED***=***REMOVED***hasChanged;
exports.hasOwn***REMOVED***=***REMOVED***hasOwn;
exports.hyphenate***REMOVED***=***REMOVED***hyphenate;
exports.includeBooleanAttr***REMOVED***=***REMOVED***includeBooleanAttr;
exports.invokeArrayFns***REMOVED***=***REMOVED***invokeArrayFns;
exports.isArray***REMOVED***=***REMOVED***isArray;
exports.isBooleanAttr***REMOVED***=***REMOVED***isBooleanAttr;
exports.isBuiltInDirective***REMOVED***=***REMOVED***isBuiltInDirective;
exports.isDate***REMOVED***=***REMOVED***isDate;
exports.isFunction***REMOVED***=***REMOVED***isFunction;
exports.isGloballyAllowed***REMOVED***=***REMOVED***isGloballyAllowed;
exports.isGloballyWhitelisted***REMOVED***=***REMOVED***isGloballyWhitelisted;
exports.isHTMLTag***REMOVED***=***REMOVED***isHTMLTag;
exports.isIntegerKey***REMOVED***=***REMOVED***isIntegerKey;
exports.isKnownHtmlAttr***REMOVED***=***REMOVED***isKnownHtmlAttr;
exports.isKnownMathMLAttr***REMOVED***=***REMOVED***isKnownMathMLAttr;
exports.isKnownSvgAttr***REMOVED***=***REMOVED***isKnownSvgAttr;
exports.isMap***REMOVED***=***REMOVED***isMap;
exports.isMathMLTag***REMOVED***=***REMOVED***isMathMLTag;
exports.isModelListener***REMOVED***=***REMOVED***isModelListener;
exports.isObject***REMOVED***=***REMOVED***isObject;
exports.isOn***REMOVED***=***REMOVED***isOn;
exports.isPlainObject***REMOVED***=***REMOVED***isPlainObject;
exports.isPromise***REMOVED***=***REMOVED***isPromise;
exports.isRegExp***REMOVED***=***REMOVED***isRegExp;
exports.isRenderableAttrValue***REMOVED***=***REMOVED***isRenderableAttrValue;
exports.isReservedProp***REMOVED***=***REMOVED***isReservedProp;
exports.isSSRSafeAttrName***REMOVED***=***REMOVED***isSSRSafeAttrName;
exports.isSVGTag***REMOVED***=***REMOVED***isSVGTag;
exports.isSet***REMOVED***=***REMOVED***isSet;
exports.isSpecialBooleanAttr***REMOVED***=***REMOVED***isSpecialBooleanAttr;
exports.isString***REMOVED***=***REMOVED***isString;
exports.isSymbol***REMOVED***=***REMOVED***isSymbol;
exports.isVoidTag***REMOVED***=***REMOVED***isVoidTag;
exports.looseEqual***REMOVED***=***REMOVED***looseEqual;
exports.looseIndexOf***REMOVED***=***REMOVED***looseIndexOf;
exports.looseToNumber***REMOVED***=***REMOVED***looseToNumber;
exports.makeMap***REMOVED***=***REMOVED***makeMap;
exports.normalizeClass***REMOVED***=***REMOVED***normalizeClass;
exports.normalizeCssVarValue***REMOVED***=***REMOVED***normalizeCssVarValue;
exports.normalizeProps***REMOVED***=***REMOVED***normalizeProps;
exports.normalizeStyle***REMOVED***=***REMOVED***normalizeStyle;
exports.objectToString***REMOVED***=***REMOVED***objectToString;
exports.parseStringStyle***REMOVED***=***REMOVED***parseStringStyle;
exports.propsToAttrMap***REMOVED***=***REMOVED***propsToAttrMap;
exports.remove***REMOVED***=***REMOVED***remove;
exports.slotFlagsText***REMOVED***=***REMOVED***slotFlagsText;
exports.stringifyStyle***REMOVED***=***REMOVED***stringifyStyle;
exports.toDisplayString***REMOVED***=***REMOVED***toDisplayString;
exports.toHandlerKey***REMOVED***=***REMOVED***toHandlerKey;
exports.toNumber***REMOVED***=***REMOVED***toNumber;
exports.toRawType***REMOVED***=***REMOVED***toRawType;
exports.toTypeString***REMOVED***=***REMOVED***toTypeString;
