/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/
/*
***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
***REMOVED****/

var***REMOVED***SourceMapGenerator***REMOVED***=***REMOVED***require('./source-map-generator').SourceMapGenerator;
var***REMOVED***util***REMOVED***=***REMOVED***require('./util');

//***REMOVED***Matches***REMOVED***a***REMOVED***Windows-style***REMOVED***`\r\n`***REMOVED***newline***REMOVED***or***REMOVED***a***REMOVED***`\n`***REMOVED***newline***REMOVED***used***REMOVED***by***REMOVED***all***REMOVED***other
//***REMOVED***operating***REMOVED***systems***REMOVED***these***REMOVED***days***REMOVED***(capturing***REMOVED***the***REMOVED***result).
var***REMOVED***REGEX_NEWLINE***REMOVED***=***REMOVED***/(\r?\n)/;

//***REMOVED***Newline***REMOVED***character***REMOVED***code***REMOVED***for***REMOVED***charCodeAt()***REMOVED***comparisons
var***REMOVED***NEWLINE_CODE***REMOVED***=***REMOVED***10;

//***REMOVED***Private***REMOVED***symbol***REMOVED***for***REMOVED***identifying***REMOVED***`SourceNode`s***REMOVED***when***REMOVED***multiple***REMOVED***versions***REMOVED***of
//***REMOVED***the***REMOVED***source-map***REMOVED***library***REMOVED***are***REMOVED***loaded.***REMOVED***This***REMOVED***MUST***REMOVED***NOT***REMOVED***CHANGE***REMOVED***across
//***REMOVED***versions!
var***REMOVED***isSourceNode***REMOVED***=***REMOVED***"$$$isSourceNode$$$";

/**
***REMOVED*******REMOVED***SourceNodes***REMOVED***provide***REMOVED***a***REMOVED***way***REMOVED***to***REMOVED***abstract***REMOVED***over***REMOVED***interpolating/concatenating
***REMOVED*******REMOVED***snippets***REMOVED***of***REMOVED***generated***REMOVED***JavaScript***REMOVED***source***REMOVED***code***REMOVED***while***REMOVED***maintaining***REMOVED***the***REMOVED***line***REMOVED***and
***REMOVED*******REMOVED***column***REMOVED***information***REMOVED***associated***REMOVED***with***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***code.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aLine***REMOVED***The***REMOVED***original***REMOVED***line***REMOVED***number.
***REMOVED*******REMOVED***@param***REMOVED***aColumn***REMOVED***The***REMOVED***original***REMOVED***column***REMOVED***number.
***REMOVED*******REMOVED***@param***REMOVED***aSource***REMOVED***The***REMOVED***original***REMOVED***source's***REMOVED***filename.
***REMOVED*******REMOVED***@param***REMOVED***aChunks***REMOVED***Optional.***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***strings***REMOVED***which***REMOVED***are***REMOVED***snippets***REMOVED***of
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated***REMOVED***JS,***REMOVED***or***REMOVED***other***REMOVED***SourceNodes.
***REMOVED*******REMOVED***@param***REMOVED***aName***REMOVED***The***REMOVED***original***REMOVED***identifier.
***REMOVED****/
function***REMOVED***SourceNode(aLine,***REMOVED***aColumn,***REMOVED***aSource,***REMOVED***aChunks,***REMOVED***aName)***REMOVED***{
***REMOVED******REMOVED***this.children***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this.sourceContents***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***this.line***REMOVED***=***REMOVED***aLine***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aLine;
***REMOVED******REMOVED***this.column***REMOVED***=***REMOVED***aColumn***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aColumn;
***REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***aSource***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aSource;
***REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***aName***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aName;
***REMOVED******REMOVED***this[isSourceNode]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(aChunks***REMOVED***!=***REMOVED***null)***REMOVED***this.add(aChunks);
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***SourceNode***REMOVED***from***REMOVED***generated***REMOVED***code***REMOVED***and***REMOVED***a***REMOVED***SourceMapConsumer.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aGeneratedCode***REMOVED***The***REMOVED***generated***REMOVED***code
***REMOVED*******REMOVED***@param***REMOVED***aSourceMapConsumer***REMOVED***The***REMOVED***SourceMap***REMOVED***for***REMOVED***the***REMOVED***generated***REMOVED***code
***REMOVED*******REMOVED***@param***REMOVED***aRelativePath***REMOVED***Optional.***REMOVED***The***REMOVED***path***REMOVED***that***REMOVED***relative***REMOVED***sources***REMOVED***in***REMOVED***the
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SourceMapConsumer***REMOVED***should***REMOVED***be***REMOVED***relative***REMOVED***to.
***REMOVED****/
SourceNode.fromStringWithSourceMap***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceNode_fromStringWithSourceMap(aGeneratedCode,***REMOVED***aSourceMapConsumer,***REMOVED***aRelativePath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***SourceNode***REMOVED***we***REMOVED***want***REMOVED***to***REMOVED***fill***REMOVED***with***REMOVED***the***REMOVED***generated***REMOVED***code
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***the***REMOVED***SourceMap
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***SourceNode();

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***All***REMOVED***even***REMOVED***indices***REMOVED***of***REMOVED***this***REMOVED***array***REMOVED***are***REMOVED***one***REMOVED***line***REMOVED***of***REMOVED***the***REMOVED***generated***REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***while***REMOVED***all***REMOVED***odd***REMOVED***indices***REMOVED***are***REMOVED***the***REMOVED***newlines***REMOVED***between***REMOVED***two***REMOVED***adjacent***REMOVED***lines
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(since***REMOVED***`REGEX_NEWLINE`***REMOVED***captures***REMOVED***its***REMOVED***match).
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Processed***REMOVED***fragments***REMOVED***are***REMOVED***accessed***REMOVED***by***REMOVED***calling***REMOVED***`shiftNextLine`.
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***remainingLines***REMOVED***=***REMOVED***aGeneratedCode.split(REGEX_NEWLINE);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***remainingLinesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***shiftNextLine***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lineContents***REMOVED***=***REMOVED***getNextLine();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***last***REMOVED***line***REMOVED***of***REMOVED***a***REMOVED***file***REMOVED***might***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***newline.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newLine***REMOVED***=***REMOVED***getNextLine()***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lineContents***REMOVED***+***REMOVED***newLine;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***getNextLine()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***remainingLinesIndex***REMOVED***<***REMOVED***remainingLines.length***REMOVED***?
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingLines[remainingLinesIndex++]***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***remember***REMOVED***the***REMOVED***position***REMOVED***of***REMOVED***"remainingLines"
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastGeneratedLine***REMOVED***=***REMOVED***1,***REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***generate***REMOVED***SourceNodes***REMOVED***we***REMOVED***need***REMOVED***a***REMOVED***code***REMOVED***range.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***extract***REMOVED***it***REMOVED***current***REMOVED***and***REMOVED***last***REMOVED***mapping***REMOVED***is***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Here***REMOVED***we***REMOVED***store***REMOVED***the***REMOVED***last***REMOVED***mapping.
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastMapping***REMOVED***=***REMOVED***null;

***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.eachMapping(function***REMOVED***(mapping)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastMapping***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***add***REMOVED***the***REMOVED***code***REMOVED***from***REMOVED***"lastMapping"***REMOVED***to***REMOVED***"mapping":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***First***REMOVED***check***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***new***REMOVED***line***REMOVED***in***REMOVED***between.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastGeneratedLine***REMOVED***<***REMOVED***mapping.generatedLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Associate***REMOVED***first***REMOVED***line***REMOVED***with***REMOVED***"lastMapping"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addMappingWithCode(lastMapping,***REMOVED***shiftNextLine());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedLine++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***remaining***REMOVED***code***REMOVED***is***REMOVED***added***REMOVED***without***REMOVED***mapping
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***There***REMOVED***is***REMOVED***no***REMOVED***new***REMOVED***line***REMOVED***in***REMOVED***between.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Associate***REMOVED***the***REMOVED***code***REMOVED***between***REMOVED***"lastGeneratedColumn"***REMOVED***and
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"mapping.generatedColumn"***REMOVED***with***REMOVED***"lastMapping"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextLine***REMOVED***=***REMOVED***remainingLines[remainingLinesIndex]***REMOVED***||***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***nextLine.substr(0,***REMOVED***mapping.generatedColumn***REMOVED***-
lastGeneratedColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingLines[remainingLinesIndex]***REMOVED***=***REMOVED***nextLine.substr(mapping.generatedColumn***REMOVED***-
lastGeneratedColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addMappingWithCode(lastMapping,***REMOVED***code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***No***REMOVED***more***REMOVED***remaining***REMOVED***code,***REMOVED***continue
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastMapping***REMOVED***=***REMOVED***mapping;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***add***REMOVED***the***REMOVED***generated***REMOVED***code***REMOVED***until***REMOVED***the***REMOVED***first***REMOVED***mapping
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***the***REMOVED***SourceNode***REMOVED***without***REMOVED***any***REMOVED***mapping.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Each***REMOVED***line***REMOVED***is***REMOVED***added***REMOVED***as***REMOVED***separate***REMOVED***string.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(lastGeneratedLine***REMOVED***<***REMOVED***mapping.generatedLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(shiftNextLine());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedLine++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastGeneratedColumn***REMOVED***<***REMOVED***mapping.generatedColumn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextLine***REMOVED***=***REMOVED***remainingLines[remainingLinesIndex]***REMOVED***||***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(nextLine.substr(0,***REMOVED***mapping.generatedColumn));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingLines[remainingLinesIndex]***REMOVED***=***REMOVED***nextLine.substr(mapping.generatedColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastMapping***REMOVED***=***REMOVED***mapping;
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***have***REMOVED***processed***REMOVED***all***REMOVED***mappings.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(remainingLinesIndex***REMOVED***<***REMOVED***remainingLines.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastMapping)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Associate***REMOVED***the***REMOVED***remaining***REMOVED***code***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***line***REMOVED***with***REMOVED***"lastMapping"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addMappingWithCode(lastMapping,***REMOVED***shiftNextLine());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***add***REMOVED***the***REMOVED***remaining***REMOVED***lines***REMOVED***without***REMOVED***any***REMOVED***mapping
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(remainingLines.splice(remainingLinesIndex).join(""));
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Copy***REMOVED***sourcesContent***REMOVED***into***REMOVED***SourceNode
***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.sources.forEach(function***REMOVED***(sourceFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***aSourceMapConsumer.sourceContentFor(sourceFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aRelativePath***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceFile***REMOVED***=***REMOVED***util.join(aRelativePath,***REMOVED***sourceFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setSourceContent(sourceFile,***REMOVED***content);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;

***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***addMappingWithCode(mapping,***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***mapping.source***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***aRelativePath
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***util.join(aRelativePath,***REMOVED***mapping.source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***mapping.source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(new***REMOVED***SourceNode(mapping.originalLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.name));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Add***REMOVED***a***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***to***REMOVED***this***REMOVED***source***REMOVED***node.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aChunk***REMOVED***A***REMOVED***string***REMOVED***snippet***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***code,***REMOVED***another***REMOVED***instance***REMOVED***of
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SourceNode,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***where***REMOVED***each***REMOVED***member***REMOVED***is***REMOVED***one***REMOVED***of***REMOVED***those***REMOVED***things.
***REMOVED****/
SourceNode.prototype.add***REMOVED***=***REMOVED***function***REMOVED***SourceNode_add(aChunk)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(aChunk))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***aChunk.forEach(function***REMOVED***(chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.add(chunk);
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aChunk[isSourceNode]***REMOVED***||***REMOVED***typeof***REMOVED***aChunk***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aChunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.children.push(aChunk);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Expected***REMOVED***a***REMOVED***SourceNode,***REMOVED***string,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***SourceNodes***REMOVED***and***REMOVED***strings.***REMOVED***Got***REMOVED***"***REMOVED***+***REMOVED***aChunk
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this;
};

/**
***REMOVED*******REMOVED***Add***REMOVED***a***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***to***REMOVED***the***REMOVED***beginning***REMOVED***of***REMOVED***this***REMOVED***source***REMOVED***node.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aChunk***REMOVED***A***REMOVED***string***REMOVED***snippet***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***code,***REMOVED***another***REMOVED***instance***REMOVED***of
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SourceNode,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***where***REMOVED***each***REMOVED***member***REMOVED***is***REMOVED***one***REMOVED***of***REMOVED***those***REMOVED***things.
***REMOVED****/
SourceNode.prototype.prepend***REMOVED***=***REMOVED***function***REMOVED***SourceNode_prepend(aChunk)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(aChunk))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***aChunk.length-1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prepend(aChunk[i]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aChunk[isSourceNode]***REMOVED***||***REMOVED***typeof***REMOVED***aChunk***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.children.unshift(aChunk);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Expected***REMOVED***a***REMOVED***SourceNode,***REMOVED***string,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***SourceNodes***REMOVED***and***REMOVED***strings.***REMOVED***Got***REMOVED***"***REMOVED***+***REMOVED***aChunk
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this;
};

/**
***REMOVED*******REMOVED***Walk***REMOVED***over***REMOVED***the***REMOVED***tree***REMOVED***of***REMOVED***JS***REMOVED***snippets***REMOVED***in***REMOVED***this***REMOVED***node***REMOVED***and***REMOVED***its***REMOVED***children.***REMOVED***The
***REMOVED*******REMOVED***walking***REMOVED***function***REMOVED***is***REMOVED***called***REMOVED***once***REMOVED***for***REMOVED***each***REMOVED***snippet***REMOVED***of***REMOVED***JS***REMOVED***and***REMOVED***is***REMOVED***passed***REMOVED***that
***REMOVED*******REMOVED***snippet***REMOVED***and***REMOVED***the***REMOVED***its***REMOVED***original***REMOVED***associated***REMOVED***source's***REMOVED***line/column***REMOVED***location.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aFn***REMOVED***The***REMOVED***traversal***REMOVED***function.
***REMOVED****/
SourceNode.prototype.walk***REMOVED***=***REMOVED***function***REMOVED***SourceNode_walk(aFn)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***chunk;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***this.children.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***chunk***REMOVED***=***REMOVED***this.children[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk[isSourceNode])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.walk(aFn);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***!==***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aFn(chunk,***REMOVED***{***REMOVED***source:***REMOVED***this.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***this.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***this.column,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***this.name***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***Like***REMOVED***`String.prototype.join`***REMOVED***except***REMOVED***for***REMOVED***SourceNodes.***REMOVED***Inserts***REMOVED***`aStr`***REMOVED***between
***REMOVED*******REMOVED***each***REMOVED***of***REMOVED***`this.children`.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aSep***REMOVED***The***REMOVED***separator.
***REMOVED****/
SourceNode.prototype.join***REMOVED***=***REMOVED***function***REMOVED***SourceNode_join(aSep)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***newChildren;
***REMOVED******REMOVED***var***REMOVED***i;
***REMOVED******REMOVED***var***REMOVED***len***REMOVED***=***REMOVED***this.children.length;
***REMOVED******REMOVED***if***REMOVED***(len***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newChildren***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***len-1;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newChildren.push(this.children[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newChildren.push(aSep);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***newChildren.push(this.children[i]);
***REMOVED******REMOVED******REMOVED******REMOVED***this.children***REMOVED***=***REMOVED***newChildren;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this;
};

/**
***REMOVED*******REMOVED***Call***REMOVED***String.prototype.replace***REMOVED***on***REMOVED***the***REMOVED***very***REMOVED***right-most***REMOVED***source***REMOVED***snippet.***REMOVED***Useful
***REMOVED*******REMOVED***for***REMOVED***trimming***REMOVED***whitespace***REMOVED***from***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***source***REMOVED***node,***REMOVED***etc.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aPattern***REMOVED***The***REMOVED***pattern***REMOVED***to***REMOVED***replace.
***REMOVED*******REMOVED***@param***REMOVED***aReplacement***REMOVED***The***REMOVED***thing***REMOVED***to***REMOVED***replace***REMOVED***the***REMOVED***pattern***REMOVED***with.
***REMOVED****/
SourceNode.prototype.replaceRight***REMOVED***=***REMOVED***function***REMOVED***SourceNode_replaceRight(aPattern,***REMOVED***aReplacement)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***lastChild***REMOVED***=***REMOVED***this.children[this.children.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***if***REMOVED***(lastChild[isSourceNode])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***lastChild.replaceRight(aPattern,***REMOVED***aReplacement);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***lastChild***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.children[this.children.length***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***lastChild.replace(aPattern,***REMOVED***aReplacement);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.children.push(''.replace(aPattern,***REMOVED***aReplacement));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***this;
};

/**
***REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***a***REMOVED***source***REMOVED***file.***REMOVED***This***REMOVED***will***REMOVED***be***REMOVED***added***REMOVED***to***REMOVED***the***REMOVED***SourceMapGenerator
***REMOVED*******REMOVED***in***REMOVED***the***REMOVED***sourcesContent***REMOVED***field.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aSourceFile***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***file
***REMOVED*******REMOVED***@param***REMOVED***aSourceContent***REMOVED***The***REMOVED***content***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***file
***REMOVED****/
SourceNode.prototype.setSourceContent***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceNode_setSourceContent(aSourceFile,***REMOVED***aSourceContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.sourceContents[util.toSetString(aSourceFile)]***REMOVED***=***REMOVED***aSourceContent;
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Walk***REMOVED***over***REMOVED***the***REMOVED***tree***REMOVED***of***REMOVED***SourceNodes.***REMOVED***The***REMOVED***walking***REMOVED***function***REMOVED***is***REMOVED***called***REMOVED***for***REMOVED***each
***REMOVED*******REMOVED***source***REMOVED***file***REMOVED***content***REMOVED***and***REMOVED***is***REMOVED***passed***REMOVED***the***REMOVED***filename***REMOVED***and***REMOVED***source***REMOVED***content.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***aFn***REMOVED***The***REMOVED***traversal***REMOVED***function.
***REMOVED****/
SourceNode.prototype.walkSourceContents***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceNode_walkSourceContents(aFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***this.children.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.children[i][isSourceNode])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.children[i].walkSourceContents(aFn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***Object.keys(this.sourceContents);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***sources.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aFn(util.fromSetString(sources[i]),***REMOVED***this.sourceContents[sources[i]]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Return***REMOVED***the***REMOVED***string***REMOVED***representation***REMOVED***of***REMOVED***this***REMOVED***source***REMOVED***node.***REMOVED***Walks***REMOVED***over***REMOVED***the***REMOVED***tree
***REMOVED*******REMOVED***and***REMOVED***concatenates***REMOVED***all***REMOVED***the***REMOVED***various***REMOVED***snippets***REMOVED***together***REMOVED***to***REMOVED***one***REMOVED***string.
***REMOVED****/
SourceNode.prototype.toString***REMOVED***=***REMOVED***function***REMOVED***SourceNode_toString()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***this.walk(function***REMOVED***(chunk)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***+=***REMOVED***chunk;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***str;
};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***string***REMOVED***representation***REMOVED***of***REMOVED***this***REMOVED***source***REMOVED***node***REMOVED***along***REMOVED***with***REMOVED***a***REMOVED***source
***REMOVED*******REMOVED***map.
***REMOVED****/
SourceNode.prototype.toStringWithSourceMap***REMOVED***=***REMOVED***function***REMOVED***SourceNode_toStringWithSourceMap(aArgs)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***generated***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***0
***REMOVED******REMOVED***};
***REMOVED******REMOVED***var***REMOVED***map***REMOVED***=***REMOVED***new***REMOVED***SourceMapGenerator(aArgs);
***REMOVED******REMOVED***var***REMOVED***sourceMappingActive***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***var***REMOVED***lastOriginalSource***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***var***REMOVED***lastOriginalLine***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***var***REMOVED***lastOriginalColumn***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***var***REMOVED***lastOriginalName***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***this.walk(function***REMOVED***(chunk,***REMOVED***original)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***generated.code***REMOVED***+=***REMOVED***chunk;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(original.source***REMOVED***!==***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***original.line***REMOVED***!==***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***original.column***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if(lastOriginalSource***REMOVED***!==***REMOVED***original.source
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***lastOriginalLine***REMOVED***!==***REMOVED***original.line
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***lastOriginalColumn***REMOVED***!==***REMOVED***original.column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***lastOriginalName***REMOVED***!==***REMOVED***original.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.addMapping({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***original.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***original.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***original.column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generated.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generated.column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***original.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalSource***REMOVED***=***REMOVED***original.source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalLine***REMOVED***=***REMOVED***original.line;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalColumn***REMOVED***=***REMOVED***original.column;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalName***REMOVED***=***REMOVED***original.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingActive***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(sourceMappingActive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.addMapping({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generated.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generated.column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalSource***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingActive***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***idx***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***chunk.length;***REMOVED***idx***REMOVED***<***REMOVED***length;***REMOVED***idx++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk.charCodeAt(idx)***REMOVED***===***REMOVED***NEWLINE_CODE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated.line++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated.column***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Mappings***REMOVED***end***REMOVED***at***REMOVED***eol
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***+***REMOVED***1***REMOVED***===***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalSource***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingActive***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(sourceMappingActive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.addMapping({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***original.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***original.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***original.column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generated.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generated.column
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***original.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated.column++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***this.walkSourceContents(function***REMOVED***(sourceFile,***REMOVED***sourceContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***map.setSourceContent(sourceFile,***REMOVED***sourceContent);
***REMOVED******REMOVED***});

***REMOVED******REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***generated.code,***REMOVED***map:***REMOVED***map***REMOVED***};
};

exports.SourceNode***REMOVED***=***REMOVED***SourceNode;
