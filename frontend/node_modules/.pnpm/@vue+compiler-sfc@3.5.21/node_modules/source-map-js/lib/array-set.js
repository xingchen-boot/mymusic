/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/
/*
***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
***REMOVED****/

var***REMOVED***util***REMOVED***=***REMOVED***require('./util');
var***REMOVED***has***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
var***REMOVED***hasNativeMap***REMOVED***=***REMOVED***typeof***REMOVED***Map***REMOVED***!==***REMOVED***"undefined";

/**
***REMOVED*******REMOVED***A***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***is***REMOVED***a***REMOVED***combination***REMOVED***of***REMOVED***an***REMOVED***array***REMOVED***and***REMOVED***a***REMOVED***set.***REMOVED***Adding***REMOVED***a***REMOVED***new
***REMOVED*******REMOVED***member***REMOVED***is***REMOVED***O(1),***REMOVED***testing***REMOVED***for***REMOVED***membership***REMOVED***is***REMOVED***O(1),***REMOVED***and***REMOVED***finding***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***an
***REMOVED*******REMOVED***element***REMOVED***is***REMOVED***O(1).***REMOVED***Removing***REMOVED***elements***REMOVED***from***REMOVED***the***REMOVED***set***REMOVED***is***REMOVED***not***REMOVED***supported.***REMOVED***Only
***REMOVED*******REMOVED***strings***REMOVED***are***REMOVED***supported***REMOVED***for***REMOVED***membership.
***REMOVED****/
function***REMOVED***ArraySet()***REMOVED***{
***REMOVED******REMOVED***this._array***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this._set***REMOVED***=***REMOVED***hasNativeMap***REMOVED***?***REMOVED***new***REMOVED***Map()***REMOVED***:***REMOVED***Object.create(null);
}

/**
***REMOVED*******REMOVED***Static***REMOVED***method***REMOVED***for***REMOVED***creating***REMOVED***ArraySet***REMOVED***instances***REMOVED***from***REMOVED***an***REMOVED***existing***REMOVED***array.
***REMOVED****/
ArraySet.fromArray***REMOVED***=***REMOVED***function***REMOVED***ArraySet_fromArray(aArray,***REMOVED***aAllowDuplicates)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***set***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***aArray.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***set.add(aArray[i],***REMOVED***aAllowDuplicates);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***set;
};

/**
***REMOVED*******REMOVED***Return***REMOVED***how***REMOVED***many***REMOVED***unique***REMOVED***items***REMOVED***are***REMOVED***in***REMOVED***this***REMOVED***ArraySet.***REMOVED***If***REMOVED***duplicates***REMOVED***have***REMOVED***been
***REMOVED*******REMOVED***added,***REMOVED***than***REMOVED***those***REMOVED***do***REMOVED***not***REMOVED***count***REMOVED***towards***REMOVED***the***REMOVED***size.
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***Number
***REMOVED****/
ArraySet.prototype.size***REMOVED***=***REMOVED***function***REMOVED***ArraySet_size()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***hasNativeMap***REMOVED***?***REMOVED***this._set.size***REMOVED***:***REMOVED***Object.getOwnPropertyNames(this._set).length;
};

/**
***REMOVED*******REMOVED***Add***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***to***REMOVED***this***REMOVED***set.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
***REMOVED****/
ArraySet.prototype.add***REMOVED***=***REMOVED***function***REMOVED***ArraySet_add(aStr,***REMOVED***aAllowDuplicates)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***sStr***REMOVED***=***REMOVED***hasNativeMap***REMOVED***?***REMOVED***aStr***REMOVED***:***REMOVED***util.toSetString(aStr);
***REMOVED******REMOVED***var***REMOVED***isDuplicate***REMOVED***=***REMOVED***hasNativeMap***REMOVED***?***REMOVED***this.has(aStr)***REMOVED***:***REMOVED***has.call(this._set,***REMOVED***sStr);
***REMOVED******REMOVED***var***REMOVED***idx***REMOVED***=***REMOVED***this._array.length;
***REMOVED******REMOVED***if***REMOVED***(!isDuplicate***REMOVED***||***REMOVED***aAllowDuplicates)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._array.push(aStr);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!isDuplicate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasNativeMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._set.set(aStr,***REMOVED***idx);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._set[sStr]***REMOVED***=***REMOVED***idx;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***Is***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***a***REMOVED***member***REMOVED***of***REMOVED***this***REMOVED***set?
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
***REMOVED****/
ArraySet.prototype.has***REMOVED***=***REMOVED***function***REMOVED***ArraySet_has(aStr)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(hasNativeMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._set.has(aStr);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sStr***REMOVED***=***REMOVED***util.toSetString(aStr);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***has.call(this._set,***REMOVED***sStr);
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***What***REMOVED***is***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***in***REMOVED***the***REMOVED***array?
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
***REMOVED****/
ArraySet.prototype.indexOf***REMOVED***=***REMOVED***function***REMOVED***ArraySet_indexOf(aStr)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(hasNativeMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***idx***REMOVED***=***REMOVED***this._set.get(aStr);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***idx;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sStr***REMOVED***=***REMOVED***util.toSetString(aStr);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(has.call(this._set,***REMOVED***sStr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._set[sStr];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***aStr***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***set.');
};

/**
***REMOVED*******REMOVED***What***REMOVED***is***REMOVED***the***REMOVED***element***REMOVED***at***REMOVED***the***REMOVED***given***REMOVED***index?
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***Number***REMOVED***aIdx
***REMOVED****/
ArraySet.prototype.at***REMOVED***=***REMOVED***function***REMOVED***ArraySet_at(aIdx)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(aIdx***REMOVED***>=***REMOVED***0***REMOVED***&&***REMOVED***aIdx***REMOVED***<***REMOVED***this._array.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._array[aIdx];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('No***REMOVED***element***REMOVED***indexed***REMOVED***by***REMOVED***'***REMOVED***+***REMOVED***aIdx);
};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***array***REMOVED***representation***REMOVED***of***REMOVED***this***REMOVED***set***REMOVED***(which***REMOVED***has***REMOVED***the***REMOVED***proper***REMOVED***indices
***REMOVED*******REMOVED***indicated***REMOVED***by***REMOVED***indexOf).***REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the***REMOVED***internal***REMOVED***array***REMOVED***used
***REMOVED*******REMOVED***for***REMOVED***storing***REMOVED***the***REMOVED***members***REMOVED***so***REMOVED***that***REMOVED***no***REMOVED***one***REMOVED***can***REMOVED***mess***REMOVED***with***REMOVED***internal***REMOVED***state.
***REMOVED****/
ArraySet.prototype.toArray***REMOVED***=***REMOVED***function***REMOVED***ArraySet_toArray()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***this._array.slice();
};

exports.ArraySet***REMOVED***=***REMOVED***ArraySet;
