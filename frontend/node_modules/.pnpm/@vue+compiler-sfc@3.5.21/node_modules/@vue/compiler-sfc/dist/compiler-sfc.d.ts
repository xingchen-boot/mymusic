import***REMOVED*******REMOVED***as***REMOVED***_babel_types***REMOVED***from***REMOVED***'@babel/types';
import***REMOVED***{***REMOVED***Statement,***REMOVED***Expression,***REMOVED***TSType,***REMOVED***Node,***REMOVED***Program,***REMOVED***CallExpression,***REMOVED***ObjectPattern,***REMOVED***TSModuleDeclaration,***REMOVED***TSPropertySignature,***REMOVED***TSMethodSignature,***REMOVED***TSCallSignatureDeclaration,***REMOVED***TSFunctionType***REMOVED***}***REMOVED***from***REMOVED***'@babel/types';
import***REMOVED***{***REMOVED***RootNode,***REMOVED***CompilerOptions,***REMOVED***CodegenResult,***REMOVED***ParserOptions,***REMOVED***RawSourceMap,***REMOVED***CompilerError,***REMOVED***SourceLocation,***REMOVED***BindingMetadata***REMOVED***as***REMOVED***BindingMetadata$1***REMOVED***}***REMOVED***from***REMOVED***'@vue/compiler-core';
export***REMOVED***{***REMOVED***BindingMetadata,***REMOVED***CompilerError,***REMOVED***CompilerOptions,***REMOVED***extractIdentifiers,***REMOVED***generateCodeFrame,***REMOVED***isInDestructureAssignment,***REMOVED***isStaticProperty,***REMOVED***walkIdentifiers***REMOVED***}***REMOVED***from***REMOVED***'@vue/compiler-core';
import***REMOVED***{***REMOVED***ParserPlugin***REMOVED***}***REMOVED***from***REMOVED***'@babel/parser';
export***REMOVED***{***REMOVED***parse***REMOVED***as***REMOVED***babelParse***REMOVED***}***REMOVED***from***REMOVED***'@babel/parser';
import***REMOVED***{***REMOVED***Result,***REMOVED***LazyResult***REMOVED***}***REMOVED***from***REMOVED***'postcss';
import***REMOVED***MagicString***REMOVED***from***REMOVED***'magic-string';
export***REMOVED***{***REMOVED***default***REMOVED***as***REMOVED***MagicString***REMOVED***}***REMOVED***from***REMOVED***'magic-string';
import***REMOVED***TS***REMOVED***from***REMOVED***'typescript';

export***REMOVED***interface***REMOVED***AssetURLTagConfig***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[name:***REMOVED***string]:***REMOVED***string[];
}
export***REMOVED***interface***REMOVED***AssetURLOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***base***REMOVED***is***REMOVED***provided,***REMOVED***instead***REMOVED***of***REMOVED***transforming***REMOVED***relative***REMOVED***asset***REMOVED***urls***REMOVED***into
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***imports,***REMOVED***they***REMOVED***will***REMOVED***be***REMOVED***directly***REMOVED***rewritten***REMOVED***to***REMOVED***absolute***REMOVED***urls.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***base?:***REMOVED***string***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***true,***REMOVED***also***REMOVED***processes***REMOVED***absolute***REMOVED***urls.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***includeAbsolute?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***tags?:***REMOVED***AssetURLTagConfig;
}

export***REMOVED***interface***REMOVED***TemplateCompiler***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***compile(source:***REMOVED***string***REMOVED***|***REMOVED***RootNode,***REMOVED***options:***REMOVED***CompilerOptions):***REMOVED***CodegenResult;
***REMOVED******REMOVED******REMOVED******REMOVED***parse(template:***REMOVED***string,***REMOVED***options:***REMOVED***ParserOptions):***REMOVED***RootNode;
}
export***REMOVED***interface***REMOVED***SFCTemplateCompileResults***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***ast?:***REMOVED***RootNode;
***REMOVED******REMOVED******REMOVED******REMOVED***preamble?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***tips:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***(string***REMOVED***|***REMOVED***CompilerError)[];
***REMOVED******REMOVED******REMOVED******REMOVED***map?:***REMOVED***RawSourceMap;
}
export***REMOVED***interface***REMOVED***SFCTemplateCompileOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***ast?:***REMOVED***RootNode;
***REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***scoped?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***slotted?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***isProd?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***ssr?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***ssrCssVars?:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***inMap?:***REMOVED***RawSourceMap;
***REMOVED******REMOVED******REMOVED******REMOVED***compiler?:***REMOVED***TemplateCompiler;
***REMOVED******REMOVED******REMOVED******REMOVED***compilerOptions?:***REMOVED***CompilerOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessLang?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessOptions?:***REMOVED***any;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***In***REMOVED***some***REMOVED***cases,***REMOVED***compiler-sfc***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***inside***REMOVED***the***REMOVED***project***REMOVED***root***REMOVED***(e.g.***REMOVED***when
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***linked***REMOVED***or***REMOVED***globally***REMOVED***installed).***REMOVED***In***REMOVED***such***REMOVED***cases***REMOVED***a***REMOVED***custom***REMOVED***`require`***REMOVED***can***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***passed***REMOVED***to***REMOVED***correctly***REMOVED***resolve***REMOVED***the***REMOVED***preprocessors.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessCustomRequire?:***REMOVED***(id:***REMOVED***string)***REMOVED***=>***REMOVED***any;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Configure***REMOVED***what***REMOVED***tags/attributes***REMOVED***to***REMOVED***transform***REMOVED***into***REMOVED***asset***REMOVED***url***REMOVED***imports,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***or***REMOVED***disable***REMOVED***the***REMOVED***transform***REMOVED***altogether***REMOVED***with***REMOVED***`false`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***transformAssetUrls?:***REMOVED***AssetURLOptions***REMOVED***|***REMOVED***AssetURLTagConfig***REMOVED***|***REMOVED***boolean;
}
export***REMOVED***declare***REMOVED***function***REMOVED***compileTemplate(options:***REMOVED***SFCTemplateCompileOptions):***REMOVED***SFCTemplateCompileResults;

export***REMOVED***interface***REMOVED***SFCScriptCompileOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Scope***REMOVED***ID***REMOVED***for***REMOVED***prefixing***REMOVED***injected***REMOVED***CSS***REMOVED***variables.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***must***REMOVED***be***REMOVED***consistent***REMOVED***with***REMOVED***the***REMOVED***`id`***REMOVED***passed***REMOVED***to***REMOVED***`compileStyle`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Production***REMOVED***mode.***REMOVED***Used***REMOVED***to***REMOVED***determine***REMOVED***whether***REMOVED***to***REMOVED***generate***REMOVED***hashed***REMOVED***CSS***REMOVED***variables
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isProd?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Enable/disable***REMOVED***source***REMOVED***map.***REMOVED***Defaults***REMOVED***to***REMOVED***true.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***https://babeljs.io/docs/en/babel-parser#plugins
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***babelParserPlugins?:***REMOVED***ParserPlugin[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***files***REMOVED***to***REMOVED***parse***REMOVED***for***REMOVED***global***REMOVED***types***REMOVED***to***REMOVED***be***REMOVED***made***REMOVED***available***REMOVED***for***REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***resolving***REMOVED***in***REMOVED***SFC***REMOVED***macros.***REMOVED***The***REMOVED***list***REMOVED***must***REMOVED***be***REMOVED***fully***REMOVED***resolved***REMOVED***file***REMOVED***system***REMOVED***paths.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***globalTypeFiles?:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Compile***REMOVED***the***REMOVED***template***REMOVED***and***REMOVED***inline***REMOVED***the***REMOVED***resulting***REMOVED***render***REMOVED***function
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***directly***REMOVED***inside***REMOVED***setup().
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***Only***REMOVED***affects***REMOVED***`<script***REMOVED***setup>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***This***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***production***REMOVED***because***REMOVED***it***REMOVED***prevents***REMOVED***the***REMOVED***template
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***from***REMOVED***being***REMOVED***hot-reloaded***REMOVED***separately***REMOVED***from***REMOVED***component***REMOVED***state.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***inlineTemplate?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Generate***REMOVED***the***REMOVED***final***REMOVED***component***REMOVED***as***REMOVED***a***REMOVED***variable***REMOVED***instead***REMOVED***of***REMOVED***default***REMOVED***export.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***is***REMOVED***useful***REMOVED***in***REMOVED***e.g.***REMOVED***@vitejs/plugin-vue***REMOVED***where***REMOVED***the***REMOVED***script***REMOVED***needs***REMOVED***to***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***placed***REMOVED***inside***REMOVED***the***REMOVED***main***REMOVED***module.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***genDefaultAs?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Options***REMOVED***for***REMOVED***template***REMOVED***compilation***REMOVED***when***REMOVED***inlining.***REMOVED***Note***REMOVED***these***REMOVED***are***REMOVED***options***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***would***REMOVED***normally***REMOVED***be***REMOVED***passed***REMOVED***to***REMOVED***`compiler-sfc`'s***REMOVED***own***REMOVED***`compileTemplate()`,***REMOVED***not
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***options***REMOVED***passed***REMOVED***to***REMOVED***`compiler-dom`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***templateOptions?:***REMOVED***Partial<SFCTemplateCompileOptions>;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Hoist***REMOVED***<script***REMOVED***setup>***REMOVED***static***REMOVED***constants.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***Only***REMOVED***enables***REMOVED***when***REMOVED***one***REMOVED***`<script***REMOVED***setup>`***REMOVED***exists.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***to***REMOVED***`false`***REMOVED***to***REMOVED***disable***REMOVED***reactive***REMOVED***destructure***REMOVED***for***REMOVED***`defineProps`***REMOVED***(pre-3.5
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***behavior),***REMOVED***or***REMOVED***set***REMOVED***to***REMOVED***`'error'`***REMOVED***to***REMOVED***throw***REMOVED***hard***REMOVED***error***REMOVED***on***REMOVED***props***REMOVED***destructures.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***propsDestructure?:***REMOVED***boolean***REMOVED***|***REMOVED***'error';
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***File***REMOVED***system***REMOVED***access***REMOVED***methods***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***when***REMOVED***resolving***REMOVED***types
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***imported***REMOVED***in***REMOVED***SFC***REMOVED***macros.***REMOVED***Defaults***REMOVED***to***REMOVED***ts.sys***REMOVED***in***REMOVED***Node.js,***REMOVED***can***REMOVED***be***REMOVED***overwritten
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***use***REMOVED***a***REMOVED***virtual***REMOVED***file***REMOVED***system***REMOVED***for***REMOVED***use***REMOVED***in***REMOVED***browsers***REMOVED***(e.g.***REMOVED***in***REMOVED***REPLs)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***fs?:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileExists(file:***REMOVED***string):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readFile(file:***REMOVED***string):***REMOVED***string***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***realpath?(file:***REMOVED***string):***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Transform***REMOVED***Vue***REMOVED***SFCs***REMOVED***into***REMOVED***custom***REMOVED***elements.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***customElement?:***REMOVED***boolean***REMOVED***|***REMOVED***((filename:***REMOVED***string)***REMOVED***=>***REMOVED***boolean);
}
interface***REMOVED***ImportBinding***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isType:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***imported:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***isFromSetup:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***isUsedInTemplate:***REMOVED***boolean;
}
/**
***REMOVED*******REMOVED***Compile***REMOVED***`<script***REMOVED***setup>`
***REMOVED*******REMOVED***It***REMOVED***requires***REMOVED***the***REMOVED***whole***REMOVED***SFC***REMOVED***descriptor***REMOVED***because***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***handle***REMOVED***and***REMOVED***merge
***REMOVED*******REMOVED***normal***REMOVED***`<script>`***REMOVED***+***REMOVED***`<script***REMOVED***setup>`***REMOVED***if***REMOVED***both***REMOVED***are***REMOVED***present.
***REMOVED****/
export***REMOVED***declare***REMOVED***function***REMOVED***compileScript(sfc:***REMOVED***SFCDescriptor,***REMOVED***options:***REMOVED***SFCScriptCompileOptions):***REMOVED***SFCScriptBlock;

export***REMOVED***interface***REMOVED***SFCParseOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***pad?:***REMOVED***boolean***REMOVED***|***REMOVED***'line'***REMOVED***|***REMOVED***'space';
***REMOVED******REMOVED******REMOVED******REMOVED***ignoreEmpty?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***compiler?:***REMOVED***TemplateCompiler;
***REMOVED******REMOVED******REMOVED******REMOVED***templateParseOptions?:***REMOVED***ParserOptions;
}
export***REMOVED***interface***REMOVED***SFCBlock***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***attrs:***REMOVED***Record<string,***REMOVED***string***REMOVED***|***REMOVED***true>;
***REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***SourceLocation;
***REMOVED******REMOVED******REMOVED******REMOVED***map?:***REMOVED***RawSourceMap;
***REMOVED******REMOVED******REMOVED******REMOVED***lang?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***src?:***REMOVED***string;
}
export***REMOVED***interface***REMOVED***SFCTemplateBlock***REMOVED***extends***REMOVED***SFCBlock***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'template';
***REMOVED******REMOVED******REMOVED******REMOVED***ast?:***REMOVED***RootNode;
}
export***REMOVED***interface***REMOVED***SFCScriptBlock***REMOVED***extends***REMOVED***SFCBlock***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'script';
***REMOVED******REMOVED******REMOVED******REMOVED***setup?:***REMOVED***string***REMOVED***|***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***bindings?:***REMOVED***BindingMetadata$1;
***REMOVED******REMOVED******REMOVED******REMOVED***imports?:***REMOVED***Record<string,***REMOVED***ImportBinding>;
***REMOVED******REMOVED******REMOVED******REMOVED***scriptAst?:***REMOVED***_babel_types.Statement[];
***REMOVED******REMOVED******REMOVED******REMOVED***scriptSetupAst?:***REMOVED***_babel_types.Statement[];
***REMOVED******REMOVED******REMOVED******REMOVED***warnings?:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Fully***REMOVED***resolved***REMOVED***dependency***REMOVED***file***REMOVED***paths***REMOVED***(unix***REMOVED***slashes)***REMOVED***with***REMOVED***imported***REMOVED***types
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***used***REMOVED***in***REMOVED***macros,***REMOVED***used***REMOVED***for***REMOVED***HMR***REMOVED***cache***REMOVED***busting***REMOVED***in***REMOVED***@vitejs/plugin-vue***REMOVED***and
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***vue-loader.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***deps?:***REMOVED***string[];
}
export***REMOVED***interface***REMOVED***SFCStyleBlock***REMOVED***extends***REMOVED***SFCBlock***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***'style';
***REMOVED******REMOVED******REMOVED******REMOVED***scoped?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***module?:***REMOVED***string***REMOVED***|***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***SFCDescriptor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***template:***REMOVED***SFCTemplateBlock***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***script:***REMOVED***SFCScriptBlock***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***scriptSetup:***REMOVED***SFCScriptBlock***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***styles:***REMOVED***SFCStyleBlock[];
***REMOVED******REMOVED******REMOVED******REMOVED***customBlocks:***REMOVED***SFCBlock[];
***REMOVED******REMOVED******REMOVED******REMOVED***cssVars:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***whether***REMOVED***the***REMOVED***SFC***REMOVED***uses***REMOVED***:slotted()***REMOVED***modifier.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***this***REMOVED***is***REMOVED***used***REMOVED***as***REMOVED***a***REMOVED***compiler***REMOVED***optimization***REMOVED***hint.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***slotted:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***compare***REMOVED***with***REMOVED***an***REMOVED***existing***REMOVED***descriptor***REMOVED***to***REMOVED***determine***REMOVED***whether***REMOVED***HMR***REMOVED***should***REMOVED***perform
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***reload***REMOVED***vs.***REMOVED***re-render.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Note:***REMOVED***this***REMOVED***comparison***REMOVED***assumes***REMOVED***the***REMOVED***prev/next***REMOVED***script***REMOVED***are***REMOVED***already***REMOVED***identical,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***and***REMOVED***only***REMOVED***checks***REMOVED***the***REMOVED***special***REMOVED***case***REMOVED***where***REMOVED***<script***REMOVED***setup***REMOVED***lang="ts">***REMOVED***unused***REMOVED***import
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***pruning***REMOVED***result***REMOVED***changes***REMOVED***due***REMOVED***to***REMOVED***template***REMOVED***changes.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***shouldForceReload:***REMOVED***(prevImports:***REMOVED***Record<string,***REMOVED***ImportBinding>)***REMOVED***=>***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***SFCParseResult***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***descriptor:***REMOVED***SFCDescriptor;
***REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***(CompilerError***REMOVED***|***REMOVED***SyntaxError)[];
}
export***REMOVED***declare***REMOVED***function***REMOVED***parse(source:***REMOVED***string,***REMOVED***options?:***REMOVED***SFCParseOptions):***REMOVED***SFCParseResult;

type***REMOVED***PreprocessLang***REMOVED***=***REMOVED***'less'***REMOVED***|***REMOVED***'sass'***REMOVED***|***REMOVED***'scss'***REMOVED***|***REMOVED***'styl'***REMOVED***|***REMOVED***'stylus';

export***REMOVED***interface***REMOVED***SFCStyleCompileOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***scoped?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***trim?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***isProd?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***inMap?:***REMOVED***RawSourceMap;
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessLang?:***REMOVED***PreprocessLang;
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessOptions?:***REMOVED***any;
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessCustomRequire?:***REMOVED***(id:***REMOVED***string)***REMOVED***=>***REMOVED***any;
***REMOVED******REMOVED******REMOVED******REMOVED***postcssOptions?:***REMOVED***any;
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugins?:***REMOVED***any[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@deprecated***REMOVED***use***REMOVED***`inMap`***REMOVED***instead.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***map?:***REMOVED***RawSourceMap;
}
/**
***REMOVED*******REMOVED***Aligns***REMOVED***with***REMOVED***postcss-modules
***REMOVED*******REMOVED***https://github.com/css-modules/postcss-modules
***REMOVED****/
interface***REMOVED***CSSModulesOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***scopeBehaviour?:***REMOVED***'global'***REMOVED***|***REMOVED***'local';
***REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName?:***REMOVED***string***REMOVED***|***REMOVED***((name:***REMOVED***string,***REMOVED***filename:***REMOVED***string,***REMOVED***css:***REMOVED***string)***REMOVED***=>***REMOVED***string);
***REMOVED******REMOVED******REMOVED******REMOVED***hashPrefix?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***localsConvention?:***REMOVED***'camelCase'***REMOVED***|***REMOVED***'camelCaseOnly'***REMOVED***|***REMOVED***'dashes'***REMOVED***|***REMOVED***'dashesOnly';
***REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***globalModulePaths?:***REMOVED***RegExp[];
}
export***REMOVED***interface***REMOVED***SFCAsyncStyleCompileOptions***REMOVED***extends***REMOVED***SFCStyleCompileOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isAsync?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***modules?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***modulesOptions?:***REMOVED***CSSModulesOptions;
}
export***REMOVED***interface***REMOVED***SFCStyleCompileResults***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***RawSourceMap***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***rawResult:***REMOVED***Result***REMOVED***|***REMOVED***LazyResult***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***Error[];
***REMOVED******REMOVED******REMOVED******REMOVED***modules?:***REMOVED***Record<string,***REMOVED***string>;
***REMOVED******REMOVED******REMOVED******REMOVED***dependencies:***REMOVED***Set<string>;
}
export***REMOVED***declare***REMOVED***function***REMOVED***compileStyle(options:***REMOVED***SFCStyleCompileOptions):***REMOVED***SFCStyleCompileResults;
export***REMOVED***declare***REMOVED***function***REMOVED***compileStyleAsync(options:***REMOVED***SFCAsyncStyleCompileOptions):***REMOVED***Promise<SFCStyleCompileResults>;

export***REMOVED***declare***REMOVED***function***REMOVED***rewriteDefault(input:***REMOVED***string,***REMOVED***as:***REMOVED***string,***REMOVED***parserPlugins?:***REMOVED***ParserPlugin[]):***REMOVED***string;
/**
***REMOVED*******REMOVED***Utility***REMOVED***for***REMOVED***rewriting***REMOVED***`export***REMOVED***default`***REMOVED***in***REMOVED***a***REMOVED***script***REMOVED***block***REMOVED***into***REMOVED***a***REMOVED***variable
***REMOVED*******REMOVED***declaration***REMOVED***so***REMOVED***that***REMOVED***we***REMOVED***can***REMOVED***inject***REMOVED***things***REMOVED***into***REMOVED***it
***REMOVED****/
export***REMOVED***declare***REMOVED***function***REMOVED***rewriteDefaultAST(ast:***REMOVED***Statement[],***REMOVED***s:***REMOVED***MagicString,***REMOVED***as:***REMOVED***string):***REMOVED***void;

type***REMOVED***PropsDestructureBindings***REMOVED***=***REMOVED***Record<string,***REMOVED***//***REMOVED***public***REMOVED***prop***REMOVED***key
{
***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***default?:***REMOVED***Expression;
}>;
export***REMOVED***declare***REMOVED***function***REMOVED***extractRuntimeProps(ctx:***REMOVED***TypeResolveContext):***REMOVED***string***REMOVED***|***REMOVED***undefined;

interface***REMOVED***ModelDecl***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***TSType***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***string***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***identifier:***REMOVED***string***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***runtimeOptionNodes:***REMOVED***Node[];
}

declare***REMOVED***enum***REMOVED***BindingTypes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returned***REMOVED***from***REMOVED***data()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***DATA***REMOVED***=***REMOVED***"data",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***declared***REMOVED***as***REMOVED***a***REMOVED***prop
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***PROPS***REMOVED***=***REMOVED***"props",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***local***REMOVED***alias***REMOVED***of***REMOVED***a***REMOVED***`<script***REMOVED***setup>`***REMOVED***destructured***REMOVED***prop.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***original***REMOVED***is***REMOVED***stored***REMOVED***in***REMOVED***__propsAliases***REMOVED***of***REMOVED***the***REMOVED***bindingMetadata***REMOVED***object.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***PROPS_ALIASED***REMOVED***=***REMOVED***"props-aliased",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***let***REMOVED***binding***REMOVED***(may***REMOVED***or***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***a***REMOVED***ref)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_LET***REMOVED***=***REMOVED***"setup-let",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***const***REMOVED***binding***REMOVED***that***REMOVED***can***REMOVED***never***REMOVED***be***REMOVED***a***REMOVED***ref.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***these***REMOVED***bindings***REMOVED***don't***REMOVED***need***REMOVED***`unref()`***REMOVED***calls***REMOVED***when***REMOVED***processed***REMOVED***in***REMOVED***inlined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***template***REMOVED***expressions.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_CONST***REMOVED***=***REMOVED***"setup-const",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***const***REMOVED***binding***REMOVED***that***REMOVED***does***REMOVED***not***REMOVED***need***REMOVED***`unref()`,***REMOVED***but***REMOVED***may***REMOVED***be***REMOVED***mutated.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_REACTIVE_CONST***REMOVED***=***REMOVED***"setup-reactive-const",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***const***REMOVED***binding***REMOVED***that***REMOVED***may***REMOVED***be***REMOVED***a***REMOVED***ref.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_MAYBE_REF***REMOVED***=***REMOVED***"setup-maybe-ref",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***bindings***REMOVED***that***REMOVED***are***REMOVED***guaranteed***REMOVED***to***REMOVED***be***REMOVED***refs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_REF***REMOVED***=***REMOVED***"setup-ref",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***declared***REMOVED***by***REMOVED***other***REMOVED***options,***REMOVED***e.g.***REMOVED***computed,***REMOVED***inject
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***OPTIONS***REMOVED***=***REMOVED***"options",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***literal***REMOVED***constant,***REMOVED***e.g.***REMOVED***'foo',***REMOVED***1,***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***LITERAL_CONST***REMOVED***=***REMOVED***"literal-const"
}
type***REMOVED***BindingMetadata***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[key:***REMOVED***string]:***REMOVED***BindingTypes***REMOVED***|***REMOVED***undefined;
}***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__isScriptSetup?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***__propsAliases?:***REMOVED***Record<string,***REMOVED***string>;
};

export***REMOVED***declare***REMOVED***class***REMOVED***ScriptCompileContext***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***descriptor:***REMOVED***SFCDescriptor;
***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***Partial<SFCScriptCompileOptions>;
***REMOVED******REMOVED******REMOVED******REMOVED***isJS:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***isTS:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***isCE:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***scriptAst:***REMOVED***Program***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***scriptSetupAst:***REMOVED***Program***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***s:***REMOVED***MagicString;
***REMOVED******REMOVED******REMOVED******REMOVED***startOffset:***REMOVED***number***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***endOffset:***REMOVED***number***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***scope?:***REMOVED***TypeScope;
***REMOVED******REMOVED******REMOVED******REMOVED***globalScopes?:***REMOVED***TypeScope[];
***REMOVED******REMOVED******REMOVED******REMOVED***userImports:***REMOVED***Record<string,***REMOVED***ImportBinding>;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefinePropsCall:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefineEmitCall:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefineExposeCall:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefaultExportName:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefaultExportRender:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefineOptionsCall:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefineSlotsCall:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDefineModelCall:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***propsCall:***REMOVED***CallExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***propsDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***propsRuntimeDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***propsTypeDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***propsDestructureDecl:***REMOVED***ObjectPattern***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***propsDestructuredBindings:***REMOVED***PropsDestructureBindings;
***REMOVED******REMOVED******REMOVED******REMOVED***propsDestructureRestId:***REMOVED***string***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***propsRuntimeDefaults:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***emitsRuntimeDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***emitsTypeDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***emitDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***modelDecls:***REMOVED***Record<string,***REMOVED***ModelDecl>;
***REMOVED******REMOVED******REMOVED******REMOVED***optionsRuntimeDecl:***REMOVED***Node***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***bindingMetadata:***REMOVED***BindingMetadata;
***REMOVED******REMOVED******REMOVED******REMOVED***helperImports:***REMOVED***Set<string>;
***REMOVED******REMOVED******REMOVED******REMOVED***helper(key:***REMOVED***string):***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***be***REMOVED***exposed***REMOVED***on***REMOVED***compiled***REMOVED***script***REMOVED***block***REMOVED***for***REMOVED***HMR***REMOVED***cache***REMOVED***busting
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***deps?:***REMOVED***Set<string>;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***cache***REMOVED***for***REMOVED***resolved***REMOVED***fs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***fs?:***REMOVED***NonNullable<SFCScriptCompileOptions['fs']>;
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(descriptor:***REMOVED***SFCDescriptor,***REMOVED***options:***REMOVED***Partial<SFCScriptCompileOptions>);
***REMOVED******REMOVED******REMOVED******REMOVED***getString(node:***REMOVED***Node,***REMOVED***scriptSetup?:***REMOVED***boolean):***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***warn(msg:***REMOVED***string,***REMOVED***node:***REMOVED***Node,***REMOVED***scope?:***REMOVED***TypeScope):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***error(msg:***REMOVED***string,***REMOVED***node:***REMOVED***Node,***REMOVED***scope?:***REMOVED***TypeScope):***REMOVED***never;
}

export***REMOVED***type***REMOVED***SimpleTypeResolveOptions***REMOVED***=***REMOVED***Partial<Pick<SFCScriptCompileOptions,***REMOVED***'globalTypeFiles'***REMOVED***|***REMOVED***'fs'***REMOVED***|***REMOVED***'babelParserPlugins'***REMOVED***|***REMOVED***'isProd'>>;
/**
***REMOVED*******REMOVED***TypeResolveContext***REMOVED***is***REMOVED***compatible***REMOVED***with***REMOVED***ScriptCompileContext
***REMOVED*******REMOVED***but***REMOVED***also***REMOVED***allows***REMOVED***a***REMOVED***simpler***REMOVED***version***REMOVED***of***REMOVED***it***REMOVED***with***REMOVED***minimal***REMOVED***required***REMOVED***properties
***REMOVED*******REMOVED***when***REMOVED***resolveType***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***a***REMOVED***non-SFC***REMOVED***context,***REMOVED***e.g.***REMOVED***in***REMOVED***a***REMOVED***babel
***REMOVED*******REMOVED***plugin.***REMOVED***The***REMOVED***simplest***REMOVED***context***REMOVED***can***REMOVED***be***REMOVED***just:
***REMOVED*******REMOVED***```ts
***REMOVED*******REMOVED***const***REMOVED***ctx:***REMOVED***SimpleTypeResolveContext***REMOVED***=***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***filename:***REMOVED***'...',
***REMOVED*******REMOVED******REMOVED******REMOVED***source:***REMOVED***'...',
***REMOVED*******REMOVED******REMOVED******REMOVED***options:***REMOVED***{},
***REMOVED*******REMOVED******REMOVED******REMOVED***error()***REMOVED***{},
***REMOVED*******REMOVED******REMOVED******REMOVED***ast:***REMOVED***[]
***REMOVED*******REMOVED***}
***REMOVED*******REMOVED***```
***REMOVED****/
export***REMOVED***type***REMOVED***SimpleTypeResolveContext***REMOVED***=***REMOVED***Pick<ScriptCompileContext,***REMOVED***'source'***REMOVED***|***REMOVED***'filename'***REMOVED***|***REMOVED***'error'***REMOVED***|***REMOVED***'helper'***REMOVED***|***REMOVED***'getString'***REMOVED***|***REMOVED***'propsTypeDecl'***REMOVED***|***REMOVED***'propsRuntimeDefaults'***REMOVED***|***REMOVED***'propsDestructuredBindings'***REMOVED***|***REMOVED***'emitsTypeDecl'***REMOVED***|***REMOVED***'isCE'>***REMOVED***&***REMOVED***Partial<Pick<ScriptCompileContext,***REMOVED***'scope'***REMOVED***|***REMOVED***'globalScopes'***REMOVED***|***REMOVED***'deps'***REMOVED***|***REMOVED***'fs'>>***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***Statement[];
***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***SimpleTypeResolveOptions;
};
export***REMOVED***type***REMOVED***TypeResolveContext***REMOVED***=***REMOVED***ScriptCompileContext***REMOVED***|***REMOVED***SimpleTypeResolveContext;
type***REMOVED***Import***REMOVED***=***REMOVED***Pick<ImportBinding,***REMOVED***'source'***REMOVED***|***REMOVED***'imported'>;
interface***REMOVED***WithScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_ownerScope:***REMOVED***TypeScope;
}
type***REMOVED***ScopeTypeNode***REMOVED***=***REMOVED***Node***REMOVED***&***REMOVED***WithScope***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_ns?:***REMOVED***TSModuleDeclaration***REMOVED***&***REMOVED***WithScope;
};
declare***REMOVED***class***REMOVED***TypeScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***offset:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***Record<string,***REMOVED***Import>;
***REMOVED******REMOVED******REMOVED******REMOVED***types:***REMOVED***Record<string,***REMOVED***ScopeTypeNode>;
***REMOVED******REMOVED******REMOVED******REMOVED***declares:***REMOVED***Record<string,***REMOVED***ScopeTypeNode>;
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(filename:***REMOVED***string,***REMOVED***source:***REMOVED***string,***REMOVED***offset?:***REMOVED***number,***REMOVED***imports?:***REMOVED***Record<string,***REMOVED***Import>,***REMOVED***types?:***REMOVED***Record<string,***REMOVED***ScopeTypeNode>,***REMOVED***declares?:***REMOVED***Record<string,***REMOVED***ScopeTypeNode>);
***REMOVED******REMOVED******REMOVED******REMOVED***isGenericScope:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***resolvedImportSources:***REMOVED***Record<string,***REMOVED***string>;
***REMOVED******REMOVED******REMOVED******REMOVED***exportedTypes:***REMOVED***Record<string,***REMOVED***ScopeTypeNode>;
***REMOVED******REMOVED******REMOVED******REMOVED***exportedDeclares:***REMOVED***Record<string,***REMOVED***ScopeTypeNode>;
}
interface***REMOVED***MaybeWithScope***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_ownerScope?:***REMOVED***TypeScope;
}
interface***REMOVED***ResolvedElements***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***Record<string,***REMOVED***(TSPropertySignature***REMOVED***|***REMOVED***TSMethodSignature)***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_ownerScope:***REMOVED***TypeScope;
***REMOVED******REMOVED******REMOVED******REMOVED***}>;
***REMOVED******REMOVED******REMOVED******REMOVED***calls?:***REMOVED***(TSCallSignatureDeclaration***REMOVED***|***REMOVED***TSFunctionType)[];
}
/**
***REMOVED*******REMOVED***Resolve***REMOVED***arbitrary***REMOVED***type***REMOVED***node***REMOVED***to***REMOVED***a***REMOVED***list***REMOVED***of***REMOVED***type***REMOVED***elements***REMOVED***that***REMOVED***can***REMOVED***be***REMOVED***then
***REMOVED*******REMOVED***mapped***REMOVED***to***REMOVED***runtime***REMOVED***props***REMOVED***or***REMOVED***emits.
***REMOVED****/
export***REMOVED***declare***REMOVED***function***REMOVED***resolveTypeElements(ctx:***REMOVED***TypeResolveContext,***REMOVED***node:***REMOVED***Node***REMOVED***&***REMOVED***MaybeWithScope***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_resolvedElements?:***REMOVED***ResolvedElements;
},***REMOVED***scope?:***REMOVED***TypeScope,***REMOVED***typeParameters?:***REMOVED***Record<string,***REMOVED***Node>):***REMOVED***ResolvedElements;
/**
***REMOVED*******REMOVED***@private
***REMOVED****/
export***REMOVED***declare***REMOVED***function***REMOVED***registerTS(_loadTS:***REMOVED***()***REMOVED***=>***REMOVED***typeof***REMOVED***TS):***REMOVED***void;
/**
***REMOVED*******REMOVED***@private
***REMOVED****/
export***REMOVED***declare***REMOVED***function***REMOVED***invalidateTypeCache(filename:***REMOVED***string):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***inferRuntimeType(ctx:***REMOVED***TypeResolveContext,***REMOVED***node:***REMOVED***Node***REMOVED***&***REMOVED***MaybeWithScope,***REMOVED***scope?:***REMOVED***TypeScope,***REMOVED***isKeyOf?:***REMOVED***boolean,***REMOVED***typeParameters?:***REMOVED***Record<string,***REMOVED***Node>):***REMOVED***string[];

export***REMOVED***declare***REMOVED***function***REMOVED***extractRuntimeEmits(ctx:***REMOVED***TypeResolveContext):***REMOVED***Set<string>;

export***REMOVED***declare***REMOVED***const***REMOVED***version:***REMOVED***string;

export***REMOVED***declare***REMOVED***const***REMOVED***parseCache:***REMOVED***Map<string,***REMOVED***SFCParseResult>;
export***REMOVED***declare***REMOVED***const***REMOVED***errorMessages:***REMOVED***Record<number,***REMOVED***string>;

export***REMOVED***declare***REMOVED***const***REMOVED***walk:***REMOVED***any;

/**
***REMOVED*******REMOVED***@deprecated***REMOVED***this***REMOVED***is***REMOVED***preserved***REMOVED***to***REMOVED***avoid***REMOVED***breaking***REMOVED***vite-plugin-vue***REMOVED***<***REMOVED***5.0
***REMOVED*******REMOVED***with***REMOVED***reactivityTransform:***REMOVED***true.***REMOVED***The***REMOVED***desired***REMOVED***behavior***REMOVED***should***REMOVED***be***REMOVED***silently
***REMOVED*******REMOVED***ignoring***REMOVED***the***REMOVED***option***REMOVED***instead***REMOVED***of***REMOVED***breaking.
***REMOVED****/
export***REMOVED***declare***REMOVED***const***REMOVED***shouldTransformRef:***REMOVED***()***REMOVED***=>***REMOVED***boolean;


