'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
function***REMOVED***_objectWithoutPropertiesLoose(r,***REMOVED***e)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(null***REMOVED***==***REMOVED***r)***REMOVED***return***REMOVED***{};
***REMOVED******REMOVED***var***REMOVED***t***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***n***REMOVED***in***REMOVED***r)***REMOVED***if***REMOVED***({}.hasOwnProperty.call(r,***REMOVED***n))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(-1***REMOVED***!==***REMOVED***e.indexOf(n))***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***t[n]***REMOVED***=***REMOVED***r[n];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***t;
}
class***REMOVED***Position***REMOVED***{
***REMOVED******REMOVED***constructor(line,***REMOVED***col,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.line***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.column***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.index***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.line***REMOVED***=***REMOVED***line;
***REMOVED******REMOVED******REMOVED******REMOVED***this.column***REMOVED***=***REMOVED***col;
***REMOVED******REMOVED******REMOVED******REMOVED***this.index***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED***}
}
class***REMOVED***SourceLocation***REMOVED***{
***REMOVED******REMOVED***constructor(start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.filename***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.identifierName***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED***}
}
function***REMOVED***createPositionWithColumnOffset(position,***REMOVED***columnOffset)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***line,
***REMOVED******REMOVED******REMOVED******REMOVED***column,
***REMOVED******REMOVED******REMOVED******REMOVED***index
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***position;
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Position(line,***REMOVED***column***REMOVED***+***REMOVED***columnOffset,***REMOVED***index***REMOVED***+***REMOVED***columnOffset);
}
const***REMOVED***code***REMOVED***=***REMOVED***"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED";
var***REMOVED***ModuleErrors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***ImportMetaOutsideModule:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`import.meta***REMOVED***may***REMOVED***appear***REMOVED***only***REMOVED***with***REMOVED***'sourceType:***REMOVED***"module"'`,
***REMOVED******REMOVED******REMOVED******REMOVED***code
***REMOVED******REMOVED***},
***REMOVED******REMOVED***ImportOutsideModule:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***`'import'***REMOVED***and***REMOVED***'export'***REMOVED***may***REMOVED***appear***REMOVED***only***REMOVED***with***REMOVED***'sourceType:***REMOVED***"module"'`,
***REMOVED******REMOVED******REMOVED******REMOVED***code
***REMOVED******REMOVED***}
};
const***REMOVED***NodeDescriptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***ArrayPattern:***REMOVED***"array***REMOVED***destructuring***REMOVED***pattern",
***REMOVED******REMOVED***AssignmentExpression:***REMOVED***"assignment***REMOVED***expression",
***REMOVED******REMOVED***AssignmentPattern:***REMOVED***"assignment***REMOVED***expression",
***REMOVED******REMOVED***ArrowFunctionExpression:***REMOVED***"arrow***REMOVED***function***REMOVED***expression",
***REMOVED******REMOVED***ConditionalExpression:***REMOVED***"conditional***REMOVED***expression",
***REMOVED******REMOVED***CatchClause:***REMOVED***"catch***REMOVED***clause",
***REMOVED******REMOVED***ForOfStatement:***REMOVED***"for-of***REMOVED***statement",
***REMOVED******REMOVED***ForInStatement:***REMOVED***"for-in***REMOVED***statement",
***REMOVED******REMOVED***ForStatement:***REMOVED***"for-loop",
***REMOVED******REMOVED***FormalParameters:***REMOVED***"function***REMOVED***parameter***REMOVED***list",
***REMOVED******REMOVED***Identifier:***REMOVED***"identifier",
***REMOVED******REMOVED***ImportSpecifier:***REMOVED***"import***REMOVED***specifier",
***REMOVED******REMOVED***ImportDefaultSpecifier:***REMOVED***"import***REMOVED***default***REMOVED***specifier",
***REMOVED******REMOVED***ImportNamespaceSpecifier:***REMOVED***"import***REMOVED***namespace***REMOVED***specifier",
***REMOVED******REMOVED***ObjectPattern:***REMOVED***"object***REMOVED***destructuring***REMOVED***pattern",
***REMOVED******REMOVED***ParenthesizedExpression:***REMOVED***"parenthesized***REMOVED***expression",
***REMOVED******REMOVED***RestElement:***REMOVED***"rest***REMOVED***element",
***REMOVED******REMOVED***UpdateExpression:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***true:***REMOVED***"prefix***REMOVED***operation",
***REMOVED******REMOVED******REMOVED******REMOVED***false:***REMOVED***"postfix***REMOVED***operation"
***REMOVED******REMOVED***},
***REMOVED******REMOVED***VariableDeclarator:***REMOVED***"variable***REMOVED***declaration",
***REMOVED******REMOVED***YieldExpression:***REMOVED***"yield***REMOVED***expression"
};
const***REMOVED***toNodeDescription***REMOVED***=***REMOVED***node***REMOVED***=>***REMOVED***node.type***REMOVED***===***REMOVED***"UpdateExpression"***REMOVED***?***REMOVED***NodeDescriptions.UpdateExpression[`${node.prefix}`]***REMOVED***:***REMOVED***NodeDescriptions[node.type];
var***REMOVED***StandardErrors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***AccessorIsGenerator:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***kind
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`A***REMOVED***${kind}ter***REMOVED***cannot***REMOVED***be***REMOVED***a***REMOVED***generator.`,
***REMOVED******REMOVED***ArgumentsInClass:***REMOVED***"'arguments'***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***in***REMOVED***functions***REMOVED***and***REMOVED***class***REMOVED***methods.",
***REMOVED******REMOVED***AsyncFunctionInSingleStatementContext:***REMOVED***"Async***REMOVED***functions***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***declared***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***or***REMOVED***inside***REMOVED***a***REMOVED***block.",
***REMOVED******REMOVED***AwaitBindingIdentifier:***REMOVED***"Can***REMOVED***not***REMOVED***use***REMOVED***'await'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***an***REMOVED***async***REMOVED***function.",
***REMOVED******REMOVED***AwaitBindingIdentifierInStaticBlock:***REMOVED***"Can***REMOVED***not***REMOVED***use***REMOVED***'await'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***a***REMOVED***static***REMOVED***block.",
***REMOVED******REMOVED***AwaitExpressionFormalParameter:***REMOVED***"'await'***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***async***REMOVED***function***REMOVED***parameters.",
***REMOVED******REMOVED***AwaitUsingNotInAsyncContext:***REMOVED***"'await***REMOVED***using'***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***within***REMOVED***async***REMOVED***functions***REMOVED***and***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***levels***REMOVED***of***REMOVED***modules.",
***REMOVED******REMOVED***AwaitNotInAsyncContext:***REMOVED***"'await'***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***within***REMOVED***async***REMOVED***functions***REMOVED***and***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***levels***REMOVED***of***REMOVED***modules.",
***REMOVED******REMOVED***BadGetterArity:***REMOVED***"A***REMOVED***'get'***REMOVED***accessor***REMOVED***must***REMOVED***not***REMOVED***have***REMOVED***any***REMOVED***formal***REMOVED***parameters.",
***REMOVED******REMOVED***BadSetterArity:***REMOVED***"A***REMOVED***'set'***REMOVED***accessor***REMOVED***must***REMOVED***have***REMOVED***exactly***REMOVED***one***REMOVED***formal***REMOVED***parameter.",
***REMOVED******REMOVED***BadSetterRestParameter:***REMOVED***"A***REMOVED***'set'***REMOVED***accessor***REMOVED***function***REMOVED***argument***REMOVED***must***REMOVED***not***REMOVED***be***REMOVED***a***REMOVED***rest***REMOVED***parameter.",
***REMOVED******REMOVED***ConstructorClassField:***REMOVED***"Classes***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***field***REMOVED***named***REMOVED***'constructor'.",
***REMOVED******REMOVED***ConstructorClassPrivateField:***REMOVED***"Classes***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***private***REMOVED***field***REMOVED***named***REMOVED***'#constructor'.",
***REMOVED******REMOVED***ConstructorIsAccessor:***REMOVED***"Class***REMOVED***constructor***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***an***REMOVED***accessor.",
***REMOVED******REMOVED***ConstructorIsAsync:***REMOVED***"Constructor***REMOVED***can't***REMOVED***be***REMOVED***an***REMOVED***async***REMOVED***function.",
***REMOVED******REMOVED***ConstructorIsGenerator:***REMOVED***"Constructor***REMOVED***can't***REMOVED***be***REMOVED***a***REMOVED***generator.",
***REMOVED******REMOVED***DeclarationMissingInitializer:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***kind
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Missing***REMOVED***initializer***REMOVED***in***REMOVED***${kind}***REMOVED***declaration.`,
***REMOVED******REMOVED***DecoratorArgumentsOutsideParentheses:***REMOVED***"Decorator***REMOVED***arguments***REMOVED***must***REMOVED***be***REMOVED***moved***REMOVED***inside***REMOVED***parentheses:***REMOVED***use***REMOVED***'@(decorator(args))'***REMOVED***instead***REMOVED***of***REMOVED***'@(decorator)(args)'.",
***REMOVED******REMOVED***DecoratorBeforeExport:***REMOVED***"Decorators***REMOVED***must***REMOVED***be***REMOVED***placed***REMOVED****before****REMOVED***the***REMOVED***'export'***REMOVED***keyword.***REMOVED***Remove***REMOVED***the***REMOVED***'decoratorsBeforeExport:***REMOVED***true'***REMOVED***option***REMOVED***to***REMOVED***use***REMOVED***the***REMOVED***'export***REMOVED***@decorator***REMOVED***class***REMOVED***{}'***REMOVED***syntax.",
***REMOVED******REMOVED***DecoratorsBeforeAfterExport:***REMOVED***"Decorators***REMOVED***can***REMOVED***be***REMOVED***placed***REMOVED****either****REMOVED***before***REMOVED***or***REMOVED***after***REMOVED***the***REMOVED***'export'***REMOVED***keyword,***REMOVED***but***REMOVED***not***REMOVED***in***REMOVED***both***REMOVED***locations***REMOVED***at***REMOVED***the***REMOVED***same***REMOVED***time.",
***REMOVED******REMOVED***DecoratorConstructor:***REMOVED***"Decorators***REMOVED***can't***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***a***REMOVED***constructor.***REMOVED***Did***REMOVED***you***REMOVED***mean***REMOVED***'@dec***REMOVED***class***REMOVED***{***REMOVED***...***REMOVED***}'?",
***REMOVED******REMOVED***DecoratorExportClass:***REMOVED***"Decorators***REMOVED***must***REMOVED***be***REMOVED***placed***REMOVED****after****REMOVED***the***REMOVED***'export'***REMOVED***keyword.***REMOVED***Remove***REMOVED***the***REMOVED***'decoratorsBeforeExport:***REMOVED***false'***REMOVED***option***REMOVED***to***REMOVED***use***REMOVED***the***REMOVED***'@decorator***REMOVED***export***REMOVED***class***REMOVED***{}'***REMOVED***syntax.",
***REMOVED******REMOVED***DecoratorSemicolon:***REMOVED***"Decorators***REMOVED***must***REMOVED***not***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***a***REMOVED***semicolon.",
***REMOVED******REMOVED***DecoratorStaticBlock:***REMOVED***"Decorators***REMOVED***can't***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***a***REMOVED***static***REMOVED***block.",
***REMOVED******REMOVED***DeferImportRequiresNamespace:***REMOVED***'Only***REMOVED***`import***REMOVED***defer***REMOVED*******REMOVED***as***REMOVED***x***REMOVED***from***REMOVED***"./module"`***REMOVED***is***REMOVED***valid.',
***REMOVED******REMOVED***DeletePrivateField:***REMOVED***"Deleting***REMOVED***a***REMOVED***private***REMOVED***field***REMOVED***is***REMOVED***not***REMOVED***allowed.",
***REMOVED******REMOVED***DestructureNamedImport:***REMOVED***"ES2015***REMOVED***named***REMOVED***imports***REMOVED***do***REMOVED***not***REMOVED***destructure.***REMOVED***Use***REMOVED***another***REMOVED***statement***REMOVED***for***REMOVED***destructuring***REMOVED***after***REMOVED***the***REMOVED***import.",
***REMOVED******REMOVED***DuplicateConstructor:***REMOVED***"Duplicate***REMOVED***constructor***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***class.",
***REMOVED******REMOVED***DuplicateDefaultExport:***REMOVED***"Only***REMOVED***one***REMOVED***default***REMOVED***export***REMOVED***allowed***REMOVED***per***REMOVED***module.",
***REMOVED******REMOVED***DuplicateExport:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***exportName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`\`${exportName}\`***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***exported.***REMOVED***Exported***REMOVED***identifiers***REMOVED***must***REMOVED***be***REMOVED***unique.`,
***REMOVED******REMOVED***DuplicateProto:***REMOVED***"Redefinition***REMOVED***of***REMOVED***__proto__***REMOVED***property.",
***REMOVED******REMOVED***DuplicateRegExpFlags:***REMOVED***"Duplicate***REMOVED***regular***REMOVED***expression***REMOVED***flag.",
***REMOVED******REMOVED***ElementAfterRest:***REMOVED***"Rest***REMOVED***element***REMOVED***must***REMOVED***be***REMOVED***last***REMOVED***element.",
***REMOVED******REMOVED***EscapedCharNotAnIdentifier:***REMOVED***"Invalid***REMOVED***Unicode***REMOVED***escape.",
***REMOVED******REMOVED***ExportBindingIsString:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***localName,
***REMOVED******REMOVED******REMOVED******REMOVED***exportName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`A***REMOVED***string***REMOVED***literal***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***as***REMOVED***an***REMOVED***exported***REMOVED***binding***REMOVED***without***REMOVED***\`from\`.\n-***REMOVED***Did***REMOVED***you***REMOVED***mean***REMOVED***\`export***REMOVED***{***REMOVED***'${localName}'***REMOVED***as***REMOVED***'${exportName}'***REMOVED***}***REMOVED***from***REMOVED***'some-module'\`?`,
***REMOVED******REMOVED***ExportDefaultFromAsIdentifier:***REMOVED***"'from'***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***as***REMOVED***an***REMOVED***identifier***REMOVED***after***REMOVED***'export***REMOVED***default'.",
***REMOVED******REMOVED***ForInOfLoopInitializer:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${type***REMOVED***===***REMOVED***"ForInStatement"***REMOVED***?***REMOVED***"for-in"***REMOVED***:***REMOVED***"for-of"}'***REMOVED***loop***REMOVED***variable***REMOVED***declaration***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***an***REMOVED***initializer.`,
***REMOVED******REMOVED***ForInUsing:***REMOVED***"For-in***REMOVED***loop***REMOVED***may***REMOVED***not***REMOVED***start***REMOVED***with***REMOVED***'using'***REMOVED***declaration.",
***REMOVED******REMOVED***ForOfAsync:***REMOVED***"The***REMOVED***left-hand***REMOVED***side***REMOVED***of***REMOVED***a***REMOVED***for-of***REMOVED***loop***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***'async'.",
***REMOVED******REMOVED***ForOfLet:***REMOVED***"The***REMOVED***left-hand***REMOVED***side***REMOVED***of***REMOVED***a***REMOVED***for-of***REMOVED***loop***REMOVED***may***REMOVED***not***REMOVED***start***REMOVED***with***REMOVED***'let'.",
***REMOVED******REMOVED***GeneratorInSingleStatementContext:***REMOVED***"Generators***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***declared***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***or***REMOVED***inside***REMOVED***a***REMOVED***block.",
***REMOVED******REMOVED***IllegalBreakContinue:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unsyntactic***REMOVED***${type***REMOVED***===***REMOVED***"BreakStatement"***REMOVED***?***REMOVED***"break"***REMOVED***:***REMOVED***"continue"}.`,
***REMOVED******REMOVED***IllegalLanguageModeDirective:***REMOVED***"Illegal***REMOVED***'use***REMOVED***strict'***REMOVED***directive***REMOVED***in***REMOVED***function***REMOVED***with***REMOVED***non-simple***REMOVED***parameter***REMOVED***list.",
***REMOVED******REMOVED***IllegalReturn:***REMOVED***"'return'***REMOVED***outside***REMOVED***of***REMOVED***function.",
***REMOVED******REMOVED***ImportAttributesUseAssert:***REMOVED***"The***REMOVED***`assert`***REMOVED***keyword***REMOVED***in***REMOVED***import***REMOVED***attributes***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***it***REMOVED***has***REMOVED***been***REMOVED***replaced***REMOVED***by***REMOVED***the***REMOVED***`with`***REMOVED***keyword.***REMOVED***You***REMOVED***can***REMOVED***enable***REMOVED***the***REMOVED***`deprecatedImportAssert`***REMOVED***parser***REMOVED***plugin***REMOVED***to***REMOVED***suppress***REMOVED***this***REMOVED***error.",
***REMOVED******REMOVED***ImportBindingIsString:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***importName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`A***REMOVED***string***REMOVED***literal***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***as***REMOVED***an***REMOVED***imported***REMOVED***binding.\n-***REMOVED***Did***REMOVED***you***REMOVED***mean***REMOVED***\`import***REMOVED***{***REMOVED***"${importName}"***REMOVED***as***REMOVED***foo***REMOVED***}\`?`,
***REMOVED******REMOVED***ImportCallArity:***REMOVED***`\`import()\`***REMOVED***requires***REMOVED***exactly***REMOVED***one***REMOVED***or***REMOVED***two***REMOVED***arguments.`,
***REMOVED******REMOVED***ImportCallNotNewExpression:***REMOVED***"Cannot***REMOVED***use***REMOVED***new***REMOVED***with***REMOVED***import(...).",
***REMOVED******REMOVED***ImportCallSpreadArgument:***REMOVED***"`...`***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***`import()`.",
***REMOVED******REMOVED***ImportJSONBindingNotDefault:***REMOVED***"A***REMOVED***JSON***REMOVED***module***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***imported***REMOVED***with***REMOVED***`default`.",
***REMOVED******REMOVED***ImportReflectionHasAssertion:***REMOVED***"`import***REMOVED***module***REMOVED***x`***REMOVED***cannot***REMOVED***have***REMOVED***assertions.",
***REMOVED******REMOVED***ImportReflectionNotBinding:***REMOVED***'Only***REMOVED***`import***REMOVED***module***REMOVED***x***REMOVED***from***REMOVED***"./module"`***REMOVED***is***REMOVED***valid.',
***REMOVED******REMOVED***IncompatibleRegExpUVFlags:***REMOVED***"The***REMOVED***'u'***REMOVED***and***REMOVED***'v'***REMOVED***regular***REMOVED***expression***REMOVED***flags***REMOVED***cannot***REMOVED***be***REMOVED***enabled***REMOVED***at***REMOVED***the***REMOVED***same***REMOVED***time.",
***REMOVED******REMOVED***InvalidBigIntLiteral:***REMOVED***"Invalid***REMOVED***BigIntLiteral.",
***REMOVED******REMOVED***InvalidCodePoint:***REMOVED***"Code***REMOVED***point***REMOVED***out***REMOVED***of***REMOVED***bounds.",
***REMOVED******REMOVED***InvalidCoverDiscardElement:***REMOVED***"'void'***REMOVED***must***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***expression***REMOVED***when***REMOVED***not***REMOVED***used***REMOVED***in***REMOVED***a***REMOVED***binding***REMOVED***position.",
***REMOVED******REMOVED***InvalidCoverInitializedName:***REMOVED***"Invalid***REMOVED***shorthand***REMOVED***property***REMOVED***initializer.",
***REMOVED******REMOVED***InvalidDecimal:***REMOVED***"Invalid***REMOVED***decimal.",
***REMOVED******REMOVED***InvalidDigit:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***radix
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Expected***REMOVED***number***REMOVED***in***REMOVED***radix***REMOVED***${radix}.`,
***REMOVED******REMOVED***InvalidEscapeSequence:***REMOVED***"Bad***REMOVED***character***REMOVED***escape***REMOVED***sequence.",
***REMOVED******REMOVED***InvalidEscapeSequenceTemplate:***REMOVED***"Invalid***REMOVED***escape***REMOVED***sequence***REMOVED***in***REMOVED***template.",
***REMOVED******REMOVED***InvalidEscapedReservedWord:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***reservedWord
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Escape***REMOVED***sequence***REMOVED***in***REMOVED***keyword***REMOVED***${reservedWord}.`,
***REMOVED******REMOVED***InvalidIdentifier:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***identifierName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Invalid***REMOVED***identifier***REMOVED***${identifierName}.`,
***REMOVED******REMOVED***InvalidLhs:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***ancestor
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Invalid***REMOVED***left-hand***REMOVED***side***REMOVED***in***REMOVED***${toNodeDescription(ancestor)}.`,
***REMOVED******REMOVED***InvalidLhsBinding:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***ancestor
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Binding***REMOVED***invalid***REMOVED***left-hand***REMOVED***side***REMOVED***in***REMOVED***${toNodeDescription(ancestor)}.`,
***REMOVED******REMOVED***InvalidLhsOptionalChaining:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***ancestor
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Invalid***REMOVED***optional***REMOVED***chaining***REMOVED***in***REMOVED***the***REMOVED***left-hand***REMOVED***side***REMOVED***of***REMOVED***${toNodeDescription(ancestor)}.`,
***REMOVED******REMOVED***InvalidNumber:***REMOVED***"Invalid***REMOVED***number.",
***REMOVED******REMOVED***InvalidOrMissingExponent:***REMOVED***"Floating-point***REMOVED***numbers***REMOVED***require***REMOVED***a***REMOVED***valid***REMOVED***exponent***REMOVED***after***REMOVED***the***REMOVED***'e'.",
***REMOVED******REMOVED***InvalidOrUnexpectedToken:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***unexpected
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***character***REMOVED***'${unexpected}'.`,
***REMOVED******REMOVED***InvalidParenthesizedAssignment:***REMOVED***"Invalid***REMOVED***parenthesized***REMOVED***assignment***REMOVED***pattern.",
***REMOVED******REMOVED***InvalidPrivateFieldResolution:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***identifierName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Private***REMOVED***name***REMOVED***#${identifierName}***REMOVED***is***REMOVED***not***REMOVED***defined.`,
***REMOVED******REMOVED***InvalidPropertyBindingPattern:***REMOVED***"Binding***REMOVED***member***REMOVED***expression.",
***REMOVED******REMOVED***InvalidRecordProperty:***REMOVED***"Only***REMOVED***properties***REMOVED***and***REMOVED***spread***REMOVED***elements***REMOVED***are***REMOVED***allowed***REMOVED***in***REMOVED***record***REMOVED***definitions.",
***REMOVED******REMOVED***InvalidRestAssignmentPattern:***REMOVED***"Invalid***REMOVED***rest***REMOVED***operator's***REMOVED***argument.",
***REMOVED******REMOVED***LabelRedeclaration:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***labelName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Label***REMOVED***'${labelName}'***REMOVED***is***REMOVED***already***REMOVED***declared.`,
***REMOVED******REMOVED***LetInLexicalBinding:***REMOVED***"'let'***REMOVED***is***REMOVED***disallowed***REMOVED***as***REMOVED***a***REMOVED***lexically***REMOVED***bound***REMOVED***name.",
***REMOVED******REMOVED***LineTerminatorBeforeArrow:***REMOVED***"No***REMOVED***line***REMOVED***break***REMOVED***is***REMOVED***allowed***REMOVED***before***REMOVED***'=>'.",
***REMOVED******REMOVED***MalformedRegExpFlags:***REMOVED***"Invalid***REMOVED***regular***REMOVED***expression***REMOVED***flag.",
***REMOVED******REMOVED***MissingClassName:***REMOVED***"A***REMOVED***class***REMOVED***name***REMOVED***is***REMOVED***required.",
***REMOVED******REMOVED***MissingEqInAssignment:***REMOVED***"Only***REMOVED***'='***REMOVED***operator***REMOVED***can***REMOVED***be***REMOVED***used***REMOVED***for***REMOVED***specifying***REMOVED***default***REMOVED***value.",
***REMOVED******REMOVED***MissingSemicolon:***REMOVED***"Missing***REMOVED***semicolon.",
***REMOVED******REMOVED***MissingPlugin:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***missingPlugin
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`This***REMOVED***experimental***REMOVED***syntax***REMOVED***requires***REMOVED***enabling***REMOVED***the***REMOVED***parser***REMOVED***plugin:***REMOVED***${missingPlugin.map(name***REMOVED***=>***REMOVED***JSON.stringify(name)).join(",***REMOVED***")}.`,
***REMOVED******REMOVED***MissingOneOfPlugins:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***missingPlugin
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`This***REMOVED***experimental***REMOVED***syntax***REMOVED***requires***REMOVED***enabling***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***following***REMOVED***parser***REMOVED***plugin(s):***REMOVED***${missingPlugin.map(name***REMOVED***=>***REMOVED***JSON.stringify(name)).join(",***REMOVED***")}.`,
***REMOVED******REMOVED***MissingUnicodeEscape:***REMOVED***"Expecting***REMOVED***Unicode***REMOVED***escape***REMOVED***sequence***REMOVED***\\uXXXX.",
***REMOVED******REMOVED***MixingCoalesceWithLogical:***REMOVED***"Nullish***REMOVED***coalescing***REMOVED***operator(??)***REMOVED***requires***REMOVED***parens***REMOVED***when***REMOVED***mixing***REMOVED***with***REMOVED***logical***REMOVED***operators.",
***REMOVED******REMOVED***ModuleAttributeDifferentFromType:***REMOVED***"The***REMOVED***only***REMOVED***accepted***REMOVED***module***REMOVED***attribute***REMOVED***is***REMOVED***`type`.",
***REMOVED******REMOVED***ModuleAttributeInvalidValue:***REMOVED***"Only***REMOVED***string***REMOVED***literals***REMOVED***are***REMOVED***allowed***REMOVED***as***REMOVED***module***REMOVED***attribute***REMOVED***values.",
***REMOVED******REMOVED***ModuleAttributesWithDuplicateKeys:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Duplicate***REMOVED***key***REMOVED***"${key}"***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***module***REMOVED***attributes.`,
***REMOVED******REMOVED***ModuleExportNameHasLoneSurrogate:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***surrogateCharCode
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`An***REMOVED***export***REMOVED***name***REMOVED***cannot***REMOVED***include***REMOVED***a***REMOVED***lone***REMOVED***surrogate,***REMOVED***found***REMOVED***'\\u${surrogateCharCode.toString(16)}'.`,
***REMOVED******REMOVED***ModuleExportUndefined:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***localName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Export***REMOVED***'${localName}'***REMOVED***is***REMOVED***not***REMOVED***defined.`,
***REMOVED******REMOVED***MultipleDefaultsInSwitch:***REMOVED***"Multiple***REMOVED***default***REMOVED***clauses.",
***REMOVED******REMOVED***NewlineAfterThrow:***REMOVED***"Illegal***REMOVED***newline***REMOVED***after***REMOVED***throw.",
***REMOVED******REMOVED***NoCatchOrFinally:***REMOVED***"Missing***REMOVED***catch***REMOVED***or***REMOVED***finally***REMOVED***clause.",
***REMOVED******REMOVED***NumberIdentifier:***REMOVED***"Identifier***REMOVED***directly***REMOVED***after***REMOVED***number.",
***REMOVED******REMOVED***NumericSeparatorInEscapeSequence:***REMOVED***"Numeric***REMOVED***separators***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***inside***REMOVED***unicode***REMOVED***escape***REMOVED***sequences***REMOVED***or***REMOVED***hex***REMOVED***escape***REMOVED***sequences.",
***REMOVED******REMOVED***ObsoleteAwaitStar:***REMOVED***"'await*'***REMOVED***has***REMOVED***been***REMOVED***removed***REMOVED***from***REMOVED***the***REMOVED***async***REMOVED***functions***REMOVED***proposal.***REMOVED***Use***REMOVED***Promise.all()***REMOVED***instead.",
***REMOVED******REMOVED***OptionalChainingNoNew:***REMOVED***"Constructors***REMOVED***in/after***REMOVED***an***REMOVED***Optional***REMOVED***Chain***REMOVED***are***REMOVED***not***REMOVED***allowed.",
***REMOVED******REMOVED***OptionalChainingNoTemplate:***REMOVED***"Tagged***REMOVED***Template***REMOVED***Literals***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***optionalChain.",
***REMOVED******REMOVED***OverrideOnConstructor:***REMOVED***"'override'***REMOVED***modifier***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***constructor***REMOVED***declaration.",
***REMOVED******REMOVED***ParamDupe:***REMOVED***"Argument***REMOVED***name***REMOVED***clash.",
***REMOVED******REMOVED***PatternHasAccessor:***REMOVED***"Object***REMOVED***pattern***REMOVED***can't***REMOVED***contain***REMOVED***getter***REMOVED***or***REMOVED***setter.",
***REMOVED******REMOVED***PatternHasMethod:***REMOVED***"Object***REMOVED***pattern***REMOVED***can't***REMOVED***contain***REMOVED***methods.",
***REMOVED******REMOVED***PrivateInExpectedIn:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***identifierName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Private***REMOVED***names***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***in***REMOVED***property***REMOVED***accesses***REMOVED***(\`obj.#${identifierName}\`)***REMOVED***or***REMOVED***in***REMOVED***\`in\`***REMOVED***expressions***REMOVED***(\`#${identifierName}***REMOVED***in***REMOVED***obj\`).`,
***REMOVED******REMOVED***PrivateNameRedeclaration:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***identifierName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Duplicate***REMOVED***private***REMOVED***name***REMOVED***#${identifierName}.`,
***REMOVED******REMOVED***RecordExpressionBarIncorrectEndSyntaxType:***REMOVED***"Record***REMOVED***expressions***REMOVED***ending***REMOVED***with***REMOVED***'|}'***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***the***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***'bar'.",
***REMOVED******REMOVED***RecordExpressionBarIncorrectStartSyntaxType:***REMOVED***"Record***REMOVED***expressions***REMOVED***starting***REMOVED***with***REMOVED***'{|'***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***the***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***'bar'.",
***REMOVED******REMOVED***RecordExpressionHashIncorrectStartSyntaxType:***REMOVED***"Record***REMOVED***expressions***REMOVED***starting***REMOVED***with***REMOVED***'#{'***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***the***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***'hash'.",
***REMOVED******REMOVED***RecordNoProto:***REMOVED***"'__proto__'***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***Record***REMOVED***expressions.",
***REMOVED******REMOVED***RestTrailingComma:***REMOVED***"Unexpected***REMOVED***trailing***REMOVED***comma***REMOVED***after***REMOVED***rest***REMOVED***element.",
***REMOVED******REMOVED***SloppyFunction:***REMOVED***"In***REMOVED***non-strict***REMOVED***mode***REMOVED***code,***REMOVED***functions***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***declared***REMOVED***at***REMOVED***top***REMOVED***level***REMOVED***or***REMOVED***inside***REMOVED***a***REMOVED***block.",
***REMOVED******REMOVED***SloppyFunctionAnnexB:***REMOVED***"In***REMOVED***non-strict***REMOVED***mode***REMOVED***code,***REMOVED***functions***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***declared***REMOVED***at***REMOVED***top***REMOVED***level,***REMOVED***inside***REMOVED***a***REMOVED***block,***REMOVED***or***REMOVED***as***REMOVED***the***REMOVED***body***REMOVED***of***REMOVED***an***REMOVED***if***REMOVED***statement.",
***REMOVED******REMOVED***SourcePhaseImportRequiresDefault:***REMOVED***'Only***REMOVED***`import***REMOVED***source***REMOVED***x***REMOVED***from***REMOVED***"./module"`***REMOVED***is***REMOVED***valid.',
***REMOVED******REMOVED***StaticPrototype:***REMOVED***"Classes***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***static***REMOVED***property***REMOVED***named***REMOVED***prototype.",
***REMOVED******REMOVED***SuperNotAllowed:***REMOVED***"`super()`***REMOVED***is***REMOVED***only***REMOVED***valid***REMOVED***inside***REMOVED***a***REMOVED***class***REMOVED***constructor***REMOVED***of***REMOVED***a***REMOVED***subclass.***REMOVED***Maybe***REMOVED***a***REMOVED***typo***REMOVED***in***REMOVED***the***REMOVED***method***REMOVED***name***REMOVED***('constructor')***REMOVED***or***REMOVED***not***REMOVED***extending***REMOVED***another***REMOVED***class?",
***REMOVED******REMOVED***SuperPrivateField:***REMOVED***"Private***REMOVED***fields***REMOVED***can't***REMOVED***be***REMOVED***accessed***REMOVED***on***REMOVED***super.",
***REMOVED******REMOVED***TrailingDecorator:***REMOVED***"Decorators***REMOVED***must***REMOVED***be***REMOVED***attached***REMOVED***to***REMOVED***a***REMOVED***class***REMOVED***element.",
***REMOVED******REMOVED***TupleExpressionBarIncorrectEndSyntaxType:***REMOVED***"Tuple***REMOVED***expressions***REMOVED***ending***REMOVED***with***REMOVED***'|]'***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***the***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***'bar'.",
***REMOVED******REMOVED***TupleExpressionBarIncorrectStartSyntaxType:***REMOVED***"Tuple***REMOVED***expressions***REMOVED***starting***REMOVED***with***REMOVED***'[|'***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***the***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***'bar'.",
***REMOVED******REMOVED***TupleExpressionHashIncorrectStartSyntaxType:***REMOVED***"Tuple***REMOVED***expressions***REMOVED***starting***REMOVED***with***REMOVED***'#['***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***the***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***'hash'.",
***REMOVED******REMOVED***UnexpectedArgumentPlaceholder:***REMOVED***"Unexpected***REMOVED***argument***REMOVED***placeholder.",
***REMOVED******REMOVED***UnexpectedAwaitAfterPipelineBody:***REMOVED***'Unexpected***REMOVED***"await"***REMOVED***after***REMOVED***pipeline***REMOVED***body;***REMOVED***await***REMOVED***must***REMOVED***have***REMOVED***parentheses***REMOVED***in***REMOVED***minimal***REMOVED***proposal.',
***REMOVED******REMOVED***UnexpectedDigitAfterHash:***REMOVED***"Unexpected***REMOVED***digit***REMOVED***after***REMOVED***hash***REMOVED***token.",
***REMOVED******REMOVED***UnexpectedImportExport:***REMOVED***"'import'***REMOVED***and***REMOVED***'export'***REMOVED***may***REMOVED***only***REMOVED***appear***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level.",
***REMOVED******REMOVED***UnexpectedKeyword:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***keyword
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***keyword***REMOVED***'${keyword}'.`,
***REMOVED******REMOVED***UnexpectedLeadingDecorator:***REMOVED***"Leading***REMOVED***decorators***REMOVED***must***REMOVED***be***REMOVED***attached***REMOVED***to***REMOVED***a***REMOVED***class***REMOVED***declaration.",
***REMOVED******REMOVED***UnexpectedLexicalDeclaration:***REMOVED***"Lexical***REMOVED***declaration***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***a***REMOVED***single-statement***REMOVED***context.",
***REMOVED******REMOVED***UnexpectedNewTarget:***REMOVED***"`new.target`***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***functions***REMOVED***or***REMOVED***class***REMOVED***properties.",
***REMOVED******REMOVED***UnexpectedNumericSeparator:***REMOVED***"A***REMOVED***numeric***REMOVED***separator***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***between***REMOVED***two***REMOVED***digits.",
***REMOVED******REMOVED***UnexpectedPrivateField:***REMOVED***"Unexpected***REMOVED***private***REMOVED***name.",
***REMOVED******REMOVED***UnexpectedReservedWord:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***reservedWord
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***reserved***REMOVED***word***REMOVED***'${reservedWord}'.`,
***REMOVED******REMOVED***UnexpectedSuper:***REMOVED***"'super'***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***in***REMOVED***object***REMOVED***methods***REMOVED***and***REMOVED***classes.",
***REMOVED******REMOVED***UnexpectedToken:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***expected,
***REMOVED******REMOVED******REMOVED******REMOVED***unexpected
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***token${unexpected***REMOVED***?***REMOVED***`***REMOVED***'${unexpected}'.`***REMOVED***:***REMOVED***""}${expected***REMOVED***?***REMOVED***`,***REMOVED***expected***REMOVED***"${expected}"`***REMOVED***:***REMOVED***""}`,
***REMOVED******REMOVED***UnexpectedTokenUnaryExponentiation:***REMOVED***"Illegal***REMOVED***expression.***REMOVED***Wrap***REMOVED***left***REMOVED***hand***REMOVED***side***REMOVED***or***REMOVED***entire***REMOVED***exponentiation***REMOVED***in***REMOVED***parentheses.",
***REMOVED******REMOVED***UnexpectedUsingDeclaration:***REMOVED***"Using***REMOVED***declaration***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***when***REMOVED***source***REMOVED***type***REMOVED***is***REMOVED***`script`***REMOVED***or***REMOVED***in***REMOVED***the***REMOVED***bare***REMOVED***case***REMOVED***statement.",
***REMOVED******REMOVED***UnexpectedVoidPattern:***REMOVED***"Unexpected***REMOVED***void***REMOVED***binding.",
***REMOVED******REMOVED***UnsupportedBind:***REMOVED***"Binding***REMOVED***should***REMOVED***be***REMOVED***performed***REMOVED***on***REMOVED***object***REMOVED***property.",
***REMOVED******REMOVED***UnsupportedDecoratorExport:***REMOVED***"A***REMOVED***decorated***REMOVED***export***REMOVED***must***REMOVED***export***REMOVED***a***REMOVED***class***REMOVED***declaration.",
***REMOVED******REMOVED***UnsupportedDefaultExport:***REMOVED***"Only***REMOVED***expressions,***REMOVED***functions***REMOVED***or***REMOVED***classes***REMOVED***are***REMOVED***allowed***REMOVED***as***REMOVED***the***REMOVED***`default`***REMOVED***export.",
***REMOVED******REMOVED***UnsupportedImport:***REMOVED***"`import`***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***`import()`***REMOVED***or***REMOVED***`import.meta`.",
***REMOVED******REMOVED***UnsupportedMetaProperty:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***onlyValidPropertyName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`The***REMOVED***only***REMOVED***valid***REMOVED***meta***REMOVED***property***REMOVED***for***REMOVED***${target}***REMOVED***is***REMOVED***${target}.${onlyValidPropertyName}.`,
***REMOVED******REMOVED***UnsupportedParameterDecorator:***REMOVED***"Decorators***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***decorate***REMOVED***parameters.",
***REMOVED******REMOVED***UnsupportedPropertyDecorator:***REMOVED***"Decorators***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***decorate***REMOVED***object***REMOVED***literal***REMOVED***properties.",
***REMOVED******REMOVED***UnsupportedSuper:***REMOVED***"'super'***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***function***REMOVED***calls***REMOVED***(i.e.***REMOVED***super())***REMOVED***or***REMOVED***in***REMOVED***property***REMOVED***accesses***REMOVED***(i.e.***REMOVED***super.prop***REMOVED***or***REMOVED***super[prop]).",
***REMOVED******REMOVED***UnterminatedComment:***REMOVED***"Unterminated***REMOVED***comment.",
***REMOVED******REMOVED***UnterminatedRegExp:***REMOVED***"Unterminated***REMOVED***regular***REMOVED***expression.",
***REMOVED******REMOVED***UnterminatedString:***REMOVED***"Unterminated***REMOVED***string***REMOVED***constant.",
***REMOVED******REMOVED***UnterminatedTemplate:***REMOVED***"Unterminated***REMOVED***template.",
***REMOVED******REMOVED***UsingDeclarationExport:***REMOVED***"Using***REMOVED***declaration***REMOVED***cannot***REMOVED***be***REMOVED***exported.",
***REMOVED******REMOVED***UsingDeclarationHasBindingPattern:***REMOVED***"Using***REMOVED***declaration***REMOVED***cannot***REMOVED***have***REMOVED***destructuring***REMOVED***patterns.",
***REMOVED******REMOVED***VarRedeclaration:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***identifierName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Identifier***REMOVED***'${identifierName}'***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***declared.`,
***REMOVED******REMOVED***VoidPatternCatchClauseParam:***REMOVED***"A***REMOVED***void***REMOVED***binding***REMOVED***can***REMOVED***not***REMOVED***be***REMOVED***the***REMOVED***catch***REMOVED***clause***REMOVED***parameter.***REMOVED***Use***REMOVED***`try***REMOVED***{***REMOVED***...***REMOVED***}***REMOVED***catch***REMOVED***{***REMOVED***...***REMOVED***}`***REMOVED***if***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***discard***REMOVED***the***REMOVED***caught***REMOVED***error.",
***REMOVED******REMOVED***VoidPatternInitializer:***REMOVED***"A***REMOVED***void***REMOVED***binding***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***an***REMOVED***initializer.",
***REMOVED******REMOVED***YieldBindingIdentifier:***REMOVED***"Can***REMOVED***not***REMOVED***use***REMOVED***'yield'***REMOVED***as***REMOVED***identifier***REMOVED***inside***REMOVED***a***REMOVED***generator.",
***REMOVED******REMOVED***YieldInParameter:***REMOVED***"Yield***REMOVED***expression***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***formal***REMOVED***parameters.",
***REMOVED******REMOVED***YieldNotInGeneratorFunction:***REMOVED***"'yield'***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***within***REMOVED***generator***REMOVED***functions.",
***REMOVED******REMOVED***ZeroDigitNumericSeparator:***REMOVED***"Numeric***REMOVED***separator***REMOVED***can***REMOVED***not***REMOVED***be***REMOVED***used***REMOVED***after***REMOVED***leading***REMOVED***0."
};
var***REMOVED***StrictModeErrors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***StrictDelete:***REMOVED***"Deleting***REMOVED***local***REMOVED***variable***REMOVED***in***REMOVED***strict***REMOVED***mode.",
***REMOVED******REMOVED***StrictEvalArguments:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***referenceName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Assigning***REMOVED***to***REMOVED***'${referenceName}'***REMOVED***in***REMOVED***strict***REMOVED***mode.`,
***REMOVED******REMOVED***StrictEvalArgumentsBinding:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***bindingName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Binding***REMOVED***'${bindingName}'***REMOVED***in***REMOVED***strict***REMOVED***mode.`,
***REMOVED******REMOVED***StrictFunction:***REMOVED***"In***REMOVED***strict***REMOVED***mode***REMOVED***code,***REMOVED***functions***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***declared***REMOVED***at***REMOVED***top***REMOVED***level***REMOVED***or***REMOVED***inside***REMOVED***a***REMOVED***block.",
***REMOVED******REMOVED***StrictNumericEscape:***REMOVED***"The***REMOVED***only***REMOVED***valid***REMOVED***numeric***REMOVED***escape***REMOVED***in***REMOVED***strict***REMOVED***mode***REMOVED***is***REMOVED***'\\0'.",
***REMOVED******REMOVED***StrictOctalLiteral:***REMOVED***"Legacy***REMOVED***octal***REMOVED***literals***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***strict***REMOVED***mode.",
***REMOVED******REMOVED***StrictWith:***REMOVED***"'with'***REMOVED***in***REMOVED***strict***REMOVED***mode."
};
var***REMOVED***ParseExpressionErrors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***ParseExpressionEmptyInput:***REMOVED***"Unexpected***REMOVED***parseExpression()***REMOVED***input:***REMOVED***The***REMOVED***input***REMOVED***is***REMOVED***empty***REMOVED***or***REMOVED***contains***REMOVED***only***REMOVED***comments.",
***REMOVED******REMOVED***ParseExpressionExpectsEOF:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***unexpected
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***parseExpression()***REMOVED***input:***REMOVED***The***REMOVED***input***REMOVED***should***REMOVED***contain***REMOVED***exactly***REMOVED***one***REMOVED***expression,***REMOVED***but***REMOVED***the***REMOVED***first***REMOVED***expression***REMOVED***is***REMOVED***followed***REMOVED***by***REMOVED***the***REMOVED***unexpected***REMOVED***character***REMOVED***\`${String.fromCodePoint(unexpected)}\`.`
};
const***REMOVED***UnparenthesizedPipeBodyDescriptions***REMOVED***=***REMOVED***new***REMOVED***Set(["ArrowFunctionExpression",***REMOVED***"AssignmentExpression",***REMOVED***"ConditionalExpression",***REMOVED***"YieldExpression"]);
var***REMOVED***PipelineOperatorErrors***REMOVED***=***REMOVED***Object.assign({
***REMOVED******REMOVED***PipeBodyIsTighter:***REMOVED***"Unexpected***REMOVED***yield***REMOVED***after***REMOVED***pipeline***REMOVED***body;***REMOVED***any***REMOVED***yield***REMOVED***expression***REMOVED***acting***REMOVED***as***REMOVED***Hack-style***REMOVED***pipe***REMOVED***body***REMOVED***must***REMOVED***be***REMOVED***parenthesized***REMOVED***due***REMOVED***to***REMOVED***its***REMOVED***loose***REMOVED***operator***REMOVED***precedence.",
***REMOVED******REMOVED***PipeTopicRequiresHackPipes:***REMOVED***'Topic***REMOVED***reference***REMOVED***is***REMOVED***used,***REMOVED***but***REMOVED***the***REMOVED***pipelineOperator***REMOVED***plugin***REMOVED***was***REMOVED***not***REMOVED***passed***REMOVED***a***REMOVED***"proposal":***REMOVED***"hack"***REMOVED***or***REMOVED***"smart"***REMOVED***option.',
***REMOVED******REMOVED***PipeTopicUnbound:***REMOVED***"Topic***REMOVED***reference***REMOVED***is***REMOVED***unbound;***REMOVED***it***REMOVED***must***REMOVED***be***REMOVED***inside***REMOVED***a***REMOVED***pipe***REMOVED***body.",
***REMOVED******REMOVED***PipeTopicUnconfiguredToken:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***token
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Invalid***REMOVED***topic***REMOVED***token***REMOVED***${token}.***REMOVED***In***REMOVED***order***REMOVED***to***REMOVED***use***REMOVED***${token}***REMOVED***as***REMOVED***a***REMOVED***topic***REMOVED***reference,***REMOVED***the***REMOVED***pipelineOperator***REMOVED***plugin***REMOVED***must***REMOVED***be***REMOVED***configured***REMOVED***with***REMOVED***{***REMOVED***"proposal":***REMOVED***"hack",***REMOVED***"topicToken":***REMOVED***"${token}"***REMOVED***}.`,
***REMOVED******REMOVED***PipeTopicUnused:***REMOVED***"Hack-style***REMOVED***pipe***REMOVED***body***REMOVED***does***REMOVED***not***REMOVED***contain***REMOVED***a***REMOVED***topic***REMOVED***reference;***REMOVED***Hack-style***REMOVED***pipes***REMOVED***must***REMOVED***use***REMOVED***topic***REMOVED***at***REMOVED***least***REMOVED***once.",
***REMOVED******REMOVED***PipeUnparenthesizedBody:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Hack-style***REMOVED***pipe***REMOVED***body***REMOVED***cannot***REMOVED***be***REMOVED***an***REMOVED***unparenthesized***REMOVED***${toNodeDescription({
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***})};***REMOVED***please***REMOVED***wrap***REMOVED***it***REMOVED***in***REMOVED***parentheses.`
},***REMOVED***{
***REMOVED******REMOVED***PipelineBodyNoArrow:***REMOVED***'Unexpected***REMOVED***arrow***REMOVED***"=>"***REMOVED***after***REMOVED***pipeline***REMOVED***body;***REMOVED***arrow***REMOVED***function***REMOVED***in***REMOVED***pipeline***REMOVED***body***REMOVED***must***REMOVED***be***REMOVED***parenthesized.',
***REMOVED******REMOVED***PipelineBodySequenceExpression:***REMOVED***"Pipeline***REMOVED***body***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***a***REMOVED***comma-separated***REMOVED***sequence***REMOVED***expression.",
***REMOVED******REMOVED***PipelineHeadSequenceExpression:***REMOVED***"Pipeline***REMOVED***head***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***a***REMOVED***comma-separated***REMOVED***sequence***REMOVED***expression.",
***REMOVED******REMOVED***PipelineTopicUnused:***REMOVED***"Pipeline***REMOVED***is***REMOVED***in***REMOVED***topic***REMOVED***style***REMOVED***but***REMOVED***does***REMOVED***not***REMOVED***use***REMOVED***topic***REMOVED***reference.",
***REMOVED******REMOVED***PrimaryTopicNotAllowed:***REMOVED***"Topic***REMOVED***reference***REMOVED***was***REMOVED***used***REMOVED***in***REMOVED***a***REMOVED***lexical***REMOVED***context***REMOVED***without***REMOVED***topic***REMOVED***binding.",
***REMOVED******REMOVED***PrimaryTopicRequiresSmartPipeline:***REMOVED***'Topic***REMOVED***reference***REMOVED***is***REMOVED***used,***REMOVED***but***REMOVED***the***REMOVED***pipelineOperator***REMOVED***plugin***REMOVED***was***REMOVED***not***REMOVED***passed***REMOVED***a***REMOVED***"proposal":***REMOVED***"hack"***REMOVED***or***REMOVED***"smart"***REMOVED***option.'
});
const***REMOVED***_excluded***REMOVED***=***REMOVED***["message"];
function***REMOVED***defineHidden(obj,***REMOVED***key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***Object.defineProperty(obj,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED***});
}
function***REMOVED***toParseErrorConstructor({
***REMOVED******REMOVED***toMessage,
***REMOVED******REMOVED***code,
***REMOVED******REMOVED***reasonCode,
***REMOVED******REMOVED***syntaxPlugin
})***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***hasMissingPlugin***REMOVED***=***REMOVED***reasonCode***REMOVED***===***REMOVED***"MissingPlugin"***REMOVED***||***REMOVED***reasonCode***REMOVED***===***REMOVED***"MissingOneOfPlugins";
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldReasonCodes***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***AccessorCannotDeclareThisParameter:***REMOVED***"AccesorCannotDeclareThisParameter",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***AccessorCannotHaveTypeParameters:***REMOVED***"AccesorCannotHaveTypeParameters",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:***REMOVED***"ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SetAccessorCannotHaveOptionalParameter:***REMOVED***"SetAccesorCannotHaveOptionalParameter",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SetAccessorCannotHaveRestParameter:***REMOVED***"SetAccesorCannotHaveRestParameter",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SetAccessorCannotHaveReturnType:***REMOVED***"SetAccesorCannotHaveReturnType"
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldReasonCodes[reasonCode])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reasonCode***REMOVED***=***REMOVED***oldReasonCodes[reasonCode];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***function***REMOVED***constructor(loc,***REMOVED***details)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***new***REMOVED***SyntaxError();
***REMOVED******REMOVED******REMOVED******REMOVED***error.code***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***error.reasonCode***REMOVED***=***REMOVED***reasonCode;
***REMOVED******REMOVED******REMOVED******REMOVED***error.loc***REMOVED***=***REMOVED***loc;
***REMOVED******REMOVED******REMOVED******REMOVED***error.pos***REMOVED***=***REMOVED***loc.index;
***REMOVED******REMOVED******REMOVED******REMOVED***error.syntaxPlugin***REMOVED***=***REMOVED***syntaxPlugin;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMissingPlugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error.missingPlugin***REMOVED***=***REMOVED***details.missingPlugin;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***defineHidden(error,***REMOVED***"clone",***REMOVED***function***REMOVED***clone(overrides***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_overrides$loc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***(_overrides$loc***REMOVED***=***REMOVED***overrides.loc)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_overrides$loc***REMOVED***:***REMOVED***loc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***constructor(new***REMOVED***Position(line,***REMOVED***column,***REMOVED***index),***REMOVED***Object.assign({},***REMOVED***details,***REMOVED***overrides.details));
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***defineHidden(error,***REMOVED***"details",***REMOVED***details);
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(error,***REMOVED***"message",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***message***REMOVED***=***REMOVED***`${toMessage(details)}***REMOVED***(${loc.line}:${loc.column})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.message***REMOVED***=***REMOVED***message;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***message;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(this,***REMOVED***"message",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
***REMOVED******REMOVED***};
}
function***REMOVED***ParseErrorEnum(argument,***REMOVED***syntaxPlugin)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(argument))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parseErrorTemplates***REMOVED***=>***REMOVED***ParseErrorEnum(parseErrorTemplates,***REMOVED***argument[0]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***ParseErrorConstructors***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***reasonCode***REMOVED***of***REMOVED***Object.keys(argument))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***template***REMOVED***=***REMOVED***argument[reasonCode];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***_ref***REMOVED***=***REMOVED***typeof***REMOVED***template***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***()***REMOVED***=>***REMOVED***template
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***typeof***REMOVED***template***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***template
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***template,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***_ref,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rest***REMOVED***=***REMOVED***_objectWithoutPropertiesLoose(_ref,***REMOVED***_excluded);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toMessage***REMOVED***=***REMOVED***typeof***REMOVED***message***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***message***REMOVED***:***REMOVED***message;
***REMOVED******REMOVED******REMOVED******REMOVED***ParseErrorConstructors[reasonCode]***REMOVED***=***REMOVED***toParseErrorConstructor(Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***"BABEL_PARSER_SYNTAX_ERROR",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reasonCode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toMessage
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***syntaxPlugin***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***syntaxPlugin
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{},***REMOVED***rest));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ParseErrorConstructors;
}
const***REMOVED***Errors***REMOVED***=***REMOVED***Object.assign({},***REMOVED***ParseErrorEnum(ModuleErrors),***REMOVED***ParseErrorEnum(StandardErrors),***REMOVED***ParseErrorEnum(StrictModeErrors),***REMOVED***ParseErrorEnum(ParseExpressionErrors),***REMOVED***ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));
function***REMOVED***createDefaultOptions()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***"script",
***REMOVED******REMOVED******REMOVED******REMOVED***sourceFilename:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED***startIndex:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***startColumn:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***startLine:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***allowAwaitOutsideFunction:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***allowReturnOutsideFunction:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***allowNewTargetOutsideFunction:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***allowImportExportEverywhere:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***allowSuperOutsideMethod:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***allowUndeclaredExports:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***allowYieldOutsideFunction:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***strictMode:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***ranges:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***tokens:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***createImportExpressions:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***createParenthesizedExpressions:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***errorRecovery:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***attachComment:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***annexB:***REMOVED***true
***REMOVED******REMOVED***};
}
function***REMOVED***getOptions(opts)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***createDefaultOptions();
***REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(opts.annexB***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***opts.annexB***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("The***REMOVED***`annexB`***REMOVED***option***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***`false`.");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(options))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts[key]***REMOVED***!=***REMOVED***null)***REMOVED***options[key]***REMOVED***=***REMOVED***opts[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(options.startLine***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.startIndex***REMOVED***==***REMOVED***null***REMOVED***&&***REMOVED***options.startColumn***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.startIndex***REMOVED***=***REMOVED***options.startColumn;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(opts.startColumn***REMOVED***==***REMOVED***null***REMOVED***&&***REMOVED***options.startIndex***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.startColumn***REMOVED***=***REMOVED***options.startIndex;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(opts.startColumn***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***opts.startIndex***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.startIndex***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("With***REMOVED***a***REMOVED***`startLine***REMOVED***>***REMOVED***1`***REMOVED***you***REMOVED***must***REMOVED***also***REMOVED***specify***REMOVED***`startIndex`***REMOVED***and***REMOVED***`startColumn`.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(options.sourceType***REMOVED***===***REMOVED***"commonjs")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.allowAwaitOutsideFunction***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("The***REMOVED***`allowAwaitOutsideFunction`***REMOVED***option***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***`sourceType:***REMOVED***'commonjs'`.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.allowReturnOutsideFunction***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("`sourceType:***REMOVED***'commonjs'`***REMOVED***implies***REMOVED***`allowReturnOutsideFunction:***REMOVED***true`,***REMOVED***please***REMOVED***remove***REMOVED***the***REMOVED***`allowReturnOutsideFunction`***REMOVED***option***REMOVED***or***REMOVED***use***REMOVED***`sourceType:***REMOVED***'script'`.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.allowNewTargetOutsideFunction***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("`sourceType:***REMOVED***'commonjs'`***REMOVED***implies***REMOVED***`allowNewTargetOutsideFunction:***REMOVED***true`,***REMOVED***please***REMOVED***remove***REMOVED***the***REMOVED***`allowNewTargetOutsideFunction`***REMOVED***option***REMOVED***or***REMOVED***use***REMOVED***`sourceType:***REMOVED***'script'`.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***options;
}
const***REMOVED***{
***REMOVED******REMOVED***defineProperty
}***REMOVED***=***REMOVED***Object;
const***REMOVED***toUnenumerable***REMOVED***=***REMOVED***(object,***REMOVED***key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(object)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***defineProperty(object,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***object[key]
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
};
function***REMOVED***toESTreeLocation(node)***REMOVED***{
***REMOVED******REMOVED***toUnenumerable(node.loc.start,***REMOVED***"index");
***REMOVED******REMOVED***toUnenumerable(node.loc.end,***REMOVED***"index");
***REMOVED******REMOVED***return***REMOVED***node;
}
var***REMOVED***estree***REMOVED***=***REMOVED***superClass***REMOVED***=>***REMOVED***class***REMOVED***ESTreeParserMixin***REMOVED***extends***REMOVED***superClass***REMOVED***{
***REMOVED******REMOVED***parse()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***file***REMOVED***=***REMOVED***toESTreeLocation(super.parse());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file.tokens***REMOVED***=***REMOVED***file.tokens.map(toESTreeLocation);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***file;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseRegExpLiteral({
***REMOVED******REMOVED******REMOVED******REMOVED***pattern,
***REMOVED******REMOVED******REMOVED******REMOVED***flags
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***regex***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***regex***REMOVED***=***REMOVED***new***REMOVED***RegExp(pattern,***REMOVED***flags);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(_)***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.estreeParseLiteral(regex);
***REMOVED******REMOVED******REMOVED******REMOVED***node.regex***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBigIntLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bigInt;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bigInt***REMOVED***=***REMOVED***BigInt(value);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(_unused)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bigInt***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.estreeParseLiteral(bigInt);
***REMOVED******REMOVED******REMOVED******REMOVED***node.bigint***REMOVED***=***REMOVED***String(node.value***REMOVED***||***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDecimalLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decimal***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.estreeParseLiteral(decimal);
***REMOVED******REMOVED******REMOVED******REMOVED***node.decimal***REMOVED***=***REMOVED***String(node.value***REMOVED***||***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***estreeParseLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(value,***REMOVED***"Literal");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStringLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.estreeParseLiteral(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNumericLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.estreeParseLiteral(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNullLiteral()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.estreeParseLiteral(null);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBooleanLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.estreeParseLiteral(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***estreeParseChainExpression(node,***REMOVED***endLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chain***REMOVED***=***REMOVED***this.startNodeAtNode(node);
***REMOVED******REMOVED******REMOVED******REMOVED***chain.expression***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNodeAt(chain,***REMOVED***"ChainExpression",***REMOVED***endLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***directiveToStmt(directive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***directive.value;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***directive.value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(expression,***REMOVED***"Literal");
***REMOVED******REMOVED******REMOVED******REMOVED***expression.raw***REMOVED***=***REMOVED***expression.extra.raw;
***REMOVED******REMOVED******REMOVED******REMOVED***expression.value***REMOVED***=***REMOVED***expression.extra.expressionValue;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stmt***REMOVED***=***REMOVED***this.castNodeTo(directive,***REMOVED***"ExpressionStatement");
***REMOVED******REMOVED******REMOVED******REMOVED***stmt.expression***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED***stmt.directive***REMOVED***=***REMOVED***expression.extra.rawValue;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***expression.extra;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stmt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***fillOptionalPropertiesForTSESLint(node)***REMOVED***{}
***REMOVED******REMOVED***cloneEstreeStringLiteral(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***Object.create(node.constructor.prototype);
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.type***REMOVED***=***REMOVED***"Literal";
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.start***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.end***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.loc***REMOVED***=***REMOVED***loc;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.range***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.raw***REMOVED***=***REMOVED***raw;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***initFunction(node,***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.initFunction(node,***REMOVED***isAsync);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***this.isObjectProperty(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(node.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.checkDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getObjectOrClassMethodParams(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***method.value.params;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidDirective(stmt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_stmt$expression$extr;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stmt.type***REMOVED***===***REMOVED***"ExpressionStatement"***REMOVED***&&***REMOVED***stmt.expression.type***REMOVED***===***REMOVED***"Literal"***REMOVED***&&***REMOVED***typeof***REMOVED***stmt.expression.value***REMOVED***===***REMOVED***"string"***REMOVED***&&***REMOVED***!((_stmt$expression$extr***REMOVED***=***REMOVED***stmt.expression.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_stmt$expression$extr.parenthesized);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBlockBody(node,***REMOVED***allowDirectives,***REMOVED***topLevel,***REMOVED***end,***REMOVED***afterBlockParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseBlockBody(node,***REMOVED***allowDirectives,***REMOVED***topLevel,***REMOVED***end,***REMOVED***afterBlockParse);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directiveStatements***REMOVED***=***REMOVED***node.directives.map(d***REMOVED***=>***REMOVED***this.directiveToStmt(d));
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***directiveStatements.concat(node.body);
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.directives;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePrivateName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.getPluginOption("estree",***REMOVED***"classFeatures"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.convertPrivateNameToPrivateIdentifier(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***convertPrivateNameToPrivateIdentifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***super.getPrivateNameSV(node);
***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.id;
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.castNodeTo(node,***REMOVED***"PrivateIdentifier");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isPrivateName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.getPluginOption("estree",***REMOVED***"classFeatures"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isPrivateName(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"PrivateIdentifier";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getPrivateNameSV(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.getPluginOption("estree",***REMOVED***"classFeatures"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.getPrivateNameSV(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseLiteral(value,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseLiteral(value,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***node.raw***REMOVED***=***REMOVED***node.extra.raw;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.extra;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionBody(node,***REMOVED***allowExpression,***REMOVED***isMethod***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseFunctionBody(node,***REMOVED***allowExpression,***REMOVED***isMethod);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***node.body.type***REMOVED***!==***REMOVED***"BlockStatement";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMethod(node,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowDirectSuper,***REMOVED***type,***REMOVED***inClassScope***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***funcNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***funcNode.kind***REMOVED***=***REMOVED***node.kind;
***REMOVED******REMOVED******REMOVED******REMOVED***funcNode***REMOVED***=***REMOVED***super.parseMethod(funcNode,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowDirectSuper,***REMOVED***type,***REMOVED***inClassScope);
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***funcNode.kind;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***funcNode.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(funcNode,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valueNode***REMOVED***=***REMOVED***this.castNodeTo(funcNode,***REMOVED***"FunctionExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***valueNode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"ClassPrivateMethod")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"ObjectMethod")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.kind***REMOVED***===***REMOVED***"method")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.shorthand***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Property");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"MethodDefinition");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nameIsConstructor(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key.type***REMOVED***===***REMOVED***"Literal")***REMOVED***return***REMOVED***key.value***REMOVED***===***REMOVED***"constructor";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.nameIsConstructor(key);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassProperty(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propertyNode***REMOVED***=***REMOVED***super.parseClassProperty(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.getPluginOption("estree",***REMOVED***"classFeatures"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***propertyNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(propertyNode,***REMOVED***"PropertyDefinition");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***propertyNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassPrivateProperty(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propertyNode***REMOVED***=***REMOVED***super.parseClassPrivateProperty(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.getPluginOption("estree",***REMOVED***"classFeatures"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***propertyNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(propertyNode,***REMOVED***"PropertyDefinition");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***propertyNode.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***propertyNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassAccessorProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessorPropertyNode***REMOVED***=***REMOVED***super.parseClassAccessorProperty(node);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.getPluginOption("estree",***REMOVED***"classFeatures"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***accessorPropertyNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessorPropertyNode.abstract***REMOVED***&&***REMOVED***this.hasPlugin("typescript"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***accessorPropertyNode.abstract;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(accessorPropertyNode,***REMOVED***"TSAbstractAccessorProperty");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(accessorPropertyNode,***REMOVED***"AccessorProperty");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***accessorPropertyNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjectProperty(prop,***REMOVED***startLoc,***REMOVED***isPattern,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseObjectProperty(prop,***REMOVED***startLoc,***REMOVED***isPattern,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"Property");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishObjectProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Property");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidLVal(type,***REMOVED***isUnparenthesizedInAssign,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"Property"***REMOVED***?***REMOVED***"value"***REMOVED***:***REMOVED***super.isValidLVal(type,***REMOVED***isUnparenthesizedInAssign,***REMOVED***binding);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAssignable(node,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***this.isObjectProperty(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isAssignable(node.value,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isAssignable(node,***REMOVED***isBinding);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignable(node,***REMOVED***isLHS***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***this.isObjectProperty(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isPrivateName(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.usePrivateName(this.getPrivateNameSV(key),***REMOVED***key.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(value,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignable(node,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableObjectExpressionProp(prop,***REMOVED***isLast,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"Property"***REMOVED***&&***REMOVED***(prop.kind***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***prop.kind***REMOVED***===***REMOVED***"set"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PatternHasAccessor,***REMOVED***prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"Property"***REMOVED***&&***REMOVED***prop.method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PatternHasMethod,***REMOVED***prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignableObjectExpressionProp(prop,***REMOVED***isLast,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishCallExpression(unfinished,***REMOVED***optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.finishCallExpression(unfinished,***REMOVED***optional);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.callee.type***REMOVED***===***REMOVED***"Import")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_ref;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"ImportExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***node.arguments[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.options***REMOVED***=***REMOVED***(_ref***REMOVED***=***REMOVED***node.arguments[1])***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_ref***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_ref2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.attributes***REMOVED***=***REMOVED***(_ref2***REMOVED***=***REMOVED***node.arguments[1])***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_ref2***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.arguments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.callee;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"OptionalCallExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"CallExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toReferencedArguments(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ImportExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.toReferencedArguments(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExport(unfinished,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportStartLoc***REMOVED***=***REMOVED***this.state.lastTokStartLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseExport(unfinished,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ExportAllDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ExportNamedDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.specifiers.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***node.specifiers[0].type***REMOVED***===***REMOVED***"ExportNamespaceSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"ExportAllDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***node.specifiers[0].exported;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.specifiers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ExportDefaultDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_declaration$decorato;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((declaration***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***declaration.type)***REMOVED***===***REMOVED***"ClassDeclaration"***REMOVED***&&***REMOVED***((_declaration$decorato***REMOVED***=***REMOVED***declaration.decorators)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_declaration$decorato.length)***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***declaration.start***REMOVED***===***REMOVED***node.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocation(node,***REMOVED***exportStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stopParseSubscript(base,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.stopParseSubscript(base,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.optionalChainMember)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.estreeParseChainExpression(node,***REMOVED***base.loc.end);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMember(base,***REMOVED***startLoc,***REMOVED***state,***REMOVED***computed,***REMOVED***optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseMember(base,***REMOVED***startLoc,***REMOVED***state,***REMOVED***computed,***REMOVED***optional);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"OptionalMemberExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"MemberExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isOptionalMemberExpression(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ChainExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.expression.type***REMOVED***===***REMOVED***"MemberExpression";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isOptionalMemberExpression(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasPropertyAsPrivateName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ChainExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.expression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.hasPropertyAsPrivateName(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isObjectProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"Property"***REMOVED***&&***REMOVED***node.kind***REMOVED***===***REMOVED***"init"***REMOVED***&&***REMOVED***!node.method;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isObjectMethod(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"Property"***REMOVED***&&***REMOVED***(node.method***REMOVED***||***REMOVED***node.kind***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***node.kind***REMOVED***===***REMOVED***"set");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***castNodeTo(node,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***super.castNodeTo(node,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***this.fillOptionalPropertiesForTSESLint(result);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***cloneIdentifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***super.cloneIdentifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.fillOptionalPropertiesForTSESLint(cloned);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***cloneStringLiteral(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Literal")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.cloneEstreeStringLiteral(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.cloneStringLiteral(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishNodeAt(node,***REMOVED***type,***REMOVED***endLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***toESTreeLocation(super.finishNodeAt(node,***REMOVED***type,***REMOVED***endLoc));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishNode(node,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***super.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***this.fillOptionalPropertiesForTSESLint(result);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetStartLocation(node,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.resetStartLocation(node,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***toESTreeLocation(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetEndLocation(node,***REMOVED***endLoc***REMOVED***=***REMOVED***this.state.lastTokEndLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.resetEndLocation(node,***REMOVED***endLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***toESTreeLocation(node);
***REMOVED******REMOVED***}
};
class***REMOVED***TokContext***REMOVED***{
***REMOVED******REMOVED***constructor(token,***REMOVED***preserveSpace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.token***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.preserveSpace***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.token***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED***this.preserveSpace***REMOVED***=***REMOVED***!!preserveSpace;
***REMOVED******REMOVED***}
}
const***REMOVED***types***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***brace:***REMOVED***new***REMOVED***TokContext("{"),
***REMOVED******REMOVED***j_oTag:***REMOVED***new***REMOVED***TokContext("<tag"),
***REMOVED******REMOVED***j_cTag:***REMOVED***new***REMOVED***TokContext("</tag"),
***REMOVED******REMOVED***j_expr:***REMOVED***new***REMOVED***TokContext("<tag>...</tag>",***REMOVED***true)
};
{
***REMOVED******REMOVED***types.template***REMOVED***=***REMOVED***new***REMOVED***TokContext("`",***REMOVED***true);
}
const***REMOVED***beforeExpr***REMOVED***=***REMOVED***true;
const***REMOVED***startsExpr***REMOVED***=***REMOVED***true;
const***REMOVED***isLoop***REMOVED***=***REMOVED***true;
const***REMOVED***isAssign***REMOVED***=***REMOVED***true;
const***REMOVED***prefix***REMOVED***=***REMOVED***true;
const***REMOVED***postfix***REMOVED***=***REMOVED***true;
class***REMOVED***ExportedTokenType***REMOVED***{
***REMOVED******REMOVED***constructor(label,***REMOVED***conf***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.label***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.keyword***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.beforeExpr***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.startsExpr***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.rightAssociative***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLoop***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isAssign***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.prefix***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.postfix***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.binop***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.label***REMOVED***=***REMOVED***label;
***REMOVED******REMOVED******REMOVED******REMOVED***this.keyword***REMOVED***=***REMOVED***conf.keyword;
***REMOVED******REMOVED******REMOVED******REMOVED***this.beforeExpr***REMOVED***=***REMOVED***!!conf.beforeExpr;
***REMOVED******REMOVED******REMOVED******REMOVED***this.startsExpr***REMOVED***=***REMOVED***!!conf.startsExpr;
***REMOVED******REMOVED******REMOVED******REMOVED***this.rightAssociative***REMOVED***=***REMOVED***!!conf.rightAssociative;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLoop***REMOVED***=***REMOVED***!!conf.isLoop;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isAssign***REMOVED***=***REMOVED***!!conf.isAssign;
***REMOVED******REMOVED******REMOVED******REMOVED***this.prefix***REMOVED***=***REMOVED***!!conf.prefix;
***REMOVED******REMOVED******REMOVED******REMOVED***this.postfix***REMOVED***=***REMOVED***!!conf.postfix;
***REMOVED******REMOVED******REMOVED******REMOVED***this.binop***REMOVED***=***REMOVED***conf.binop***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***conf.binop***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.updateContext***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
const***REMOVED***keywords$1***REMOVED***=***REMOVED***new***REMOVED***Map();
function***REMOVED***createKeyword(name,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***options.keyword***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED***const***REMOVED***token***REMOVED***=***REMOVED***createToken(name,***REMOVED***options);
***REMOVED******REMOVED***keywords$1.set(name,***REMOVED***token);
***REMOVED******REMOVED***return***REMOVED***token;
}
function***REMOVED***createBinop(name,***REMOVED***binop)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createToken(name,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***binop
***REMOVED******REMOVED***});
}
let***REMOVED***tokenTypeCounter***REMOVED***=***REMOVED***-1;
const***REMOVED***tokenTypes***REMOVED***=***REMOVED***[];
const***REMOVED***tokenLabels***REMOVED***=***REMOVED***[];
const***REMOVED***tokenBinops***REMOVED***=***REMOVED***[];
const***REMOVED***tokenBeforeExprs***REMOVED***=***REMOVED***[];
const***REMOVED***tokenStartsExprs***REMOVED***=***REMOVED***[];
const***REMOVED***tokenPrefixes***REMOVED***=***REMOVED***[];
function***REMOVED***createToken(name,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_options$binop,***REMOVED***_options$beforeExpr,***REMOVED***_options$startsExpr,***REMOVED***_options$prefix;
***REMOVED******REMOVED***++tokenTypeCounter;
***REMOVED******REMOVED***tokenLabels.push(name);
***REMOVED******REMOVED***tokenBinops.push((_options$binop***REMOVED***=***REMOVED***options.binop)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$binop***REMOVED***:***REMOVED***-1);
***REMOVED******REMOVED***tokenBeforeExprs.push((_options$beforeExpr***REMOVED***=***REMOVED***options.beforeExpr)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$beforeExpr***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED***tokenStartsExprs.push((_options$startsExpr***REMOVED***=***REMOVED***options.startsExpr)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$startsExpr***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED***tokenPrefixes.push((_options$prefix***REMOVED***=***REMOVED***options.prefix)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$prefix***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED***tokenTypes.push(new***REMOVED***ExportedTokenType(name,***REMOVED***options));
***REMOVED******REMOVED***return***REMOVED***tokenTypeCounter;
}
function***REMOVED***createKeywordLike(name,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_options$binop2,***REMOVED***_options$beforeExpr2,***REMOVED***_options$startsExpr2,***REMOVED***_options$prefix2;
***REMOVED******REMOVED***++tokenTypeCounter;
***REMOVED******REMOVED***keywords$1.set(name,***REMOVED***tokenTypeCounter);
***REMOVED******REMOVED***tokenLabels.push(name);
***REMOVED******REMOVED***tokenBinops.push((_options$binop2***REMOVED***=***REMOVED***options.binop)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$binop2***REMOVED***:***REMOVED***-1);
***REMOVED******REMOVED***tokenBeforeExprs.push((_options$beforeExpr2***REMOVED***=***REMOVED***options.beforeExpr)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$beforeExpr2***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED***tokenStartsExprs.push((_options$startsExpr2***REMOVED***=***REMOVED***options.startsExpr)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$startsExpr2***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED***tokenPrefixes.push((_options$prefix2***REMOVED***=***REMOVED***options.prefix)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_options$prefix2***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED***tokenTypes.push(new***REMOVED***ExportedTokenType("name",***REMOVED***options));
***REMOVED******REMOVED***return***REMOVED***tokenTypeCounter;
}
const***REMOVED***tt***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***bracketL:***REMOVED***createToken("[",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***bracketHashL:***REMOVED***createToken("#[",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***bracketBarL:***REMOVED***createToken("[|",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***bracketR:***REMOVED***createToken("]"),
***REMOVED******REMOVED***bracketBarR:***REMOVED***createToken("|]"),
***REMOVED******REMOVED***braceL:***REMOVED***createToken("{",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***braceBarL:***REMOVED***createToken("{|",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***braceHashL:***REMOVED***createToken("#{",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***braceR:***REMOVED***createToken("}"),
***REMOVED******REMOVED***braceBarR:***REMOVED***createToken("|}"),
***REMOVED******REMOVED***parenL:***REMOVED***createToken("(",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***parenR:***REMOVED***createToken(")"),
***REMOVED******REMOVED***comma:***REMOVED***createToken(",",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***semi:***REMOVED***createToken(";",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***colon:***REMOVED***createToken(":",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***doubleColon:***REMOVED***createToken("::",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***dot:***REMOVED***createToken("."),
***REMOVED******REMOVED***question:***REMOVED***createToken("?",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***questionDot:***REMOVED***createToken("?."),
***REMOVED******REMOVED***arrow:***REMOVED***createToken("=>",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***template:***REMOVED***createToken("template"),
***REMOVED******REMOVED***ellipsis:***REMOVED***createToken("...",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***backQuote:***REMOVED***createToken("`",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***dollarBraceL:***REMOVED***createToken("${",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***templateTail:***REMOVED***createToken("...`",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***templateNonTail:***REMOVED***createToken("...${",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***at:***REMOVED***createToken("@"),
***REMOVED******REMOVED***hash:***REMOVED***createToken("#",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***interpreterDirective:***REMOVED***createToken("#!..."),
***REMOVED******REMOVED***eq:***REMOVED***createToken("=",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***isAssign
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***assign:***REMOVED***createToken("_=",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***isAssign
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***slashAssign:***REMOVED***createToken("_=",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***isAssign
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***xorAssign:***REMOVED***createToken("_=",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***isAssign
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***moduloAssign:***REMOVED***createToken("_=",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***isAssign
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***incDec:***REMOVED***createToken("++/--",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***postfix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***bang:***REMOVED***createToken("!",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***tilde:***REMOVED***createToken("~",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***doubleCaret:***REMOVED***createToken("^^",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***doubleAt:***REMOVED***createToken("@@",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***pipeline:***REMOVED***createBinop("|>",***REMOVED***0),
***REMOVED******REMOVED***nullishCoalescing:***REMOVED***createBinop("??",***REMOVED***1),
***REMOVED******REMOVED***logicalOR:***REMOVED***createBinop("||",***REMOVED***1),
***REMOVED******REMOVED***logicalAND:***REMOVED***createBinop("&&",***REMOVED***2),
***REMOVED******REMOVED***bitwiseOR:***REMOVED***createBinop("|",***REMOVED***3),
***REMOVED******REMOVED***bitwiseXOR:***REMOVED***createBinop("^",***REMOVED***4),
***REMOVED******REMOVED***bitwiseAND:***REMOVED***createBinop("&",***REMOVED***5),
***REMOVED******REMOVED***equality:***REMOVED***createBinop("==/!=/===/!==",***REMOVED***6),
***REMOVED******REMOVED***lt:***REMOVED***createBinop("</>/<=/>=",***REMOVED***7),
***REMOVED******REMOVED***gt:***REMOVED***createBinop("</>/<=/>=",***REMOVED***7),
***REMOVED******REMOVED***relational:***REMOVED***createBinop("</>/<=/>=",***REMOVED***7),
***REMOVED******REMOVED***bitShift:***REMOVED***createBinop("<</>>/>>>",***REMOVED***8),
***REMOVED******REMOVED***bitShiftL:***REMOVED***createBinop("<</>>/>>>",***REMOVED***8),
***REMOVED******REMOVED***bitShiftR:***REMOVED***createBinop("<</>>/>>>",***REMOVED***8),
***REMOVED******REMOVED***plusMin:***REMOVED***createToken("+/-",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***binop:***REMOVED***9,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***modulo:***REMOVED***createToken("%",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***binop:***REMOVED***10,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***star:***REMOVED***createToken("*",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***binop:***REMOVED***10
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***slash:***REMOVED***createBinop("/",***REMOVED***10),
***REMOVED******REMOVED***exponent:***REMOVED***createToken("**",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***binop:***REMOVED***11,
***REMOVED******REMOVED******REMOVED******REMOVED***rightAssociative:***REMOVED***true
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_in:***REMOVED***createKeyword("in",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***binop:***REMOVED***7
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_instanceof:***REMOVED***createKeyword("instanceof",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***binop:***REMOVED***7
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_break:***REMOVED***createKeyword("break"),
***REMOVED******REMOVED***_case:***REMOVED***createKeyword("case",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_catch:***REMOVED***createKeyword("catch"),
***REMOVED******REMOVED***_continue:***REMOVED***createKeyword("continue"),
***REMOVED******REMOVED***_debugger:***REMOVED***createKeyword("debugger"),
***REMOVED******REMOVED***_default:***REMOVED***createKeyword("default",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_else:***REMOVED***createKeyword("else",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_finally:***REMOVED***createKeyword("finally"),
***REMOVED******REMOVED***_function:***REMOVED***createKeyword("function",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_if:***REMOVED***createKeyword("if"),
***REMOVED******REMOVED***_return:***REMOVED***createKeyword("return",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_switch:***REMOVED***createKeyword("switch"),
***REMOVED******REMOVED***_throw:***REMOVED***createKeyword("throw",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_try:***REMOVED***createKeyword("try"),
***REMOVED******REMOVED***_var:***REMOVED***createKeyword("var"),
***REMOVED******REMOVED***_const:***REMOVED***createKeyword("const"),
***REMOVED******REMOVED***_with:***REMOVED***createKeyword("with"),
***REMOVED******REMOVED***_new:***REMOVED***createKeyword("new",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_this:***REMOVED***createKeyword("this",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_super:***REMOVED***createKeyword("super",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_class:***REMOVED***createKeyword("class",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_extends:***REMOVED***createKeyword("extends",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_export:***REMOVED***createKeyword("export"),
***REMOVED******REMOVED***_import:***REMOVED***createKeyword("import",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_null:***REMOVED***createKeyword("null",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_true:***REMOVED***createKeyword("true",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_false:***REMOVED***createKeyword("false",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_typeof:***REMOVED***createKeyword("typeof",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_void:***REMOVED***createKeyword("void",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_delete:***REMOVED***createKeyword("delete",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr,
***REMOVED******REMOVED******REMOVED******REMOVED***prefix,
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_do:***REMOVED***createKeyword("do",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isLoop,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_for:***REMOVED***createKeyword("for",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isLoop
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_while:***REMOVED***createKeyword("while",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isLoop
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_as:***REMOVED***createKeywordLike("as",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_assert:***REMOVED***createKeywordLike("assert",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_async:***REMOVED***createKeywordLike("async",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_await:***REMOVED***createKeywordLike("await",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_defer:***REMOVED***createKeywordLike("defer",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_from:***REMOVED***createKeywordLike("from",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_get:***REMOVED***createKeywordLike("get",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_let:***REMOVED***createKeywordLike("let",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_meta:***REMOVED***createKeywordLike("meta",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_of:***REMOVED***createKeywordLike("of",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_sent:***REMOVED***createKeywordLike("sent",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_set:***REMOVED***createKeywordLike("set",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_source:***REMOVED***createKeywordLike("source",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_static:***REMOVED***createKeywordLike("static",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_using:***REMOVED***createKeywordLike("using",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_yield:***REMOVED***createKeywordLike("yield",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_asserts:***REMOVED***createKeywordLike("asserts",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_checks:***REMOVED***createKeywordLike("checks",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_exports:***REMOVED***createKeywordLike("exports",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_global:***REMOVED***createKeywordLike("global",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_implements:***REMOVED***createKeywordLike("implements",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_intrinsic:***REMOVED***createKeywordLike("intrinsic",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_infer:***REMOVED***createKeywordLike("infer",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_is:***REMOVED***createKeywordLike("is",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_mixins:***REMOVED***createKeywordLike("mixins",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_proto:***REMOVED***createKeywordLike("proto",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_require:***REMOVED***createKeywordLike("require",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_satisfies:***REMOVED***createKeywordLike("satisfies",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_keyof:***REMOVED***createKeywordLike("keyof",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_readonly:***REMOVED***createKeywordLike("readonly",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_unique:***REMOVED***createKeywordLike("unique",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_abstract:***REMOVED***createKeywordLike("abstract",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_declare:***REMOVED***createKeywordLike("declare",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_enum:***REMOVED***createKeywordLike("enum",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_module:***REMOVED***createKeywordLike("module",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_namespace:***REMOVED***createKeywordLike("namespace",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_interface:***REMOVED***createKeywordLike("interface",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_type:***REMOVED***createKeywordLike("type",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***_opaque:***REMOVED***createKeywordLike("opaque",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***name:***REMOVED***createToken("name",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***placeholder:***REMOVED***createToken("%%",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***string:***REMOVED***createToken("string",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***num:***REMOVED***createToken("num",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***bigint:***REMOVED***createToken("bigint",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***decimal:***REMOVED***createToken("decimal",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***regexp:***REMOVED***createToken("regexp",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***privateName:***REMOVED***createToken("#name",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***eof:***REMOVED***createToken("eof"),
***REMOVED******REMOVED***jsxName:***REMOVED***createToken("jsxName"),
***REMOVED******REMOVED***jsxText:***REMOVED***createToken("jsxText",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***beforeExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***jsxTagStart:***REMOVED***createToken("jsxTagStart",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startsExpr
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***jsxTagEnd:***REMOVED***createToken("jsxTagEnd")
};
function***REMOVED***tokenIsIdentifier(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***93***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***133;
}
function***REMOVED***tokenKeywordOrIdentifierIsKeyword(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***<=***REMOVED***92;
}
function***REMOVED***tokenIsKeywordOrIdentifier(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***58***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***133;
}
function***REMOVED***tokenIsLiteralPropertyName(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***58***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***137;
}
function***REMOVED***tokenComesBeforeExpression(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***tokenBeforeExprs[token];
}
function***REMOVED***tokenCanStartExpression(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***tokenStartsExprs[token];
}
function***REMOVED***tokenIsAssignment(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***29***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***33;
}
function***REMOVED***tokenIsFlowInterfaceOrTypeOrOpaque(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***129***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***131;
}
function***REMOVED***tokenIsLoop(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***90***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***92;
}
function***REMOVED***tokenIsKeyword(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***58***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***92;
}
function***REMOVED***tokenIsOperator(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***39***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***59;
}
function***REMOVED***tokenIsPostfix(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***===***REMOVED***34;
}
function***REMOVED***tokenIsPrefix(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***tokenPrefixes[token];
}
function***REMOVED***tokenIsTSTypeOperator(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***121***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***123;
}
function***REMOVED***tokenIsTSDeclarationStart(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***124***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***130;
}
function***REMOVED***tokenLabelName(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***tokenLabels[token];
}
function***REMOVED***tokenOperatorPrecedence(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***tokenBinops[token];
}
function***REMOVED***tokenIsRightAssociative(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***===***REMOVED***57;
}
function***REMOVED***tokenIsTemplate(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***token***REMOVED***>=***REMOVED***24***REMOVED***&&***REMOVED***token***REMOVED***<=***REMOVED***25;
}
function***REMOVED***getExportedToken(token)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***tokenTypes[token];
}
{
***REMOVED******REMOVED***tokenTypes[8].updateContext***REMOVED***=***REMOVED***context***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***context.pop();
***REMOVED******REMOVED***};
***REMOVED******REMOVED***tokenTypes[5].updateContext***REMOVED***=***REMOVED***tokenTypes[7].updateContext***REMOVED***=***REMOVED***tokenTypes[23].updateContext***REMOVED***=***REMOVED***context***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***context.push(types.brace);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***tokenTypes[22].updateContext***REMOVED***=***REMOVED***context***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context[context.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***types.template)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.push(types.template);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***tokenTypes[143].updateContext***REMOVED***=***REMOVED***context***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***context.push(types.j_expr,***REMOVED***types.j_oTag);
***REMOVED******REMOVED***};
}
let***REMOVED***nonASCIIidentifierStartChars***REMOVED***=***REMOVED***"\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c8a\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7cd\ua7d0\ua7d1\ua7d3\ua7d5-\ua7dc\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
let***REMOVED***nonASCIIidentifierChars***REMOVED***=***REMOVED***"\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0897-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0cf3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ece\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\u30fb\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f\uff65";
const***REMOVED***nonASCIIidentifierStart***REMOVED***=***REMOVED***new***REMOVED***RegExp("["***REMOVED***+***REMOVED***nonASCIIidentifierStartChars***REMOVED***+***REMOVED***"]");
const***REMOVED***nonASCIIidentifier***REMOVED***=***REMOVED***new***REMOVED***RegExp("["***REMOVED***+***REMOVED***nonASCIIidentifierStartChars***REMOVED***+***REMOVED***nonASCIIidentifierChars***REMOVED***+***REMOVED***"]");
nonASCIIidentifierStartChars***REMOVED***=***REMOVED***nonASCIIidentifierChars***REMOVED***=***REMOVED***null;
const***REMOVED***astralIdentifierStartCodes***REMOVED***=***REMOVED***[0,***REMOVED***11,***REMOVED***2,***REMOVED***25,***REMOVED***2,***REMOVED***18,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***14,***REMOVED***3,***REMOVED***13,***REMOVED***35,***REMOVED***122,***REMOVED***70,***REMOVED***52,***REMOVED***268,***REMOVED***28,***REMOVED***4,***REMOVED***48,***REMOVED***48,***REMOVED***31,***REMOVED***14,***REMOVED***29,***REMOVED***6,***REMOVED***37,***REMOVED***11,***REMOVED***29,***REMOVED***3,***REMOVED***35,***REMOVED***5,***REMOVED***7,***REMOVED***2,***REMOVED***4,***REMOVED***43,***REMOVED***157,***REMOVED***19,***REMOVED***35,***REMOVED***5,***REMOVED***35,***REMOVED***5,***REMOVED***39,***REMOVED***9,***REMOVED***51,***REMOVED***13,***REMOVED***10,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***10,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***4,***REMOVED***51,***REMOVED***13,***REMOVED***310,***REMOVED***10,***REMOVED***21,***REMOVED***11,***REMOVED***7,***REMOVED***25,***REMOVED***5,***REMOVED***2,***REMOVED***41,***REMOVED***2,***REMOVED***8,***REMOVED***70,***REMOVED***5,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***43,***REMOVED***2,***REMOVED***1,***REMOVED***4,***REMOVED***0,***REMOVED***3,***REMOVED***22,***REMOVED***11,***REMOVED***22,***REMOVED***10,***REMOVED***30,***REMOVED***66,***REMOVED***18,***REMOVED***2,***REMOVED***1,***REMOVED***11,***REMOVED***21,***REMOVED***11,***REMOVED***25,***REMOVED***71,***REMOVED***55,***REMOVED***7,***REMOVED***1,***REMOVED***65,***REMOVED***0,***REMOVED***16,***REMOVED***3,***REMOVED***2,***REMOVED***2,***REMOVED***2,***REMOVED***28,***REMOVED***43,***REMOVED***28,***REMOVED***4,***REMOVED***28,***REMOVED***36,***REMOVED***7,***REMOVED***2,***REMOVED***27,***REMOVED***28,***REMOVED***53,***REMOVED***11,***REMOVED***21,***REMOVED***11,***REMOVED***18,***REMOVED***14,***REMOVED***17,***REMOVED***111,***REMOVED***72,***REMOVED***56,***REMOVED***50,***REMOVED***14,***REMOVED***50,***REMOVED***14,***REMOVED***35,***REMOVED***39,***REMOVED***27,***REMOVED***10,***REMOVED***22,***REMOVED***251,***REMOVED***41,***REMOVED***7,***REMOVED***1,***REMOVED***17,***REMOVED***2,***REMOVED***60,***REMOVED***28,***REMOVED***11,***REMOVED***0,***REMOVED***9,***REMOVED***21,***REMOVED***43,***REMOVED***17,***REMOVED***47,***REMOVED***20,***REMOVED***28,***REMOVED***22,***REMOVED***13,***REMOVED***52,***REMOVED***58,***REMOVED***1,***REMOVED***3,***REMOVED***0,***REMOVED***14,***REMOVED***44,***REMOVED***33,***REMOVED***24,***REMOVED***27,***REMOVED***35,***REMOVED***30,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***9,***REMOVED***34,***REMOVED***4,***REMOVED***0,***REMOVED***13,***REMOVED***47,***REMOVED***15,***REMOVED***3,***REMOVED***22,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***36,***REMOVED***17,***REMOVED***2,***REMOVED***24,***REMOVED***20,***REMOVED***1,***REMOVED***64,***REMOVED***6,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***9,***REMOVED***8,***REMOVED***46,***REMOVED***39,***REMOVED***7,***REMOVED***3,***REMOVED***1,***REMOVED***3,***REMOVED***21,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***4,***REMOVED***4,***REMOVED***0,***REMOVED***19,***REMOVED***0,***REMOVED***13,***REMOVED***4,***REMOVED***31,***REMOVED***9,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***37,***REMOVED***2,***REMOVED***0,***REMOVED***26,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***45,***REMOVED***52,***REMOVED***19,***REMOVED***3,***REMOVED***21,***REMOVED***2,***REMOVED***31,***REMOVED***47,***REMOVED***21,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***185,***REMOVED***46,***REMOVED***42,***REMOVED***3,***REMOVED***37,***REMOVED***47,***REMOVED***21,***REMOVED***0,***REMOVED***60,***REMOVED***42,***REMOVED***14,***REMOVED***0,***REMOVED***72,***REMOVED***26,***REMOVED***38,***REMOVED***6,***REMOVED***186,***REMOVED***43,***REMOVED***117,***REMOVED***63,***REMOVED***32,***REMOVED***7,***REMOVED***3,***REMOVED***0,***REMOVED***3,***REMOVED***7,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***23,***REMOVED***16,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***95,***REMOVED***7,***REMOVED***3,***REMOVED***38,***REMOVED***17,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***29,***REMOVED***0,***REMOVED***11,***REMOVED***39,***REMOVED***8,***REMOVED***0,***REMOVED***22,***REMOVED***0,***REMOVED***12,***REMOVED***45,***REMOVED***20,***REMOVED***0,***REMOVED***19,***REMOVED***72,***REMOVED***200,***REMOVED***32,***REMOVED***32,***REMOVED***8,***REMOVED***2,***REMOVED***36,***REMOVED***18,***REMOVED***0,***REMOVED***50,***REMOVED***29,***REMOVED***113,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***37,***REMOVED***22,***REMOVED***0,***REMOVED***26,***REMOVED***5,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***31,***REMOVED***15,***REMOVED***0,***REMOVED***328,***REMOVED***18,***REMOVED***16,***REMOVED***0,***REMOVED***2,***REMOVED***12,***REMOVED***2,***REMOVED***33,***REMOVED***125,***REMOVED***0,***REMOVED***80,***REMOVED***921,***REMOVED***103,***REMOVED***110,***REMOVED***18,***REMOVED***195,***REMOVED***2637,***REMOVED***96,***REMOVED***16,***REMOVED***1071,***REMOVED***18,***REMOVED***5,***REMOVED***26,***REMOVED***3994,***REMOVED***6,***REMOVED***582,***REMOVED***6842,***REMOVED***29,***REMOVED***1763,***REMOVED***568,***REMOVED***8,***REMOVED***30,***REMOVED***18,***REMOVED***78,***REMOVED***18,***REMOVED***29,***REMOVED***19,***REMOVED***47,***REMOVED***17,***REMOVED***3,***REMOVED***32,***REMOVED***20,***REMOVED***6,***REMOVED***18,***REMOVED***433,***REMOVED***44,***REMOVED***212,***REMOVED***63,***REMOVED***129,***REMOVED***74,***REMOVED***6,***REMOVED***0,***REMOVED***67,***REMOVED***12,***REMOVED***65,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***29,***REMOVED***6135,***REMOVED***9,***REMOVED***1237,***REMOVED***42,***REMOVED***9,***REMOVED***8936,***REMOVED***3,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***290,***REMOVED***16,***REMOVED***0,***REMOVED***30,***REMOVED***2,***REMOVED***3,***REMOVED***0,***REMOVED***15,***REMOVED***3,***REMOVED***9,***REMOVED***395,***REMOVED***2309,***REMOVED***106,***REMOVED***6,***REMOVED***12,***REMOVED***4,***REMOVED***8,***REMOVED***8,***REMOVED***9,***REMOVED***5991,***REMOVED***84,***REMOVED***2,***REMOVED***70,***REMOVED***2,***REMOVED***1,***REMOVED***3,***REMOVED***0,***REMOVED***3,***REMOVED***1,***REMOVED***3,***REMOVED***3,***REMOVED***2,***REMOVED***11,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***64,***REMOVED***2,***REMOVED***3,***REMOVED***3,***REMOVED***7,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***27,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***4,***REMOVED***2,***REMOVED***0,***REMOVED***4,***REMOVED***6,***REMOVED***2,***REMOVED***339,***REMOVED***3,***REMOVED***24,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***30,***REMOVED***2,***REMOVED***24,***REMOVED***2,***REMOVED***7,***REMOVED***1845,***REMOVED***30,***REMOVED***7,***REMOVED***5,***REMOVED***262,***REMOVED***61,***REMOVED***147,***REMOVED***44,***REMOVED***11,***REMOVED***6,***REMOVED***17,***REMOVED***0,***REMOVED***322,***REMOVED***29,***REMOVED***19,***REMOVED***43,***REMOVED***485,***REMOVED***27,***REMOVED***229,***REMOVED***29,***REMOVED***3,***REMOVED***0,***REMOVED***496,***REMOVED***6,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***14,***REMOVED***2,***REMOVED***196,***REMOVED***60,***REMOVED***67,***REMOVED***8,***REMOVED***0,***REMOVED***1205,***REMOVED***3,***REMOVED***2,***REMOVED***26,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***9,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***7,***REMOVED***0,***REMOVED***5,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***2,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***3,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***9,***REMOVED***2,***REMOVED***16,***REMOVED***6,***REMOVED***2,***REMOVED***2,***REMOVED***4,***REMOVED***2,***REMOVED***16,***REMOVED***4421,***REMOVED***42719,***REMOVED***33,***REMOVED***4153,***REMOVED***7,***REMOVED***221,***REMOVED***3,***REMOVED***5761,***REMOVED***15,***REMOVED***7472,***REMOVED***16,***REMOVED***621,***REMOVED***2467,***REMOVED***541,***REMOVED***1507,***REMOVED***4938,***REMOVED***6,***REMOVED***4191];
const***REMOVED***astralIdentifierCodes***REMOVED***=***REMOVED***[509,***REMOVED***0,***REMOVED***227,***REMOVED***0,***REMOVED***150,***REMOVED***4,***REMOVED***294,***REMOVED***9,***REMOVED***1368,***REMOVED***2,***REMOVED***2,***REMOVED***1,***REMOVED***6,***REMOVED***3,***REMOVED***41,***REMOVED***2,***REMOVED***5,***REMOVED***0,***REMOVED***166,***REMOVED***1,***REMOVED***574,***REMOVED***3,***REMOVED***9,***REMOVED***9,***REMOVED***7,***REMOVED***9,***REMOVED***32,***REMOVED***4,***REMOVED***318,***REMOVED***1,***REMOVED***80,***REMOVED***3,***REMOVED***71,***REMOVED***10,***REMOVED***50,***REMOVED***3,***REMOVED***123,***REMOVED***2,***REMOVED***54,***REMOVED***14,***REMOVED***32,***REMOVED***10,***REMOVED***3,***REMOVED***1,***REMOVED***11,***REMOVED***3,***REMOVED***46,***REMOVED***10,***REMOVED***8,***REMOVED***0,***REMOVED***46,***REMOVED***9,***REMOVED***7,***REMOVED***2,***REMOVED***37,***REMOVED***13,***REMOVED***2,***REMOVED***9,***REMOVED***6,***REMOVED***1,***REMOVED***45,***REMOVED***0,***REMOVED***13,***REMOVED***2,***REMOVED***49,***REMOVED***13,***REMOVED***9,***REMOVED***3,***REMOVED***2,***REMOVED***11,***REMOVED***83,***REMOVED***11,***REMOVED***7,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***158,***REMOVED***11,***REMOVED***6,***REMOVED***9,***REMOVED***7,***REMOVED***3,***REMOVED***56,***REMOVED***1,***REMOVED***2,***REMOVED***6,***REMOVED***3,***REMOVED***1,***REMOVED***3,***REMOVED***2,***REMOVED***10,***REMOVED***0,***REMOVED***11,***REMOVED***1,***REMOVED***3,***REMOVED***6,***REMOVED***4,***REMOVED***4,***REMOVED***68,***REMOVED***8,***REMOVED***2,***REMOVED***0,***REMOVED***3,***REMOVED***0,***REMOVED***2,***REMOVED***3,***REMOVED***2,***REMOVED***4,***REMOVED***2,***REMOVED***0,***REMOVED***15,***REMOVED***1,***REMOVED***83,***REMOVED***17,***REMOVED***10,***REMOVED***9,***REMOVED***5,***REMOVED***0,***REMOVED***82,***REMOVED***19,***REMOVED***13,***REMOVED***9,***REMOVED***214,***REMOVED***6,***REMOVED***3,***REMOVED***8,***REMOVED***28,***REMOVED***1,***REMOVED***83,***REMOVED***16,***REMOVED***16,***REMOVED***9,***REMOVED***82,***REMOVED***12,***REMOVED***9,***REMOVED***9,***REMOVED***7,***REMOVED***19,***REMOVED***58,***REMOVED***14,***REMOVED***5,***REMOVED***9,***REMOVED***243,***REMOVED***14,***REMOVED***166,***REMOVED***9,***REMOVED***71,***REMOVED***5,***REMOVED***2,***REMOVED***1,***REMOVED***3,***REMOVED***3,***REMOVED***2,***REMOVED***0,***REMOVED***2,***REMOVED***1,***REMOVED***13,***REMOVED***9,***REMOVED***120,***REMOVED***6,***REMOVED***3,***REMOVED***6,***REMOVED***4,***REMOVED***0,***REMOVED***29,***REMOVED***9,***REMOVED***41,***REMOVED***6,***REMOVED***2,***REMOVED***3,***REMOVED***9,***REMOVED***0,***REMOVED***10,***REMOVED***10,***REMOVED***47,***REMOVED***15,***REMOVED***343,***REMOVED***9,***REMOVED***54,***REMOVED***7,***REMOVED***2,***REMOVED***7,***REMOVED***17,***REMOVED***9,***REMOVED***57,***REMOVED***21,***REMOVED***2,***REMOVED***13,***REMOVED***123,***REMOVED***5,***REMOVED***4,***REMOVED***0,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***6,***REMOVED***2,***REMOVED***0,***REMOVED***9,***REMOVED***9,***REMOVED***49,***REMOVED***4,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***4,***REMOVED***9,***REMOVED***9,***REMOVED***330,***REMOVED***3,***REMOVED***10,***REMOVED***1,***REMOVED***2,***REMOVED***0,***REMOVED***49,***REMOVED***6,***REMOVED***4,***REMOVED***4,***REMOVED***14,***REMOVED***10,***REMOVED***5350,***REMOVED***0,***REMOVED***7,***REMOVED***14,***REMOVED***11465,***REMOVED***27,***REMOVED***2343,***REMOVED***9,***REMOVED***87,***REMOVED***9,***REMOVED***39,***REMOVED***4,***REMOVED***60,***REMOVED***6,***REMOVED***26,***REMOVED***9,***REMOVED***535,***REMOVED***9,***REMOVED***470,***REMOVED***0,***REMOVED***2,***REMOVED***54,***REMOVED***8,***REMOVED***3,***REMOVED***82,***REMOVED***0,***REMOVED***12,***REMOVED***1,***REMOVED***19628,***REMOVED***1,***REMOVED***4178,***REMOVED***9,***REMOVED***519,***REMOVED***45,***REMOVED***3,***REMOVED***22,***REMOVED***543,***REMOVED***4,***REMOVED***4,***REMOVED***5,***REMOVED***9,***REMOVED***7,***REMOVED***3,***REMOVED***6,***REMOVED***31,***REMOVED***3,***REMOVED***149,***REMOVED***2,***REMOVED***1418,***REMOVED***49,***REMOVED***513,***REMOVED***54,***REMOVED***5,***REMOVED***49,***REMOVED***9,***REMOVED***0,***REMOVED***15,***REMOVED***0,***REMOVED***23,***REMOVED***4,***REMOVED***2,***REMOVED***14,***REMOVED***1361,***REMOVED***6,***REMOVED***2,***REMOVED***16,***REMOVED***3,***REMOVED***6,***REMOVED***2,***REMOVED***1,***REMOVED***2,***REMOVED***4,***REMOVED***101,***REMOVED***0,***REMOVED***161,***REMOVED***6,***REMOVED***10,***REMOVED***9,***REMOVED***357,***REMOVED***0,***REMOVED***62,***REMOVED***13,***REMOVED***499,***REMOVED***13,***REMOVED***245,***REMOVED***1,***REMOVED***2,***REMOVED***9,***REMOVED***726,***REMOVED***6,***REMOVED***110,***REMOVED***6,***REMOVED***6,***REMOVED***9,***REMOVED***4759,***REMOVED***9,***REMOVED***787719,***REMOVED***239];
function***REMOVED***isInAstralSet(code,***REMOVED***set)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***pos***REMOVED***=***REMOVED***0x10000;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***set.length;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i***REMOVED***+=***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***set[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>***REMOVED***code)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***set[i***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>=***REMOVED***code)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***isIdentifierStart(code)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***65)***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***36;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***90)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***97)***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***95;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***122)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***0xffff)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***code***REMOVED***>=***REMOVED***0xaa***REMOVED***&&***REMOVED***nonASCIIidentifierStart.test(String.fromCharCode(code));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isInAstralSet(code,***REMOVED***astralIdentifierStartCodes);
}
function***REMOVED***isIdentifierChar(code)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***48)***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***36;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***58)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***65)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***90)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***97)***REMOVED***return***REMOVED***code***REMOVED***===***REMOVED***95;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***122)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***0xffff)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***code***REMOVED***>=***REMOVED***0xaa***REMOVED***&&***REMOVED***nonASCIIidentifier.test(String.fromCharCode(code));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isInAstralSet(code,***REMOVED***astralIdentifierStartCodes)***REMOVED***||***REMOVED***isInAstralSet(code,***REMOVED***astralIdentifierCodes);
}
const***REMOVED***reservedWords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***keyword:***REMOVED***["break",***REMOVED***"case",***REMOVED***"catch",***REMOVED***"continue",***REMOVED***"debugger",***REMOVED***"default",***REMOVED***"do",***REMOVED***"else",***REMOVED***"finally",***REMOVED***"for",***REMOVED***"function",***REMOVED***"if",***REMOVED***"return",***REMOVED***"switch",***REMOVED***"throw",***REMOVED***"try",***REMOVED***"var",***REMOVED***"const",***REMOVED***"while",***REMOVED***"with",***REMOVED***"new",***REMOVED***"this",***REMOVED***"super",***REMOVED***"class",***REMOVED***"extends",***REMOVED***"export",***REMOVED***"import",***REMOVED***"null",***REMOVED***"true",***REMOVED***"false",***REMOVED***"in",***REMOVED***"instanceof",***REMOVED***"typeof",***REMOVED***"void",***REMOVED***"delete"],
***REMOVED******REMOVED***strict:***REMOVED***["implements",***REMOVED***"interface",***REMOVED***"let",***REMOVED***"package",***REMOVED***"private",***REMOVED***"protected",***REMOVED***"public",***REMOVED***"static",***REMOVED***"yield"],
***REMOVED******REMOVED***strictBind:***REMOVED***["eval",***REMOVED***"arguments"]
};
const***REMOVED***keywords***REMOVED***=***REMOVED***new***REMOVED***Set(reservedWords.keyword);
const***REMOVED***reservedWordsStrictSet***REMOVED***=***REMOVED***new***REMOVED***Set(reservedWords.strict);
const***REMOVED***reservedWordsStrictBindSet***REMOVED***=***REMOVED***new***REMOVED***Set(reservedWords.strictBind);
function***REMOVED***isReservedWord(word,***REMOVED***inModule)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***inModule***REMOVED***&&***REMOVED***word***REMOVED***===***REMOVED***"await"***REMOVED***||***REMOVED***word***REMOVED***===***REMOVED***"enum";
}
function***REMOVED***isStrictReservedWord(word,***REMOVED***inModule)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isReservedWord(word,***REMOVED***inModule)***REMOVED***||***REMOVED***reservedWordsStrictSet.has(word);
}
function***REMOVED***isStrictBindOnlyReservedWord(word)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***reservedWordsStrictBindSet.has(word);
}
function***REMOVED***isStrictBindReservedWord(word,***REMOVED***inModule)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isStrictReservedWord(word,***REMOVED***inModule)***REMOVED***||***REMOVED***isStrictBindOnlyReservedWord(word);
}
function***REMOVED***isKeyword(word)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***keywords.has(word);
}
function***REMOVED***isIteratorStart(current,***REMOVED***next,***REMOVED***next2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***current***REMOVED***===***REMOVED***64***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***64***REMOVED***&&***REMOVED***isIdentifierStart(next2);
}
const***REMOVED***reservedWordLikeSet***REMOVED***=***REMOVED***new***REMOVED***Set(["break",***REMOVED***"case",***REMOVED***"catch",***REMOVED***"continue",***REMOVED***"debugger",***REMOVED***"default",***REMOVED***"do",***REMOVED***"else",***REMOVED***"finally",***REMOVED***"for",***REMOVED***"function",***REMOVED***"if",***REMOVED***"return",***REMOVED***"switch",***REMOVED***"throw",***REMOVED***"try",***REMOVED***"var",***REMOVED***"const",***REMOVED***"while",***REMOVED***"with",***REMOVED***"new",***REMOVED***"this",***REMOVED***"super",***REMOVED***"class",***REMOVED***"extends",***REMOVED***"export",***REMOVED***"import",***REMOVED***"null",***REMOVED***"true",***REMOVED***"false",***REMOVED***"in",***REMOVED***"instanceof",***REMOVED***"typeof",***REMOVED***"void",***REMOVED***"delete",***REMOVED***"implements",***REMOVED***"interface",***REMOVED***"let",***REMOVED***"package",***REMOVED***"private",***REMOVED***"protected",***REMOVED***"public",***REMOVED***"static",***REMOVED***"yield",***REMOVED***"eval",***REMOVED***"arguments",***REMOVED***"enum",***REMOVED***"await"]);
function***REMOVED***canBeReservedWord(word)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***reservedWordLikeSet.has(word);
}
class***REMOVED***Scope***REMOVED***{
***REMOVED******REMOVED***constructor(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.names***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***this.firstLexicalName***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***flags;
***REMOVED******REMOVED***}
}
class***REMOVED***ScopeHandler***REMOVED***{
***REMOVED******REMOVED***constructor(parser,***REMOVED***inModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scopeStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.inModule***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedExports***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***parser;
***REMOVED******REMOVED******REMOVED******REMOVED***this.inModule***REMOVED***=***REMOVED***inModule;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inTopLevel()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentScope().flags***REMOVED***&***REMOVED***1)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inFunction()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentVarScopeFlags()***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***allowSuper()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentThisScopeFlags()***REMOVED***&***REMOVED***16)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***allowDirectSuper()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentThisScopeFlags()***REMOVED***&***REMOVED***32)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***allowNewTarget()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentThisScopeFlags()***REMOVED***&***REMOVED***512)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inClass()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentThisScopeFlags()***REMOVED***&***REMOVED***64)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inClassAndNotInNonArrowFunction()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***this.currentThisScopeFlags();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(flags***REMOVED***&***REMOVED***64)***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***(flags***REMOVED***&***REMOVED***2)***REMOVED***===***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inStaticBlock()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***(1667***REMOVED***|***REMOVED***64))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inNonArrowFunction()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentThisScopeFlags()***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inBareCaseStatement()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentScope().flags***REMOVED***&***REMOVED***256)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***treatFunctionsAsVar()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.treatFunctionsAsVarInScope(this.currentScope());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***createScope(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Scope(flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***enter(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.scopeStack.push(this.createScope(flags));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***exit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***this.scopeStack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scope.flags;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***treatFunctionsAsVarInScope(scope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!(scope.flags***REMOVED***&***REMOVED***(2***REMOVED***|***REMOVED***128)***REMOVED***||***REMOVED***!this.parser.inModule***REMOVED***&&***REMOVED***scope.flags***REMOVED***&***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declareName(name,***REMOVED***bindingType,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***scope***REMOVED***=***REMOVED***this.currentScope();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***8***REMOVED***||***REMOVED***bindingType***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkRedeclarationInScope(scope,***REMOVED***name,***REMOVED***bindingType,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***scope.names.get(name)***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type***REMOVED***|***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!scope.firstLexicalName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.firstLexicalName***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type***REMOVED***|***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.names.set(name,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeExportDefined(scope,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***--i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkRedeclarationInScope(scope,***REMOVED***name,***REMOVED***bindingType,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.names.set(name,***REMOVED***(scope.names.get(name)***REMOVED***||***REMOVED***0)***REMOVED***|***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeExportDefined(scope,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.flags***REMOVED***&***REMOVED***1667)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parser.inModule***REMOVED***&&***REMOVED***scope.flags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedExports.delete(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeExportDefined(scope,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parser.inModule***REMOVED***&&***REMOVED***scope.flags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedExports.delete(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkRedeclarationInScope(scope,***REMOVED***name,***REMOVED***bindingType,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isRedeclaredInScope(scope,***REMOVED***name,***REMOVED***bindingType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(Errors.VarRedeclaration,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isRedeclaredInScope(scope,***REMOVED***name,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(bindingType***REMOVED***&***REMOVED***1))***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scope.names.has(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***scope.names.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(type***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***!this.treatFunctionsAsVarInScope(scope)***REMOVED***&&***REMOVED***(type***REMOVED***&***REMOVED***1)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(type***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!(scope.flags***REMOVED***&***REMOVED***8***REMOVED***&&***REMOVED***scope.firstLexicalName***REMOVED***===***REMOVED***name)***REMOVED***||***REMOVED***!this.treatFunctionsAsVarInScope(scope)***REMOVED***&&***REMOVED***(type***REMOVED***&***REMOVED***4)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkLocalExport(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***topLevelScope***REMOVED***=***REMOVED***this.scopeStack[0];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!topLevelScope.names.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedExports.set(name,***REMOVED***id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***currentScope()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.scopeStack[this.scopeStack.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***currentVarScopeFlags()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***1667)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***flags;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***currentThisScopeFlags()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.scopeStack.length***REMOVED***-***REMOVED***1;;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***(1667***REMOVED***|***REMOVED***64)***REMOVED***&&***REMOVED***!(flags***REMOVED***&***REMOVED***4))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***flags;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
class***REMOVED***FlowScope***REMOVED***extends***REMOVED***Scope***REMOVED***{
***REMOVED******REMOVED***constructor(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***this.declareFunctions***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED***}
}
class***REMOVED***FlowScopeHandler***REMOVED***extends***REMOVED***ScopeHandler***REMOVED***{
***REMOVED******REMOVED***createScope(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***FlowScope(flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declareName(name,***REMOVED***bindingType,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***this.currentScope();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***2048)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkRedeclarationInScope(scope,***REMOVED***name,***REMOVED***bindingType,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeExportDefined(scope,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.declareFunctions.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.declareName(name,***REMOVED***bindingType,***REMOVED***loc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isRedeclaredInScope(scope,***REMOVED***name,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.isRedeclaredInScope(scope,***REMOVED***name,***REMOVED***bindingType))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***2048***REMOVED***&&***REMOVED***!scope.declareFunctions.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***scope.names.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(type***REMOVED***&***REMOVED***4)***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***(type***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkLocalExport(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.scopeStack[0].declareFunctions.has(id.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.checkLocalExport(id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
const***REMOVED***reservedTypes***REMOVED***=***REMOVED***new***REMOVED***Set(["_",***REMOVED***"any",***REMOVED***"bool",***REMOVED***"boolean",***REMOVED***"empty",***REMOVED***"extends",***REMOVED***"false",***REMOVED***"interface",***REMOVED***"mixed",***REMOVED***"null",***REMOVED***"number",***REMOVED***"static",***REMOVED***"string",***REMOVED***"true",***REMOVED***"typeof",***REMOVED***"void"]);
const***REMOVED***FlowErrors***REMOVED***=***REMOVED***ParseErrorEnum`flow`({
***REMOVED******REMOVED***AmbiguousConditionalArrow:***REMOVED***"Ambiguous***REMOVED***expression:***REMOVED***wrap***REMOVED***the***REMOVED***arrow***REMOVED***functions***REMOVED***in***REMOVED***parentheses***REMOVED***to***REMOVED***disambiguate.",
***REMOVED******REMOVED***AmbiguousDeclareModuleKind:***REMOVED***"Found***REMOVED***both***REMOVED***`declare***REMOVED***module.exports`***REMOVED***and***REMOVED***`declare***REMOVED***export`***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***module.***REMOVED***Modules***REMOVED***can***REMOVED***only***REMOVED***have***REMOVED***1***REMOVED***since***REMOVED***they***REMOVED***are***REMOVED***either***REMOVED***an***REMOVED***ES***REMOVED***module***REMOVED***or***REMOVED***they***REMOVED***are***REMOVED***a***REMOVED***CommonJS***REMOVED***module.",
***REMOVED******REMOVED***AssignReservedType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***reservedType
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Cannot***REMOVED***overwrite***REMOVED***reserved***REMOVED***type***REMOVED***${reservedType}.`,
***REMOVED******REMOVED***DeclareClassElement:***REMOVED***"The***REMOVED***`declare`***REMOVED***modifier***REMOVED***can***REMOVED***only***REMOVED***appear***REMOVED***on***REMOVED***class***REMOVED***fields.",
***REMOVED******REMOVED***DeclareClassFieldInitializer:***REMOVED***"Initializers***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***fields***REMOVED***with***REMOVED***the***REMOVED***`declare`***REMOVED***modifier.",
***REMOVED******REMOVED***DuplicateDeclareModuleExports:***REMOVED***"Duplicate***REMOVED***`declare***REMOVED***module.exports`***REMOVED***statement.",
***REMOVED******REMOVED***EnumBooleanMemberNotInitialized:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Boolean***REMOVED***enum***REMOVED***members***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***initialized.***REMOVED***Use***REMOVED***either***REMOVED***\`${memberName}***REMOVED***=***REMOVED***true,\`***REMOVED***or***REMOVED***\`${memberName}***REMOVED***=***REMOVED***false,\`***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumDuplicateMemberName:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Enum***REMOVED***member***REMOVED***names***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***unique,***REMOVED***but***REMOVED***the***REMOVED***name***REMOVED***\`${memberName}\`***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***used***REMOVED***before***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumInconsistentMemberValues:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Enum***REMOVED***\`${enumName}\`***REMOVED***has***REMOVED***inconsistent***REMOVED***member***REMOVED***initializers.***REMOVED***Either***REMOVED***use***REMOVED***no***REMOVED***initializers,***REMOVED***or***REMOVED***consistently***REMOVED***use***REMOVED***literals***REMOVED***(either***REMOVED***booleans,***REMOVED***numbers,***REMOVED***or***REMOVED***strings)***REMOVED***for***REMOVED***all***REMOVED***member***REMOVED***initializers.`,
***REMOVED******REMOVED***EnumInvalidExplicitType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***invalidEnumType,
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Enum***REMOVED***type***REMOVED***\`${invalidEnumType}\`***REMOVED***is***REMOVED***not***REMOVED***valid.***REMOVED***Use***REMOVED***one***REMOVED***of***REMOVED***\`boolean\`,***REMOVED***\`number\`,***REMOVED***\`string\`,***REMOVED***or***REMOVED***\`symbol\`***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumInvalidExplicitTypeUnknownSupplied:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Supplied***REMOVED***enum***REMOVED***type***REMOVED***is***REMOVED***not***REMOVED***valid.***REMOVED***Use***REMOVED***one***REMOVED***of***REMOVED***\`boolean\`,***REMOVED***\`number\`,***REMOVED***\`string\`,***REMOVED***or***REMOVED***\`symbol\`***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumInvalidMemberInitializerPrimaryType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED***explicitType
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Enum***REMOVED***\`${enumName}\`***REMOVED***has***REMOVED***type***REMOVED***\`${explicitType}\`,***REMOVED***so***REMOVED***the***REMOVED***initializer***REMOVED***of***REMOVED***\`${memberName}\`***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***${explicitType}***REMOVED***literal.`,
***REMOVED******REMOVED***EnumInvalidMemberInitializerSymbolType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***memberName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Symbol***REMOVED***enum***REMOVED***members***REMOVED***cannot***REMOVED***be***REMOVED***initialized.***REMOVED***Use***REMOVED***\`${memberName},\`***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumInvalidMemberInitializerUnknownType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***memberName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`The***REMOVED***enum***REMOVED***member***REMOVED***initializer***REMOVED***for***REMOVED***\`${memberName}\`***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***literal***REMOVED***(either***REMOVED***a***REMOVED***boolean,***REMOVED***number,***REMOVED***or***REMOVED***string)***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumInvalidMemberName:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED***suggestion
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Enum***REMOVED***member***REMOVED***names***REMOVED***cannot***REMOVED***start***REMOVED***with***REMOVED***lowercase***REMOVED***'a'***REMOVED***through***REMOVED***'z'.***REMOVED***Instead***REMOVED***of***REMOVED***using***REMOVED***\`${memberName}\`,***REMOVED***consider***REMOVED***using***REMOVED***\`${suggestion}\`,***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumNumberMemberNotInitialized:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***memberName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Number***REMOVED***enum***REMOVED***members***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***initialized,***REMOVED***e.g.***REMOVED***\`${memberName}***REMOVED***=***REMOVED***1\`***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***EnumStringMemberInconsistentlyInitialized:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`String***REMOVED***enum***REMOVED***members***REMOVED***need***REMOVED***to***REMOVED***consistently***REMOVED***either***REMOVED***all***REMOVED***use***REMOVED***initializers,***REMOVED***or***REMOVED***use***REMOVED***no***REMOVED***initializers,***REMOVED***in***REMOVED***enum***REMOVED***\`${enumName}\`.`,
***REMOVED******REMOVED***GetterMayNotHaveThisParam:***REMOVED***"A***REMOVED***getter***REMOVED***cannot***REMOVED***have***REMOVED***a***REMOVED***`this`***REMOVED***parameter.",
***REMOVED******REMOVED***ImportReflectionHasImportType:***REMOVED***"An***REMOVED***`import***REMOVED***module`***REMOVED***declaration***REMOVED***can***REMOVED***not***REMOVED***use***REMOVED***`type`***REMOVED***or***REMOVED***`typeof`***REMOVED***keyword.",
***REMOVED******REMOVED***ImportTypeShorthandOnlyInPureImport:***REMOVED***"The***REMOVED***`type`***REMOVED***and***REMOVED***`typeof`***REMOVED***keywords***REMOVED***on***REMOVED***named***REMOVED***imports***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***regular***REMOVED***`import`***REMOVED***statements.***REMOVED***It***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***`import***REMOVED***type`***REMOVED***or***REMOVED***`import***REMOVED***typeof`***REMOVED***statements.",
***REMOVED******REMOVED***InexactInsideExact:***REMOVED***"Explicit***REMOVED***inexact***REMOVED***syntax***REMOVED***cannot***REMOVED***appear***REMOVED***inside***REMOVED***an***REMOVED***explicit***REMOVED***exact***REMOVED***object***REMOVED***type.",
***REMOVED******REMOVED***InexactInsideNonObject:***REMOVED***"Explicit***REMOVED***inexact***REMOVED***syntax***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***class***REMOVED***or***REMOVED***interface***REMOVED***definitions.",
***REMOVED******REMOVED***InexactVariance:***REMOVED***"Explicit***REMOVED***inexact***REMOVED***syntax***REMOVED***cannot***REMOVED***have***REMOVED***variance.",
***REMOVED******REMOVED***InvalidNonTypeImportInDeclareModule:***REMOVED***"Imports***REMOVED***within***REMOVED***a***REMOVED***`declare***REMOVED***module`***REMOVED***body***REMOVED***must***REMOVED***always***REMOVED***be***REMOVED***`import***REMOVED***type`***REMOVED***or***REMOVED***`import***REMOVED***typeof`.",
***REMOVED******REMOVED***MissingTypeParamDefault:***REMOVED***"Type***REMOVED***parameter***REMOVED***declaration***REMOVED***needs***REMOVED***a***REMOVED***default,***REMOVED***since***REMOVED***a***REMOVED***preceding***REMOVED***type***REMOVED***parameter***REMOVED***declaration***REMOVED***has***REMOVED***a***REMOVED***default.",
***REMOVED******REMOVED***NestedDeclareModule:***REMOVED***"`declare***REMOVED***module`***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***inside***REMOVED***another***REMOVED***`declare***REMOVED***module`.",
***REMOVED******REMOVED***NestedFlowComment:***REMOVED***"Cannot***REMOVED***have***REMOVED***a***REMOVED***flow***REMOVED***comment***REMOVED***inside***REMOVED***another***REMOVED***flow***REMOVED***comment.",
***REMOVED******REMOVED***PatternIsOptional:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***"A***REMOVED***binding***REMOVED***pattern***REMOVED***parameter***REMOVED***cannot***REMOVED***be***REMOVED***optional***REMOVED***in***REMOVED***an***REMOVED***implementation***REMOVED***signature."
***REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***reasonCode:***REMOVED***"OptionalBindingPattern"
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***SetterMayNotHaveThisParam:***REMOVED***"A***REMOVED***setter***REMOVED***cannot***REMOVED***have***REMOVED***a***REMOVED***`this`***REMOVED***parameter.",
***REMOVED******REMOVED***SpreadVariance:***REMOVED***"Spread***REMOVED***properties***REMOVED***cannot***REMOVED***have***REMOVED***variance.",
***REMOVED******REMOVED***ThisParamAnnotationRequired:***REMOVED***"A***REMOVED***type***REMOVED***annotation***REMOVED***is***REMOVED***required***REMOVED***for***REMOVED***the***REMOVED***`this`***REMOVED***parameter.",
***REMOVED******REMOVED***ThisParamBannedInConstructor:***REMOVED***"Constructors***REMOVED***cannot***REMOVED***have***REMOVED***a***REMOVED***`this`***REMOVED***parameter;***REMOVED***constructors***REMOVED***don't***REMOVED***bind***REMOVED***`this`***REMOVED***like***REMOVED***other***REMOVED***functions.",
***REMOVED******REMOVED***ThisParamMayNotBeOptional:***REMOVED***"The***REMOVED***`this`***REMOVED***parameter***REMOVED***cannot***REMOVED***be***REMOVED***optional.",
***REMOVED******REMOVED***ThisParamMustBeFirst:***REMOVED***"The***REMOVED***`this`***REMOVED***parameter***REMOVED***must***REMOVED***be***REMOVED***the***REMOVED***first***REMOVED***function***REMOVED***parameter.",
***REMOVED******REMOVED***ThisParamNoDefault:***REMOVED***"The***REMOVED***`this`***REMOVED***parameter***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***default***REMOVED***value.",
***REMOVED******REMOVED***TypeBeforeInitializer:***REMOVED***"Type***REMOVED***annotations***REMOVED***must***REMOVED***come***REMOVED***before***REMOVED***default***REMOVED***assignments,***REMOVED***e.g.***REMOVED***instead***REMOVED***of***REMOVED***`age***REMOVED***=***REMOVED***25:***REMOVED***number`***REMOVED***use***REMOVED***`age:***REMOVED***number***REMOVED***=***REMOVED***25`.",
***REMOVED******REMOVED***TypeCastInPattern:***REMOVED***"The***REMOVED***type***REMOVED***cast***REMOVED***expression***REMOVED***is***REMOVED***expected***REMOVED***to***REMOVED***be***REMOVED***wrapped***REMOVED***with***REMOVED***parenthesis.",
***REMOVED******REMOVED***UnexpectedExplicitInexactInObject:***REMOVED***"Explicit***REMOVED***inexact***REMOVED***syntax***REMOVED***must***REMOVED***appear***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***an***REMOVED***inexact***REMOVED***object.",
***REMOVED******REMOVED***UnexpectedReservedType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***reservedType
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***reserved***REMOVED***type***REMOVED***${reservedType}.`,
***REMOVED******REMOVED***UnexpectedReservedUnderscore:***REMOVED***"`_`***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***as***REMOVED***a***REMOVED***type***REMOVED***argument***REMOVED***to***REMOVED***call***REMOVED***or***REMOVED***new.",
***REMOVED******REMOVED***UnexpectedSpaceBetweenModuloChecks:***REMOVED***"Spaces***REMOVED***between***REMOVED***`%`***REMOVED***and***REMOVED***`checks`***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***here.",
***REMOVED******REMOVED***UnexpectedSpreadType:***REMOVED***"Spread***REMOVED***operator***REMOVED***cannot***REMOVED***appear***REMOVED***in***REMOVED***class***REMOVED***or***REMOVED***interface***REMOVED***definitions.",
***REMOVED******REMOVED***UnexpectedSubtractionOperand:***REMOVED***'Unexpected***REMOVED***token,***REMOVED***expected***REMOVED***"number"***REMOVED***or***REMOVED***"bigint".',
***REMOVED******REMOVED***UnexpectedTokenAfterTypeParameter:***REMOVED***"Expected***REMOVED***an***REMOVED***arrow***REMOVED***function***REMOVED***after***REMOVED***this***REMOVED***type***REMOVED***parameter***REMOVED***declaration.",
***REMOVED******REMOVED***UnexpectedTypeParameterBeforeAsyncArrowFunction:***REMOVED***"Type***REMOVED***parameters***REMOVED***must***REMOVED***come***REMOVED***after***REMOVED***the***REMOVED***async***REMOVED***keyword,***REMOVED***e.g.***REMOVED***instead***REMOVED***of***REMOVED***`<T>***REMOVED***async***REMOVED***()***REMOVED***=>***REMOVED***{}`,***REMOVED***use***REMOVED***`async***REMOVED***<T>()***REMOVED***=>***REMOVED***{}`.",
***REMOVED******REMOVED***UnsupportedDeclareExportKind:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***unsupportedExportKind,
***REMOVED******REMOVED******REMOVED******REMOVED***suggestion
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`\`declare***REMOVED***export***REMOVED***${unsupportedExportKind}\`***REMOVED***is***REMOVED***not***REMOVED***supported.***REMOVED***Use***REMOVED***\`${suggestion}\`***REMOVED***instead.`,
***REMOVED******REMOVED***UnsupportedStatementInDeclareModule:***REMOVED***"Only***REMOVED***declares***REMOVED***and***REMOVED***type***REMOVED***imports***REMOVED***are***REMOVED***allowed***REMOVED***inside***REMOVED***declare***REMOVED***module.",
***REMOVED******REMOVED***UnterminatedFlowComment:***REMOVED***"Unterminated***REMOVED***flow-comment."
});
function***REMOVED***isEsModuleType(bodyElement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***bodyElement.type***REMOVED***===***REMOVED***"DeclareExportAllDeclaration"***REMOVED***||***REMOVED***bodyElement.type***REMOVED***===***REMOVED***"DeclareExportDeclaration"***REMOVED***&&***REMOVED***(!bodyElement.declaration***REMOVED***||***REMOVED***bodyElement.declaration.type***REMOVED***!==***REMOVED***"TypeAlias"***REMOVED***&&***REMOVED***bodyElement.declaration.type***REMOVED***!==***REMOVED***"InterfaceDeclaration");
}
function***REMOVED***hasTypeImportKind(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***node.importKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***node.importKind***REMOVED***===***REMOVED***"typeof";
}
const***REMOVED***exportSuggestions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***const:***REMOVED***"declare***REMOVED***export***REMOVED***var",
***REMOVED******REMOVED***let:***REMOVED***"declare***REMOVED***export***REMOVED***var",
***REMOVED******REMOVED***type:***REMOVED***"export***REMOVED***type",
***REMOVED******REMOVED***interface:***REMOVED***"export***REMOVED***interface"
};
function***REMOVED***partition(list,***REMOVED***test)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***list1***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***list2***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***list.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***(test(list[i],***REMOVED***i,***REMOVED***list)***REMOVED***?***REMOVED***list1***REMOVED***:***REMOVED***list2).push(list[i]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[list1,***REMOVED***list2];
}
const***REMOVED***FLOW_PRAGMA_REGEX***REMOVED***=***REMOVED***/\*?\s*@((?:no)?flow)\b/;
var***REMOVED***flow***REMOVED***=***REMOVED***superClass***REMOVED***=>***REMOVED***class***REMOVED***FlowParserMixin***REMOVED***extends***REMOVED***superClass***REMOVED***{
***REMOVED******REMOVED***constructor(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***this.flowPragma***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getScopeHandler()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***FlowScopeHandler;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseTypes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getPluginOption("flow",***REMOVED***"all")***REMOVED***||***REMOVED***this.flowPragma***REMOVED***===***REMOVED***"flow";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishToken(type,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***!==***REMOVED***134***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***13***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***28)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flowPragma***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowPragma***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.finishToken(type,***REMOVED***val);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***addComment(comment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flowPragma***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***FLOW_PRAGMA_REGEX.exec(comment.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matches)***REMOVED***;else***REMOVED***if***REMOVED***(matches[1]***REMOVED***===***REMOVED***"flow")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowPragma***REMOVED***=***REMOVED***"flow";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(matches[1]***REMOVED***===***REMOVED***"noflow")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowPragma***REMOVED***=***REMOVED***"noflow";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Unexpected***REMOVED***flow***REMOVED***pragma");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.addComment(comment);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeInitialiser(tok)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(tok***REMOVED***||***REMOVED***14);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParsePredicate()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduloLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(110);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.lastTokStartLoc.index***REMOVED***>***REMOVED***moduloLoc.index***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks,***REMOVED***moduloLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***super.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclaredPredicate");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"InferredPredicate");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeAndPredicateInitialiser()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***predicate***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(54))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***predicate***REMOVED***=***REMOVED***this.flowParsePredicate();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(54))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***predicate***REMOVED***=***REMOVED***this.flowParsePredicate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[type,***REMOVED***predicate];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareClass(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.flowParseInterfaceish(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareClass");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareFunction(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeContainer***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeNode.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeNode.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tmp***REMOVED***=***REMOVED***this.flowParseFunctionTypeParams();
***REMOVED******REMOVED******REMOVED******REMOVED***typeNode.params***REMOVED***=***REMOVED***tmp.params;
***REMOVED******REMOVED******REMOVED******REMOVED***typeNode.rest***REMOVED***=***REMOVED***tmp.rest;
***REMOVED******REMOVED******REMOVED******REMOVED***typeNode.this***REMOVED***=***REMOVED***tmp._this;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***[typeNode.returnType,***REMOVED***node.predicate]***REMOVED***=***REMOVED***this.flowParseTypeAndPredicateInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***typeContainer.typeAnnotation***REMOVED***=***REMOVED***this.finishNode(typeNode,***REMOVED***"FunctionTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED***id.typeAnnotation***REMOVED***=***REMOVED***this.finishNode(typeContainer,***REMOVED***"TypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(id);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(node.id.name,***REMOVED***2048,***REMOVED***node.id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareFunction");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclare(node,***REMOVED***insideModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(80))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareClass(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(68))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareFunction(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(74))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareVariable(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eatContextual(127))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareModuleExports(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(insideModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.NestedDeclareModule,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareModule(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(130))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareTypeAlias(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(131))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareOpaqueType(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareInterface(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(82))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclareExportDeclaration(node,***REMOVED***insideModule);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareVariable(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseTypeAnnotatableIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(node.id.name,***REMOVED***5,***REMOVED***node.id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareVariable");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareModule(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***super.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bodyNode***REMOVED***=***REMOVED***node.body***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***bodyNode.body***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bodyNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(83))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(130)***REMOVED***&&***REMOVED***!this.match(87))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseImport(bodyNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(125,***REMOVED***FlowErrors.UnsupportedStatementInDeclareModule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bodyNode***REMOVED***=***REMOVED***this.flowParseDeclare(bodyNode,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body.push(bodyNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishNode(bodyNode,***REMOVED***"BlockStatement");
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***kind***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasModuleExport***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***body.forEach(bodyElement***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isEsModuleType(bodyElement))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"CommonJS")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.AmbiguousDeclareModuleKind,***REMOVED***bodyElement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***"ES";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(bodyElement.type***REMOVED***===***REMOVED***"DeclareModuleExports")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasModuleExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.DuplicateDeclareModuleExports,***REMOVED***bodyElement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"ES")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.AmbiguousDeclareModuleKind,***REMOVED***bodyElement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***"CommonJS";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasModuleExport***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***kind***REMOVED***||***REMOVED***"CommonJS";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareModule");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareExportDeclaration(node,***REMOVED***insideModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(82);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(65))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(68)***REMOVED***||***REMOVED***this.match(80))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.flowParseDeclare(this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.default***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareExportDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(75)***REMOVED***||***REMOVED***this.isLet()***REMOVED***||***REMOVED***(this.isContextual(130)***REMOVED***||***REMOVED***this.isContextual(129))***REMOVED***&&***REMOVED***!insideModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***label***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(FlowErrors.UnsupportedDeclareExportKind,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unsupportedExportKind:***REMOVED***label,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***suggestion:***REMOVED***exportSuggestions[label]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(74)***REMOVED***||***REMOVED***this.match(68)***REMOVED***||***REMOVED***this.match(80)***REMOVED***||***REMOVED***this.isContextual(131))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.flowParseDeclare(this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.default***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareExportDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(55)***REMOVED***||***REMOVED***this.match(5)***REMOVED***||***REMOVED***this.isContextual(129)***REMOVED***||***REMOVED***this.isContextual(130)***REMOVED***||***REMOVED***this.isContextual(131))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.parseExport(node,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.default***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.exportKind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.castNodeTo(node,***REMOVED***"DeclareExportDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.castNodeTo(node,***REMOVED***"DeclareExportAllDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareModuleExports(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(111);
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareModuleExports");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareTypeAlias(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finished***REMOVED***=***REMOVED***this.flowParseTypeAlias(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(finished,***REMOVED***"DeclareTypeAlias");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finished;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareOpaqueType(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finished***REMOVED***=***REMOVED***this.flowParseOpaqueType(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(finished,***REMOVED***"DeclareOpaqueType");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finished;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseDeclareInterface(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.flowParseInterfaceish(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DeclareInterface");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseInterfaceish(node,***REMOVED***isClass)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseRestrictedIdentifier(!isClass,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(node.id.name,***REMOVED***isClass***REMOVED***?***REMOVED***17***REMOVED***:***REMOVED***8201,***REMOVED***node.id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.extends***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(81))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.extends.push(this.flowParseInterfaceExtends());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(!isClass***REMOVED***&&***REMOVED***this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isClass)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.implements***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.mixins***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(117))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.mixins.push(this.flowParseInterfaceExtends());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(113))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.implements.push(this.flowParseInterfaceExtends());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.flowParseObjectType({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStatic:***REMOVED***isClass,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowExact:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowSpread:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowProto:***REMOVED***isClass,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowInexact:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseInterfaceExtends()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseQualifiedTypeIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiation();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"InterfaceExtends");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseInterface(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flowParseInterfaceish(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"InterfaceDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkNotUnderscore(word)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(word***REMOVED***===***REMOVED***"_")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.UnexpectedReservedUnderscore,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkReservedType(word,***REMOVED***startLoc,***REMOVED***declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!reservedTypes.has(word))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(declaration***REMOVED***?***REMOVED***FlowErrors.AssignReservedType***REMOVED***:***REMOVED***FlowErrors.UnexpectedReservedType,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedType:***REMOVED***word
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseRestrictedIdentifier(liberal,***REMOVED***declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedType(this.state.value,***REMOVED***this.state.startLoc,***REMOVED***declaration);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseIdentifier(liberal);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeAlias(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseRestrictedIdentifier(false,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(node.id.name,***REMOVED***8201,***REMOVED***node.id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.flowParseTypeInitialiser(29);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeAlias");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseOpaqueType(node,***REMOVED***declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(130);
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseRestrictedIdentifier(true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(node.id.name,***REMOVED***8201,***REMOVED***node.id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.supertype***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.supertype***REMOVED***=***REMOVED***this.flowParseTypeInitialiser(14);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.impltype***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.impltype***REMOVED***=***REMOVED***this.flowParseTypeInitialiser(29);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"OpaqueType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeParameter(requireDefault***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodeStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variance***REMOVED***=***REMOVED***this.flowParseVariance();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ident***REMOVED***=***REMOVED***this.flowParseTypeAnnotatableIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***ident.name;
***REMOVED******REMOVED******REMOVED******REMOVED***node.variance***REMOVED***=***REMOVED***variance;
***REMOVED******REMOVED******REMOVED******REMOVED***node.bound***REMOVED***=***REMOVED***ident.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.eat(29);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.default***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requireDefault)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.MissingTypeParamDefault,***REMOVED***nodeStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeParameter");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeParameterDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(143))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***defaultRequired***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameter***REMOVED***=***REMOVED***this.flowParseTypeParameter(defaultRequired);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params.push(typeParameter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameter.default)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultRequired***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(48))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(!this.match(48));
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(48);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeParameterDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowInTopLevelContext(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.curContext()***REMOVED***!==***REMOVED***types.brace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldContext***REMOVED***=***REMOVED***this.state.context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.context***REMOVED***=***REMOVED***[oldContext[0]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.context***REMOVED***=***REMOVED***oldContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeParameterInstantiationInExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.reScan_lt()***REMOVED***!==***REMOVED***47)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseTypeParameterInstantiation();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeParameterInstantiation()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.flowInTopLevelContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(47);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldNoAnonFunctionType***REMOVED***=***REMOVED***this.state.noAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(48))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params.push(this.flowParseType());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(48))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***oldNoAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.inType***REMOVED***&&***REMOVED***this.curContext()***REMOVED***===***REMOVED***types.brace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reScan_lt_gt();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(48);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeParameterInstantiation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeParameterInstantiationCallOrNew()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.reScan_lt()***REMOVED***!==***REMOVED***47)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(47);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(48))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params.push(this.flowParseTypeOrImplicitInstantiation());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(48))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(48);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeParameterInstantiation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseInterfaceType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(129);
***REMOVED******REMOVED******REMOVED******REMOVED***node.extends***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(81))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.extends.push(this.flowParseInterfaceExtends());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.flowParseObjectType({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStatic:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowExact:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowSpread:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowProto:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowInexact:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"InterfaceTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectPropertyKey()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(135)***REMOVED***||***REMOVED***this.match(134)***REMOVED***?***REMOVED***super.parseExprAtom()***REMOVED***:***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectTypeIndexer(node,***REMOVED***isStatic,***REMOVED***variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.static***REMOVED***=***REMOVED***isStatic;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lookahead().type***REMOVED***===***REMOVED***14)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseObjectPropertyKey();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***node.variance***REMOVED***=***REMOVED***variance;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectTypeIndexer");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectTypeInternalSlot(node,***REMOVED***isStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.static***REMOVED***=***REMOVED***isStatic;
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseObjectPropertyKey();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.method***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.method***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectTypeInternalSlot");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectTypeMethodish(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***node.rest***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***node.this***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.this***REMOVED***=***REMOVED***this.flowParseFunctionTypeParam(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.this.name***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(11)***REMOVED***&&***REMOVED***!this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params.push(this.flowParseFunctionTypeParam(false));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rest***REMOVED***=***REMOVED***this.flowParseFunctionTypeParam(false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectTypeCallProperty(node,***REMOVED***isStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valueNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.static***REMOVED***=***REMOVED***isStatic;
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.flowParseObjectTypeMethodish(valueNode);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectTypeCallProperty");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectType({
***REMOVED******REMOVED******REMOVED******REMOVED***allowStatic,
***REMOVED******REMOVED******REMOVED******REMOVED***allowExact,
***REMOVED******REMOVED******REMOVED******REMOVED***allowSpread,
***REMOVED******REMOVED******REMOVED******REMOVED***allowProto,
***REMOVED******REMOVED******REMOVED******REMOVED***allowInexact
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodeStart***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.callProperties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.properties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.indexers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.internalSlots***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***endDelim;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exact;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***inexact***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowExact***REMOVED***&&***REMOVED***this.match(6))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(6);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endDelim***REMOVED***=***REMOVED***9;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exact***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endDelim***REMOVED***=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exact***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.exact***REMOVED***=***REMOVED***exact;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(endDelim))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isStatic***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***protoStartLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***inexactStartLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowProto***REMOVED***&&***REMOVED***this.isContextual(118))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookahead***REMOVED***=***REMOVED***this.lookahead();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lookahead.type***REMOVED***!==***REMOVED***14***REMOVED***&&***REMOVED***lookahead.type***REMOVED***!==***REMOVED***17)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***protoStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStatic***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowStatic***REMOVED***&&***REMOVED***this.isContextual(106))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookahead***REMOVED***=***REMOVED***this.lookahead();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lookahead.type***REMOVED***!==***REMOVED***14***REMOVED***&&***REMOVED***lookahead.type***REMOVED***!==***REMOVED***17)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isStatic***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variance***REMOVED***=***REMOVED***this.flowParseVariance();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(protoStartLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(protoStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(variance.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node,***REMOVED***isStatic));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node,***REMOVED***isStatic,***REMOVED***variance));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(10)***REMOVED***||***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(protoStartLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(protoStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(variance.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node,***REMOVED***isStatic));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***kind***REMOVED***=***REMOVED***"init";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(99)***REMOVED***||***REMOVED***this.isContextual(104))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookahead***REMOVED***=***REMOVED***this.lookahead();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsLiteralPropertyName(lookahead.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propOrInexact***REMOVED***=***REMOVED***this.flowParseObjectTypeProperty(node,***REMOVED***isStatic,***REMOVED***protoStartLoc,***REMOVED***variance,***REMOVED***kind,***REMOVED***allowSpread,***REMOVED***allowInexact***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***allowInexact***REMOVED***:***REMOVED***!exact);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propOrInexact***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inexact***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inexactStartLoc***REMOVED***=***REMOVED***this.state.lastTokStartLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.properties.push(propOrInexact);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowObjectTypeSemicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inexactStartLoc***REMOVED***&&***REMOVED***!this.match(8)***REMOVED***&&***REMOVED***!this.match(9))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.UnexpectedExplicitInexactInObject,***REMOVED***inexactStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(endDelim);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowSpread)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeStart.inexact***REMOVED***=***REMOVED***inexact;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***this.finishNode(nodeStart,***REMOVED***"ObjectTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseObjectTypeProperty(node,***REMOVED***isStatic,***REMOVED***protoStartLoc,***REMOVED***variance,***REMOVED***kind,***REMOVED***allowSpread,***REMOVED***allowInexact)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isInexactToken***REMOVED***=***REMOVED***this.match(12)***REMOVED***||***REMOVED***this.match(13)***REMOVED***||***REMOVED***this.match(8)***REMOVED***||***REMOVED***this.match(9);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isInexactToken)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowSpread)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.InexactInsideNonObject,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!allowInexact)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.InexactInsideExact,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.InexactVariance,***REMOVED***variance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowSpread)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.UnexpectedSpreadType,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(protoStartLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(protoStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.SpreadVariance,***REMOVED***variance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectTypeSpreadProperty");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.flowParseObjectPropertyKey();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.static***REMOVED***=***REMOVED***isStatic;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.proto***REMOVED***=***REMOVED***protoStartLoc***REMOVED***!=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.method***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(protoStartLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(protoStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(variance.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"set")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowCheckGetterSetterParams(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowSpread***REMOVED***&&***REMOVED***node.key.name***REMOVED***===***REMOVED***"constructor"***REMOVED***&&***REMOVED***node.value.this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamBannedInConstructor,***REMOVED***node.value.this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***!==***REMOVED***"init")***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.method***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.variance***REMOVED***=***REMOVED***variance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectTypeProperty");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowCheckGetterSetterParams(property)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paramCount***REMOVED***=***REMOVED***property.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***property.value.params.length***REMOVED***+***REMOVED***(property.value.rest***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.value.this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(property.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***FlowErrors.GetterMayNotHaveThisParam***REMOVED***:***REMOVED***FlowErrors.SetterMayNotHaveThisParam,***REMOVED***property.value.this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(length***REMOVED***!==***REMOVED***paramCount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(property.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***Errors.BadGetterArity***REMOVED***:***REMOVED***Errors.BadSetterArity,***REMOVED***property);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.kind***REMOVED***===***REMOVED***"set"***REMOVED***&&***REMOVED***property.value.rest)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.BadSetterRestParameter,***REMOVED***property);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowObjectTypeSemicolon()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(13)***REMOVED***&&***REMOVED***!this.eat(12)***REMOVED***&&***REMOVED***!this.match(8)***REMOVED***&&***REMOVED***!this.match(9))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseQualifiedTypeIdentifier(startLoc,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startLoc***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***startLoc***REMOVED***:***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***node***REMOVED***=***REMOVED***id***REMOVED***||***REMOVED***this.flowParseRestrictedIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node2***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.qualification***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.id***REMOVED***=***REMOVED***this.flowParseRestrictedIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.finishNode(node2,***REMOVED***"QualifiedTypeIdentifier");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseGenericType(startLoc,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseQualifiedTypeIdentifier(startLoc,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiation();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"GenericTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeofType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(87);
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.flowParsePrimaryType();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeofTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTupleType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.types***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(0);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.state.pos***REMOVED***<***REMOVED***this.length***REMOVED***&&***REMOVED***!this.match(3))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.types.push(this.flowParseType());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(3))***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TupleTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseFunctionTypeParam(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***name***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***typeAnnotation***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lh***REMOVED***=***REMOVED***this.lookahead();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isThis***REMOVED***=***REMOVED***this.state.type***REMOVED***===***REMOVED***78;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lh.type***REMOVED***===***REMOVED***14***REMOVED***||***REMOVED***lh.type***REMOVED***===***REMOVED***17)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isThis***REMOVED***&&***REMOVED***!first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamMustBeFirst,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***this.parseIdentifier(isThis);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isThis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamMayNotBeOptional,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionTypeParam");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***reinterpretTypeAsFunctionTypeParam(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(type.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionTypeParam");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseFunctionTypeParams(params***REMOVED***=***REMOVED***[])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rest***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***_this***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***this.flowParseFunctionTypeParam(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this.name***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(11)***REMOVED***&&***REMOVED***!this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params.push(this.flowParseFunctionTypeParam(false));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rest***REMOVED***=***REMOVED***this.flowParseFunctionTypeParam(false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rest,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowIdentToTypeAnnotation(startLoc,***REMOVED***node,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(id.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"any":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"AnyTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"bool":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"boolean":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"BooleanTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"mixed":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"MixedTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"empty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EmptyTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"number":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"NumberTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"string":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"StringTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"symbol":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SymbolTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkNotUnderscore(id.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseGenericType(startLoc,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParsePrimaryType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tmp;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isGroupedType***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldNoAnonFunctionType***REMOVED***=***REMOVED***this.state.noAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseObjectType({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStatic:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowExact:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowSpread:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowProto:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowInexact:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***6:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseObjectType({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStatic:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowExact:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowSpread:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowProto:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowInexact:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.flowParseTupleType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***oldNoAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmp***REMOVED***=***REMOVED***this.flowParseFunctionTypeParams();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***tmp.params;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rest***REMOVED***=***REMOVED***tmp.rest;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.this***REMOVED***=***REMOVED***tmp._this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(19);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11)***REMOVED***&&***REMOVED***!this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type)***REMOVED***||***REMOVED***this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***token***REMOVED***=***REMOVED***this.lookahead().type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGroupedType***REMOVED***=***REMOVED***token***REMOVED***!==***REMOVED***17***REMOVED***&&***REMOVED***token***REMOVED***!==***REMOVED***14;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGroupedType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isGroupedType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***oldNoAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.noAnonFunctionType***REMOVED***||***REMOVED***!(this.match(12)***REMOVED***||***REMOVED***this.match(11)***REMOVED***&&***REMOVED***this.lookahead().type***REMOVED***===***REMOVED***19))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.eat(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmp***REMOVED***=***REMOVED***this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmp***REMOVED***=***REMOVED***this.flowParseFunctionTypeParams();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***tmp.params;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rest***REMOVED***=***REMOVED***tmp.rest;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.this***REMOVED***=***REMOVED***tmp._this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(19);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(this.state.value,***REMOVED***"StringLiteralTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***85:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***86:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.match(85);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"BooleanLiteralTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***53:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.value***REMOVED***===***REMOVED***"-")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(135))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteralAtNode(-this.state.value,***REMOVED***"NumberLiteralTypeAnnotation",***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(136))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteralAtNode(-this.state.value,***REMOVED***"BigIntLiteralTypeAnnotation",***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(FlowErrors.UnexpectedSubtractionOperand,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***135:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(this.state.value,***REMOVED***"NumberLiteralTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***136:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(this.state.value,***REMOVED***"BigIntLiteralTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***88:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"VoidTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***84:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"NullLiteralTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***78:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ThisTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***55:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExistsTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***87:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseTypeofType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeyword(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***label***REMOVED***=***REMOVED***tokenLabelName(this.state.type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.createIdentifier(node,***REMOVED***label);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseInterfaceType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowIdentToTypeAnnotation(startLoc,***REMOVED***node,***REMOVED***this.parseIdentifier());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParsePostfixType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***this.flowParsePrimaryType();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***seenOptionalIndexedAccess***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((this.match(0)***REMOVED***||***REMOVED***this.match(18))***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***optional***REMOVED***=***REMOVED***this.eat(18);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seenOptionalIndexedAccess***REMOVED***=***REMOVED***seenOptionalIndexedAccess***REMOVED***||***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!optional***REMOVED***&&***REMOVED***this.match(3))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.elementType***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"ArrayTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.objectType***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.indexType***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(seenOptionalIndexedAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"OptionalIndexedAccessType");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"IndexedAccessType");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParsePrefixType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.flowParsePrefixType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"NullableTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParsePostfixType();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseAnonFunctionWithoutParens()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***param***REMOVED***=***REMOVED***this.flowParsePrefixType();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.noAnonFunctionType***REMOVED***&&***REMOVED***this.eat(19))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(param.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***[this.reinterpretTypeAsFunctionTypeParam(param)];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rest***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.this***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"FunctionTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseIntersectionType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.eat(45);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.flowParseAnonFunctionWithoutParens();
***REMOVED******REMOVED******REMOVED******REMOVED***node.types***REMOVED***=***REMOVED***[type];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(45))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.types.push(this.flowParseAnonFunctionWithoutParens());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.types.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***type***REMOVED***:***REMOVED***this.finishNode(node,***REMOVED***"IntersectionTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseUnionType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.eat(43);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.flowParseIntersectionType();
***REMOVED******REMOVED******REMOVED******REMOVED***node.types***REMOVED***=***REMOVED***[type];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(43))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.types.push(this.flowParseIntersectionType());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.types.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***type***REMOVED***:***REMOVED***this.finishNode(node,***REMOVED***"UnionTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.flowParseUnionType();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeOrImplicitInstantiation()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.type***REMOVED***===***REMOVED***132***REMOVED***&&***REMOVED***this.state.value***REMOVED***===***REMOVED***"_")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseGenericType(startLoc,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeAnnotation()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ident***REMOVED***=***REMOVED***allowPrimitiveOverride***REMOVED***?***REMOVED***this.parseIdentifier()***REMOVED***:***REMOVED***this.flowParseRestrictedIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ident.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(ident);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ident;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***typeCastToParameter(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression.typeAnnotation***REMOVED***=***REMOVED***node.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(node.expression,***REMOVED***node.typeAnnotation.loc.end);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.expression;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseVariance()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***variance***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(53))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variance***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.value***REMOVED***===***REMOVED***"+")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variance.kind***REMOVED***=***REMOVED***"plus";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variance.kind***REMOVED***=***REMOVED***"minus";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(variance,***REMOVED***"Variance");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***variance;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionBody(node,***REMOVED***allowExpressionBody,***REMOVED***isMethod***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowExpressionBody)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.forwardNoArrowParamsConversionAt(node,***REMOVED***()***REMOVED***=>***REMOVED***super.parseFunctionBody(node,***REMOVED***true,***REMOVED***isMethod));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseFunctionBody(node,***REMOVED***false,***REMOVED***isMethod);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionBodyAndFinish(node,***REMOVED***type,***REMOVED***isMethod***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[typeNode.typeAnnotation,***REMOVED***node.predicate]***REMOVED***=***REMOVED***this.flowParseTypeAndPredicateInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***typeNode.typeAnnotation***REMOVED***?***REMOVED***this.finishNode(typeNode,***REMOVED***"TypeAnnotation")***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseFunctionBodyAndFinish(node,***REMOVED***type,***REMOVED***isMethod);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatementLike(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.strict***REMOVED***&&***REMOVED***this.isContextual(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookahead***REMOVED***=***REMOVED***this.lookahead();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(lookahead.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseInterface(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(126))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseEnumDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stmt***REMOVED***=***REMOVED***super.parseStatementLike(flags);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flowPragma***REMOVED***===***REMOVED***undefined***REMOVED***&&***REMOVED***!this.isValidDirective(stmt))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowPragma***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stmt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr.name***REMOVED***===***REMOVED***"declare")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(80)***REMOVED***||***REMOVED***tokenIsIdentifier(this.state.type)***REMOVED***||***REMOVED***this.match(68)***REMOVED***||***REMOVED***this.match(74)***REMOVED***||***REMOVED***this.match(82))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseDeclare(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr.name***REMOVED***===***REMOVED***"interface")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseInterface(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(expr.name***REMOVED***===***REMOVED***"type")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseTypeAlias(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(expr.name***REMOVED***===***REMOVED***"opaque")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseOpaqueType(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseExportDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***126***REMOVED***||***REMOVED***tokenIsFlowInterfaceOrTypeOrOpaque(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.shouldParseExportDeclaration();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isExportDefaultSpecifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***126***REMOVED***||***REMOVED***tokenIsFlowInterfaceOrTypeOrOpaque(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isExportDefaultSpecifier();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportDefaultExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(126))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseEnumDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExportDefaultExpression();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseConditional(expr,***REMOVED***startLoc,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(17))***REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.maybeInArrowParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.lookaheadCharCode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***===***REMOVED***44***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***61***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***58***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***41)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setOptionalParametersError(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(17);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalNoArrowAt***REMOVED***=***REMOVED***this.state.noArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consequent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failed
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.tryParseConditionalConsequent();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[valid,***REMOVED***invalid]***REMOVED***=***REMOVED***this.getArrowLikeExpressions(consequent);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(failed***REMOVED***||***REMOVED***invalid.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noArrowAt***REMOVED***=***REMOVED***[...originalNoArrowAt];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(invalid.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowAt***REMOVED***=***REMOVED***noArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***invalid.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noArrowAt.push(invalid[i].start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consequent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.tryParseConditionalConsequent());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[valid,***REMOVED***invalid]***REMOVED***=***REMOVED***this.getArrowLikeExpressions(consequent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(failed***REMOVED***&&***REMOVED***valid.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.AmbiguousConditionalArrow,***REMOVED***state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(failed***REMOVED***&&***REMOVED***valid.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noArrowAt.push(valid[0].start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowAt***REMOVED***=***REMOVED***noArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consequent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.tryParseConditionalConsequent());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.getArrowLikeExpressions(consequent,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowAt***REMOVED***=***REMOVED***originalNoArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***node.consequent***REMOVED***=***REMOVED***consequent;
***REMOVED******REMOVED******REMOVED******REMOVED***node.alternate***REMOVED***=***REMOVED***this.forwardNoArrowParamsConversionAt(node,***REMOVED***()***REMOVED***=>***REMOVED***this.parseMaybeAssign(undefined,***REMOVED***undefined));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ConditionalExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tryParseConditionalConsequent()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowParamsConversionAt.push(this.state.start);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consequent***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***failed***REMOVED***=***REMOVED***!this.match(14);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowParamsConversionAt.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consequent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failed
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getArrowLikeExpressions(node,***REMOVED***disallowInvalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stack***REMOVED***=***REMOVED***[node];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrows***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(stack.length***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***stack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ArrowFunctionExpression"***REMOVED***&&***REMOVED***node.body.type***REMOVED***!==***REMOVED***"BlockStatement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters***REMOVED***||***REMOVED***!node.returnType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishArrowValidation(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrows.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.push(node.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ConditionalExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.push(node.consequent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.push(node.alternate);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(disallowInvalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrows.forEach(node***REMOVED***=>***REMOVED***this.finishArrowValidation(node));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[arrows,***REMOVED***[]];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***partition(arrows,***REMOVED***node***REMOVED***=>***REMOVED***node.params.every(param***REMOVED***=>***REMOVED***this.isAssignable(param,***REMOVED***true)));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishArrowValidation(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$extra;
***REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableList(node.params,***REMOVED***(_node$extra***REMOVED***=***REMOVED***node.extra)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_node$extra.trailingCommaLoc,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(514***REMOVED***|***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkParams(node,***REMOVED***false,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***forwardNoArrowParamsConversionAt(node,***REMOVED***parse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.noArrowParamsConversionAt.includes(this.offsetToSourcePos(node.start)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowParamsConversionAt.push(this.state.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***parse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noArrowParamsConversionAt.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***parse();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseParenItem(node,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newNode***REMOVED***=***REMOVED***super.parseParenItem(node,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeCastNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeCastNode.expression***REMOVED***=***REMOVED***newNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeCastNode.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(typeCastNode,***REMOVED***"TypeCastExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***newNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***assertModuleNodeAllowed(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ImportDeclaration"***REMOVED***&&***REMOVED***(node.importKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***node.importKind***REMOVED***===***REMOVED***"typeof")***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***&&***REMOVED***node.exportKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ExportAllDeclaration"***REMOVED***&&***REMOVED***node.exportKind***REMOVED***===***REMOVED***"type")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.assertModuleNodeAllowed(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(130))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarationNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***this.parseExportSpecifiers(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseExportFrom(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseTypeAlias(declarationNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(131))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarationNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseOpaqueType(declarationNode,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarationNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseInterface(declarationNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(126))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarationNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.flowParseEnumDeclaration(declarationNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExportDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***eatExportStar(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.eatExportStar(node))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(130)***REMOVED***&&***REMOVED***this.lookahead().type***REMOVED***===***REMOVED***55)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseExportNamespaceSpecifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasNamespace***REMOVED***=***REMOVED***super.maybeParseExportNamespaceSpecifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasNamespace***REMOVED***&&***REMOVED***node.exportKind***REMOVED***===***REMOVED***"type")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasNamespace;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassMember(classBody,***REMOVED***member,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(125))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.parseClassMemberFromModifier(classBody,***REMOVED***member))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***member.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassMember(classBody,***REMOVED***member,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.type***REMOVED***!==***REMOVED***"ClassProperty"***REMOVED***&&***REMOVED***member.type***REMOVED***!==***REMOVED***"ClassPrivateProperty"***REMOVED***&&***REMOVED***member.type***REMOVED***!==***REMOVED***"PropertyDefinition")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.DeclareClassElement,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(member.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.DeclareClassFieldInitializer,***REMOVED***member.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isIterator(word)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***word***REMOVED***===***REMOVED***"iterator"***REMOVED***||***REMOVED***word***REMOVED***===***REMOVED***"asyncIterator";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readIterator()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***word***REMOVED***=***REMOVED***super.readWord1();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fullWord***REMOVED***=***REMOVED***"@@"***REMOVED***+***REMOVED***word;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isIterator(word)***REMOVED***||***REMOVED***!this.state.inType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidIdentifier,***REMOVED***this.state.curPosition(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***fullWord
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(132,***REMOVED***fullWord);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getTokenFromCode(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***123***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***124)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(6,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.state.inType***REMOVED***&&***REMOVED***(code***REMOVED***===***REMOVED***62***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***60))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(code***REMOVED***===***REMOVED***62***REMOVED***?***REMOVED***48***REMOVED***:***REMOVED***47,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.state.inType***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***63)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***46)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(18,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(17,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isIteratorStart(code,***REMOVED***next,***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***2)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readIterator();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.getTokenFromCode(code);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAssignable(node,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TypeCastExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isAssignable(node.expression,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isAssignable(node,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignable(node,***REMOVED***isLHS***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isLHS***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***"AssignmentExpression"***REMOVED***&&***REMOVED***node.left.type***REMOVED***===***REMOVED***"TypeCastExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***this.typeCastToParameter(node.left);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignable(node,***REMOVED***isLHS);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableList(exprList,***REMOVED***trailingCommaLoc,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***exprList.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***exprList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((expr***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***expr.type)***REMOVED***===***REMOVED***"TypeCastExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprList[i]***REMOVED***=***REMOVED***this.typeCastToParameter(expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignableList(exprList,***REMOVED***trailingCommaLoc,***REMOVED***isLHS);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toReferencedList(exprList,***REMOVED***isParenthesizedExpr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***exprList.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_expr$extra;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***exprList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr***REMOVED***&&***REMOVED***expr.type***REMOVED***===***REMOVED***"TypeCastExpression"***REMOVED***&&***REMOVED***!((_expr$extra***REMOVED***=***REMOVED***expr.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_expr$extra.parenthesized)***REMOVED***&&***REMOVED***(exprList.length***REMOVED***>***REMOVED***1***REMOVED***||***REMOVED***!isParenthesizedExpr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.TypeCastInPattern,***REMOVED***expr.typeAnnotation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exprList;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrayLike(close,***REMOVED***canBePattern,***REMOVED***isTuple,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseArrayLike(close,***REMOVED***canBePattern,***REMOVED***isTuple,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canBePattern***REMOVED***&&***REMOVED***!this.state.maybeInArrowParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedList(node.elements);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidLVal(type,***REMOVED***isParenthesized,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"TypeCastExpression"***REMOVED***||***REMOVED***super.isValidLVal(type,***REMOVED***isParenthesized,***REMOVED***binding);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseClassProperty(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassPrivateProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseClassPrivateProperty(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isClassMethod()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(47)***REMOVED***||***REMOVED***super.isClassMethod();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isClassProperty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(14)***REMOVED***||***REMOVED***super.isClassProperty();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isNonstaticConstructor(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!this.match(14)***REMOVED***&&***REMOVED***super.isNonstaticConstructor(method);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(method.variance.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***method.variance;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.pushClassMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.params***REMOVED***&&***REMOVED***isConstructor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***method.params;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(params.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***this.isThisParam(params[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamBannedInConstructor,***REMOVED***method);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(method.type***REMOVED***===***REMOVED***"MethodDefinition"***REMOVED***&&***REMOVED***isConstructor***REMOVED***&&***REMOVED***method.value.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***method.value.params;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(params.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***this.isThisParam(params[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamBannedInConstructor,***REMOVED***method);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassPrivateMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(method.variance.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***method.variance;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.pushClassPrivateMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassSuper(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassSuper(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.superClass***REMOVED***&&***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.superTypeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiationInExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(113))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***implemented***REMOVED***=***REMOVED***node.implements***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.flowParseRestrictedIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***implemented.push(this.finishNode(node,***REMOVED***"ClassImplements"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkGetterSetterParams(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkGetterSetterParams(method);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***this.getObjectOrClassMethodParams(method);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(params.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***param***REMOVED***=***REMOVED***params[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isThisParam(param)***REMOVED***&&***REMOVED***method.kind***REMOVED***===***REMOVED***"get")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.GetterMayNotHaveThisParam,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isThisParam(param))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.SetterMayNotHaveThisParam,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePropertyNamePrefixOperator(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.variance***REMOVED***=***REMOVED***this.flowParseVariance();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.variance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(prop.variance.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***prop.variance;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***&&***REMOVED***!isAccessor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(10))***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***super.parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(result.value***REMOVED***||***REMOVED***result).typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionParamType(param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(param.type***REMOVED***!==***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.PatternIsOptional,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isThisParam(param))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamMayNotBeOptional,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***param.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***param.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isThisParam(param))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamAnnotationRequired,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(29)***REMOVED***&&***REMOVED***this.isThisParam(param))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamNoDefault,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(param);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeDefault(startLoc,***REMOVED***left)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseMaybeDefault(startLoc,***REMOVED***left);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"AssignmentPattern"***REMOVED***&&***REMOVED***node.typeAnnotation***REMOVED***&&***REMOVED***node.right.start***REMOVED***<***REMOVED***node.typeAnnotation.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.TypeBeforeInitializer,***REMOVED***node.typeAnnotation);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkImportReflection(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkImportReflection(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.module***REMOVED***&&***REMOVED***node.importKind***REMOVED***!==***REMOVED***"value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ImportReflectionHasImportType,***REMOVED***node.specifiers[0].loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSpecifierLocal(node,***REMOVED***specifier,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***hasTypeImportKind(node)***REMOVED***?***REMOVED***this.flowParseRestrictedIdentifier(true,***REMOVED***true)***REMOVED***:***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers.push(this.finishImportSpecifier(specifier,***REMOVED***type));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isPotentialImportPhase(isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.isPotentialImportPhase(isExport))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(130))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isExport)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.lookaheadCharCode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ch***REMOVED***===***REMOVED***123***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***42;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isExport***REMOVED***&&***REMOVED***this.isContextual(87);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***applyImportPhase(node,***REMOVED***isExport,***REMOVED***phase,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.applyImportPhase(node,***REMOVED***isExport,***REMOVED***phase,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!phase***REMOVED***&&***REMOVED***this.match(65))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***phase***REMOVED***===***REMOVED***"type"***REMOVED***?***REMOVED***phase***REMOVED***:***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(phase***REMOVED***===***REMOVED***"type"***REMOVED***&&***REMOVED***this.match(55))***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.importKind***REMOVED***=***REMOVED***phase***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***phase***REMOVED***===***REMOVED***"typeof"***REMOVED***?***REMOVED***phase***REMOVED***:***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSpecifier(specifier,***REMOVED***importedIsString,***REMOVED***isInTypeOnlyImport,***REMOVED***isMaybeTypeOnly,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstIdent***REMOVED***=***REMOVED***specifier.imported;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***specifierTypeKind***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstIdent.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstIdent.name***REMOVED***===***REMOVED***"type")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifierTypeKind***REMOVED***=***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(firstIdent.name***REMOVED***===***REMOVED***"typeof")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifierTypeKind***REMOVED***=***REMOVED***"typeof";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isBinding***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(93)***REMOVED***&&***REMOVED***!this.isLookaheadContextual("as"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***as_ident***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifierTypeKind***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***!tokenIsKeywordOrIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.imported***REMOVED***=***REMOVED***as_ident;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.importKind***REMOVED***=***REMOVED***specifierTypeKind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.cloneIdentifier(as_ident);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.imported***REMOVED***=***REMOVED***firstIdent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.importKind***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifierTypeKind***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***tokenIsKeywordOrIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.imported***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.importKind***REMOVED***=***REMOVED***specifierTypeKind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importedIsString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.ImportBindingIsString,***REMOVED***specifier,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importName:***REMOVED***firstIdent.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.imported***REMOVED***=***REMOVED***firstIdent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.importKind***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBinding***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.cloneIdentifier(specifier.imported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifierIsTypeImport***REMOVED***=***REMOVED***hasTypeImportKind(specifier);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isInTypeOnlyImport***REMOVED***&&***REMOVED***specifierIsTypeImport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport,***REMOVED***specifier);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isInTypeOnlyImport***REMOVED***||***REMOVED***specifierIsTypeImport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedType(specifier.local.name,***REMOVED***specifier.local.loc.start,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBinding***REMOVED***&&***REMOVED***!isInTypeOnlyImport***REMOVED***&&***REMOVED***!specifierIsTypeImport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedWord(specifier.local.name,***REMOVED***specifier.loc.start,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishImportSpecifier(specifier,***REMOVED***"ImportSpecifier");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingAtom()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***78:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseBindingAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionParams(node,***REMOVED***isConstructor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***node.kind;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***!==***REMOVED***"get"***REMOVED***&&***REMOVED***kind***REMOVED***!==***REMOVED***"set"***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseFunctionParams(node,***REMOVED***isConstructor);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVarId(decl,***REMOVED***kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseVarId(decl,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.id.typeAnnotation***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAsyncArrowFromCallExpression(node,***REMOVED***call)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldNoAnonFunctionType***REMOVED***=***REMOVED***this.state.noAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.flowParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***oldNoAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseAsyncArrowFromCallExpression(node,***REMOVED***call);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseAsyncArrow()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(14)***REMOVED***||***REMOVED***super.shouldParseAsyncArrow();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_jsx;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***state***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***jsx;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("jsx")***REMOVED***&&***REMOVED***(this.match(143)***REMOVED***||***REMOVED***this.match(47)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***jsx***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse),***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!jsx.error)***REMOVED***return***REMOVED***jsx.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentContext***REMOVED***=***REMOVED***context[context.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentContext***REMOVED***===***REMOVED***types.j_oTag***REMOVED***||***REMOVED***currentContext***REMOVED***===***REMOVED***types.j_expr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_jsx***REMOVED***=***REMOVED***jsx)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_jsx.error***REMOVED***||***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_jsx2,***REMOVED***_jsx3;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***state***REMOVED***||***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrow***REMOVED***=***REMOVED***this.tryParse(abort***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_arrowExpression$extr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters***REMOVED***=***REMOVED***this.flowParseTypeParameterDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrowExpression***REMOVED***=***REMOVED***this.forwardNoArrowParamsConversionAt(typeParameters,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(result,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_arrowExpression$extr***REMOVED***=***REMOVED***arrowExpression.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_arrowExpression$extr.parenthesized)***REMOVED***abort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.maybeUnwrapTypeCastExpression(arrowExpression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr.type***REMOVED***!==***REMOVED***"ArrowFunctionExpression")***REMOVED***abort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(expr,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrowExpression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***arrowExpression***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrow.node***REMOVED***&&***REMOVED***this.maybeUnwrapTypeCastExpression(arrow.node).type***REMOVED***===***REMOVED***"ArrowFunctionExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!arrow.error***REMOVED***&&***REMOVED***!arrow.aborted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrow.node.async)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrow.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrowExpression***REMOVED***=***REMOVED***arrow.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_jsx2***REMOVED***=***REMOVED***jsx)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_jsx2.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***jsx.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***jsx.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrowExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***arrow.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrowExpression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_jsx3***REMOVED***=***REMOVED***jsx)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_jsx3.thrown)***REMOVED***throw***REMOVED***jsx.error;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrow.thrown)***REMOVED***throw***REMOVED***arrow.error;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrow(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldNoAnonFunctionType***REMOVED***=***REMOVED***this.state.noAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[typeNode.typeAnnotation,***REMOVED***node.predicate]***REMOVED***=***REMOVED***this.flowParseTypeAndPredicateInitialiser();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.noAnonFunctionType***REMOVED***=***REMOVED***oldNoAnonFunctionType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.canInsertSemicolon())***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(19))***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.thrown)***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.error)***REMOVED***this.state***REMOVED***=***REMOVED***result.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***result.node.typeAnnotation***REMOVED***?***REMOVED***this.finishNode(result.node,***REMOVED***"TypeAnnotation")***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseArrow(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseArrow(params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(14)***REMOVED***||***REMOVED***super.shouldParseArrow(params);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setArrowFunctionParameters(node,***REMOVED***params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.noArrowParamsConversionAt.includes(this.offsetToSourcePos(node.start)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***params;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.setArrowFunctionParameters(node,***REMOVED***params);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkParams(node,***REMOVED***allowDuplicates,***REMOVED***isArrowFunction,***REMOVED***strictModeChanged***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArrowFunction***REMOVED***&&***REMOVED***this.state.noArrowParamsConversionAt.includes(this.offsetToSourcePos(node.start)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***node.params.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isThisParam(node.params[i])***REMOVED***&&***REMOVED***i***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.ThisParamMustBeFirst,***REMOVED***node.params[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkParams(node,***REMOVED***allowDuplicates,***REMOVED***isArrowFunction,***REMOVED***strictModeChanged);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseParenAndDistinguishExpression(canBeArrow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseParenAndDistinguishExpression(canBeArrow***REMOVED***&&***REMOVED***!this.state.noArrowAt.includes(this.sourceToOffsetPos(this.state.start)));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSubscripts(base,***REMOVED***startLoc,***REMOVED***noCalls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(base.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***base.name***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***this.state.noArrowAt.includes(startLoc.index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***super.parseCallExpressionArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"CallExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(base.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***base.name***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrow***REMOVED***=***REMOVED***this.tryParse(abort***REMOVED***=>***REMOVED***this.parseAsyncArrowWithTypeParameters(startLoc)***REMOVED***||***REMOVED***abort(),***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!arrow.error***REMOVED***&&***REMOVED***!arrow.aborted)***REMOVED***return***REMOVED***arrow.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***super.parseSubscripts(base,***REMOVED***startLoc,***REMOVED***noCalls),***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.node***REMOVED***&&***REMOVED***!result.error)***REMOVED***return***REMOVED***result.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrow.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***arrow.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrow.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***result.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***arrow.error***REMOVED***||***REMOVED***result.error;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseSubscripts(base,***REMOVED***startLoc,***REMOVED***noCalls);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSubscript(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***subscriptState)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(18)***REMOVED***&&***REMOVED***this.isLookaheadToken_lt())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subscriptState.optionalChainMember***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noCalls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subscriptState.stop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeArguments***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiationInExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***this.parseCallExpressionArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishCallExpression(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!noCalls***REMOVED***&&***REMOVED***this.shouldParseTypes()***REMOVED***&&***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeArguments***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiationCallOrNew();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***super.parseCallExpressionArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subscriptState.optionalChainMember)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishCallExpression(node,***REMOVED***subscriptState.optionalChainMember);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.error)***REMOVED***this.state***REMOVED***=***REMOVED***result.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseSubscript(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***subscriptState);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNewCallee(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseNewCallee(node);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***targs***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldParseTypes()***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***targs***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***this.flowParseTypeParameterInstantiationCallOrNew()).node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeArguments***REMOVED***=***REMOVED***targs;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAsyncArrowWithTypeParameters(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionParams(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.parseArrow(node))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseArrowExpression(node,***REMOVED***undefined,***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_mult_modulo(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***42***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***47***REMOVED***&&***REMOVED***this.state.hasFlowComment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.hasFlowComment***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nextToken();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.readToken_mult_modulo(code);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_pipe_amp(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***124***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***125)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(9,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.readToken_pipe_amp(code);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTopLevel(file,***REMOVED***program)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileNode***REMOVED***=***REMOVED***super.parseTopLevel(file,***REMOVED***program);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.hasFlowComment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.UnterminatedFlowComment,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fileNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***skipBlockComment()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("flowComments")***REMOVED***&&***REMOVED***this.skipFlowComment())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.hasFlowComment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(FlowErrors.NestedFlowComment,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hasFlowCommentCompletion();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentSkip***REMOVED***=***REMOVED***this.skipFlowComment();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentSkip)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***commentSkip;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.hasFlowComment***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.skipBlockComment(this.state.hasFlowComment***REMOVED***?***REMOVED***"*-/"***REMOVED***:***REMOVED***"*/");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***skipFlowComment()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shiftToFirstNonWhiteSpace***REMOVED***=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***([32,***REMOVED***9].includes(this.input.charCodeAt(pos***REMOVED***+***REMOVED***shiftToFirstNonWhiteSpace)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shiftToFirstNonWhiteSpace++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch2***REMOVED***=***REMOVED***this.input.charCodeAt(shiftToFirstNonWhiteSpace***REMOVED***+***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch3***REMOVED***=***REMOVED***this.input.charCodeAt(shiftToFirstNonWhiteSpace***REMOVED***+***REMOVED***pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch2***REMOVED***===***REMOVED***58***REMOVED***&&***REMOVED***ch3***REMOVED***===***REMOVED***58)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***shiftToFirstNonWhiteSpace***REMOVED***+***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.slice(shiftToFirstNonWhiteSpace***REMOVED***+***REMOVED***pos,***REMOVED***shiftToFirstNonWhiteSpace***REMOVED***+***REMOVED***pos***REMOVED***+***REMOVED***12)***REMOVED***===***REMOVED***"flow-include")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***shiftToFirstNonWhiteSpace***REMOVED***+***REMOVED***12;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch2***REMOVED***===***REMOVED***58***REMOVED***&&***REMOVED***ch3***REMOVED***!==***REMOVED***58)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***shiftToFirstNonWhiteSpace;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasFlowCommentCompletion()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***this.input.indexOf("*/",***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(end***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedComment,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumErrorBooleanMemberNotInitialized(loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***memberName
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumBooleanMemberNotInitialized,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumErrorInvalidMemberInitializer(loc,***REMOVED***enumContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.raise(!enumContext.explicitType***REMOVED***?***REMOVED***FlowErrors.EnumInvalidMemberInitializerUnknownType***REMOVED***:***REMOVED***enumContext.explicitType***REMOVED***===***REMOVED***"symbol"***REMOVED***?***REMOVED***FlowErrors.EnumInvalidMemberInitializerSymbolType***REMOVED***:***REMOVED***FlowErrors.EnumInvalidMemberInitializerPrimaryType,***REMOVED***loc,***REMOVED***enumContext);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumErrorNumberMemberNotInitialized(loc,***REMOVED***details)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumNumberMemberNotInitialized,***REMOVED***loc,***REMOVED***details);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumErrorStringMemberInconsistentlyInitialized(node,***REMOVED***details)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumStringMemberInconsistentlyInitialized,***REMOVED***node,***REMOVED***details);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumMemberInit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***endOfInit***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***this.match(12)***REMOVED***||***REMOVED***this.match(8);
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***135:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***literal***REMOVED***=***REMOVED***this.parseNumericLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(endOfInit())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"number",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***literal.loc.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***literal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"invalid",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***literal***REMOVED***=***REMOVED***this.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(endOfInit())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"string",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***literal.loc.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***literal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"invalid",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***85:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***86:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***literal***REMOVED***=***REMOVED***this.parseBooleanLiteral(this.match(85));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(endOfInit())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"boolean",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***literal.loc.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***literal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"invalid",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"invalid",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumMemberRaw()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***init***REMOVED***=***REMOVED***this.eat(29)***REMOVED***?***REMOVED***this.flowEnumMemberInit()***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"none",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumCheckExplicitTypeMismatch(loc,***REMOVED***context,***REMOVED***expectedType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicitType
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(explicitType***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(explicitType***REMOVED***!==***REMOVED***expectedType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorInvalidMemberInitializer(loc,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumMembers({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED***explicitType
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***seenNames***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***members***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***booleanMembers:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***numberMembers:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stringMembers:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultedMembers:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasUnknownMembers***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasUnknownMembers***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.flowEnumMemberRaw();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***memberName***REMOVED***=***REMOVED***id.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(memberName***REMOVED***===***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/^[a-z]/.test(memberName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumInvalidMemberName,***REMOVED***id,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***suggestion:***REMOVED***memberName[0].toUpperCase()***REMOVED***+***REMOVED***memberName.slice(1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(seenNames.has(memberName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumDuplicateMemberName,***REMOVED***id,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seenNames.add(memberName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicitType,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberNode.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(init.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"boolean":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumCheckExplicitTypeMismatch(init.loc,***REMOVED***context,***REMOVED***"boolean");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberNode.init***REMOVED***=***REMOVED***init.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members.booleanMembers.push(this.finishNode(memberNode,***REMOVED***"EnumBooleanMember"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"number":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumCheckExplicitTypeMismatch(init.loc,***REMOVED***context,***REMOVED***"number");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberNode.init***REMOVED***=***REMOVED***init.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members.numberMembers.push(this.finishNode(memberNode,***REMOVED***"EnumNumberMember"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"string":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumCheckExplicitTypeMismatch(init.loc,***REMOVED***context,***REMOVED***"string");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberNode.init***REMOVED***=***REMOVED***init.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members.stringMembers.push(this.finishNode(memberNode,***REMOVED***"EnumStringMember"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"invalid":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.flowEnumErrorInvalidMemberInitializer(init.loc,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"none":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(explicitType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"boolean":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorBooleanMemberNotInitialized(init.loc,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"number":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorNumberMemberNotInitialized(init.loc,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members.defaultedMembers.push(this.finishNode(memberNode,***REMOVED***"EnumDefaultedMember"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasUnknownMembers
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumStringMembers(initializedMembers,***REMOVED***defaultedMembers,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(initializedMembers.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultedMembers;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(defaultedMembers.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***initializedMembers;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(defaultedMembers.length***REMOVED***>***REMOVED***initializedMembers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***member***REMOVED***of***REMOVED***initializedMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorStringMemberInconsistentlyInitialized(member,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultedMembers;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***member***REMOVED***of***REMOVED***defaultedMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorStringMemberInconsistentlyInitialized(member,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***initializedMembers;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumParseExplicitType({
***REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eatContextual(102))***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***"boolean"***REMOVED***&&***REMOVED***value***REMOVED***!==***REMOVED***"number"***REMOVED***&&***REMOVED***value***REMOVED***!==***REMOVED***"string"***REMOVED***&&***REMOVED***value***REMOVED***!==***REMOVED***"symbol")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumInvalidExplicitType,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidEnumType:***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowEnumBody(node,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***enumName***REMOVED***=***REMOVED***id.name;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nameLoc***REMOVED***=***REMOVED***id.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***explicitType***REMOVED***=***REMOVED***this.flowEnumParseExplicitType({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***members,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasUnknownMembers
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.flowEnumMembers({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicitType
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***node.hasUnknownMembers***REMOVED***=***REMOVED***hasUnknownMembers;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(explicitType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"boolean":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.explicitType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***members.booleanMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumBooleanBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"number":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.explicitType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***members.numberMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumNumberBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"string":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.explicitType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***this.flowEnumStringMembers(members.stringMembers,***REMOVED***members.defaultedMembers,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumStringBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"symbol":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***members.defaultedMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumSymbolBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***empty***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumStringBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.explicitType***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***boolsLen***REMOVED***=***REMOVED***members.booleanMembers.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***numsLen***REMOVED***=***REMOVED***members.numberMembers.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***strsLen***REMOVED***=***REMOVED***members.stringMembers.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultedLen***REMOVED***=***REMOVED***members.defaultedMembers.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!boolsLen***REMOVED***&&***REMOVED***!numsLen***REMOVED***&&***REMOVED***!strsLen***REMOVED***&&***REMOVED***!defaultedLen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***empty();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!boolsLen***REMOVED***&&***REMOVED***!numsLen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***this.flowEnumStringMembers(members.stringMembers,***REMOVED***members.defaultedMembers,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumStringBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!numsLen***REMOVED***&&***REMOVED***!strsLen***REMOVED***&&***REMOVED***boolsLen***REMOVED***>=***REMOVED***defaultedLen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***member***REMOVED***of***REMOVED***members.defaultedMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberName:***REMOVED***member.id.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***members.booleanMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumBooleanBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!boolsLen***REMOVED***&&***REMOVED***!strsLen***REMOVED***&&***REMOVED***numsLen***REMOVED***>=***REMOVED***defaultedLen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***member***REMOVED***of***REMOVED***members.defaultedMembers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flowEnumErrorNumberMemberNotInitialized(member.loc.start,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memberName:***REMOVED***member.id.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***members.numberMembers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumNumberBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(FlowErrors.EnumInconsistentMemberValues,***REMOVED***nameLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***empty();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flowParseEnumDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.flowEnumBody(this.startNode(),***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EnumDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseOpeningElementAfterName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldParseTypes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeArguments***REMOVED***=***REMOVED***this.flowParseTypeParameterInstantiationInExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.jsxParseOpeningElementAfterName(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isLookaheadToken_lt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(next)***REMOVED***===***REMOVED***60)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***afterNext***REMOVED***=***REMOVED***this.input.charCodeAt(next***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***afterNext***REMOVED***!==***REMOVED***60***REMOVED***&&***REMOVED***afterNext***REMOVED***!==***REMOVED***61;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***reScan_lt_gt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***47)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***-=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_lt();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***48)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***-=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_gt();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***reScan_lt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***51)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***-=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(47,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***47;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeUnwrapTypeCastExpression(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"TypeCastExpression"***REMOVED***?***REMOVED***node.expression***REMOVED***:***REMOVED***node;
***REMOVED******REMOVED***}
};
const***REMOVED***entities***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED***quot:***REMOVED***"\u0022",
***REMOVED******REMOVED***amp:***REMOVED***"&",
***REMOVED******REMOVED***apos:***REMOVED***"\u0027",
***REMOVED******REMOVED***lt:***REMOVED***"<",
***REMOVED******REMOVED***gt:***REMOVED***">",
***REMOVED******REMOVED***nbsp:***REMOVED***"\u00A0",
***REMOVED******REMOVED***iexcl:***REMOVED***"\u00A1",
***REMOVED******REMOVED***cent:***REMOVED***"\u00A2",
***REMOVED******REMOVED***pound:***REMOVED***"\u00A3",
***REMOVED******REMOVED***curren:***REMOVED***"\u00A4",
***REMOVED******REMOVED***yen:***REMOVED***"\u00A5",
***REMOVED******REMOVED***brvbar:***REMOVED***"\u00A6",
***REMOVED******REMOVED***sect:***REMOVED***"\u00A7",
***REMOVED******REMOVED***uml:***REMOVED***"\u00A8",
***REMOVED******REMOVED***copy:***REMOVED***"\u00A9",
***REMOVED******REMOVED***ordf:***REMOVED***"\u00AA",
***REMOVED******REMOVED***laquo:***REMOVED***"\u00AB",
***REMOVED******REMOVED***not:***REMOVED***"\u00AC",
***REMOVED******REMOVED***shy:***REMOVED***"\u00AD",
***REMOVED******REMOVED***reg:***REMOVED***"\u00AE",
***REMOVED******REMOVED***macr:***REMOVED***"\u00AF",
***REMOVED******REMOVED***deg:***REMOVED***"\u00B0",
***REMOVED******REMOVED***plusmn:***REMOVED***"\u00B1",
***REMOVED******REMOVED***sup2:***REMOVED***"\u00B2",
***REMOVED******REMOVED***sup3:***REMOVED***"\u00B3",
***REMOVED******REMOVED***acute:***REMOVED***"\u00B4",
***REMOVED******REMOVED***micro:***REMOVED***"\u00B5",
***REMOVED******REMOVED***para:***REMOVED***"\u00B6",
***REMOVED******REMOVED***middot:***REMOVED***"\u00B7",
***REMOVED******REMOVED***cedil:***REMOVED***"\u00B8",
***REMOVED******REMOVED***sup1:***REMOVED***"\u00B9",
***REMOVED******REMOVED***ordm:***REMOVED***"\u00BA",
***REMOVED******REMOVED***raquo:***REMOVED***"\u00BB",
***REMOVED******REMOVED***frac14:***REMOVED***"\u00BC",
***REMOVED******REMOVED***frac12:***REMOVED***"\u00BD",
***REMOVED******REMOVED***frac34:***REMOVED***"\u00BE",
***REMOVED******REMOVED***iquest:***REMOVED***"\u00BF",
***REMOVED******REMOVED***Agrave:***REMOVED***"\u00C0",
***REMOVED******REMOVED***Aacute:***REMOVED***"\u00C1",
***REMOVED******REMOVED***Acirc:***REMOVED***"\u00C2",
***REMOVED******REMOVED***Atilde:***REMOVED***"\u00C3",
***REMOVED******REMOVED***Auml:***REMOVED***"\u00C4",
***REMOVED******REMOVED***Aring:***REMOVED***"\u00C5",
***REMOVED******REMOVED***AElig:***REMOVED***"\u00C6",
***REMOVED******REMOVED***Ccedil:***REMOVED***"\u00C7",
***REMOVED******REMOVED***Egrave:***REMOVED***"\u00C8",
***REMOVED******REMOVED***Eacute:***REMOVED***"\u00C9",
***REMOVED******REMOVED***Ecirc:***REMOVED***"\u00CA",
***REMOVED******REMOVED***Euml:***REMOVED***"\u00CB",
***REMOVED******REMOVED***Igrave:***REMOVED***"\u00CC",
***REMOVED******REMOVED***Iacute:***REMOVED***"\u00CD",
***REMOVED******REMOVED***Icirc:***REMOVED***"\u00CE",
***REMOVED******REMOVED***Iuml:***REMOVED***"\u00CF",
***REMOVED******REMOVED***ETH:***REMOVED***"\u00D0",
***REMOVED******REMOVED***Ntilde:***REMOVED***"\u00D1",
***REMOVED******REMOVED***Ograve:***REMOVED***"\u00D2",
***REMOVED******REMOVED***Oacute:***REMOVED***"\u00D3",
***REMOVED******REMOVED***Ocirc:***REMOVED***"\u00D4",
***REMOVED******REMOVED***Otilde:***REMOVED***"\u00D5",
***REMOVED******REMOVED***Ouml:***REMOVED***"\u00D6",
***REMOVED******REMOVED***times:***REMOVED***"\u00D7",
***REMOVED******REMOVED***Oslash:***REMOVED***"\u00D8",
***REMOVED******REMOVED***Ugrave:***REMOVED***"\u00D9",
***REMOVED******REMOVED***Uacute:***REMOVED***"\u00DA",
***REMOVED******REMOVED***Ucirc:***REMOVED***"\u00DB",
***REMOVED******REMOVED***Uuml:***REMOVED***"\u00DC",
***REMOVED******REMOVED***Yacute:***REMOVED***"\u00DD",
***REMOVED******REMOVED***THORN:***REMOVED***"\u00DE",
***REMOVED******REMOVED***szlig:***REMOVED***"\u00DF",
***REMOVED******REMOVED***agrave:***REMOVED***"\u00E0",
***REMOVED******REMOVED***aacute:***REMOVED***"\u00E1",
***REMOVED******REMOVED***acirc:***REMOVED***"\u00E2",
***REMOVED******REMOVED***atilde:***REMOVED***"\u00E3",
***REMOVED******REMOVED***auml:***REMOVED***"\u00E4",
***REMOVED******REMOVED***aring:***REMOVED***"\u00E5",
***REMOVED******REMOVED***aelig:***REMOVED***"\u00E6",
***REMOVED******REMOVED***ccedil:***REMOVED***"\u00E7",
***REMOVED******REMOVED***egrave:***REMOVED***"\u00E8",
***REMOVED******REMOVED***eacute:***REMOVED***"\u00E9",
***REMOVED******REMOVED***ecirc:***REMOVED***"\u00EA",
***REMOVED******REMOVED***euml:***REMOVED***"\u00EB",
***REMOVED******REMOVED***igrave:***REMOVED***"\u00EC",
***REMOVED******REMOVED***iacute:***REMOVED***"\u00ED",
***REMOVED******REMOVED***icirc:***REMOVED***"\u00EE",
***REMOVED******REMOVED***iuml:***REMOVED***"\u00EF",
***REMOVED******REMOVED***eth:***REMOVED***"\u00F0",
***REMOVED******REMOVED***ntilde:***REMOVED***"\u00F1",
***REMOVED******REMOVED***ograve:***REMOVED***"\u00F2",
***REMOVED******REMOVED***oacute:***REMOVED***"\u00F3",
***REMOVED******REMOVED***ocirc:***REMOVED***"\u00F4",
***REMOVED******REMOVED***otilde:***REMOVED***"\u00F5",
***REMOVED******REMOVED***ouml:***REMOVED***"\u00F6",
***REMOVED******REMOVED***divide:***REMOVED***"\u00F7",
***REMOVED******REMOVED***oslash:***REMOVED***"\u00F8",
***REMOVED******REMOVED***ugrave:***REMOVED***"\u00F9",
***REMOVED******REMOVED***uacute:***REMOVED***"\u00FA",
***REMOVED******REMOVED***ucirc:***REMOVED***"\u00FB",
***REMOVED******REMOVED***uuml:***REMOVED***"\u00FC",
***REMOVED******REMOVED***yacute:***REMOVED***"\u00FD",
***REMOVED******REMOVED***thorn:***REMOVED***"\u00FE",
***REMOVED******REMOVED***yuml:***REMOVED***"\u00FF",
***REMOVED******REMOVED***OElig:***REMOVED***"\u0152",
***REMOVED******REMOVED***oelig:***REMOVED***"\u0153",
***REMOVED******REMOVED***Scaron:***REMOVED***"\u0160",
***REMOVED******REMOVED***scaron:***REMOVED***"\u0161",
***REMOVED******REMOVED***Yuml:***REMOVED***"\u0178",
***REMOVED******REMOVED***fnof:***REMOVED***"\u0192",
***REMOVED******REMOVED***circ:***REMOVED***"\u02C6",
***REMOVED******REMOVED***tilde:***REMOVED***"\u02DC",
***REMOVED******REMOVED***Alpha:***REMOVED***"\u0391",
***REMOVED******REMOVED***Beta:***REMOVED***"\u0392",
***REMOVED******REMOVED***Gamma:***REMOVED***"\u0393",
***REMOVED******REMOVED***Delta:***REMOVED***"\u0394",
***REMOVED******REMOVED***Epsilon:***REMOVED***"\u0395",
***REMOVED******REMOVED***Zeta:***REMOVED***"\u0396",
***REMOVED******REMOVED***Eta:***REMOVED***"\u0397",
***REMOVED******REMOVED***Theta:***REMOVED***"\u0398",
***REMOVED******REMOVED***Iota:***REMOVED***"\u0399",
***REMOVED******REMOVED***Kappa:***REMOVED***"\u039A",
***REMOVED******REMOVED***Lambda:***REMOVED***"\u039B",
***REMOVED******REMOVED***Mu:***REMOVED***"\u039C",
***REMOVED******REMOVED***Nu:***REMOVED***"\u039D",
***REMOVED******REMOVED***Xi:***REMOVED***"\u039E",
***REMOVED******REMOVED***Omicron:***REMOVED***"\u039F",
***REMOVED******REMOVED***Pi:***REMOVED***"\u03A0",
***REMOVED******REMOVED***Rho:***REMOVED***"\u03A1",
***REMOVED******REMOVED***Sigma:***REMOVED***"\u03A3",
***REMOVED******REMOVED***Tau:***REMOVED***"\u03A4",
***REMOVED******REMOVED***Upsilon:***REMOVED***"\u03A5",
***REMOVED******REMOVED***Phi:***REMOVED***"\u03A6",
***REMOVED******REMOVED***Chi:***REMOVED***"\u03A7",
***REMOVED******REMOVED***Psi:***REMOVED***"\u03A8",
***REMOVED******REMOVED***Omega:***REMOVED***"\u03A9",
***REMOVED******REMOVED***alpha:***REMOVED***"\u03B1",
***REMOVED******REMOVED***beta:***REMOVED***"\u03B2",
***REMOVED******REMOVED***gamma:***REMOVED***"\u03B3",
***REMOVED******REMOVED***delta:***REMOVED***"\u03B4",
***REMOVED******REMOVED***epsilon:***REMOVED***"\u03B5",
***REMOVED******REMOVED***zeta:***REMOVED***"\u03B6",
***REMOVED******REMOVED***eta:***REMOVED***"\u03B7",
***REMOVED******REMOVED***theta:***REMOVED***"\u03B8",
***REMOVED******REMOVED***iota:***REMOVED***"\u03B9",
***REMOVED******REMOVED***kappa:***REMOVED***"\u03BA",
***REMOVED******REMOVED***lambda:***REMOVED***"\u03BB",
***REMOVED******REMOVED***mu:***REMOVED***"\u03BC",
***REMOVED******REMOVED***nu:***REMOVED***"\u03BD",
***REMOVED******REMOVED***xi:***REMOVED***"\u03BE",
***REMOVED******REMOVED***omicron:***REMOVED***"\u03BF",
***REMOVED******REMOVED***pi:***REMOVED***"\u03C0",
***REMOVED******REMOVED***rho:***REMOVED***"\u03C1",
***REMOVED******REMOVED***sigmaf:***REMOVED***"\u03C2",
***REMOVED******REMOVED***sigma:***REMOVED***"\u03C3",
***REMOVED******REMOVED***tau:***REMOVED***"\u03C4",
***REMOVED******REMOVED***upsilon:***REMOVED***"\u03C5",
***REMOVED******REMOVED***phi:***REMOVED***"\u03C6",
***REMOVED******REMOVED***chi:***REMOVED***"\u03C7",
***REMOVED******REMOVED***psi:***REMOVED***"\u03C8",
***REMOVED******REMOVED***omega:***REMOVED***"\u03C9",
***REMOVED******REMOVED***thetasym:***REMOVED***"\u03D1",
***REMOVED******REMOVED***upsih:***REMOVED***"\u03D2",
***REMOVED******REMOVED***piv:***REMOVED***"\u03D6",
***REMOVED******REMOVED***ensp:***REMOVED***"\u2002",
***REMOVED******REMOVED***emsp:***REMOVED***"\u2003",
***REMOVED******REMOVED***thinsp:***REMOVED***"\u2009",
***REMOVED******REMOVED***zwnj:***REMOVED***"\u200C",
***REMOVED******REMOVED***zwj:***REMOVED***"\u200D",
***REMOVED******REMOVED***lrm:***REMOVED***"\u200E",
***REMOVED******REMOVED***rlm:***REMOVED***"\u200F",
***REMOVED******REMOVED***ndash:***REMOVED***"\u2013",
***REMOVED******REMOVED***mdash:***REMOVED***"\u2014",
***REMOVED******REMOVED***lsquo:***REMOVED***"\u2018",
***REMOVED******REMOVED***rsquo:***REMOVED***"\u2019",
***REMOVED******REMOVED***sbquo:***REMOVED***"\u201A",
***REMOVED******REMOVED***ldquo:***REMOVED***"\u201C",
***REMOVED******REMOVED***rdquo:***REMOVED***"\u201D",
***REMOVED******REMOVED***bdquo:***REMOVED***"\u201E",
***REMOVED******REMOVED***dagger:***REMOVED***"\u2020",
***REMOVED******REMOVED***Dagger:***REMOVED***"\u2021",
***REMOVED******REMOVED***bull:***REMOVED***"\u2022",
***REMOVED******REMOVED***hellip:***REMOVED***"\u2026",
***REMOVED******REMOVED***permil:***REMOVED***"\u2030",
***REMOVED******REMOVED***prime:***REMOVED***"\u2032",
***REMOVED******REMOVED***Prime:***REMOVED***"\u2033",
***REMOVED******REMOVED***lsaquo:***REMOVED***"\u2039",
***REMOVED******REMOVED***rsaquo:***REMOVED***"\u203A",
***REMOVED******REMOVED***oline:***REMOVED***"\u203E",
***REMOVED******REMOVED***frasl:***REMOVED***"\u2044",
***REMOVED******REMOVED***euro:***REMOVED***"\u20AC",
***REMOVED******REMOVED***image:***REMOVED***"\u2111",
***REMOVED******REMOVED***weierp:***REMOVED***"\u2118",
***REMOVED******REMOVED***real:***REMOVED***"\u211C",
***REMOVED******REMOVED***trade:***REMOVED***"\u2122",
***REMOVED******REMOVED***alefsym:***REMOVED***"\u2135",
***REMOVED******REMOVED***larr:***REMOVED***"\u2190",
***REMOVED******REMOVED***uarr:***REMOVED***"\u2191",
***REMOVED******REMOVED***rarr:***REMOVED***"\u2192",
***REMOVED******REMOVED***darr:***REMOVED***"\u2193",
***REMOVED******REMOVED***harr:***REMOVED***"\u2194",
***REMOVED******REMOVED***crarr:***REMOVED***"\u21B5",
***REMOVED******REMOVED***lArr:***REMOVED***"\u21D0",
***REMOVED******REMOVED***uArr:***REMOVED***"\u21D1",
***REMOVED******REMOVED***rArr:***REMOVED***"\u21D2",
***REMOVED******REMOVED***dArr:***REMOVED***"\u21D3",
***REMOVED******REMOVED***hArr:***REMOVED***"\u21D4",
***REMOVED******REMOVED***forall:***REMOVED***"\u2200",
***REMOVED******REMOVED***part:***REMOVED***"\u2202",
***REMOVED******REMOVED***exist:***REMOVED***"\u2203",
***REMOVED******REMOVED***empty:***REMOVED***"\u2205",
***REMOVED******REMOVED***nabla:***REMOVED***"\u2207",
***REMOVED******REMOVED***isin:***REMOVED***"\u2208",
***REMOVED******REMOVED***notin:***REMOVED***"\u2209",
***REMOVED******REMOVED***ni:***REMOVED***"\u220B",
***REMOVED******REMOVED***prod:***REMOVED***"\u220F",
***REMOVED******REMOVED***sum:***REMOVED***"\u2211",
***REMOVED******REMOVED***minus:***REMOVED***"\u2212",
***REMOVED******REMOVED***lowast:***REMOVED***"\u2217",
***REMOVED******REMOVED***radic:***REMOVED***"\u221A",
***REMOVED******REMOVED***prop:***REMOVED***"\u221D",
***REMOVED******REMOVED***infin:***REMOVED***"\u221E",
***REMOVED******REMOVED***ang:***REMOVED***"\u2220",
***REMOVED******REMOVED***and:***REMOVED***"\u2227",
***REMOVED******REMOVED***or:***REMOVED***"\u2228",
***REMOVED******REMOVED***cap:***REMOVED***"\u2229",
***REMOVED******REMOVED***cup:***REMOVED***"\u222A",
***REMOVED******REMOVED***int:***REMOVED***"\u222B",
***REMOVED******REMOVED***there4:***REMOVED***"\u2234",
***REMOVED******REMOVED***sim:***REMOVED***"\u223C",
***REMOVED******REMOVED***cong:***REMOVED***"\u2245",
***REMOVED******REMOVED***asymp:***REMOVED***"\u2248",
***REMOVED******REMOVED***ne:***REMOVED***"\u2260",
***REMOVED******REMOVED***equiv:***REMOVED***"\u2261",
***REMOVED******REMOVED***le:***REMOVED***"\u2264",
***REMOVED******REMOVED***ge:***REMOVED***"\u2265",
***REMOVED******REMOVED***sub:***REMOVED***"\u2282",
***REMOVED******REMOVED***sup:***REMOVED***"\u2283",
***REMOVED******REMOVED***nsub:***REMOVED***"\u2284",
***REMOVED******REMOVED***sube:***REMOVED***"\u2286",
***REMOVED******REMOVED***supe:***REMOVED***"\u2287",
***REMOVED******REMOVED***oplus:***REMOVED***"\u2295",
***REMOVED******REMOVED***otimes:***REMOVED***"\u2297",
***REMOVED******REMOVED***perp:***REMOVED***"\u22A5",
***REMOVED******REMOVED***sdot:***REMOVED***"\u22C5",
***REMOVED******REMOVED***lceil:***REMOVED***"\u2308",
***REMOVED******REMOVED***rceil:***REMOVED***"\u2309",
***REMOVED******REMOVED***lfloor:***REMOVED***"\u230A",
***REMOVED******REMOVED***rfloor:***REMOVED***"\u230B",
***REMOVED******REMOVED***lang:***REMOVED***"\u2329",
***REMOVED******REMOVED***rang:***REMOVED***"\u232A",
***REMOVED******REMOVED***loz:***REMOVED***"\u25CA",
***REMOVED******REMOVED***spades:***REMOVED***"\u2660",
***REMOVED******REMOVED***clubs:***REMOVED***"\u2663",
***REMOVED******REMOVED***hearts:***REMOVED***"\u2665",
***REMOVED******REMOVED***diams:***REMOVED***"\u2666"
};
const***REMOVED***lineBreak***REMOVED***=***REMOVED***/\r\n|[\r\n\u2028\u2029]/;
const***REMOVED***lineBreakG***REMOVED***=***REMOVED***new***REMOVED***RegExp(lineBreak.source,***REMOVED***"g");
function***REMOVED***isNewLine(code)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8232:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8233:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
}
function***REMOVED***hasNewLine(input,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***start;***REMOVED***i***REMOVED***<***REMOVED***end;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNewLine(input.charCodeAt(i)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
const***REMOVED***skipWhiteSpace***REMOVED***=***REMOVED***/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
const***REMOVED***skipWhiteSpaceInLine***REMOVED***=***REMOVED***/(?:[^\S\n\r\u2028\u2029]|\/\/.*|\/\*.*?\*\/)*/g;
function***REMOVED***isWhitespace(code)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x0009:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x000b:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x000c:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***32:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***160:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5760:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2000:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2001:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2002:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2003:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2004:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2005:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2006:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2007:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2008:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x2009:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x200a:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x202f:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x205f:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0x3000:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0xfeff:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
}
const***REMOVED***JsxErrors***REMOVED***=***REMOVED***ParseErrorEnum`jsx`({
***REMOVED******REMOVED***AttributeIsEmpty:***REMOVED***"JSX***REMOVED***attributes***REMOVED***must***REMOVED***only***REMOVED***be***REMOVED***assigned***REMOVED***a***REMOVED***non-empty***REMOVED***expression.",
***REMOVED******REMOVED***MissingClosingTagElement:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***openingTagName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Expected***REMOVED***corresponding***REMOVED***JSX***REMOVED***closing***REMOVED***tag***REMOVED***for***REMOVED***<${openingTagName}>.`,
***REMOVED******REMOVED***MissingClosingTagFragment:***REMOVED***"Expected***REMOVED***corresponding***REMOVED***JSX***REMOVED***closing***REMOVED***tag***REMOVED***for***REMOVED***<>.",
***REMOVED******REMOVED***UnexpectedSequenceExpression:***REMOVED***"Sequence***REMOVED***expressions***REMOVED***cannot***REMOVED***be***REMOVED***directly***REMOVED***nested***REMOVED***inside***REMOVED***JSX.***REMOVED***Did***REMOVED***you***REMOVED***mean***REMOVED***to***REMOVED***wrap***REMOVED***it***REMOVED***in***REMOVED***parentheses***REMOVED***(...)?",
***REMOVED******REMOVED***UnexpectedToken:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***unexpected,
***REMOVED******REMOVED******REMOVED******REMOVED***HTMLEntity
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Unexpected***REMOVED***token***REMOVED***\`${unexpected}\`.***REMOVED***Did***REMOVED***you***REMOVED***mean***REMOVED***\`${HTMLEntity}\`***REMOVED***or***REMOVED***\`{'${unexpected}'}\`?`,
***REMOVED******REMOVED***UnsupportedJsxValue:***REMOVED***"JSX***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***either***REMOVED***an***REMOVED***expression***REMOVED***or***REMOVED***a***REMOVED***quoted***REMOVED***JSX***REMOVED***text.",
***REMOVED******REMOVED***UnterminatedJsxContent:***REMOVED***"Unterminated***REMOVED***JSX***REMOVED***contents.",
***REMOVED******REMOVED***UnwrappedAdjacentJSXElements:***REMOVED***"Adjacent***REMOVED***JSX***REMOVED***elements***REMOVED***must***REMOVED***be***REMOVED***wrapped***REMOVED***in***REMOVED***an***REMOVED***enclosing***REMOVED***tag.***REMOVED***Did***REMOVED***you***REMOVED***want***REMOVED***a***REMOVED***JSX***REMOVED***fragment***REMOVED***<>...</>?"
});
function***REMOVED***isFragment(object)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***object***REMOVED***?***REMOVED***object.type***REMOVED***===***REMOVED***"JSXOpeningFragment"***REMOVED***||***REMOVED***object.type***REMOVED***===***REMOVED***"JSXClosingFragment"***REMOVED***:***REMOVED***false;
}
function***REMOVED***getQualifiedJSXName(object)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(object.type***REMOVED***===***REMOVED***"JSXIdentifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***object.name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(object.type***REMOVED***===***REMOVED***"JSXNamespacedName")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***object.namespace.name***REMOVED***+***REMOVED***":"***REMOVED***+***REMOVED***object.name.name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(object.type***REMOVED***===***REMOVED***"JSXMemberExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getQualifiedJSXName(object.object)***REMOVED***+***REMOVED***"."***REMOVED***+***REMOVED***getQualifiedJSXName(object.property);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Node***REMOVED***had***REMOVED***unexpected***REMOVED***type:***REMOVED***"***REMOVED***+***REMOVED***object.type);
}
var***REMOVED***jsx***REMOVED***=***REMOVED***superClass***REMOVED***=>***REMOVED***class***REMOVED***JSXParserMixin***REMOVED***extends***REMOVED***superClass***REMOVED***{
***REMOVED******REMOVED***jsxReadToken()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***out***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***>=***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(JsxErrors.UnterminatedJsxContent,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***60:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***123:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***===***REMOVED***this.state.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***60***REMOVED***&&***REMOVED***this.state.canStartJSXElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(143);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.getTokenFromCode(ch);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(142,***REMOVED***out);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***38:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.jsxReadEntity();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***62:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***125:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNewLine(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.jsxReadNewLine(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxReadNewLine(normalizeCRLF)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***out;
***REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***13***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos)***REMOVED***===***REMOVED***10)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***=***REMOVED***normalizeCRLF***REMOVED***?***REMOVED***"\n"***REMOVED***:***REMOVED***"\r\n";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***=***REMOVED***String.fromCharCode(ch);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***++this.state.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.lineStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxReadString(quote)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***out***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***chunkStart***REMOVED***=***REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***>=***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedString,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***quote)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***38)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.jsxReadEntity();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isNewLine(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.jsxReadNewLine(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos++);
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(134,***REMOVED***out);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxReadEntity()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startPos***REMOVED***=***REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.codePointAtPos(this.state.pos)***REMOVED***===***REMOVED***35)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***radix***REMOVED***=***REMOVED***10;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.codePointAtPos(this.state.pos)***REMOVED***===***REMOVED***120)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***radix***REMOVED***=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***codePoint***REMOVED***=***REMOVED***this.readInt(radix,***REMOVED***undefined,***REMOVED***false,***REMOVED***"bail");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(codePoint***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***this.codePointAtPos(this.state.pos)***REMOVED***===***REMOVED***59)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String.fromCodePoint(codePoint);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***count***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***semi***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(count++***REMOVED***<***REMOVED***10***REMOVED***&&***REMOVED***this.state.pos***REMOVED***<***REMOVED***this.length***REMOVED***&&***REMOVED***!(semi***REMOVED***=***REMOVED***this.codePointAtPos(this.state.pos)***REMOVED***===***REMOVED***59))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(semi)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***desc***REMOVED***=***REMOVED***this.input.slice(startPos,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entity***REMOVED***=***REMOVED***entities[desc];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(entity)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***startPos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"&";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxReadWord()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ch;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(++this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(isIdentifierChar(ch)***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***45);
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(141,***REMOVED***this.input.slice(start,***REMOVED***this.state.pos));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseIdentifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(141))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsKeyword(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***tokenLabelName(this.state.type);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXIdentifier");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseNamespacedName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.jsxParseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(14))***REMOVED***return***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.jsxParseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXNamespacedName");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseElementName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***node***REMOVED***=***REMOVED***this.jsxParseNamespacedName();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"JSXNamespacedName")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.object***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.property***REMOVED***=***REMOVED***this.jsxParseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.finishNode(newNode,***REMOVED***"JSXMemberExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseAttributeValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(types.brace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.jsxParseExpressionContainer(node,***REMOVED***types.j_oTag);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.expression.type***REMOVED***===***REMOVED***"JSXEmptyExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(JsxErrors.AttributeIsEmpty,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***143:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(JsxErrors.UnsupportedJsxValue,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseEmptyExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(this.state.lastTokEndLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNodeAt(node,***REMOVED***"JSXEmptyExpression",***REMOVED***this.state.startLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseSpreadChild(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(types.j_expr);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXSpreadChild");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseExpressionContainer(node,***REMOVED***previousContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.jsxParseEmptyExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(previousContext);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXExpressionContainer");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseAttribute()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(types.brace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(21);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(types.j_oTag);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXSpreadAttribute");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.jsxParseNamespacedName();
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.eat(29)***REMOVED***?***REMOVED***this.jsxParseAttributeValue()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXAttribute");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseOpeningElementAt(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(144))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXOpeningFragment");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.jsxParseElementName();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.jsxParseOpeningElementAfterName(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseOpeningElementAfterName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attributes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(56)***REMOVED***&&***REMOVED***!this.match(144))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attributes.push(this.jsxParseAttribute());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.attributes***REMOVED***=***REMOVED***attributes;
***REMOVED******REMOVED******REMOVED******REMOVED***node.selfClosing***REMOVED***=***REMOVED***this.eat(56);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(144);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXOpeningElement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseClosingElementAt(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(144))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXClosingFragment");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.jsxParseElementName();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(144);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"JSXClosingElement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseElementAt(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***openingElement***REMOVED***=***REMOVED***this.jsxParseOpeningElementAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***closingElement***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!openingElement.selfClosing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***contents:***REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***143:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(56))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closingElement***REMOVED***=***REMOVED***this.jsxParseClosingElementAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***contents;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.push(this.jsxParseElementAt(startLoc));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***142:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.push(this.parseLiteral(this.state.value,***REMOVED***"JSXText"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(types.brace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.push(this.jsxParseSpreadChild(node));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.push(this.jsxParseExpressionContainer(node,***REMOVED***types.j_expr));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFragment(openingElement)***REMOVED***&&***REMOVED***!isFragment(closingElement)***REMOVED***&&***REMOVED***closingElement***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(JsxErrors.MissingClosingTagFragment,***REMOVED***closingElement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isFragment(openingElement)***REMOVED***&&***REMOVED***isFragment(closingElement))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(JsxErrors.MissingClosingTagElement,***REMOVED***closingElement,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***openingTagName:***REMOVED***getQualifiedJSXName(openingElement.name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isFragment(openingElement)***REMOVED***&&***REMOVED***!isFragment(closingElement))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getQualifiedJSXName(closingElement.name)***REMOVED***!==***REMOVED***getQualifiedJSXName(openingElement.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(JsxErrors.MissingClosingTagElement,***REMOVED***closingElement,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***openingTagName:***REMOVED***getQualifiedJSXName(openingElement.name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFragment(openingElement))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.openingFragment***REMOVED***=***REMOVED***openingElement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.closingFragment***REMOVED***=***REMOVED***closingElement;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.openingElement***REMOVED***=***REMOVED***openingElement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.closingElement***REMOVED***=***REMOVED***closingElement;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.children***REMOVED***=***REMOVED***children;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(JsxErrors.UnwrappedAdjacentJSXElements,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isFragment(openingElement)***REMOVED***?***REMOVED***this.finishNode(node,***REMOVED***"JSXFragment")***REMOVED***:***REMOVED***this.finishNode(node,***REMOVED***"JSXElement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseElement()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.jsxParseElementAt(startLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setContext(newContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***context[context.length***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***newContext;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprAtom(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(143))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.jsxParseElement();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(47)***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos)***REMOVED***!==***REMOVED***33)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.replaceToken(143);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.jsxParseElement();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExprAtom(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***skipSpace()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***curContext***REMOVED***=***REMOVED***this.curContext();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!curContext.preserveSpace)***REMOVED***super.skipSpace();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getTokenFromCode(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***this.curContext();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context***REMOVED***===***REMOVED***types.j_expr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.jsxReadToken();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context***REMOVED***===***REMOVED***types.j_oTag***REMOVED***||***REMOVED***context***REMOVED***===***REMOVED***types.j_cTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(code))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.jsxReadWord();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(144);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((code***REMOVED***===***REMOVED***34***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***39)***REMOVED***&&***REMOVED***context***REMOVED***===***REMOVED***types.j_oTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.jsxReadString(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***60***REMOVED***&&***REMOVED***this.state.canStartJSXElement***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1)***REMOVED***!==***REMOVED***33)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(143);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.getTokenFromCode(code);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***updateContext(prevType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***56***REMOVED***&&***REMOVED***prevType***REMOVED***===***REMOVED***143)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.splice(-2,***REMOVED***2,***REMOVED***types.j_cTag);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***143)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.push(types.j_oTag);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***144)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***context[context.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(out***REMOVED***===***REMOVED***types.j_oTag***REMOVED***&&***REMOVED***prevType***REMOVED***===***REMOVED***56***REMOVED***||***REMOVED***out***REMOVED***===***REMOVED***types.j_cTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***context[context.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***types.j_expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setContext(types.j_expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***tokenComesBeforeExpression(type);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
class***REMOVED***TypeScriptScope***REMOVED***extends***REMOVED***Scope***REMOVED***{
***REMOVED******REMOVED***constructor(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsNames***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
}
class***REMOVED***TypeScriptScopeHandler***REMOVED***extends***REMOVED***ScopeHandler***REMOVED***{
***REMOVED******REMOVED***constructor(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***this.importsStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***createScope(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.importsStack.push(new***REMOVED***Set());
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***TypeScriptScope(flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***enter(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***===***REMOVED***1024)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importsStack.push(new***REMOVED***Set());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.enter(flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***exit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***super.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***===***REMOVED***1024)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importsStack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***flags;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasImport(name,***REMOVED***allowShadow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***this.importsStack.length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.importsStack[len***REMOVED***-***REMOVED***1].has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowShadow***REMOVED***&&***REMOVED***len***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***len***REMOVED***-***REMOVED***1;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.importsStack[i].has(name))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declareName(name,***REMOVED***bindingType,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***4096)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasImport(name,***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(Errors.VarRedeclaration,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.importsStack[this.importsStack.length***REMOVED***-***REMOVED***1].add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***this.currentScope();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***scope.tsNames.get(name)***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***1024)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeExportDefined(scope,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.tsNames.set(name,***REMOVED***type***REMOVED***|***REMOVED***16);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.declareName(name,***REMOVED***bindingType,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(bindingType***REMOVED***&***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkRedeclarationInScope(scope,***REMOVED***name,***REMOVED***bindingType,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeExportDefined(scope,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type***REMOVED***|***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type***REMOVED***|***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***512)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type***REMOVED***|***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type***REMOVED***|***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***scope.tsNames.set(name,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isRedeclaredInScope(scope,***REMOVED***name,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***scope.tsNames.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((type***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isConst***REMOVED***=***REMOVED***!!(bindingType***REMOVED***&***REMOVED***512);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wasConst***REMOVED***=***REMOVED***(type***REMOVED***&***REMOVED***4)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isConst***REMOVED***!==***REMOVED***wasConst;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***128***REMOVED***&&***REMOVED***(type***REMOVED***&***REMOVED***8)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.names.get(name)***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!(bindingType***REMOVED***&***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***2***REMOVED***&&***REMOVED***(type***REMOVED***&***REMOVED***1)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isRedeclaredInScope(scope,***REMOVED***name,***REMOVED***bindingType);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkLocalExport(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasImport(name))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***this.scopeStack.length;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***len***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***this.scopeStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***scope.tsNames.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((type***REMOVED***&***REMOVED***1)***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***(type***REMOVED***&***REMOVED***16)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkLocalExport(id);
***REMOVED******REMOVED***}
}
class***REMOVED***ProductionParameterHandler***REMOVED***{
***REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.stacks***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***enter(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.stacks.push(flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***exit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.stacks.pop();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***currentFlags()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.stacks[this.stacks.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***hasAwait()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentFlags()***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***hasYield()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentFlags()***REMOVED***&***REMOVED***1)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***hasReturn()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentFlags()***REMOVED***&***REMOVED***4)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***hasIn()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.currentFlags()***REMOVED***&***REMOVED***8)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
}
function***REMOVED***functionFlags(isAsync,***REMOVED***isGenerator)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(isAsync***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(isGenerator***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0);
}
class***REMOVED***BaseParser***REMOVED***{
***REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.ambiguousScriptDifferentAst***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***sourceToOffsetPos(sourcePos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sourcePos***REMOVED***+***REMOVED***this.startIndex;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***offsetToSourcePos(offsetPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***offsetPos***REMOVED***-***REMOVED***this.startIndex;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasPlugin(pluginConfig)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***pluginConfig***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.plugins.has(pluginConfig);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[pluginName,***REMOVED***pluginOptions]***REMOVED***=***REMOVED***pluginConfig;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPlugin(pluginName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***actualOptions***REMOVED***=***REMOVED***this.plugins.get(pluginName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(pluginOptions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((actualOptions***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***actualOptions[key])***REMOVED***!==***REMOVED***pluginOptions[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getPluginOption(plugin,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$plugins$get;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(_this$plugins$get***REMOVED***=***REMOVED***this.plugins.get(plugin))***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_this$plugins$get[name];
***REMOVED******REMOVED***}
}
function***REMOVED***setTrailingComments(node,***REMOVED***comments)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.trailingComments***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.trailingComments***REMOVED***=***REMOVED***comments;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.trailingComments.unshift(...comments);
***REMOVED******REMOVED***}
}
function***REMOVED***setLeadingComments(node,***REMOVED***comments)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.leadingComments***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.leadingComments***REMOVED***=***REMOVED***comments;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.leadingComments.unshift(...comments);
***REMOVED******REMOVED***}
}
function***REMOVED***setInnerComments(node,***REMOVED***comments)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.innerComments***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.innerComments***REMOVED***=***REMOVED***comments;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.innerComments.unshift(...comments);
***REMOVED******REMOVED***}
}
function***REMOVED***adjustInnerComments(node,***REMOVED***elements,***REMOVED***commentWS)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***lastElement***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***elements.length;
***REMOVED******REMOVED***while***REMOVED***(lastElement***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***i***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***lastElement***REMOVED***=***REMOVED***elements[--i];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(lastElement***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***lastElement.start***REMOVED***>***REMOVED***commentWS.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setInnerComments(node,***REMOVED***commentWS.comments);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setTrailingComments(lastElement,***REMOVED***commentWS.comments);
***REMOVED******REMOVED***}
}
class***REMOVED***CommentsParser***REMOVED***extends***REMOVED***BaseParser***REMOVED***{
***REMOVED******REMOVED***addComment(comment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.filename)***REMOVED***comment.loc.filename***REMOVED***=***REMOVED***this.filename;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentsLen
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.comments.length***REMOVED***!==***REMOVED***commentsLen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comments.length***REMOVED***=***REMOVED***commentsLen;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.comments.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.commentsLen++;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***processComment(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentStack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentStackLength***REMOVED***=***REMOVED***commentStack.length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentStackLength***REMOVED***===***REMOVED***0)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***commentStackLength***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastCommentWS***REMOVED***=***REMOVED***commentStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastCommentWS.start***REMOVED***===***REMOVED***node.end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastCommentWS.leadingNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i--;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***nodeStart
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentWS***REMOVED***=***REMOVED***commentStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentEnd***REMOVED***=***REMOVED***commentWS.end;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentEnd***REMOVED***>***REMOVED***nodeStart)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentWS.containingNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeComment(commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentStack.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentEnd***REMOVED***===***REMOVED***nodeStart)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentWS.trailingNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finalizeComment(commentWS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$options;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***commentWS;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentWS.leadingNode***REMOVED***!==***REMOVED***null***REMOVED***||***REMOVED***commentWS.trailingNode***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentWS.leadingNode***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setTrailingComments(commentWS.leadingNode,***REMOVED***comments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentWS.trailingNode***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setLeadingComments(commentWS.trailingNode,***REMOVED***comments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***containingNode:***REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***commentStart
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***commentWS;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(this.offsetToSourcePos(commentStart)***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***44)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"RecordExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.properties,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"CallExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"OptionalCallExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.arguments,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ImportExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***[node.source,***REMOVED***(_node$options***REMOVED***=***REMOVED***node.options)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$options***REMOVED***:***REMOVED***null],***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"FunctionDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"FunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrowFunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectMethod":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassMethod":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassPrivateMethod":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.params,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TupleExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.elements,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ExportNamedDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ImportDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.specifiers,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEnumDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.members,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEnumBody":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adjustInnerComments(node,***REMOVED***node.members,***REMOVED***commentWS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setInnerComments(node,***REMOVED***comments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setInnerComments(node,***REMOVED***comments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finalizeRemainingComments()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentStack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***commentStack.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeComment(commentStack[i]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.commentStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetPreviousNodeTrailingComments(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentStack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***commentStack;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(length***REMOVED***===***REMOVED***0)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentWS***REMOVED***=***REMOVED***commentStack[length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentWS.leadingNode***REMOVED***===***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentWS.leadingNode***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***takeSurroundingComments(node,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentStack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentStackLength***REMOVED***=***REMOVED***commentStack.length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentStackLength***REMOVED***===***REMOVED***0)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***commentStackLength***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentWS***REMOVED***=***REMOVED***commentStack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentEnd***REMOVED***=***REMOVED***commentWS.end;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentStart***REMOVED***=***REMOVED***commentWS.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentStart***REMOVED***===***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentWS.leadingNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(commentEnd***REMOVED***===***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentWS.trailingNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(commentEnd***REMOVED***<***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
class***REMOVED***State***REMOVED***{
***REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***1024;
***REMOVED******REMOVED******REMOVED******REMOVED***this.startIndex***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.curLine***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.lineStart***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.startLoc***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.endLoc***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.errors***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.potentialArrowAt***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***this.noArrowAt***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.noArrowParamsConversionAt***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.topicContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxNumOfResolvableTopics:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxTopicIndex:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***this.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.commentsLen***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.commentStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***140;
***REMOVED******REMOVED******REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.lastTokEndLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.lastTokStartLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.context***REMOVED***=***REMOVED***[types.brace];
***REMOVED******REMOVED******REMOVED******REMOVED***this.firstInvalidTemplateEscapePos***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.strictErrors***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***this.tokensLength***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***strict()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***1)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***strict(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***1;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***init({
***REMOVED******REMOVED******REMOVED******REMOVED***strictMode,
***REMOVED******REMOVED******REMOVED******REMOVED***sourceType,
***REMOVED******REMOVED******REMOVED******REMOVED***startIndex,
***REMOVED******REMOVED******REMOVED******REMOVED***startLine,
***REMOVED******REMOVED******REMOVED******REMOVED***startColumn
***REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.strict***REMOVED***=***REMOVED***strictMode***REMOVED***===***REMOVED***false***REMOVED***?***REMOVED***false***REMOVED***:***REMOVED***strictMode***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***true***REMOVED***:***REMOVED***sourceType***REMOVED***===***REMOVED***"module";
***REMOVED******REMOVED******REMOVED******REMOVED***this.startIndex***REMOVED***=***REMOVED***startIndex;
***REMOVED******REMOVED******REMOVED******REMOVED***this.curLine***REMOVED***=***REMOVED***startLine;
***REMOVED******REMOVED******REMOVED******REMOVED***this.lineStart***REMOVED***=***REMOVED***-startColumn;
***REMOVED******REMOVED******REMOVED******REMOVED***this.startLoc***REMOVED***=***REMOVED***this.endLoc***REMOVED***=***REMOVED***new***REMOVED***Position(startLine,***REMOVED***startColumn,***REMOVED***startIndex);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***maybeInArrowParameters()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***2)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***maybeInArrowParameters(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***2;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-3;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***4)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***inType(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***4;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-5;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***noAnonFunctionType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***8)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***noAnonFunctionType(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***8;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-9;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***hasFlowComment()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***16)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***hasFlowComment(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***16;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-17;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***isAmbientContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***32)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***isAmbientContext(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***32;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-33;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inAbstractClass()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***64)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***inAbstractClass(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***64;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-65;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inDisallowConditionalTypesContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***128)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***inDisallowConditionalTypesContext(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***128;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-129;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***soloAwait()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***256)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***soloAwait(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***256;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-257;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***inFSharpPipelineDirectBody()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***512)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***inFSharpPipelineDirectBody(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***512;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-513;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***canStartJSXElement()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***1024)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***canStartJSXElement(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***1024;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-1025;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***containsEsc()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***2048)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***containsEsc(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***2048;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-2049;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***hasTopLevelAwait()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.flags***REMOVED***&***REMOVED***4096)***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***hasTopLevelAwait(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v)***REMOVED***this.flags***REMOVED***|=***REMOVED***4096;else***REMOVED***this.flags***REMOVED***&=***REMOVED***-4097;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***curPosition()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Position(this.curLine,***REMOVED***this.pos***REMOVED***-***REMOVED***this.lineStart,***REMOVED***this.pos***REMOVED***+***REMOVED***this.startIndex);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***clone()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***new***REMOVED***State();
***REMOVED******REMOVED******REMOVED******REMOVED***state.flags***REMOVED***=***REMOVED***this.flags;
***REMOVED******REMOVED******REMOVED******REMOVED***state.startIndex***REMOVED***=***REMOVED***this.startIndex;
***REMOVED******REMOVED******REMOVED******REMOVED***state.curLine***REMOVED***=***REMOVED***this.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED***state.lineStart***REMOVED***=***REMOVED***this.lineStart;
***REMOVED******REMOVED******REMOVED******REMOVED***state.startLoc***REMOVED***=***REMOVED***this.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***state.endLoc***REMOVED***=***REMOVED***this.endLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***state.errors***REMOVED***=***REMOVED***this.errors.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***state.potentialArrowAt***REMOVED***=***REMOVED***this.potentialArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED***state.noArrowAt***REMOVED***=***REMOVED***this.noArrowAt.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***state.noArrowParamsConversionAt***REMOVED***=***REMOVED***this.noArrowParamsConversionAt.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***state.topicContext***REMOVED***=***REMOVED***this.topicContext;
***REMOVED******REMOVED******REMOVED******REMOVED***state.labels***REMOVED***=***REMOVED***this.labels.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***state.commentsLen***REMOVED***=***REMOVED***this.commentsLen;
***REMOVED******REMOVED******REMOVED******REMOVED***state.commentStack***REMOVED***=***REMOVED***this.commentStack.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***state.pos***REMOVED***=***REMOVED***this.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***state.type***REMOVED***=***REMOVED***this.type;
***REMOVED******REMOVED******REMOVED******REMOVED***state.value***REMOVED***=***REMOVED***this.value;
***REMOVED******REMOVED******REMOVED******REMOVED***state.start***REMOVED***=***REMOVED***this.start;
***REMOVED******REMOVED******REMOVED******REMOVED***state.end***REMOVED***=***REMOVED***this.end;
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastTokEndLoc***REMOVED***=***REMOVED***this.lastTokEndLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***state.lastTokStartLoc***REMOVED***=***REMOVED***this.lastTokStartLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***state.context***REMOVED***=***REMOVED***this.context.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***state.firstInvalidTemplateEscapePos***REMOVED***=***REMOVED***this.firstInvalidTemplateEscapePos;
***REMOVED******REMOVED******REMOVED******REMOVED***state.strictErrors***REMOVED***=***REMOVED***this.strictErrors;
***REMOVED******REMOVED******REMOVED******REMOVED***state.tokensLength***REMOVED***=***REMOVED***this.tokensLength;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***state;
***REMOVED******REMOVED***}
}
var***REMOVED***_isDigit***REMOVED***=***REMOVED***function***REMOVED***isDigit(code)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***code***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***57;
};
const***REMOVED***forbiddenNumericSeparatorSiblings***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***decBinOct:***REMOVED***new***REMOVED***Set([46,***REMOVED***66,***REMOVED***69,***REMOVED***79,***REMOVED***95,***REMOVED***98,***REMOVED***101,***REMOVED***111]),
***REMOVED******REMOVED***hex:***REMOVED***new***REMOVED***Set([46,***REMOVED***88,***REMOVED***95,***REMOVED***120])
};
const***REMOVED***isAllowedNumericSeparatorSibling***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***bin:***REMOVED***ch***REMOVED***=>***REMOVED***ch***REMOVED***===***REMOVED***48***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***49,
***REMOVED******REMOVED***oct:***REMOVED***ch***REMOVED***=>***REMOVED***ch***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***55,
***REMOVED******REMOVED***dec:***REMOVED***ch***REMOVED***=>***REMOVED***ch***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***57,
***REMOVED******REMOVED***hex:***REMOVED***ch***REMOVED***=>***REMOVED***ch***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***57***REMOVED***||***REMOVED***ch***REMOVED***>=***REMOVED***65***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***70***REMOVED***||***REMOVED***ch***REMOVED***>=***REMOVED***97***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***102
};
function***REMOVED***readStringContents(type,***REMOVED***input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***errors)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***initialPos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***const***REMOVED***initialLineStart***REMOVED***=***REMOVED***lineStart;
***REMOVED******REMOVED***const***REMOVED***initialCurLine***REMOVED***=***REMOVED***curLine;
***REMOVED******REMOVED***let***REMOVED***out***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***firstInvalidLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***let***REMOVED***chunkStart***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***length
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>=***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.unterminated(initialPos,***REMOVED***initialLineStart,***REMOVED***initialCurLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***input.slice(chunkStart,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***input.charCodeAt(pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isStringEnd(type,***REMOVED***ch,***REMOVED***input,***REMOVED***pos))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***input.slice(chunkStart,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***92)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***input.slice(chunkStart,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***readEscapedChar(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***type***REMOVED***===***REMOVED***"template",***REMOVED***errors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(res.ch***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***!firstInvalidLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstInvalidLoc***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curLine
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***res.ch;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curLine
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***res);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***8232***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***8233)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***10***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***13)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"template")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***input.slice(chunkStart,***REMOVED***pos)***REMOVED***+***REMOVED***"\n";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***13***REMOVED***&&***REMOVED***input.charCodeAt(pos)***REMOVED***===***REMOVED***10)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***lineStart***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.unterminated(initialPos,***REMOVED***initialLineStart,***REMOVED***initialCurLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pos,
***REMOVED******REMOVED******REMOVED******REMOVED***str:***REMOVED***out,
***REMOVED******REMOVED******REMOVED******REMOVED***firstInvalidLoc,
***REMOVED******REMOVED******REMOVED******REMOVED***lineStart,
***REMOVED******REMOVED******REMOVED******REMOVED***curLine,
***REMOVED******REMOVED******REMOVED******REMOVED***containsInvalid:***REMOVED***!!firstInvalidLoc
***REMOVED******REMOVED***};
}
function***REMOVED***isStringEnd(type,***REMOVED***ch,***REMOVED***input,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"template")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ch***REMOVED***===***REMOVED***96***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***36***REMOVED***&&***REMOVED***input.charCodeAt(pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***123;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ch***REMOVED***===***REMOVED***(type***REMOVED***===***REMOVED***"double"***REMOVED***?***REMOVED***34***REMOVED***:***REMOVED***39);
}
function***REMOVED***readEscapedChar(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***inTemplate,***REMOVED***errors)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***throwOnInvalid***REMOVED***=***REMOVED***!inTemplate;
***REMOVED******REMOVED***pos++;
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***ch***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***pos,
***REMOVED******REMOVED******REMOVED******REMOVED***ch,
***REMOVED******REMOVED******REMOVED******REMOVED***lineStart,
***REMOVED******REMOVED******REMOVED******REMOVED***curLine
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***input.charCodeAt(pos++);
***REMOVED******REMOVED***switch***REMOVED***(ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***110:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("\n");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***114:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("\r");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***120:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readHexChar(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***2,***REMOVED***false,***REMOVED***throwOnInvalid,***REMOVED***errors));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res(code***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***String.fromCharCode(code));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***117:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readCodePoint(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***throwOnInvalid,***REMOVED***errors));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res(code***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***String.fromCodePoint(code));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***116:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("\t");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***98:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("\b");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***118:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("\u000b");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***102:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("\f");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(input.charCodeAt(pos)***REMOVED***===***REMOVED***10)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++curLine;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8232:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8233:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res("");
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***56:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***57:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inTemplate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.strictNumericEscape(pos***REMOVED***-***REMOVED***1,***REMOVED***lineStart,***REMOVED***curLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***ch***REMOVED***<=***REMOVED***55)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startPos***REMOVED***=***REMOVED***pos***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/^[0-7]+/.exec(input.slice(startPos,***REMOVED***pos***REMOVED***+***REMOVED***2));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***octalStr***REMOVED***=***REMOVED***match[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***octal***REMOVED***=***REMOVED***parseInt(octalStr,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(octal***REMOVED***>***REMOVED***255)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***octalStr***REMOVED***=***REMOVED***octalStr.slice(0,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***octal***REMOVED***=***REMOVED***parseInt(octalStr,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***octalStr.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***input.charCodeAt(pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(octalStr***REMOVED***!==***REMOVED***"0"***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***56***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***57)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inTemplate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.strictNumericEscape(startPos,***REMOVED***lineStart,***REMOVED***curLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res(String.fromCharCode(octal));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res(String.fromCharCode(ch));
***REMOVED******REMOVED***}
}
function***REMOVED***readHexChar(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***len,***REMOVED***forceLen,***REMOVED***throwOnInvalid,***REMOVED***errors)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***initialPos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***let***REMOVED***n;
***REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***n,
***REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***readInt(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***16,***REMOVED***len,***REMOVED***forceLen,***REMOVED***false,***REMOVED***errors,***REMOVED***!throwOnInvalid));
***REMOVED******REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(throwOnInvalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.invalidEscapeSequence(initialPos,***REMOVED***lineStart,***REMOVED***curLine);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***initialPos***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***n,
***REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED***};
}
function***REMOVED***readInt(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***radix,***REMOVED***len,***REMOVED***forceLen,***REMOVED***allowNumSeparator,***REMOVED***errors,***REMOVED***bailOnError)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED***const***REMOVED***forbiddenSiblings***REMOVED***=***REMOVED***radix***REMOVED***===***REMOVED***16***REMOVED***?***REMOVED***forbiddenNumericSeparatorSiblings.hex***REMOVED***:***REMOVED***forbiddenNumericSeparatorSiblings.decBinOct;
***REMOVED******REMOVED***const***REMOVED***isAllowedSibling***REMOVED***=***REMOVED***radix***REMOVED***===***REMOVED***16***REMOVED***?***REMOVED***isAllowedNumericSeparatorSibling.hex***REMOVED***:***REMOVED***radix***REMOVED***===***REMOVED***10***REMOVED***?***REMOVED***isAllowedNumericSeparatorSibling.dec***REMOVED***:***REMOVED***radix***REMOVED***===***REMOVED***8***REMOVED***?***REMOVED***isAllowedNumericSeparatorSibling.oct***REMOVED***:***REMOVED***isAllowedNumericSeparatorSibling.bin;
***REMOVED******REMOVED***let***REMOVED***invalid***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***total***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***e***REMOVED***=***REMOVED***len***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***Infinity***REMOVED***:***REMOVED***len;***REMOVED***i***REMOVED***<***REMOVED***e;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***code***REMOVED***=***REMOVED***input.charCodeAt(pos);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***val;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***95***REMOVED***&&***REMOVED***allowNumSeparator***REMOVED***!==***REMOVED***"bail")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***input.charCodeAt(pos***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***input.charCodeAt(pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowNumSeparator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bailOnError)***REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.numericSeparatorInEscapeSequence(pos,***REMOVED***lineStart,***REMOVED***curLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(Number.isNaN(next)***REMOVED***||***REMOVED***!isAllowedSibling(next)***REMOVED***||***REMOVED***forbiddenSiblings.has(prev)***REMOVED***||***REMOVED***forbiddenSiblings.has(next))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bailOnError)***REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.unexpectedNumericSeparator(pos,***REMOVED***lineStart,***REMOVED***curLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***>=***REMOVED***97)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***code***REMOVED***-***REMOVED***97***REMOVED***+***REMOVED***10;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***>=***REMOVED***65)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***code***REMOVED***-***REMOVED***65***REMOVED***+***REMOVED***10;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(_isDigit(code))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***code***REMOVED***-***REMOVED***48;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***>=***REMOVED***radix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***<=***REMOVED***9***REMOVED***&&***REMOVED***bailOnError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(val***REMOVED***<=***REMOVED***9***REMOVED***&&***REMOVED***errors.invalidDigit(pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***radix))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(forceLen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalid***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED***total***REMOVED***=***REMOVED***total***REMOVED*******REMOVED***radix***REMOVED***+***REMOVED***val;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***===***REMOVED***start***REMOVED***||***REMOVED***len***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***pos***REMOVED***-***REMOVED***start***REMOVED***!==***REMOVED***len***REMOVED***||***REMOVED***invalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***total,
***REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED***};
}
function***REMOVED***readCodePoint(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***throwOnInvalid,***REMOVED***errors)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***input.charCodeAt(pos);
***REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***123)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readHexChar(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***input.indexOf("}",***REMOVED***pos)***REMOVED***-***REMOVED***pos,***REMOVED***true,***REMOVED***throwOnInvalid,***REMOVED***errors));
***REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***code***REMOVED***>***REMOVED***0x10ffff)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(throwOnInvalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.invalidCodePoint(pos,***REMOVED***lineStart,***REMOVED***curLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readHexChar(input,***REMOVED***pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***4,***REMOVED***false,***REMOVED***throwOnInvalid,***REMOVED***errors));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED***};
}
function***REMOVED***buildPosition(pos,***REMOVED***lineStart,***REMOVED***curLine)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Position(curLine,***REMOVED***pos***REMOVED***-***REMOVED***lineStart,***REMOVED***pos);
}
const***REMOVED***VALID_REGEX_FLAGS***REMOVED***=***REMOVED***new***REMOVED***Set([103,***REMOVED***109,***REMOVED***115,***REMOVED***105,***REMOVED***121,***REMOVED***117,***REMOVED***100,***REMOVED***118]);
class***REMOVED***Token***REMOVED***{
***REMOVED******REMOVED***constructor(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startIndex***REMOVED***=***REMOVED***state.startIndex***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***state.type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.value***REMOVED***=***REMOVED***state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***startIndex***REMOVED***+***REMOVED***state.start;
***REMOVED******REMOVED******REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***startIndex***REMOVED***+***REMOVED***state.end;
***REMOVED******REMOVED******REMOVED******REMOVED***this.loc***REMOVED***=***REMOVED***new***REMOVED***SourceLocation(state.startLoc,***REMOVED***state.endLoc);
***REMOVED******REMOVED***}
}
class***REMOVED***Tokenizer***REMOVED***extends***REMOVED***CommentsParser***REMOVED***{
***REMOVED******REMOVED***constructor(options,***REMOVED***input)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLookahead***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.tokens***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.errorHandlers_readInt***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidDigit:***REMOVED***(pos,***REMOVED***lineStart,***REMOVED***curLine,***REMOVED***radix)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.optionFlags***REMOVED***&***REMOVED***2048))***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidDigit,***REMOVED***buildPosition(pos,***REMOVED***lineStart,***REMOVED***curLine),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***radix
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***numericSeparatorInEscapeSequence:***REMOVED***this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unexpectedNumericSeparator:***REMOVED***this.errorBuilder(Errors.UnexpectedNumericSeparator)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***this.errorHandlers_readCodePoint***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.errorHandlers_readInt,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidEscapeSequence:***REMOVED***this.errorBuilder(Errors.InvalidEscapeSequence),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidCodePoint:***REMOVED***this.errorBuilder(Errors.InvalidCodePoint)
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.errorHandlers_readStringContents_string***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.errorHandlers_readCodePoint,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictNumericEscape:***REMOVED***(pos,***REMOVED***lineStart,***REMOVED***curLine)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.recordStrictModeErrors(Errors.StrictNumericEscape,***REMOVED***buildPosition(pos,***REMOVED***lineStart,***REMOVED***curLine));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unterminated:***REMOVED***(pos,***REMOVED***lineStart,***REMOVED***curLine)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedString,***REMOVED***buildPosition(pos***REMOVED***-***REMOVED***1,***REMOVED***lineStart,***REMOVED***curLine));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.errorHandlers_readStringContents_template***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.errorHandlers_readCodePoint,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictNumericEscape:***REMOVED***this.errorBuilder(Errors.StrictNumericEscape),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unterminated:***REMOVED***(pos,***REMOVED***lineStart,***REMOVED***curLine)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedTemplate,***REMOVED***buildPosition(pos,***REMOVED***lineStart,***REMOVED***curLine));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***new***REMOVED***State();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.init(options);
***REMOVED******REMOVED******REMOVED******REMOVED***this.input***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED******REMOVED******REMOVED***this.length***REMOVED***=***REMOVED***input.length;
***REMOVED******REMOVED******REMOVED******REMOVED***this.comments***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLookahead***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushToken(token)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.tokens.length***REMOVED***=***REMOVED***this.state.tokensLength;
***REMOVED******REMOVED******REMOVED******REMOVED***this.tokens.push(token);
***REMOVED******REMOVED******REMOVED******REMOVED***++this.state.tokensLength;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***next()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkKeywordEscapes();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushToken(new***REMOVED***Token(this.state));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.lastTokEndLoc***REMOVED***=***REMOVED***this.state.endLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.lastTokStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.nextToken();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***eat(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***match(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.state.type***REMOVED***===***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***createLookaheadState(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos:***REMOVED***state.pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***state.type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***state.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***state.end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context:***REMOVED***[this.curContext()],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inType:***REMOVED***state.inType,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***state.startLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastTokEndLoc:***REMOVED***state.lastTokEndLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curLine:***REMOVED***state.curLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart:***REMOVED***state.lineStart,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curPosition:***REMOVED***state.curPosition
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***lookahead()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***old***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***this.createLookaheadState(old);
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLookahead***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.nextToken();
***REMOVED******REMOVED******REMOVED******REMOVED***this.isLookahead***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***curr***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***old;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***curr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nextTokenStart()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nextTokenStartSince(this.state.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nextTokenStartSince(pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***skipWhiteSpace.lastIndex***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***skipWhiteSpace.test(this.input)***REMOVED***?***REMOVED***skipWhiteSpace.lastIndex***REMOVED***:***REMOVED***pos;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***lookaheadCharCode()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.lookaheadCharCodeSince(this.state.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***lookaheadCharCodeSince(pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.input.charCodeAt(this.nextTokenStartSince(pos));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nextTokenInLineStart()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nextTokenInLineStartSince(this.state.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nextTokenInLineStartSince(pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***skipWhiteSpaceInLine.lastIndex***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***skipWhiteSpaceInLine.test(this.input)***REMOVED***?***REMOVED***skipWhiteSpaceInLine.lastIndex***REMOVED***:***REMOVED***pos;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***lookaheadInLineCharCode()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.input.charCodeAt(this.nextTokenInLineStart());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***codePointAtPos(pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cp***REMOVED***=***REMOVED***this.input.charCodeAt(pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((cp***REMOVED***&***REMOVED***0xfc00)***REMOVED***===***REMOVED***0xd800***REMOVED***&&***REMOVED***++pos***REMOVED***<***REMOVED***this.input.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trail***REMOVED***=***REMOVED***this.input.charCodeAt(pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((trail***REMOVED***&***REMOVED***0xfc00)***REMOVED***===***REMOVED***0xdc00)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cp***REMOVED***=***REMOVED***0x10000***REMOVED***+***REMOVED***((cp***REMOVED***&***REMOVED***0x3ff)***REMOVED***<<***REMOVED***10)***REMOVED***+***REMOVED***(trail***REMOVED***&***REMOVED***0x3ff);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cp;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setStrict(strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.strict***REMOVED***=***REMOVED***strict;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.strictErrors.forEach(([toParseError,***REMOVED***at])***REMOVED***=>***REMOVED***this.raise(toParseError,***REMOVED***at));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.strictErrors.clear();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***curContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.state.context[this.state.context.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nextToken()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.skipSpace();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isLookahead)***REMOVED***this.state.startLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***>=***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(140);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.getTokenFromCode(this.codePointAtPos(this.state.pos));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***skipBlockComment(commentEnd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isLookahead)***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***this.input.indexOf(commentEnd,***REMOVED***start***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(end***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedComment,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***end***REMOVED***+***REMOVED***commentEnd.length;
***REMOVED******REMOVED******REMOVED******REMOVED***lineBreakG.lastIndex***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(lineBreakG.test(this.input)***REMOVED***&&***REMOVED***lineBreakG.lastIndex***REMOVED***<=***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.lineStart***REMOVED***=***REMOVED***lineBreakG.lastIndex;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isLookahead)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comment***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"CommentBlock",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.input.slice(start***REMOVED***+***REMOVED***2,***REMOVED***end),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***this.sourceToOffsetPos(start),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***this.sourceToOffsetPos(end***REMOVED***+***REMOVED***commentEnd.length),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***new***REMOVED***SourceLocation(startLoc,***REMOVED***this.state.curPosition())
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***256)***REMOVED***this.pushToken(comment);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***comment;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***skipLineComment(startSkip)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isLookahead)***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+=***REMOVED***startSkip);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***<***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!isNewLine(ch)***REMOVED***&&***REMOVED***++this.state.pos***REMOVED***<***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isLookahead)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.input.slice(start***REMOVED***+***REMOVED***startSkip,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comment***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"CommentLine",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***this.sourceToOffsetPos(start),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***this.sourceToOffsetPos(end),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***new***REMOVED***SourceLocation(startLoc,***REMOVED***this.state.curPosition())
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***256)***REMOVED***this.pushToken(comment);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***comment;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***skipSpace()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***spaceStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comments***REMOVED***=***REMOVED***this.optionFlags***REMOVED***&***REMOVED***4096***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***loop:***REMOVED***while***REMOVED***(this.state.pos***REMOVED***<***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***32:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***160:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***9:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***10)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8232:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8233:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.curLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.lineStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***42:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comment***REMOVED***=***REMOVED***this.skipBlockComment("*/");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comment***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addComment(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***comments.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comment***REMOVED***=***REMOVED***this.skipLineComment(2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comment***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addComment(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***comments.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***loop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isWhitespace(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***45***REMOVED***&&***REMOVED***!this.inModule***REMOVED***&&***REMOVED***this.optionFlags***REMOVED***&***REMOVED***8192)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pos***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***45***REMOVED***&&***REMOVED***this.input.charCodeAt(pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***62***REMOVED***&&***REMOVED***(spaceStart***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***this.state.lineStart***REMOVED***>***REMOVED***spaceStart))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comment***REMOVED***=***REMOVED***this.skipLineComment(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comment***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addComment(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***comments.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***loop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***60***REMOVED***&&***REMOVED***!this.inModule***REMOVED***&&***REMOVED***this.optionFlags***REMOVED***&***REMOVED***8192)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pos***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***33***REMOVED***&&***REMOVED***this.input.charCodeAt(pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***45***REMOVED***&&***REMOVED***this.input.charCodeAt(pos***REMOVED***+***REMOVED***3)***REMOVED***===***REMOVED***45)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comment***REMOVED***=***REMOVED***this.skipLineComment(4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comment***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addComment(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***comments.push(comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***loop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break***REMOVED***loop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((comments***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***comments.length)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commentWhitespace***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***this.sourceToOffsetPos(spaceStart),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***this.sourceToOffsetPos(end),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comments,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leadingNode:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trailingNode:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***containingNode:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.commentStack.push(commentWhitespace);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishToken(type,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.end***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.endLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevType***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.value***REMOVED***=***REMOVED***val;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isLookahead)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.updateContext(prevType);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***replaceToken(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.updateContext();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_numberSign()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.readToken_interpreter())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextPos***REMOVED***=***REMOVED***this.state.pos***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.codePointAtPos(nextPos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***next***REMOVED***<=***REMOVED***57)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnexpectedDigitAfterHash,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***123***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***91***REMOVED***&&***REMOVED***this.hasPlugin("recordAndTuple"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("recordAndTuple");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("recordAndTuple",***REMOVED***"syntaxType")***REMOVED***===***REMOVED***"bar")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(next***REMOVED***===***REMOVED***123***REMOVED***?***REMOVED***Errors.RecordExpressionHashIncorrectStartSyntaxType***REMOVED***:***REMOVED***Errors.TupleExpressionHashIncorrectStartSyntaxType,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***123)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(7);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isIdentifierStart(next))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(139,***REMOVED***this.readWord1(next));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***92)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(139,***REMOVED***this.readWord1());
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(27,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_dot()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***next***REMOVED***<=***REMOVED***57)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readNumber(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***46***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***46)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***3;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(21);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(16);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_slash()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(31,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(56,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_interpreter()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.pos***REMOVED***!==***REMOVED***0***REMOVED***||***REMOVED***this.length***REMOVED***<***REMOVED***2)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***!==***REMOVED***33)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!isNewLine(ch)***REMOVED***&&***REMOVED***++this.state.pos***REMOVED***<***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.input.slice(start***REMOVED***+***REMOVED***2,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(28,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_mult_modulo(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***42***REMOVED***?***REMOVED***55***REMOVED***:***REMOVED***54;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***width***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***42***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***42)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***width++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***57;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61***REMOVED***&&***REMOVED***!this.state.inType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***width++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***37***REMOVED***?***REMOVED***33***REMOVED***:***REMOVED***30;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(type,***REMOVED***width);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_pipe_amp(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(30,***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(code***REMOVED***===***REMOVED***124***REMOVED***?***REMOVED***41***REMOVED***:***REMOVED***42,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***124)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(39,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("recordAndTuple")***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***125)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("recordAndTuple",***REMOVED***"syntaxType")***REMOVED***!==***REMOVED***"bar")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(9);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("recordAndTuple")***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***93)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("recordAndTuple",***REMOVED***"syntaxType")***REMOVED***!==***REMOVED***"bar")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(30,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(code***REMOVED***===***REMOVED***124***REMOVED***?***REMOVED***43***REMOVED***:***REMOVED***45,***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_caret()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61***REMOVED***&&***REMOVED***!this.state.inType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(32,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***94***REMOVED***&&***REMOVED***this.hasPlugin(["pipelineOperator",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proposal:***REMOVED***"hack",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***topicToken:***REMOVED***"^^"
***REMOVED******REMOVED******REMOVED******REMOVED***}]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(37,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookaheadCh***REMOVED***=***REMOVED***this.input.codePointAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lookaheadCh***REMOVED***===***REMOVED***94)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(44,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_atSign()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***64***REMOVED***&&***REMOVED***this.hasPlugin(["pipelineOperator",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proposal:***REMOVED***"hack",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***topicToken:***REMOVED***"@@"
***REMOVED******REMOVED******REMOVED******REMOVED***}]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(38,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(26,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_plus_min(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(34,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(30,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(53,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_lt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***60)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(30,***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(51,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(49,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(47,***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_gt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***size***REMOVED***=***REMOVED***this.input.charCodeAt(pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***62***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(pos***REMOVED***+***REMOVED***size)***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(30,***REMOVED***size***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(52,***REMOVED***size);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(49,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(48,***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_eq_excl(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(46,***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***2)***REMOVED***===***REMOVED***61***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***61***REMOVED***&&***REMOVED***next***REMOVED***===***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(19);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(code***REMOVED***===***REMOVED***61***REMOVED***?***REMOVED***29***REMOVED***:***REMOVED***35,***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readToken_question()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next2***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***63)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next2***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(30,***REMOVED***3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(40,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***46***REMOVED***&&***REMOVED***!(next2***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***next2***REMOVED***<=***REMOVED***57))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(18);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(17);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getTokenFromCode(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***46:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_dot();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***40:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***41:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***59:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(13);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***44:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***91:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("recordAndTuple")***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***124)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("recordAndTuple",***REMOVED***"syntaxType")***REMOVED***!==***REMOVED***"bar")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***93:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***123:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("recordAndTuple")***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***124)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("recordAndTuple",***REMOVED***"syntaxType")***REMOVED***!==***REMOVED***"bar")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(6);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(5);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***125:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***58:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("functionBind")***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***58)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(15,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***63:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_question();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***96:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readTemplateToken();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***48:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***120***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***88)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readRadixNumber(16);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***111***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***79)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readRadixNumber(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***98***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***66)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readRadixNumber(2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***49:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***50:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***51:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***52:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***53:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***54:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***55:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***56:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***57:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readNumber(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***34:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***39:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readString(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_slash();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***37:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***42:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_mult_modulo(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***124:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***38:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_pipe_amp(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***94:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_caret();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***43:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***45:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_plus_min(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***60:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_lt();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***62:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_gt();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***61:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***33:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_eq_excl(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***126:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(36,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***64:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_atSign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***35:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_numberSign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***92:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readWord();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(code))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readWord(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.InvalidOrUnexpectedToken,***REMOVED***this.state.curPosition(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unexpected:***REMOVED***String.fromCodePoint(code)
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishOp(type,***REMOVED***size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***str***REMOVED***=***REMOVED***this.input.slice(this.state.pos,***REMOVED***this.state.pos***REMOVED***+***REMOVED***size);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(type,***REMOVED***str);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readRegexp()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.start***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***escaped,***REMOVED***inClass;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;***REMOVED***++pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***>=***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedRegExp,***REMOVED***createPositionWithColumnOffset(startLoc,***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.input.charCodeAt(pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNewLine(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnterminatedRegExp,***REMOVED***createPositionWithColumnOffset(startLoc,***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***91)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inClass***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***93***REMOVED***&&***REMOVED***inClass)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inClass***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***47***REMOVED***&&***REMOVED***!inClass)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***ch***REMOVED***===***REMOVED***92;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***content***REMOVED***=***REMOVED***this.input.slice(start,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***mods***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextPos***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***createPositionWithColumnOffset(startLoc,***REMOVED***pos***REMOVED***+***REMOVED***2***REMOVED***-***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cp***REMOVED***=***REMOVED***this.codePointAtPos(pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***char***REMOVED***=***REMOVED***String.fromCharCode(cp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(VALID_REGEX_FLAGS.has(cp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cp***REMOVED***===***REMOVED***118)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mods.includes("u"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.IncompatibleRegExpUVFlags,***REMOVED***nextPos());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(cp***REMOVED***===***REMOVED***117)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mods.includes("v"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.IncompatibleRegExpUVFlags,***REMOVED***nextPos());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mods.includes(char))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DuplicateRegExpFlags,***REMOVED***nextPos());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isIdentifierChar(cp)***REMOVED***||***REMOVED***cp***REMOVED***===***REMOVED***92)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.MalformedRegExpFlags,***REMOVED***nextPos());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mods***REMOVED***+=***REMOVED***char;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(138,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern:***REMOVED***content,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags:***REMOVED***mods
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readInt(radix,***REMOVED***len,***REMOVED***forceLen***REMOVED***=***REMOVED***false,***REMOVED***allowNumSeparator***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readInt(this.input,***REMOVED***this.state.pos,***REMOVED***this.state.lineStart,***REMOVED***this.state.curLine,***REMOVED***radix,***REMOVED***len,***REMOVED***forceLen,***REMOVED***allowNumSeparator,***REMOVED***this.errorHandlers_readInt,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***n;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readRadixNumber(radix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isBigInt***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***this.readInt(radix);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidDigit,***REMOVED***createPositionWithColumnOffset(startLoc,***REMOVED***2),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***radix
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***110)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBigInt***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***109)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.InvalidDecimal,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(this.codePointAtPos(this.state.pos)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.NumberIdentifier,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBigInt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***str***REMOVED***=***REMOVED***this.input.slice(start,***REMOVED***this.state.pos).replace(/[_n]/g,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(136,***REMOVED***str);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(135,***REMOVED***val);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readNumber(startsWithDot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isFloat***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isBigInt***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasExponent***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isOctal***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!startsWithDot***REMOVED***&&***REMOVED***this.readInt(10)***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidNumber,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasLeadingZero***REMOVED***=***REMOVED***this.state.pos***REMOVED***-***REMOVED***start***REMOVED***>=***REMOVED***2***REMOVED***&&***REMOVED***this.input.charCodeAt(start)***REMOVED***===***REMOVED***48;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasLeadingZero)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***integer***REMOVED***=***REMOVED***this.input.slice(start,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.recordStrictModeErrors(Errors.StrictOctalLiteral,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***underscorePos***REMOVED***=***REMOVED***integer.indexOf("_");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(underscorePos***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ZeroDigitNumericSeparator,***REMOVED***createPositionWithColumnOffset(startLoc,***REMOVED***underscorePos));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isOctal***REMOVED***=***REMOVED***hasLeadingZero***REMOVED***&&***REMOVED***!/[89]/.test(integer);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***46***REMOVED***&&***REMOVED***!isOctal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readInt(10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFloat***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((next***REMOVED***===***REMOVED***69***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***101)***REMOVED***&&***REMOVED***!isOctal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(++this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***43***REMOVED***||***REMOVED***next***REMOVED***===***REMOVED***45)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.readInt(10)***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidOrMissingExponent,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFloat***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasExponent***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.input.charCodeAt(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***110)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFloat***REMOVED***||***REMOVED***hasLeadingZero)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidBigIntLiteral,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBigInt***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***109)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("decimal",***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasExponent***REMOVED***||***REMOVED***hasLeadingZero)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidDecimal,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isDecimal***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(this.codePointAtPos(this.state.pos)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.NumberIdentifier,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***str***REMOVED***=***REMOVED***this.input.slice(start,***REMOVED***this.state.pos).replace(/[_mn]/g,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBigInt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(136,***REMOVED***str);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDecimal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(137,***REMOVED***str);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***isOctal***REMOVED***?***REMOVED***parseInt(str,***REMOVED***8)***REMOVED***:***REMOVED***parseFloat(str);
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(135,***REMOVED***val);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readCodePoint(throwOnInvalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readCodePoint(this.input,***REMOVED***this.state.pos,***REMOVED***this.state.lineStart,***REMOVED***this.state.curLine,***REMOVED***throwOnInvalid,***REMOVED***this.errorHandlers_readCodePoint);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***code;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readString(quote)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readStringContents(quote***REMOVED***===***REMOVED***34***REMOVED***?***REMOVED***"double"***REMOVED***:***REMOVED***"single",***REMOVED***this.input,***REMOVED***this.state.pos***REMOVED***+***REMOVED***1,***REMOVED***this.state.lineStart,***REMOVED***this.state.curLine,***REMOVED***this.errorHandlers_readStringContents_string);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***pos***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.lineStart***REMOVED***=***REMOVED***lineStart;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.curLine***REMOVED***=***REMOVED***curLine;
***REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(134,***REMOVED***str);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readTemplateContinuation()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos--;
***REMOVED******REMOVED******REMOVED******REMOVED***this.readTemplateToken();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readTemplateToken()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***opening***REMOVED***=***REMOVED***this.input[this.state.pos];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstInvalidLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lineStart
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***readStringContents("template",***REMOVED***this.input,***REMOVED***this.state.pos***REMOVED***+***REMOVED***1,***REMOVED***this.state.lineStart,***REMOVED***this.state.curLine,***REMOVED***this.errorHandlers_readStringContents_template);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***=***REMOVED***pos***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.lineStart***REMOVED***=***REMOVED***lineStart;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.curLine***REMOVED***=***REMOVED***curLine;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstInvalidLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.firstInvalidTemplateEscapePos***REMOVED***=***REMOVED***new***REMOVED***Position(firstInvalidLoc.curLine,***REMOVED***firstInvalidLoc.pos***REMOVED***-***REMOVED***firstInvalidLoc.lineStart,***REMOVED***this.sourceToOffsetPos(firstInvalidLoc.pos));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.codePointAt(pos)***REMOVED***===***REMOVED***96)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(24,***REMOVED***firstInvalidLoc***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***opening***REMOVED***+***REMOVED***str***REMOVED***+***REMOVED***"`");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(25,***REMOVED***firstInvalidLoc***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***opening***REMOVED***+***REMOVED***str***REMOVED***+***REMOVED***"${");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***recordStrictModeErrors(toParseError,***REMOVED***at)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***at.index;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.strict***REMOVED***&&***REMOVED***!this.state.strictErrors.has(index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(toParseError,***REMOVED***at);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.strictErrors.set(index,***REMOVED***[toParseError,***REMOVED***at]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readWord1(firstCode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.containsEsc***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***word***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstCode***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***firstCode***REMOVED***<=***REMOVED***0xffff***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.state.pos***REMOVED***<***REMOVED***this.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.codePointAtPos(this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierChar(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***+=***REMOVED***ch***REMOVED***<=***REMOVED***0xffff***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***92)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.containsEsc***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***escStart***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifierCheck***REMOVED***=***REMOVED***this.state.pos***REMOVED***===***REMOVED***start***REMOVED***?***REMOVED***isIdentifierStart***REMOVED***:***REMOVED***isIdentifierChar;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(++this.state.pos)***REMOVED***!==***REMOVED***117)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.MissingUnicodeEscape,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***++this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***esc***REMOVED***=***REMOVED***this.readCodePoint(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(esc***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!identifierCheck(esc))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.EscapedCharNotAnIdentifier,***REMOVED***escStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***String.fromCodePoint(esc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkStart***REMOVED***=***REMOVED***this.state.pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***word***REMOVED***+***REMOVED***this.input.slice(chunkStart,***REMOVED***this.state.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***readWord(firstCode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***word***REMOVED***=***REMOVED***this.readWord1(firstCode);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***keywords$1.get(word);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(type,***REMOVED***tokenLabelName(type));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishToken(132,***REMOVED***word);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkKeywordEscapes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeyword(type)***REMOVED***&&***REMOVED***this.state.containsEsc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidEscapedReservedWord,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedWord:***REMOVED***tokenLabelName(type)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***raise(toParseError,***REMOVED***at,***REMOVED***details***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loc***REMOVED***=***REMOVED***at***REMOVED***instanceof***REMOVED***Position***REMOVED***?***REMOVED***at***REMOVED***:***REMOVED***at.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***toParseError(loc,***REMOVED***details);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.optionFlags***REMOVED***&***REMOVED***2048))***REMOVED***throw***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isLookahead)***REMOVED***this.state.errors.push(error);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***raiseOverwrite(toParseError,***REMOVED***at,***REMOVED***details***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loc***REMOVED***=***REMOVED***at***REMOVED***instanceof***REMOVED***Position***REMOVED***?***REMOVED***at***REMOVED***:***REMOVED***at.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pos***REMOVED***=***REMOVED***loc.index;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***errors***REMOVED***=***REMOVED***this.state.errors;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***errors.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***errors[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error.loc.index***REMOVED***===***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***errors[i]***REMOVED***=***REMOVED***toParseError(loc,***REMOVED***details);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error.loc.index***REMOVED***<***REMOVED***pos)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.raise(toParseError,***REMOVED***at,***REMOVED***details);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***updateContext(prevType)***REMOVED***{}
***REMOVED******REMOVED***unexpected(loc,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnexpectedToken,***REMOVED***loc***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***loc***REMOVED***:***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expected:***REMOVED***type***REMOVED***?***REMOVED***tokenLabelName(type)***REMOVED***:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***expectPlugin(pluginName,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin(pluginName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.MissingPlugin,***REMOVED***loc***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***loc***REMOVED***:***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***missingPlugin:***REMOVED***[pluginName]
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***expectOnePlugin(pluginNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!pluginNames.some(name***REMOVED***=>***REMOVED***this.hasPlugin(name)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.MissingOneOfPlugins,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***missingPlugin:***REMOVED***pluginNames
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***errorBuilder(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(pos,***REMOVED***lineStart,***REMOVED***curLine)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(error,***REMOVED***buildPosition(pos,***REMOVED***lineStart,***REMOVED***curLine));
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
}
class***REMOVED***ClassScope***REMOVED***{
***REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.privateNames***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***this.loneAccessors***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedPrivateNames***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
}
class***REMOVED***ClassScopeHandler***REMOVED***{
***REMOVED******REMOVED***constructor(parser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.stack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.undefinedPrivateNames***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***parser;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***current()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.stack[this.stack.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***enter()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.stack.push(new***REMOVED***ClassScope());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***exit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldClassScope***REMOVED***=***REMOVED***this.stack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***current***REMOVED***=***REMOVED***this.current();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[name,***REMOVED***loc]***REMOVED***of***REMOVED***Array.from(oldClassScope.undefinedPrivateNames))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!current.undefinedPrivateNames.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current.undefinedPrivateNames.set(name,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(Errors.InvalidPrivateFieldResolution,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declarePrivateName(name,***REMOVED***elementType,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***privateNames,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loneAccessors,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***undefinedPrivateNames
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.current();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***redefined***REMOVED***=***REMOVED***privateNames.has(name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elementType***REMOVED***&***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessor***REMOVED***=***REMOVED***redefined***REMOVED***&&***REMOVED***loneAccessors.get(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldStatic***REMOVED***=***REMOVED***accessor***REMOVED***&***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newStatic***REMOVED***=***REMOVED***elementType***REMOVED***&***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldKind***REMOVED***=***REMOVED***accessor***REMOVED***&***REMOVED***3;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newKind***REMOVED***=***REMOVED***elementType***REMOVED***&***REMOVED***3;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redefined***REMOVED***=***REMOVED***oldKind***REMOVED***===***REMOVED***newKind***REMOVED***||***REMOVED***oldStatic***REMOVED***!==***REMOVED***newStatic;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!redefined)***REMOVED***loneAccessors.delete(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!redefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loneAccessors.set(name,***REMOVED***elementType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(redefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(Errors.PrivateNameRedeclaration,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***privateNames.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED***undefinedPrivateNames.delete(name);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***usePrivateName(name,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***classScope;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(classScope***REMOVED***of***REMOVED***this.stack)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(classScope.privateNames.has(name))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(classScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classScope.undefinedPrivateNames.set(name,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(Errors.InvalidPrivateFieldResolution,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
class***REMOVED***ExpressionScope***REMOVED***{
***REMOVED******REMOVED***constructor(type***REMOVED***=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***canBeArrowParameterDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.type***REMOVED***===***REMOVED***2***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isCertainlyParameterDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.type***REMOVED***===***REMOVED***3;
***REMOVED******REMOVED***}
}
class***REMOVED***ArrowHeadParsingScope***REMOVED***extends***REMOVED***ExpressionScope***REMOVED***{
***REMOVED******REMOVED***constructor(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(type);
***REMOVED******REMOVED******REMOVED******REMOVED***this.declarationErrors***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***recordDeclarationError(ParsingErrorClass,***REMOVED***at)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***at.index;
***REMOVED******REMOVED******REMOVED******REMOVED***this.declarationErrors.set(index,***REMOVED***[ParsingErrorClass,***REMOVED***at]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***clearDeclarationError(index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.declarationErrors.delete(index);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***iterateErrors(iterator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.declarationErrors.forEach(iterator);
***REMOVED******REMOVED***}
}
class***REMOVED***ExpressionScopeHandler***REMOVED***{
***REMOVED******REMOVED***constructor(parser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.stack***REMOVED***=***REMOVED***[new***REMOVED***ExpressionScope()];
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser***REMOVED***=***REMOVED***parser;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***enter(scope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.stack.push(scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***exit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.stack.pop();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***recordParameterInitializerError(toParseError,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***origin***REMOVED***=***REMOVED***node.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***stack.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***scope***REMOVED***=***REMOVED***stack[i];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!scope.isCertainlyParameterDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.canBeArrowParameterDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.recordDeclarationError(toParseError,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***=***REMOVED***stack[--i];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(toParseError,***REMOVED***origin);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***recordArrowParameterBindingError(error,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***stack[stack.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***origin***REMOVED***=***REMOVED***node.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.isCertainlyParameterDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(error,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(scope.canBeArrowParameterDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.recordDeclarationError(error,***REMOVED***origin);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***recordAsyncArrowParametersError(at)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***stack.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***scope***REMOVED***=***REMOVED***stack[i];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(scope.canBeArrowParameterDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.type***REMOVED***===***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.recordDeclarationError(Errors.AwaitBindingIdentifier,***REMOVED***at);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***=***REMOVED***stack[--i];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validateAsPattern()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentScope***REMOVED***=***REMOVED***stack[stack.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!currentScope.canBeArrowParameterDeclaration())***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***currentScope.iterateErrors(([toParseError,***REMOVED***loc])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parser.raise(toParseError,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***stack.length***REMOVED***-***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***scope***REMOVED***=***REMOVED***stack[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(scope.canBeArrowParameterDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.clearDeclarationError(loc.index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***=***REMOVED***stack[--i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
}
function***REMOVED***newParameterDeclarationScope()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***ExpressionScope(3);
}
function***REMOVED***newArrowHeadScope()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***ArrowHeadParsingScope(1);
}
function***REMOVED***newAsyncArrowScope()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***ArrowHeadParsingScope(2);
}
function***REMOVED***newExpressionScope()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***ExpressionScope();
}
class***REMOVED***UtilParser***REMOVED***extends***REMOVED***Tokenizer***REMOVED***{
***REMOVED******REMOVED***addExtra(node,***REMOVED***key,***REMOVED***value,***REMOVED***enumerable***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extra
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extra***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extra***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.extra***REMOVED***=***REMOVED***extra;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(enumerable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extra[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(extra,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isContextual(token)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.state.type***REMOVED***===***REMOVED***token***REMOVED***&&***REMOVED***!this.state.containsEsc;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isUnparsedContextual(nameStart,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.startsWith(name,***REMOVED***nameStart))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.input.charCodeAt(nameStart***REMOVED***+***REMOVED***name.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!(isIdentifierChar(nextCh)***REMOVED***||***REMOVED***(nextCh***REMOVED***&***REMOVED***0xfc00)***REMOVED***===***REMOVED***0xd800);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isLookaheadContextual(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isUnparsedContextual(next,***REMOVED***name);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***eatContextual(token)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(token))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***expectContextual(token,***REMOVED***toParseError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eatContextual(token))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(toParseError***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(toParseError,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***token);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***canInsertSemicolon()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(140)***REMOVED***||***REMOVED***this.match(8)***REMOVED***||***REMOVED***this.hasPrecedingLineBreak();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasPrecedingLineBreak()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasNewLine(this.input,***REMOVED***this.offsetToSourcePos(this.state.lastTokEndLoc.index),***REMOVED***this.state.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasFollowingLineBreak()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasNewLine(this.input,***REMOVED***this.state.end,***REMOVED***this.nextTokenStart());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isLineTerminator()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.eat(13)***REMOVED***||***REMOVED***this.canInsertSemicolon();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***semicolon(allowAsi***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowAsi***REMOVED***?***REMOVED***this.isLineTerminator()***REMOVED***:***REMOVED***this.eat(13))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.MissingSemicolon,***REMOVED***this.state.lastTokEndLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***expect(type,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(loc,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tryParse(fn,***REMOVED***oldState***REMOVED***=***REMOVED***this.state.clone())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***abortSignal***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***fn((node***REMOVED***=***REMOVED***null)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***abortSignal.node***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***abortSignal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.errors.length***REMOVED***>***REMOVED***oldState.errors.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***failState***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***oldState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.tokensLength***REMOVED***=***REMOVED***failState.tokensLength;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***failState.errors[oldState.errors.length],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thrown:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aborted:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failState
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thrown:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aborted:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failState:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***failState***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***oldState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error***REMOVED***instanceof***REMOVED***SyntaxError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thrown:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aborted:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failState
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error***REMOVED***===***REMOVED***abortSignal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***abortSignal.node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thrown:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aborted:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failState
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkExpressionErrors(refExpressionErrors,***REMOVED***andThrow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!refExpressionErrors)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shorthandAssignLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***doubleProtoLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***privateKeyLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionalParametersLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***voidPatternLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***refExpressionErrors;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasErrors***REMOVED***=***REMOVED***!!shorthandAssignLoc***REMOVED***||***REMOVED***!!doubleProtoLoc***REMOVED***||***REMOVED***!!optionalParametersLoc***REMOVED***||***REMOVED***!!privateKeyLoc***REMOVED***||***REMOVED***!!voidPatternLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!andThrow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasErrors;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shorthandAssignLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidCoverInitializedName,***REMOVED***shorthandAssignLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doubleProtoLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DuplicateProto,***REMOVED***doubleProtoLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(privateKeyLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedPrivateField,***REMOVED***privateKeyLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalParametersLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(optionalParametersLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(voidPatternLoc***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidCoverDiscardElement,***REMOVED***voidPatternLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isLiteralPropertyName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokenIsLiteralPropertyName(this.state.type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isPrivateName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"PrivateName";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getPrivateNameSV(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.id.name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasPropertyAsPrivateName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(node.type***REMOVED***===***REMOVED***"MemberExpression"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"OptionalMemberExpression")***REMOVED***&&***REMOVED***this.isPrivateName(node.property);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isObjectProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"ObjectProperty";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isObjectMethod(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"ObjectMethod";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***initializeScopes(inModule***REMOVED***=***REMOVED***this.options.sourceType***REMOVED***===***REMOVED***"module")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldLabels***REMOVED***=***REMOVED***this.state.labels;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldExportedIdentifiers***REMOVED***=***REMOVED***this.exportedIdentifiers;
***REMOVED******REMOVED******REMOVED******REMOVED***this.exportedIdentifiers***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInModule***REMOVED***=***REMOVED***this.inModule;
***REMOVED******REMOVED******REMOVED******REMOVED***this.inModule***REMOVED***=***REMOVED***inModule;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldScope***REMOVED***=***REMOVED***this.scope;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ScopeHandler***REMOVED***=***REMOVED***this.getScopeHandler();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***new***REMOVED***ScopeHandler(this,***REMOVED***inModule);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldProdParam***REMOVED***=***REMOVED***this.prodParam;
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam***REMOVED***=***REMOVED***new***REMOVED***ProductionParameterHandler();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldClassScope***REMOVED***=***REMOVED***this.classScope;
***REMOVED******REMOVED******REMOVED******REMOVED***this.classScope***REMOVED***=***REMOVED***new***REMOVED***ClassScopeHandler(this);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldExpressionScope***REMOVED***=***REMOVED***this.expressionScope;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope***REMOVED***=***REMOVED***new***REMOVED***ExpressionScopeHandler(this);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***oldLabels;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportedIdentifiers***REMOVED***=***REMOVED***oldExportedIdentifiers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.inModule***REMOVED***=***REMOVED***oldInModule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope***REMOVED***=***REMOVED***oldScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam***REMOVED***=***REMOVED***oldProdParam;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope***REMOVED***=***REMOVED***oldClassScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope***REMOVED***=***REMOVED***oldExpressionScope;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***enterInitialScopes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***paramFlags***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inModule***REMOVED***||***REMOVED***this.optionFlags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paramFlags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***32)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paramFlags***REMOVED***|=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isCommonJS***REMOVED***=***REMOVED***!this.inModule***REMOVED***&&***REMOVED***this.options.sourceType***REMOVED***===***REMOVED***"commonjs";
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCommonJS***REMOVED***||***REMOVED***this.optionFlags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paramFlags***REMOVED***|=***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(paramFlags);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***scopeFlags***REMOVED***=***REMOVED***isCommonJS***REMOVED***?***REMOVED***514***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scopeFlags***REMOVED***|=***REMOVED***512;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(scopeFlags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkDestructuringPrivate(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***privateKeyLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***refExpressionErrors;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(privateKeyLoc***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("destructuringPrivate",***REMOVED***privateKeyLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
class***REMOVED***ExpressionErrors***REMOVED***{
***REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.shorthandAssignLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.doubleProtoLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.privateKeyLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.optionalParametersLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.voidPatternLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}
}
class***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED***constructor(parser,***REMOVED***pos,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***this.start***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***this.end***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.loc***REMOVED***=***REMOVED***new***REMOVED***SourceLocation(loc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((parser***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***parser.optionFlags)***REMOVED***&***REMOVED***128)***REMOVED***this.range***REMOVED***=***REMOVED***[pos,***REMOVED***0];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parser***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***parser.filename)***REMOVED***this.loc.filename***REMOVED***=***REMOVED***parser.filename;
***REMOVED******REMOVED***}
}
const***REMOVED***NodePrototype***REMOVED***=***REMOVED***Node.prototype;
{
***REMOVED******REMOVED***NodePrototype.__clone***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newNode***REMOVED***=***REMOVED***new***REMOVED***Node(undefined,***REMOVED***this.start,***REMOVED***this.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(this);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***keys.length;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***keys[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"leadingComments"***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"trailingComments"***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"innerComments")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode[key]***REMOVED***=***REMOVED***this[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***newNode;
***REMOVED******REMOVED***};
}
class***REMOVED***NodeUtils***REMOVED***extends***REMOVED***UtilParser***REMOVED***{
***REMOVED******REMOVED***startNode()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Node(this,***REMOVED***loc.index,***REMOVED***loc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***startNodeAt(loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Node(this,***REMOVED***loc.index,***REMOVED***loc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***startNodeAtNode(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.startNodeAt(type.loc.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishNode(node,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNodeAt(node,***REMOVED***type,***REMOVED***this.state.lastTokEndLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishNodeAt(node,***REMOVED***type,***REMOVED***endLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***node.end***REMOVED***=***REMOVED***endLoc.index;
***REMOVED******REMOVED******REMOVED******REMOVED***node.loc.end***REMOVED***=***REMOVED***endLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***128)***REMOVED***node.range[1]***REMOVED***=***REMOVED***endLoc.index;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***4096)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.processComment(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetStartLocation(node,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.start***REMOVED***=***REMOVED***startLoc.index;
***REMOVED******REMOVED******REMOVED******REMOVED***node.loc.start***REMOVED***=***REMOVED***startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***128)***REMOVED***node.range[0]***REMOVED***=***REMOVED***startLoc.index;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetEndLocation(node,***REMOVED***endLoc***REMOVED***=***REMOVED***this.state.lastTokEndLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.end***REMOVED***=***REMOVED***endLoc.index;
***REMOVED******REMOVED******REMOVED******REMOVED***node.loc.end***REMOVED***=***REMOVED***endLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***128)***REMOVED***node.range[1]***REMOVED***=***REMOVED***endLoc.index;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetStartLocationFromNode(node,***REMOVED***locationNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocation(node,***REMOVED***locationNode.loc.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***castNodeTo(node,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***cloneIdentifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***Object.create(NodePrototype);
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.start***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.end***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.loc***REMOVED***=***REMOVED***loc;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.range***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.extra)***REMOVED***cloned.extra***REMOVED***=***REMOVED***node.extra;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***cloneStringLiteral(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extra
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***Object.create(NodePrototype);
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.start***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.end***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.loc***REMOVED***=***REMOVED***loc;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.range***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.extra***REMOVED***=***REMOVED***extra;
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.value***REMOVED***=***REMOVED***node.value;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
***REMOVED******REMOVED***}
}
const***REMOVED***unwrapParenthesizedExpression***REMOVED***=***REMOVED***node***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"ParenthesizedExpression"***REMOVED***?***REMOVED***unwrapParenthesizedExpression(node.expression)***REMOVED***:***REMOVED***node;
};
class***REMOVED***LValParser***REMOVED***extends***REMOVED***NodeUtils***REMOVED***{
***REMOVED******REMOVED***toAssignable(node,***REMOVED***isLHS***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$extra,***REMOVED***_node$extra3;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parenthesized***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ParenthesizedExpression"***REMOVED***||***REMOVED***(_node$extra***REMOVED***=***REMOVED***node.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_node$extra.parenthesized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenthesized***REMOVED***=***REMOVED***unwrapParenthesizedExpression(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parenthesized.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parenthesized.type***REMOVED***!==***REMOVED***"MemberExpression"***REMOVED***&&***REMOVED***!this.isOptionalMemberExpression(parenthesized))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidParenthesizedAssignment,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidParenthesizedAssignment,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"RestElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"VoidPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"ObjectPattern");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***node.properties.length,***REMOVED***last***REMOVED***=***REMOVED***length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$extra2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***node.properties[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isLast***REMOVED***=***REMOVED***i***REMOVED***===***REMOVED***last;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableObjectExpressionProp(prop,***REMOVED***isLast,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLast***REMOVED***&&***REMOVED***prop.type***REMOVED***===***REMOVED***"RestElement"***REMOVED***&&***REMOVED***(_node$extra2***REMOVED***=***REMOVED***node.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_node$extra2.trailingCommaLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.RestTrailingComma,***REMOVED***node.extra.trailingCommaLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isPrivateName(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.usePrivateName(this.getPrivateNameSV(key),***REMOVED***key.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(value,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"SpreadElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Internal***REMOVED***@babel/parser***REMOVED***error***REMOVED***(this***REMOVED***is***REMOVED***a***REMOVED***bug,***REMOVED***please***REMOVED***report***REMOVED***it)."***REMOVED***+***REMOVED***"***REMOVED***SpreadElement***REMOVED***should***REMOVED***be***REMOVED***converted***REMOVED***by***REMOVED***.toAssignable's***REMOVED***caller.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"ArrayPattern");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableList(node.elements,***REMOVED***(_node$extra3***REMOVED***=***REMOVED***node.extra)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_node$extra3.trailingCommaLoc,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.operator***REMOVED***!==***REMOVED***"=")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.MissingEqInAssignment,***REMOVED***node.left.loc.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"AssignmentPattern");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***node.operator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.left.type***REMOVED***===***REMOVED***"VoidPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.VoidPatternInitializer,***REMOVED***node.left);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.left,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(parenthesized,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableObjectExpressionProp(prop,***REMOVED***isLast,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"ObjectMethod")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(prop.kind***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***prop.kind***REMOVED***===***REMOVED***"set"***REMOVED***?***REMOVED***Errors.PatternHasAccessor***REMOVED***:***REMOVED***Errors.PatternHasMethod,***REMOVED***prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"SpreadElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(prop,***REMOVED***"RestElement");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arg***REMOVED***=***REMOVED***prop.argument;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkToRestConversion(arg,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(arg,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isLast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.RestTrailingComma,***REMOVED***prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(prop,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableList(exprList,***REMOVED***trailingCommaLoc,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***exprList.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<=***REMOVED***end;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elt***REMOVED***=***REMOVED***exprList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!elt)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableListItem(exprList,***REMOVED***i,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elt.type***REMOVED***===***REMOVED***"RestElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***<***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.RestTrailingComma,***REMOVED***elt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(trailingCommaLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.RestTrailingComma,***REMOVED***trailingCommaLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableListItem(exprList,***REMOVED***index,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***exprList[index];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"SpreadElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(node,***REMOVED***"RestElement");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arg***REMOVED***=***REMOVED***node.argument;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkToRestConversion(arg,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(arg,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAssignable(node,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"RestElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"VoidPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***node.properties.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.properties.every((prop,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***prop.type***REMOVED***!==***REMOVED***"ObjectMethod"***REMOVED***&&***REMOVED***(i***REMOVED***===***REMOVED***last***REMOVED***||***REMOVED***prop.type***REMOVED***!==***REMOVED***"SpreadElement")***REMOVED***&&***REMOVED***this.isAssignable(prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isAssignable(node.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"SpreadElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isAssignable(node.argument);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.elements.every(element***REMOVED***=>***REMOVED***element***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***this.isAssignable(element));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.operator***REMOVED***===***REMOVED***"=";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isAssignable(node.expression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"MemberExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"OptionalMemberExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isBinding;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toReferencedList(exprList,***REMOVED***isParenthesizedExpr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exprList;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toReferencedListDeep(exprList,***REMOVED***isParenthesizedExpr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedList(exprList,***REMOVED***isParenthesizedExpr);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***expr***REMOVED***of***REMOVED***exprList)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((expr***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***expr.type)***REMOVED***===***REMOVED***"ArrayExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedListDeep(expr.elements);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSpread(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn(refExpressionErrors,***REMOVED***undefined);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SpreadElement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseRestBinding()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***argument***REMOVED***=***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(argument.type***REMOVED***===***REMOVED***"VoidPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedVoidPattern,***REMOVED***argument);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***argument;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"RestElement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingAtom()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.elements***REMOVED***=***REMOVED***this.parseBindingList(3,***REMOVED***93,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ArrayPattern");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObjectLike(8,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***88:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVoidPattern(null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingList(close,***REMOVED***closeCharCode,***REMOVED***flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowEmpty***REMOVED***=***REMOVED***flags***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.eat(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowEmpty***REMOVED***&&***REMOVED***this.match(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eat(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rest***REMOVED***=***REMOVED***this.parseRestBinding();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("flow")***REMOVED***||***REMOVED***flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rest***REMOVED***=***REMOVED***this.parseFunctionParamType(rest);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(rest);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.checkCommaAfterRest(closeCharCode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(close);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(26)***REMOVED***&&***REMOVED***this.hasPlugin("decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnsupportedParameterDecorator,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.match(26))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators.push(this.parseDecorator());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(this.parseBindingElement(flags,***REMOVED***decorators));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***elts;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingRestProperty(prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("discardBinding")***REMOVED***&&***REMOVED***this.match(88))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.argument***REMOVED***=***REMOVED***this.parseVoidPattern(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedVoidPattern,***REMOVED***prop.argument);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.argument***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkCommaAfterRest(125);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(prop,***REMOVED***"RestElement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingProperty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***21)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBindingRestProperty(this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***139)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("destructuringPrivate",***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.usePrivateName(this.state.value,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.key***REMOVED***=***REMOVED***this.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prop.method***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***false,***REMOVED***false,***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingElement(flags,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***left***REMOVED***=***REMOVED***this.parseMaybeDefault();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("flow")***REMOVED***||***REMOVED***flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionParamType(left);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.decorators***REMOVED***=***REMOVED***decorators;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(left,***REMOVED***decorators[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elt***REMOVED***=***REMOVED***this.parseMaybeDefault(left.loc.start,***REMOVED***left);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***elt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionParamType(param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeDefault(startLoc,***REMOVED***left)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startLoc***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***startLoc***REMOVED***:***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***left***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***left***REMOVED***:***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(29))***REMOVED***return***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left.type***REMOVED***===***REMOVED***"VoidPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.VoidPatternInitializer,***REMOVED***left);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"AssignmentPattern");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidLVal(type,***REMOVED***isUnparenthesizedInAssign,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"left";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"RestElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"argument";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"expression";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"elements";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"properties";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"VoidPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isOptionalMemberExpression(expression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expression.type***REMOVED***===***REMOVED***"OptionalMemberExpression";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkLVal(expression,***REMOVED***ancestor,***REMOVED***binding***REMOVED***=***REMOVED***64,***REMOVED***checkClashes***REMOVED***=***REMOVED***false,***REMOVED***strictModeChanged***REMOVED***=***REMOVED***false,***REMOVED***hasParenthesizedAncestor***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_expression$extra;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***expression.type;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isObjectMethod(expression))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isOptionalMemberExpression***REMOVED***=***REMOVED***this.isOptionalMemberExpression(expression);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isOptionalMemberExpression***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"MemberExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isOptionalMemberExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("optionalChainingAssign",***REMOVED***expression.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ancestor.type***REMOVED***!==***REMOVED***"AssignmentExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidLhsOptionalChaining,***REMOVED***expression,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(binding***REMOVED***!==***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidPropertyBindingPattern,***REMOVED***expression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(expression,***REMOVED***binding,***REMOVED***strictModeChanged);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkClashes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkClashes.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ParamDupe,***REMOVED***expression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkClashes.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"VoidPattern"***REMOVED***&&***REMOVED***ancestor.type***REMOVED***===***REMOVED***"CatchClause")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.VoidPatternCatchClauseParam,***REMOVED***expression);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validity***REMOVED***=***REMOVED***this.isValidLVal(type,***REMOVED***!(hasParenthesizedAncestor***REMOVED***||***REMOVED***(_expression$extra***REMOVED***=***REMOVED***expression.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_expression$extra.parenthesized)***REMOVED***&&***REMOVED***ancestor.type***REMOVED***===***REMOVED***"AssignmentExpression",***REMOVED***binding);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validity***REMOVED***===***REMOVED***true)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validity***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ParseErrorClass***REMOVED***=***REMOVED***binding***REMOVED***===***REMOVED***64***REMOVED***?***REMOVED***Errors.InvalidLhs***REMOVED***:***REMOVED***Errors.InvalidLhsBinding;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(ParseErrorClass,***REMOVED***expression,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***key,***REMOVED***isParenthesizedExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***validity***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***validity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isParenthesizedExpression***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***"ParenthesizedExpression";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[key,***REMOVED***isParenthesizedExpression]***REMOVED***=***REMOVED***validity;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextAncestor***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***"ArrayPattern"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"ObjectPattern"***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***ancestor;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***expression[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***child***REMOVED***of***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(child,***REMOVED***nextAncestor,***REMOVED***binding,***REMOVED***checkClashes,***REMOVED***strictModeChanged,***REMOVED***isParenthesizedExpression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(val,***REMOVED***nextAncestor,***REMOVED***binding,***REMOVED***checkClashes,***REMOVED***strictModeChanged,***REMOVED***isParenthesizedExpression);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkIdentifier(at,***REMOVED***bindingType,***REMOVED***strictModeChanged***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.strict***REMOVED***&&***REMOVED***(strictModeChanged***REMOVED***?***REMOVED***isStrictBindReservedWord(at.name,***REMOVED***this.inModule)***REMOVED***:***REMOVED***isStrictBindOnlyReservedWord(at.name)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***===***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.StrictEvalArguments,***REMOVED***at,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceName:***REMOVED***at.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.StrictEvalArgumentsBinding,***REMOVED***at,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingName:***REMOVED***at.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bindingType***REMOVED***&***REMOVED***8192***REMOVED***&&***REMOVED***at.name***REMOVED***===***REMOVED***"let")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.LetInLexicalBinding,***REMOVED***at);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(bindingType***REMOVED***&***REMOVED***64))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declareNameFromIdentifier(at,***REMOVED***bindingType);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declareNameFromIdentifier(identifier,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(identifier.name,***REMOVED***binding,***REMOVED***identifier.loc.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkToRestConversion(node,***REMOVED***allowPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkToRestConversion(node.expression,***REMOVED***allowPattern);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"MemberExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowPattern)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidRestAssignmentPattern,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkCommaAfterRest(close)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.raise(this.lookaheadCharCode()***REMOVED***===***REMOVED***close***REMOVED***?***REMOVED***Errors.RestTrailingComma***REMOVED***:***REMOVED***Errors.ElementAfterRest,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
}
function***REMOVED***nonNull(x)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(x***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Unexpected***REMOVED***${x}***REMOVED***value.`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***x;
}
function***REMOVED***assert(x)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!x)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Assert***REMOVED***fail");
***REMOVED******REMOVED***}
}
const***REMOVED***TSErrors***REMOVED***=***REMOVED***ParseErrorEnum`typescript`({
***REMOVED******REMOVED***AbstractMethodHasImplementation:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***methodName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Method***REMOVED***'${methodName}'***REMOVED***cannot***REMOVED***have***REMOVED***an***REMOVED***implementation***REMOVED***because***REMOVED***it***REMOVED***is***REMOVED***marked***REMOVED***abstract.`,
***REMOVED******REMOVED***AbstractPropertyHasInitializer:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***propertyName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Property***REMOVED***'${propertyName}'***REMOVED***cannot***REMOVED***have***REMOVED***an***REMOVED***initializer***REMOVED***because***REMOVED***it***REMOVED***is***REMOVED***marked***REMOVED***abstract.`,
***REMOVED******REMOVED***AccessorCannotBeOptional:***REMOVED***"An***REMOVED***'accessor'***REMOVED***property***REMOVED***cannot***REMOVED***be***REMOVED***declared***REMOVED***optional.",
***REMOVED******REMOVED***AccessorCannotDeclareThisParameter:***REMOVED***"'get'***REMOVED***and***REMOVED***'set'***REMOVED***accessors***REMOVED***cannot***REMOVED***declare***REMOVED***'this'***REMOVED***parameters.",
***REMOVED******REMOVED***AccessorCannotHaveTypeParameters:***REMOVED***"An***REMOVED***accessor***REMOVED***cannot***REMOVED***have***REMOVED***type***REMOVED***parameters.",
***REMOVED******REMOVED***ClassMethodHasDeclare:***REMOVED***"Class***REMOVED***methods***REMOVED***cannot***REMOVED***have***REMOVED***the***REMOVED***'declare'***REMOVED***modifier.",
***REMOVED******REMOVED***ClassMethodHasReadonly:***REMOVED***"Class***REMOVED***methods***REMOVED***cannot***REMOVED***have***REMOVED***the***REMOVED***'readonly'***REMOVED***modifier.",
***REMOVED******REMOVED***ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:***REMOVED***"A***REMOVED***'const'***REMOVED***initializer***REMOVED***in***REMOVED***an***REMOVED***ambient***REMOVED***context***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string***REMOVED***or***REMOVED***numeric***REMOVED***literal***REMOVED***or***REMOVED***literal***REMOVED***enum***REMOVED***reference.",
***REMOVED******REMOVED***ConstructorHasTypeParameters:***REMOVED***"Type***REMOVED***parameters***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***constructor***REMOVED***declaration.",
***REMOVED******REMOVED***DeclareAccessor:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***kind
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'declare'***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***${kind}ters.`,
***REMOVED******REMOVED***DeclareClassFieldHasInitializer:***REMOVED***"Initializers***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***ambient***REMOVED***contexts.",
***REMOVED******REMOVED***DeclareFunctionHasImplementation:***REMOVED***"An***REMOVED***implementation***REMOVED***cannot***REMOVED***be***REMOVED***declared***REMOVED***in***REMOVED***ambient***REMOVED***contexts.",
***REMOVED******REMOVED***DuplicateAccessibilityModifier:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Accessibility***REMOVED***modifier***REMOVED***already***REMOVED***seen:***REMOVED***'${modifier}'.`,
***REMOVED******REMOVED***DuplicateModifier:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Duplicate***REMOVED***modifier:***REMOVED***'${modifier}'.`,
***REMOVED******REMOVED***EmptyHeritageClauseType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***token
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${token}'***REMOVED***list***REMOVED***cannot***REMOVED***be***REMOVED***empty.`,
***REMOVED******REMOVED***EmptyTypeArguments:***REMOVED***"Type***REMOVED***argument***REMOVED***list***REMOVED***cannot***REMOVED***be***REMOVED***empty.",
***REMOVED******REMOVED***EmptyTypeParameters:***REMOVED***"Type***REMOVED***parameter***REMOVED***list***REMOVED***cannot***REMOVED***be***REMOVED***empty.",
***REMOVED******REMOVED***ExpectedAmbientAfterExportDeclare:***REMOVED***"'export***REMOVED***declare'***REMOVED***must***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***ambient***REMOVED***declaration.",
***REMOVED******REMOVED***ImportAliasHasImportType:***REMOVED***"An***REMOVED***import***REMOVED***alias***REMOVED***can***REMOVED***not***REMOVED***use***REMOVED***'import***REMOVED***type'.",
***REMOVED******REMOVED***ImportReflectionHasImportType:***REMOVED***"An***REMOVED***`import***REMOVED***module`***REMOVED***declaration***REMOVED***can***REMOVED***not***REMOVED***use***REMOVED***`type`***REMOVED***modifier",
***REMOVED******REMOVED***IncompatibleModifiers:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifiers
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${modifiers[0]}'***REMOVED***modifier***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***'${modifiers[1]}'***REMOVED***modifier.`,
***REMOVED******REMOVED***IndexSignatureHasAbstract:***REMOVED***"Index***REMOVED***signatures***REMOVED***cannot***REMOVED***have***REMOVED***the***REMOVED***'abstract'***REMOVED***modifier.",
***REMOVED******REMOVED***IndexSignatureHasAccessibility:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Index***REMOVED***signatures***REMOVED***cannot***REMOVED***have***REMOVED***an***REMOVED***accessibility***REMOVED***modifier***REMOVED***('${modifier}').`,
***REMOVED******REMOVED***IndexSignatureHasDeclare:***REMOVED***"Index***REMOVED***signatures***REMOVED***cannot***REMOVED***have***REMOVED***the***REMOVED***'declare'***REMOVED***modifier.",
***REMOVED******REMOVED***IndexSignatureHasOverride:***REMOVED***"'override'***REMOVED***modifier***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***an***REMOVED***index***REMOVED***signature.",
***REMOVED******REMOVED***IndexSignatureHasStatic:***REMOVED***"Index***REMOVED***signatures***REMOVED***cannot***REMOVED***have***REMOVED***the***REMOVED***'static'***REMOVED***modifier.",
***REMOVED******REMOVED***InitializerNotAllowedInAmbientContext:***REMOVED***"Initializers***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***ambient***REMOVED***contexts.",
***REMOVED******REMOVED***InvalidHeritageClauseType:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***token
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${token}'***REMOVED***list***REMOVED***can***REMOVED***only***REMOVED***include***REMOVED***identifiers***REMOVED***or***REMOVED***qualified-names***REMOVED***with***REMOVED***optional***REMOVED***type***REMOVED***arguments.`,
***REMOVED******REMOVED***InvalidModifierOnAwaitUsingDeclaration:***REMOVED***modifier***REMOVED***=>***REMOVED***`'${modifier}'***REMOVED***modifier***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***an***REMOVED***await***REMOVED***using***REMOVED***declaration.`,
***REMOVED******REMOVED***InvalidModifierOnTypeMember:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${modifier}'***REMOVED***modifier***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***type***REMOVED***member.`,
***REMOVED******REMOVED***InvalidModifierOnTypeParameter:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${modifier}'***REMOVED***modifier***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***type***REMOVED***parameter.`,
***REMOVED******REMOVED***InvalidModifierOnTypeParameterPositions:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${modifier}'***REMOVED***modifier***REMOVED***can***REMOVED***only***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***type***REMOVED***parameter***REMOVED***of***REMOVED***a***REMOVED***class,***REMOVED***interface***REMOVED***or***REMOVED***type***REMOVED***alias.`,
***REMOVED******REMOVED***InvalidModifierOnUsingDeclaration:***REMOVED***modifier***REMOVED***=>***REMOVED***`'${modifier}'***REMOVED***modifier***REMOVED***cannot***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***using***REMOVED***declaration.`,
***REMOVED******REMOVED***InvalidModifiersOrder:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***orderedModifiers
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`'${orderedModifiers[0]}'***REMOVED***modifier***REMOVED***must***REMOVED***precede***REMOVED***'${orderedModifiers[1]}'***REMOVED***modifier.`,
***REMOVED******REMOVED***InvalidPropertyAccessAfterInstantiationExpression:***REMOVED***"Invalid***REMOVED***property***REMOVED***access***REMOVED***after***REMOVED***an***REMOVED***instantiation***REMOVED***expression.***REMOVED***"***REMOVED***+***REMOVED***"You***REMOVED***can***REMOVED***either***REMOVED***wrap***REMOVED***the***REMOVED***instantiation***REMOVED***expression***REMOVED***in***REMOVED***parentheses,***REMOVED***or***REMOVED***delete***REMOVED***the***REMOVED***type***REMOVED***arguments.",
***REMOVED******REMOVED***InvalidTupleMemberLabel:***REMOVED***"Tuple***REMOVED***members***REMOVED***must***REMOVED***be***REMOVED***labeled***REMOVED***with***REMOVED***a***REMOVED***simple***REMOVED***identifier.",
***REMOVED******REMOVED***MissingInterfaceName:***REMOVED***"'interface'***REMOVED***declarations***REMOVED***must***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***identifier.",
***REMOVED******REMOVED***NonAbstractClassHasAbstractMethod:***REMOVED***"Abstract***REMOVED***methods***REMOVED***can***REMOVED***only***REMOVED***appear***REMOVED***within***REMOVED***an***REMOVED***abstract***REMOVED***class.",
***REMOVED******REMOVED***NonClassMethodPropertyHasAbstractModifier:***REMOVED***"'abstract'***REMOVED***modifier***REMOVED***can***REMOVED***only***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***class,***REMOVED***method,***REMOVED***or***REMOVED***property***REMOVED***declaration.",
***REMOVED******REMOVED***OptionalTypeBeforeRequired:***REMOVED***"A***REMOVED***required***REMOVED***element***REMOVED***cannot***REMOVED***follow***REMOVED***an***REMOVED***optional***REMOVED***element.",
***REMOVED******REMOVED***OverrideNotInSubClass:***REMOVED***"This***REMOVED***member***REMOVED***cannot***REMOVED***have***REMOVED***an***REMOVED***'override'***REMOVED***modifier***REMOVED***because***REMOVED***its***REMOVED***containing***REMOVED***class***REMOVED***does***REMOVED***not***REMOVED***extend***REMOVED***another***REMOVED***class.",
***REMOVED******REMOVED***PatternIsOptional:***REMOVED***"A***REMOVED***binding***REMOVED***pattern***REMOVED***parameter***REMOVED***cannot***REMOVED***be***REMOVED***optional***REMOVED***in***REMOVED***an***REMOVED***implementation***REMOVED***signature.",
***REMOVED******REMOVED***PrivateElementHasAbstract:***REMOVED***"Private***REMOVED***elements***REMOVED***cannot***REMOVED***have***REMOVED***the***REMOVED***'abstract'***REMOVED***modifier.",
***REMOVED******REMOVED***PrivateElementHasAccessibility:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Private***REMOVED***elements***REMOVED***cannot***REMOVED***have***REMOVED***an***REMOVED***accessibility***REMOVED***modifier***REMOVED***('${modifier}').`,
***REMOVED******REMOVED***ReadonlyForMethodSignature:***REMOVED***"'readonly'***REMOVED***modifier***REMOVED***can***REMOVED***only***REMOVED***appear***REMOVED***on***REMOVED***a***REMOVED***property***REMOVED***declaration***REMOVED***or***REMOVED***index***REMOVED***signature.",
***REMOVED******REMOVED***ReservedArrowTypeParam:***REMOVED***"This***REMOVED***syntax***REMOVED***is***REMOVED***reserved***REMOVED***in***REMOVED***files***REMOVED***with***REMOVED***the***REMOVED***.mts***REMOVED***or***REMOVED***.cts***REMOVED***extension.***REMOVED***Add***REMOVED***a***REMOVED***trailing***REMOVED***comma,***REMOVED***as***REMOVED***in***REMOVED***`<T,>()***REMOVED***=>***REMOVED***...`.",
***REMOVED******REMOVED***ReservedTypeAssertion:***REMOVED***"This***REMOVED***syntax***REMOVED***is***REMOVED***reserved***REMOVED***in***REMOVED***files***REMOVED***with***REMOVED***the***REMOVED***.mts***REMOVED***or***REMOVED***.cts***REMOVED***extension.***REMOVED***Use***REMOVED***an***REMOVED***`as`***REMOVED***expression***REMOVED***instead.",
***REMOVED******REMOVED***SetAccessorCannotHaveOptionalParameter:***REMOVED***"A***REMOVED***'set'***REMOVED***accessor***REMOVED***cannot***REMOVED***have***REMOVED***an***REMOVED***optional***REMOVED***parameter.",
***REMOVED******REMOVED***SetAccessorCannotHaveRestParameter:***REMOVED***"A***REMOVED***'set'***REMOVED***accessor***REMOVED***cannot***REMOVED***have***REMOVED***rest***REMOVED***parameter.",
***REMOVED******REMOVED***SetAccessorCannotHaveReturnType:***REMOVED***"A***REMOVED***'set'***REMOVED***accessor***REMOVED***cannot***REMOVED***have***REMOVED***a***REMOVED***return***REMOVED***type***REMOVED***annotation.",
***REMOVED******REMOVED***SingleTypeParameterWithoutTrailingComma:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameterName
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Single***REMOVED***type***REMOVED***parameter***REMOVED***${typeParameterName}***REMOVED***should***REMOVED***have***REMOVED***a***REMOVED***trailing***REMOVED***comma.***REMOVED***Example***REMOVED***usage:***REMOVED***<${typeParameterName},>.`,
***REMOVED******REMOVED***StaticBlockCannotHaveModifier:***REMOVED***"Static***REMOVED***class***REMOVED***blocks***REMOVED***cannot***REMOVED***have***REMOVED***any***REMOVED***modifier.",
***REMOVED******REMOVED***TupleOptionalAfterType:***REMOVED***"A***REMOVED***labeled***REMOVED***tuple***REMOVED***optional***REMOVED***element***REMOVED***must***REMOVED***be***REMOVED***declared***REMOVED***using***REMOVED***a***REMOVED***question***REMOVED***mark***REMOVED***after***REMOVED***the***REMOVED***name***REMOVED***and***REMOVED***before***REMOVED***the***REMOVED***colon***REMOVED***(`name?:***REMOVED***type`),***REMOVED***rather***REMOVED***than***REMOVED***after***REMOVED***the***REMOVED***type***REMOVED***(`name:***REMOVED***type?`).",
***REMOVED******REMOVED***TypeAnnotationAfterAssign:***REMOVED***"Type***REMOVED***annotations***REMOVED***must***REMOVED***come***REMOVED***before***REMOVED***default***REMOVED***assignments,***REMOVED***e.g.***REMOVED***instead***REMOVED***of***REMOVED***`age***REMOVED***=***REMOVED***25:***REMOVED***number`***REMOVED***use***REMOVED***`age:***REMOVED***number***REMOVED***=***REMOVED***25`.",
***REMOVED******REMOVED***TypeImportCannotSpecifyDefaultAndNamed:***REMOVED***"A***REMOVED***type-only***REMOVED***import***REMOVED***can***REMOVED***specify***REMOVED***a***REMOVED***default***REMOVED***import***REMOVED***or***REMOVED***named***REMOVED***bindings,***REMOVED***but***REMOVED***not***REMOVED***both.",
***REMOVED******REMOVED***TypeModifierIsUsedInTypeExports:***REMOVED***"The***REMOVED***'type'***REMOVED***modifier***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***named***REMOVED***export***REMOVED***when***REMOVED***'export***REMOVED***type'***REMOVED***is***REMOVED***used***REMOVED***on***REMOVED***its***REMOVED***export***REMOVED***statement.",
***REMOVED******REMOVED***TypeModifierIsUsedInTypeImports:***REMOVED***"The***REMOVED***'type'***REMOVED***modifier***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***named***REMOVED***import***REMOVED***when***REMOVED***'import***REMOVED***type'***REMOVED***is***REMOVED***used***REMOVED***on***REMOVED***its***REMOVED***import***REMOVED***statement.",
***REMOVED******REMOVED***UnexpectedParameterModifier:***REMOVED***"A***REMOVED***parameter***REMOVED***property***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***in***REMOVED***a***REMOVED***constructor***REMOVED***implementation.",
***REMOVED******REMOVED***UnexpectedReadonly:***REMOVED***"'readonly'***REMOVED***type***REMOVED***modifier***REMOVED***is***REMOVED***only***REMOVED***permitted***REMOVED***on***REMOVED***array***REMOVED***and***REMOVED***tuple***REMOVED***literal***REMOVED***types.",
***REMOVED******REMOVED***UnexpectedTypeAnnotation:***REMOVED***"Did***REMOVED***not***REMOVED***expect***REMOVED***a***REMOVED***type***REMOVED***annotation***REMOVED***here.",
***REMOVED******REMOVED***UnexpectedTypeCastInParameter:***REMOVED***"Unexpected***REMOVED***type***REMOVED***cast***REMOVED***in***REMOVED***parameter***REMOVED***position.",
***REMOVED******REMOVED***UnsupportedImportTypeArgument:***REMOVED***"Argument***REMOVED***in***REMOVED***a***REMOVED***type***REMOVED***import***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***string***REMOVED***literal.",
***REMOVED******REMOVED***UnsupportedParameterPropertyKind:***REMOVED***"A***REMOVED***parameter***REMOVED***property***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***declared***REMOVED***using***REMOVED***a***REMOVED***binding***REMOVED***pattern.",
***REMOVED******REMOVED***UnsupportedSignatureParameterKind:***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***})***REMOVED***=>***REMOVED***`Name***REMOVED***in***REMOVED***a***REMOVED***signature***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***Identifier,***REMOVED***ObjectPattern***REMOVED***or***REMOVED***ArrayPattern,***REMOVED***instead***REMOVED***got***REMOVED***${type}.`,
***REMOVED******REMOVED***UsingDeclarationInAmbientContext:***REMOVED***kind***REMOVED***=>***REMOVED***`'${kind}'***REMOVED***declarations***REMOVED***are***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***ambient***REMOVED***contexts.`
});
function***REMOVED***keywordTypeFromName(value)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"any":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSAnyKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"boolean":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSBooleanKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"bigint":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSBigIntKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"never":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSNeverKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"number":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSNumberKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"object":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSObjectKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"string":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSStringKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"symbol":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSSymbolKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"undefined":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSUndefinedKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"unknown":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"TSUnknownKeyword";
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED***}
}
function***REMOVED***tsIsAccessModifier(modifier)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***modifier***REMOVED***===***REMOVED***"private"***REMOVED***||***REMOVED***modifier***REMOVED***===***REMOVED***"public"***REMOVED***||***REMOVED***modifier***REMOVED***===***REMOVED***"protected";
}
function***REMOVED***tsIsVarianceAnnotations(modifier)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***modifier***REMOVED***===***REMOVED***"in"***REMOVED***||***REMOVED***modifier***REMOVED***===***REMOVED***"out";
}
var***REMOVED***typescript***REMOVED***=***REMOVED***superClass***REMOVED***=>***REMOVED***class***REMOVED***TypeScriptParserMixin***REMOVED***extends***REMOVED***superClass***REMOVED***{
***REMOVED******REMOVED***constructor(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseInOutModifiers***REMOVED***=***REMOVED***this.tsParseModifiers.bind(this,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers:***REMOVED***["in",***REMOVED***"out"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disallowedModifiers:***REMOVED***["const",***REMOVED***"public",***REMOVED***"private",***REMOVED***"protected",***REMOVED***"readonly",***REMOVED***"declare",***REMOVED***"abstract",***REMOVED***"override"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errorTemplate:***REMOVED***TSErrors.InvalidModifierOnTypeParameter
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseConstModifier***REMOVED***=***REMOVED***this.tsParseModifiers.bind(this,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers:***REMOVED***["const"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disallowedModifiers:***REMOVED***["in",***REMOVED***"out"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errorTemplate:***REMOVED***TSErrors.InvalidModifierOnTypeParameterPositions
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseInOutConstModifiers***REMOVED***=***REMOVED***this.tsParseModifiers.bind(this,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers:***REMOVED***["in",***REMOVED***"out",***REMOVED***"const"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disallowedModifiers:***REMOVED***["public",***REMOVED***"private",***REMOVED***"protected",***REMOVED***"readonly",***REMOVED***"declare",***REMOVED***"abstract",***REMOVED***"override"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errorTemplate:***REMOVED***TSErrors.InvalidModifierOnTypeParameter
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getScopeHandler()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***TypeScriptScopeHandler;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsIdentifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokenIsIdentifier(this.state.type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTokenCanFollowModifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(0)***REMOVED***||***REMOVED***this.match(5)***REMOVED***||***REMOVED***this.match(55)***REMOVED***||***REMOVED***this.match(21)***REMOVED***||***REMOVED***this.match(139)***REMOVED***||***REMOVED***this.isLiteralPropertyName();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsNextTokenOnSameLineAndCanFollowModifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsTokenCanFollowModifier();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsNextTokenCanFollowModifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(106))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsTokenCanFollowModifier();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsNextTokenOnSameLineAndCanFollowModifier();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseModifier(allowedModifiers,***REMOVED***stopOnStartOfClassStaticBlock,***REMOVED***hasSeenStaticModifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tokenIsIdentifier(this.state.type)***REMOVED***&&***REMOVED***this.state.type***REMOVED***!==***REMOVED***58***REMOVED***&&***REMOVED***this.state.type***REMOVED***!==***REMOVED***75)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modifier***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowedModifiers.includes(modifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasSeenStaticModifier***REMOVED***&&***REMOVED***this.match(106))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stopOnStartOfClassStaticBlock***REMOVED***&&***REMOVED***this.tsIsStartOfStaticBlocks())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***modifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseModifiers({
***REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers,
***REMOVED******REMOVED******REMOVED******REMOVED***disallowedModifiers,
***REMOVED******REMOVED******REMOVED******REMOVED***stopOnStartOfClassStaticBlock,
***REMOVED******REMOVED******REMOVED******REMOVED***errorTemplate***REMOVED***=***REMOVED***TSErrors.InvalidModifierOnTypeMember
***REMOVED******REMOVED***},***REMOVED***modified)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***enforceOrder***REMOVED***=***REMOVED***(loc,***REMOVED***modifier,***REMOVED***before,***REMOVED***after)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(modifier***REMOVED***===***REMOVED***before***REMOVED***&&***REMOVED***modified[after])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.InvalidModifiersOrder,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***orderedModifiers:***REMOVED***[before,***REMOVED***after]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***incompatible***REMOVED***=***REMOVED***(loc,***REMOVED***modifier,***REMOVED***mod1,***REMOVED***mod2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(modified[mod1]***REMOVED***&&***REMOVED***modifier***REMOVED***===***REMOVED***mod2***REMOVED***||***REMOVED***modified[mod2]***REMOVED***&&***REMOVED***modifier***REMOVED***===***REMOVED***mod1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.IncompatibleModifiers,***REMOVED***loc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifiers:***REMOVED***[mod1,***REMOVED***mod2]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modifier***REMOVED***=***REMOVED***this.tsParseModifier(allowedModifiers.concat(disallowedModifiers***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***disallowedModifiers***REMOVED***:***REMOVED***[]),***REMOVED***stopOnStartOfClassStaticBlock,***REMOVED***modified.static);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!modifier)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tsIsAccessModifier(modifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(modified.accessibility)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.DuplicateAccessibilityModifier,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***modifier,***REMOVED***"override");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***modifier,***REMOVED***"static");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***modifier,***REMOVED***"readonly");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modified.accessibility***REMOVED***=***REMOVED***modifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tsIsVarianceAnnotations(modifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(modified[modifier])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.DuplicateModifier,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modified[modifier]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***"in",***REMOVED***"out");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwnProperty.call(modified,***REMOVED***modifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.DuplicateModifier,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***"static",***REMOVED***"readonly");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***"static",***REMOVED***"override");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***"override",***REMOVED***"readonly");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceOrder(startLoc,***REMOVED***modifier,***REMOVED***"abstract",***REMOVED***"override");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***incompatible(startLoc,***REMOVED***modifier,***REMOVED***"declare",***REMOVED***"override");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***incompatible(startLoc,***REMOVED***modifier,***REMOVED***"static",***REMOVED***"abstract");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modified[modifier]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(disallowedModifiers***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***disallowedModifiers.includes(modifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(errorTemplate,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsListTerminator(kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"EnumMembers":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TypeMembers":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"HeritageClauseElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(5);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TupleElementTypes":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TypeParametersOrArguments":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(48);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseList(kind,***REMOVED***parseElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.tsIsListTerminator(kind))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(parseElement());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseDelimitedList(kind,***REMOVED***parseElement,***REMOVED***refTrailingCommaPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nonNull(this.tsParseDelimitedListWorker(kind,***REMOVED***parseElement,***REMOVED***true,***REMOVED***refTrailingCommaPos));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseDelimitedListWorker(kind,***REMOVED***parseElement,***REMOVED***expectSuccess,***REMOVED***refTrailingCommaPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***trailingCommaPos***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsIsListTerminator(kind))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trailingCommaPos***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***element***REMOVED***=***REMOVED***parseElement();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(element);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trailingCommaPos***REMOVED***=***REMOVED***this.state.lastTokStartLoc.index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsIsListTerminator(kind))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expectSuccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refTrailingCommaPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refTrailingCommaPos.value***REMOVED***=***REMOVED***trailingCommaPos;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseBracketedList(kind,***REMOVED***parseElement,***REMOVED***bracket,***REMOVED***skipFirstToken,***REMOVED***refTrailingCommaPos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!skipFirstToken)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bracket)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(47);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tsParseDelimitedList(kind,***REMOVED***parseElement,***REMOVED***refTrailingCommaPos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bracket)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(48);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseImportType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(83);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnsupportedImportTypeArgument,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***super.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.options***REMOVED***=***REMOVED***this.tsParseImportTypeOptions();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.options***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.qualifier***REMOVED***=***REMOVED***this.tsParseEntityName(1***REMOVED***|***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsParseTypeArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSImportType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseImportTypeOptions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***withProperty***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(76))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withProperty.method***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withProperty.key***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withProperty.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withProperty.shorthand***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***76);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED***withProperty.value***REMOVED***=***REMOVED***this.tsParseImportTypeWithPropertyValue();
***REMOVED******REMOVED******REMOVED******REMOVED***node.properties***REMOVED***=***REMOVED***[this.finishObjectProperty(withProperty)];
***REMOVED******REMOVED******REMOVED******REMOVED***this.eat(12);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseImportTypeWithPropertyValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***properties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(type)***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***134)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***properties.push(super.parsePropertyDefinition(null));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.eat(12);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.properties***REMOVED***=***REMOVED***properties;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseEntityName(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***entity;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***1***REMOVED***&&***REMOVED***this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"ThisExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity***REMOVED***=***REMOVED***this.parseIdentifier(!!(flags***REMOVED***&***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAtNode(entity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***entity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.parseIdentifier(!!(flags***REMOVED***&***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entity***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"TSQualifiedName");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entity;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeReference()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeName***REMOVED***=***REMOVED***this.tsParseEntityName(1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsParseTypeArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeReference");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseThisTypePredicate(lhs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAtNode(lhs);
***REMOVED******REMOVED******REMOVED******REMOVED***node.parameterName***REMOVED***=***REMOVED***lhs;
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsParseTypeAnnotation(false);
***REMOVED******REMOVED******REMOVED******REMOVED***node.asserts***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypePredicate");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseThisTypeNode()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSThisType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeQuery()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(87);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(83))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exprName***REMOVED***=***REMOVED***this.tsParseImportType();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exprName***REMOVED***=***REMOVED***this.tsParseEntityName(1***REMOVED***|***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsParseTypeArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeQuery");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeParameter(parseModifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***parseModifiers(node);
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***this.tsParseTypeParameterName();
***REMOVED******REMOVED******REMOVED******REMOVED***node.constraint***REMOVED***=***REMOVED***this.tsEatThenParseType(81);
***REMOVED******REMOVED******REMOVED******REMOVED***node.default***REMOVED***=***REMOVED***this.tsEatThenParseType(29);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeParameter");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseTypeParameters(parseModifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeParameters(parseModifiers);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeParameters(parseModifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(143))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***refTrailingCommaPos***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***-1
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***this.tsParseBracketedList("TypeParametersOrArguments",***REMOVED***this.tsParseTypeParameter.bind(this,***REMOVED***parseModifiers),***REMOVED***false,***REMOVED***true,***REMOVED***refTrailingCommaPos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.params.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.EmptyTypeParameters,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refTrailingCommaPos.value***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"trailingComma",***REMOVED***refTrailingCommaPos.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeParameterDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsFillSignature(returnToken,***REMOVED***signature)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***returnTokenRequired***REMOVED***=***REMOVED***returnToken***REMOVED***===***REMOVED***19;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paramsKey***REMOVED***=***REMOVED***"parameters";
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***returnTypeKey***REMOVED***=***REMOVED***"typeAnnotation";
***REMOVED******REMOVED******REMOVED******REMOVED***signature.typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***signature[paramsKey]***REMOVED***=***REMOVED***this.tsParseBindingListForSignature();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(returnTokenRequired)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signature[returnTypeKey]***REMOVED***=***REMOVED***this.tsParseTypeOrTypePredicateAnnotation(returnToken);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(returnToken))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signature[returnTypeKey]***REMOVED***=***REMOVED***this.tsParseTypeOrTypePredicateAnnotation(returnToken);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseBindingListForSignature()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***list***REMOVED***=***REMOVED***super.parseBindingList(11,***REMOVED***41,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***pattern***REMOVED***of***REMOVED***list)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***pattern;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"AssignmentPattern"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"TSParameterProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnsupportedSignatureParameterKind,***REMOVED***pattern,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***list;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeMemberSemicolon()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(12)***REMOVED***&&***REMOVED***!this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(13);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseSignatureMember(kind,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsFillSignature(14,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseTypeMemberSemicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***kind);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsUnambiguouslyIndexSignature()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(14);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseIndexSignature(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.match(0)***REMOVED***&&***REMOVED***this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***id.typeAnnotation***REMOVED***=***REMOVED***this.tsParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(id);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***node.parameters***REMOVED***=***REMOVED***[id];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsTryParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseTypeMemberSemicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSIndexSignature");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParsePropertyOrMethodSignature(node,***REMOVED***readonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***node.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10)***REMOVED***||***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(readonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ReadonlyForMethodSignature,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***method***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.AccessorCannotHaveTypeParameters,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsFillSignature(14,***REMOVED***method);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseTypeMemberSemicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paramsKey***REMOVED***=***REMOVED***"parameters";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***returnTypeKey***REMOVED***=***REMOVED***"typeAnnotation";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"get")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method[paramsKey].length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.BadGetterArity,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isThisParam(method[paramsKey][0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.AccessorCannotDeclareThisParameter,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"set")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method[paramsKey].length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.BadSetterArity,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstParameter***REMOVED***=***REMOVED***method[paramsKey][0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isThisParam(firstParameter))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.AccessorCannotDeclareThisParameter,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstParameter.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***firstParameter.optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.SetAccessorCannotHaveOptionalParameter,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(firstParameter.type***REMOVED***===***REMOVED***"RestElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.SetAccessorCannotHaveRestParameter,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method[returnTypeKey])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.SetAccessorCannotHaveReturnType,***REMOVED***method[returnTypeKey]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(method,***REMOVED***"TSMethodSignature");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***property***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(readonly)***REMOVED***property.readonly***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsTryParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***property.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseTypeMemberSemicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(property,***REMOVED***"TSPropertySignature");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeMember()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10)***REMOVED***||***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseSignatureMember("TSCallSignatureDeclaration",***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(77))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10)***REMOVED***||***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseSignatureMember("TSConstructSignatureDeclaration",***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.createIdentifier(id,***REMOVED***"new");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParsePropertyOrMethodSignature(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseModifiers({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers:***REMOVED***["readonly"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disallowedModifiers:***REMOVED***["declare",***REMOVED***"abstract",***REMOVED***"private",***REMOVED***"protected",***REMOVED***"public",***REMOVED***"static",***REMOVED***"override"]
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***this.tsTryParseIndexSignature(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***idx;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parsePropertyName(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.computed***REMOVED***&&***REMOVED***node.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***(node.key.name***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***node.key.name***REMOVED***===***REMOVED***"set")***REMOVED***&&***REMOVED***this.tsTokenCanFollowModifier())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***node.key.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parsePropertyName(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(10)***REMOVED***&&***REMOVED***!this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParsePropertyOrMethodSignature(node,***REMOVED***!!node.readonly);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeLiteral()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***this.tsParseObjectTypeMembers();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseObjectTypeMembers()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***members***REMOVED***=***REMOVED***this.tsParseList("TypeMembers",***REMOVED***this.tsParseTypeMember.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***members;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsStartOfMappedType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(53))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isContextual(122);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(122))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.tsIsIdentifier())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(58);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseMappedType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(53))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.readonly***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(122);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eatContextual(122))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.readonly***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(0);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameter***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameter.name***REMOVED***=***REMOVED***this.tsParseTypeParameterName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameter.constraint***REMOVED***=***REMOVED***this.tsExpectThenParseType(58);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameter***REMOVED***=***REMOVED***this.finishNode(typeParameter,***REMOVED***"TSTypeParameter");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.nameType***REMOVED***=***REMOVED***this.eatContextual(93)***REMOVED***?***REMOVED***this.tsParseType()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(53))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(17);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsTryParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSMappedType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTupleType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.elementTypes***REMOVED***=***REMOVED***this.tsParseBracketedList("TupleElementTypes",***REMOVED***this.tsParseTupleElementType.bind(this),***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***seenOptionalElement***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***node.elementTypes.forEach(elementNode***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***elementNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(seenOptionalElement***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***"TSRestType"***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***"TSOptionalType"***REMOVED***&&***REMOVED***!(type***REMOVED***===***REMOVED***"TSNamedTupleMember"***REMOVED***&&***REMOVED***elementNode.optional))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.OptionalTypeBeforeRequired,***REMOVED***elementNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seenOptionalElement***REMOVED***||***REMOVED***(seenOptionalElement***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***"TSNamedTupleMember"***REMOVED***&&***REMOVED***elementNode.optional***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"TSOptionalType");
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTupleType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTupleElementType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***restStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rest***REMOVED***=***REMOVED***this.eat(21);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***labeled;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***label;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isWord***REMOVED***=***REMOVED***tokenIsKeywordOrIdentifier(this.state.type);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chAfterWord***REMOVED***=***REMOVED***isWord***REMOVED***?***REMOVED***this.lookaheadCharCode()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chAfterWord***REMOVED***===***REMOVED***58)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(chAfterWord***REMOVED***===***REMOVED***63)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wordName***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeOrLabel***REMOVED***=***REMOVED***this.tsParseNonArrayType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lookaheadCharCode()***REMOVED***===***REMOVED***58)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label***REMOVED***=***REMOVED***this.createIdentifier(this.startNodeAt(startLoc),***REMOVED***wordName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(17);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeled***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***typeOrLabel;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(17);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional***REMOVED***=***REMOVED***this.eat(17);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeled***REMOVED***=***REMOVED***this.eat(14);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(labeled)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***labeledNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(label)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.label***REMOVED***=***REMOVED***label;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.elementType***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.TupleOptionalAfterType,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.InvalidTupleMemberLabel,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.label***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labeledNode.elementType***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(labeledNode,***REMOVED***"TSNamedTupleMember");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***optionalTypeNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionalTypeNode.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(optionalTypeNode,***REMOVED***"TSOptionalType");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rest)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***restNode***REMOVED***=***REMOVED***this.startNodeAt(restStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***restNode.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(restNode,***REMOVED***"TSRestType");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseParenthesizedType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSParenthesizedType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseFunctionOrConstructorType(type,***REMOVED***abstract)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"TSConstructorType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.abstract***REMOVED***=***REMOVED***!!abstract;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(abstract)***REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsInAllowConditionalTypesContext(()***REMOVED***=>***REMOVED***this.tsFillSignature(19,***REMOVED***node));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseLiteralTypeNode()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***135:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***136:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***85:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***86:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.literal***REMOVED***=***REMOVED***super.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSLiteralType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTemplateLiteralType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.literal***REMOVED***=***REMOVED***super.parseTemplate(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSLiteralType");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTemplateSubstitution()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.inType)***REMOVED***return***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseTemplateSubstitution();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseThisTypeOrThisTypePredicate()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***thisKeyword***REMOVED***=***REMOVED***this.tsParseThisTypeNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(116)***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseThisTypePredicate(thisKeyword);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***thisKeyword;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseNonArrayType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***135:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***136:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***85:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***86:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseLiteralTypeNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***53:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.value***REMOVED***===***REMOVED***"-")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextToken***REMOVED***=***REMOVED***this.lookahead();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken.type***REMOVED***!==***REMOVED***135***REMOVED***&&***REMOVED***nextToken.type***REMOVED***!==***REMOVED***136)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.literal***REMOVED***=***REMOVED***this.parseMaybeUnary();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSLiteralType");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***78:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseThisTypeOrThisTypePredicate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***87:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeQuery();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***83:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseImportType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))***REMOVED***?***REMOVED***this.tsParseMappedType()***REMOVED***:***REMOVED***this.tsParseTypeLiteral();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTupleType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseParenthesizedType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***25:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***24:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTemplateLiteralType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(type)***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***88***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***84)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodeType***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***88***REMOVED***?***REMOVED***"TSVoidKeyword"***REMOVED***:***REMOVED***type***REMOVED***===***REMOVED***84***REMOVED***?***REMOVED***"TSNullKeyword"***REMOVED***:***REMOVED***keywordTypeFromName(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodeType***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***!==***REMOVED***46)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***nodeType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeReference();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseArrayTypeOrHigher()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***this.tsParseNonArrayType();
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***this.eat(0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(3))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.elementType***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"TSArrayType");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.objectType***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.indexType***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"TSIndexedAccessType");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeOperator()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operator***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***operator;
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsParseTypeOperatorOrHigher();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(operator***REMOVED***===***REMOVED***"readonly")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsCheckTypeAnnotationForReadOnly(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeOperator");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsCheckTypeAnnotationForReadOnly(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.typeAnnotation.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTupleType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSArrayType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnexpectedReadonly,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseInferType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(115);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameter***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameter.name***REMOVED***=***REMOVED***this.tsParseTypeParameterName();
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameter.constraint***REMOVED***=***REMOVED***this.tsTryParse(()***REMOVED***=>***REMOVED***this.tsParseConstraintForInferType());
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameter***REMOVED***=***REMOVED***this.finishNode(typeParameter,***REMOVED***"TSTypeParameter");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSInferType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseConstraintForInferType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(81))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***constraint***REMOVED***=***REMOVED***this.tsInDisallowConditionalTypesContext(()***REMOVED***=>***REMOVED***this.tsParseType());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.inDisallowConditionalTypesContext***REMOVED***||***REMOVED***!this.match(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***constraint;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeOperatorOrHigher()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTypeOperator***REMOVED***=***REMOVED***tokenIsTSTypeOperator(this.state.type)***REMOVED***&&***REMOVED***!this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isTypeOperator***REMOVED***?***REMOVED***this.tsParseTypeOperator()***REMOVED***:***REMOVED***this.isContextual(115)***REMOVED***?***REMOVED***this.tsParseInferType()***REMOVED***:***REMOVED***this.tsInAllowConditionalTypesContext(()***REMOVED***=>***REMOVED***this.tsParseArrayTypeOrHigher());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseUnionOrIntersectionType(kind,***REMOVED***parseConstituentType,***REMOVED***operator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasLeadingOperator***REMOVED***=***REMOVED***this.eat(operator);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.push(parseConstituentType());
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(operator));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(types.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***!hasLeadingOperator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***types[0];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.types***REMOVED***=***REMOVED***types;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***kind);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseIntersectionTypeOrHigher()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseUnionOrIntersectionType("TSIntersectionType",***REMOVED***this.tsParseTypeOperatorOrHigher.bind(this),***REMOVED***45);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseUnionTypeOrHigher()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseUnionOrIntersectionType("TSUnionType",***REMOVED***this.tsParseIntersectionTypeOrHigher.bind(this),***REMOVED***43);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsStartOfFunctionType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(10)***REMOVED***&&***REMOVED***this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsSkipParameterStart()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type)***REMOVED***||***REMOVED***this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***previousErrorCount***REMOVED***=***REMOVED***errors.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseObjectLike(8,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***errors.length***REMOVED***===***REMOVED***previousErrorCount;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(_unused)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***previousErrorCount***REMOVED***=***REMOVED***errors.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseBindingList(3,***REMOVED***93,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***errors.length***REMOVED***===***REMOVED***previousErrorCount;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(_unused2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsUnambiguouslyStartOfFunctionType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(11)***REMOVED***||***REMOVED***this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsSkipParameterStart())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14)***REMOVED***||***REMOVED***this.match(12)***REMOVED***||***REMOVED***this.match(17)***REMOVED***||***REMOVED***this.match(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(19))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeOrTypePredicateAnnotation(returnToken)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***t***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(returnToken);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***asserts***REMOVED***=***REMOVED***!!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(asserts***REMOVED***&&***REMOVED***this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***thisTypePredicate***REMOVED***=***REMOVED***this.tsParseThisTypeOrThisTypePredicate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(thisTypePredicate.type***REMOVED***===***REMOVED***"TSThisType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parameterName***REMOVED***=***REMOVED***thisTypePredicate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.asserts***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thisTypePredicate***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"TSTypePredicate");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(thisTypePredicate,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thisTypePredicate.asserts***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t.typeAnnotation***REMOVED***=***REMOVED***thisTypePredicate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(t,***REMOVED***"TSTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typePredicateVariable***REMOVED***=***REMOVED***this.tsIsIdentifier()***REMOVED***&&***REMOVED***this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!typePredicateVariable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!asserts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeAnnotation(false,***REMOVED***t);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parameterName***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.asserts***REMOVED***=***REMOVED***asserts;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t.typeAnnotation***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"TSTypePredicate");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(t,***REMOVED***"TSTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsParseTypeAnnotation(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parameterName***REMOVED***=***REMOVED***typePredicateVariable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.asserts***REMOVED***=***REMOVED***asserts;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t.typeAnnotation***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"TSTypePredicate");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(t,***REMOVED***"TSTypeAnnotation");
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseTypeOrTypePredicateAnnotation()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeOrTypePredicateAnnotation(14);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseTypeAnnotation()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsEatThenParseType(14);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypePredicatePrefix()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(116)***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypePredicateAsserts()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.type***REMOVED***!==***REMOVED***109)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***containsEsc***REMOVED***=***REMOVED***this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tokenIsIdentifier(this.state.type)***REMOVED***&&***REMOVED***!this.match(78))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(containsEsc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidEscapedReservedWord,***REMOVED***this.state.lastTokStartLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedWord:***REMOVED***"asserts"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeAnnotation(eatColon***REMOVED***=***REMOVED***true,***REMOVED***t***REMOVED***=***REMOVED***this.startNode())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(eatColon)***REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t.typeAnnotation***REMOVED***=***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(t,***REMOVED***"TSTypeAnnotation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***assert(this.state.inType);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsParseNonConditionalType();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.inDisallowConditionalTypesContext***REMOVED***||***REMOVED***this.hasPrecedingLineBreak()***REMOVED***||***REMOVED***!this.eat(81))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAtNode(type);
***REMOVED******REMOVED******REMOVED******REMOVED***node.checkType***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***node.extendsType***REMOVED***=***REMOVED***this.tsInDisallowConditionalTypesContext(()***REMOVED***=>***REMOVED***this.tsParseNonConditionalType());
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(17);
***REMOVED******REMOVED******REMOVED******REMOVED***node.trueType***REMOVED***=***REMOVED***this.tsInAllowConditionalTypesContext(()***REMOVED***=>***REMOVED***this.tsParseType());
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED***node.falseType***REMOVED***=***REMOVED***this.tsInAllowConditionalTypesContext(()***REMOVED***=>***REMOVED***this.tsParseType());
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSConditionalType");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAbstractConstructorSignature()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isContextual(124)***REMOVED***&&***REMOVED***this.isLookaheadContextual("new");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseNonConditionalType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsIsStartOfFunctionType())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseFunctionOrConstructorType("TSFunctionType");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(77))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseFunctionOrConstructorType("TSConstructorType");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isAbstractConstructorSignature())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseFunctionOrConstructorType("TSConstructorType",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseUnionTypeOrHigher();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeAssertion()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("typescript",***REMOVED***"disallowAmbiguousJSXLike"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ReservedTypeAssertion,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(75)***REMOVED***?***REMOVED***this.tsParseTypeReference()***REMOVED***:***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(48);
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.parseMaybeUnary();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeAssertion");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseHeritageClause(token)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***delimitedList***REMOVED***=***REMOVED***this.tsParseDelimitedList("HeritageClauseElement",***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.tsParseEntityName(1***REMOVED***|***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsParseTypeArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSExpressionWithTypeArguments");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!delimitedList.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.EmptyHeritageClauseType,***REMOVED***originalStartLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***delimitedList;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseInterfaceDeclaration(node,***REMOVED***properties***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasFollowingLineBreak())***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(129);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties.declare)***REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***130);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.MissingInterfaceName,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(81))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.extends***REMOVED***=***REMOVED***this.tsParseHeritageClause("extends");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***body.body***REMOVED***=***REMOVED***this.tsInType(this.tsParseObjectTypeMembers.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.finishNode(body,***REMOVED***"TSInterfaceBody");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSInterfaceDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeAliasDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseInOutModifiers);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(29);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(114)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***!==***REMOVED***46)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSIntrinsicKeyword");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeAliasDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsInTopLevelContext(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.curContext()***REMOVED***!==***REMOVED***types.brace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldContext***REMOVED***=***REMOVED***this.state.context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.context***REMOVED***=***REMOVED***[oldContext[0]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.context***REMOVED***=***REMOVED***oldContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsInType(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInType***REMOVED***=***REMOVED***this.state.inType;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.inType***REMOVED***=***REMOVED***oldInType;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsInDisallowConditionalTypesContext(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInDisallowConditionalTypesContext***REMOVED***=***REMOVED***this.state.inDisallowConditionalTypesContext;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inDisallowConditionalTypesContext***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.inDisallowConditionalTypesContext***REMOVED***=***REMOVED***oldInDisallowConditionalTypesContext;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsInAllowConditionalTypesContext(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInDisallowConditionalTypesContext***REMOVED***=***REMOVED***this.state.inDisallowConditionalTypesContext;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inDisallowConditionalTypesContext***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.inDisallowConditionalTypesContext***REMOVED***=***REMOVED***oldInDisallowConditionalTypesContext;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsEatThenParseType(token)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(token))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsNextThenParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsExpectThenParseType(token)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(token);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsNextThenParseType()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseEnumMember()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.match(134)***REMOVED***?***REMOVED***super.parseStringLiteral(this.state.value)***REMOVED***:***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.initializer***REMOVED***=***REMOVED***super.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSEnumMember");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseEnumDeclaration(node,***REMOVED***properties***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties.const)***REMOVED***node.const***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(properties.declare)***REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(126);
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***node.const***REMOVED***?***REMOVED***8971***REMOVED***:***REMOVED***8459);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***this.tsParseDelimitedList("EnumMembers",***REMOVED***this.tsParseEnumMember.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSEnumDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseEnumBody()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***node.members***REMOVED***=***REMOVED***this.tsParseDelimitedList("EnumMembers",***REMOVED***this.tsParseEnumMember.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSEnumBody");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseModuleBlock()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseBlockOrModuleBlockBody(node.body***REMOVED***=***REMOVED***[],***REMOVED***undefined,***REMOVED***true,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSModuleBlock");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseModuleOrNamespaceDeclaration(node,***REMOVED***nested***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nested)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***1024);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inner***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseModuleOrNamespaceDeclaration(inner,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***inner;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(1024);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.tsParseModuleBlock();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSModuleDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseAmbientExternalModuleDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(112))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"global";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.global***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"module";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***super.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(1024);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.tsParseModuleBlock();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSModuleDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseImportEqualsDeclaration(node,***REMOVED***maybeDefaultIdentifier,***REMOVED***isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.isExport***REMOVED***=***REMOVED***isExport***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***maybeDefaultIdentifier***REMOVED***||***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***4096);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(29);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleReference***REMOVED***=***REMOVED***this.tsParseModuleReference();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.importKind***REMOVED***===***REMOVED***"type"***REMOVED***&&***REMOVED***moduleReference.type***REMOVED***!==***REMOVED***"TSExternalModuleReference")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ImportAliasHasImportType,***REMOVED***moduleReference);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.moduleReference***REMOVED***=***REMOVED***moduleReference;
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSImportEqualsDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsExternalModuleReference()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isContextual(119)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***40;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseModuleReference()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsIsExternalModuleReference()***REMOVED***?***REMOVED***this.tsParseExternalModuleReference()***REMOVED***:***REMOVED***this.tsParseEntityName(0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseExternalModuleReference()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(119);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***super.parseExprAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSExternalModuleReference");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsLookAhead(f)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***f();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseAndCatch(f)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tryParse(abort***REMOVED***=>***REMOVED***f()***REMOVED***||***REMOVED***abort());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.aborted***REMOVED***||***REMOVED***!result.node)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.error)***REMOVED***this.state***REMOVED***=***REMOVED***result.failState;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParse(f)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***f();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***result***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseDeclare(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startType***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsInAmbientContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(startType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***68:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseFunctionStatement(node,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***80:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(node,***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***126:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseEnumDeclaration(node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***112:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseAmbientExternalModuleDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***100:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.containsEsc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***75:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***74:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(75)***REMOVED***||***REMOVED***!this.isLookaheadContextual("enum"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***this.state.value,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(75);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseEnumDeclaration(node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***107:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.InvalidModifierOnUsingDeclaration,***REMOVED***this.state.startLoc,***REMOVED***"declare");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***"using",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***96:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAwaitUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.InvalidModifierOnAwaitUsingDeclaration,***REMOVED***this.state.startLoc,***REMOVED***"declare");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***"await***REMOVED***using",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***129:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tsParseInterfaceDeclaration(node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result)***REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(startType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseDeclaration(node,***REMOVED***this.state.value,***REMOVED***true,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseExportDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseDeclaration(this.startNode(),***REMOVED***this.state.value,***REMOVED***true,***REMOVED***null);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(expr.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"declare":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***this.tsTryParseDeclare(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"global":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(1024);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mod***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mod.kind***REMOVED***=***REMOVED***"global";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.global***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mod.id***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mod.body***REMOVED***=***REMOVED***this.tsParseModuleBlock();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(mod,***REMOVED***"TSModuleDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseDeclaration(node,***REMOVED***expr.name,***REMOVED***false,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseDeclaration(node,***REMOVED***value,***REMOVED***next,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"abstract":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsCheckLineTerminator(next)***REMOVED***&&***REMOVED***(this.match(80)***REMOVED***||***REMOVED***tokenIsIdentifier(this.state.type)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseAbstractDeclaration(node,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"module":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsCheckLineTerminator(next))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseAmbientExternalModuleDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"module";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseModuleOrNamespaceDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"namespace":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsCheckLineTerminator(next)***REMOVED***&&***REMOVED***tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***"namespace";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseModuleOrNamespaceDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"type":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsCheckLineTerminator(next)***REMOVED***&&***REMOVED***tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeAliasDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsCheckLineTerminator(next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasFollowingLineBreak())***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!this.isLineTerminator();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsTryParseGenericAsyncArrowFunction(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(47))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldMaybeInArrowParameters***REMOVED***=***REMOVED***this.state.maybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***this.tsTryParseAndCatch(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***this.tsParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseFunctionParams(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.tsTryParseTypeOrTypePredicateAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(19);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***oldMaybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!res)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseArrowExpression(res,***REMOVED***null,***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeArgumentsInExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.reScan_lt()***REMOVED***!==***REMOVED***47)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeArguments();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeArguments()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***this.tsInTopLevelContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(47);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseDelimitedList("TypeParametersOrArguments",***REMOVED***this.tsParseType.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.params.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.EmptyTypeArguments,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.state.inType***REMOVED***&&***REMOVED***this.curContext()***REMOVED***===***REMOVED***types.brace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reScan_lt_gt();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(48);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSTypeParameterInstantiation");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsDeclarationStart()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokenIsTSDeclarationStart(this.state.type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isExportDefaultSpecifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsIsDeclarationStart())***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isExportDefaultSpecifier();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingElement(flags,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***decorators.length***REMOVED***?***REMOVED***decorators[0].loc.start***REMOVED***:***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modified***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseModifiers({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers:***REMOVED***["public",***REMOVED***"private",***REMOVED***"protected",***REMOVED***"override",***REMOVED***"readonly"]
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***modified);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessibility***REMOVED***=***REMOVED***modified.accessibility;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***override***REMOVED***=***REMOVED***modified.override;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***readonly***REMOVED***=***REMOVED***modified.readonly;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(flags***REMOVED***&***REMOVED***4)***REMOVED***&&***REMOVED***(accessibility***REMOVED***||***REMOVED***readonly***REMOVED***||***REMOVED***override))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnexpectedParameterModifier,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***left***REMOVED***=***REMOVED***this.parseMaybeDefault();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionParamType(left);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elt***REMOVED***=***REMOVED***this.parseMaybeDefault(left.loc.start,***REMOVED***left);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessibility***REMOVED***||***REMOVED***readonly***REMOVED***||***REMOVED***override)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pp***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp.decorators***REMOVED***=***REMOVED***decorators;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(accessibility)***REMOVED***pp.accessibility***REMOVED***=***REMOVED***accessibility;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(readonly)***REMOVED***pp.readonly***REMOVED***=***REMOVED***readonly;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(override)***REMOVED***pp.override***REMOVED***=***REMOVED***override;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elt.type***REMOVED***!==***REMOVED***"Identifier"***REMOVED***&&***REMOVED***elt.type***REMOVED***!==***REMOVED***"AssignmentPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnsupportedParameterPropertyKind,***REMOVED***pp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp.parameter***REMOVED***=***REMOVED***elt;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(pp,***REMOVED***"TSParameterProperty");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left.decorators***REMOVED***=***REMOVED***decorators;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***elt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isSimpleParameter(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"TSParameterProperty"***REMOVED***&&***REMOVED***super.isSimpleParameter(node.parameter)***REMOVED***||***REMOVED***super.isSimpleParameter(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsDisallowOptionalPattern(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***param***REMOVED***of***REMOVED***node.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(param.type***REMOVED***!==***REMOVED***"Identifier"***REMOVED***&&***REMOVED***param.optional***REMOVED***&&***REMOVED***!this.state.isAmbientContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.PatternIsOptional,***REMOVED***param);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setArrowFunctionParameters(node,***REMOVED***params,***REMOVED***trailingCommaLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.setArrowFunctionParameters(node,***REMOVED***params,***REMOVED***trailingCommaLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsDisallowOptionalPattern(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionBodyAndFinish(node,***REMOVED***type,***REMOVED***isMethod***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.tsParseTypeOrTypePredicateAnnotation(14);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bodilessType***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***"FunctionDeclaration"***REMOVED***?***REMOVED***"TSDeclareFunction"***REMOVED***:***REMOVED***type***REMOVED***===***REMOVED***"ClassMethod"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"ClassPrivateMethod"***REMOVED***?***REMOVED***"TSDeclareMethod"***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bodilessType***REMOVED***&&***REMOVED***!this.match(5)***REMOVED***&&***REMOVED***this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***bodilessType);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bodilessType***REMOVED***===***REMOVED***"TSDeclareFunction"***REMOVED***&&***REMOVED***this.state.isAmbientContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.DeclareFunctionHasImplementation,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseFunctionBodyAndFinish(node,***REMOVED***bodilessType,***REMOVED***isMethod);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsDisallowOptionalPattern(node);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseFunctionBodyAndFinish(node,***REMOVED***type,***REMOVED***isMethod);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***registerFunctionStatementId(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.body***REMOVED***&&***REMOVED***node.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***1024);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.registerFunctionStatementId(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsCheckForInvalidTypeCasts(items)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***items.forEach(node***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***node.type)***REMOVED***===***REMOVED***"TSTypeCastExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnexpectedTypeAnnotation,***REMOVED***node.typeAnnotation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toReferencedList(exprList,***REMOVED***isInParens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsCheckForInvalidTypeCasts(exprList);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exprList;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrayLike(close,***REMOVED***canBePattern,***REMOVED***isTuple,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseArrayLike(close,***REMOVED***canBePattern,***REMOVED***isTuple,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ArrayExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsCheckForInvalidTypeCasts(node.elements);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSubscript(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***this.match(35))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.canStartJSXElement***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonNullExpression***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nonNullExpression.expression***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(nonNullExpression,***REMOVED***"TSNonNullExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isOptionalCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(18)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***60)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noCalls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.stop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.optionalChainMember***REMOVED***=***REMOVED***isOptionalCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***missingParenErrorLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tsTryParseAndCatch(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noCalls***REMOVED***&&***REMOVED***this.atPossibleAsyncArrow(base))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***asyncArrowFn***REMOVED***=***REMOVED***this.tsTryParseGenericAsyncArrowFunction(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(asyncArrowFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.stop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***asyncArrowFn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeArguments***REMOVED***=***REMOVED***this.tsParseTypeArgumentsInExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!typeArguments)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isOptionalCall***REMOVED***&&***REMOVED***!this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***missingParenErrorLoc***REMOVED***=***REMOVED***this.state.curPosition();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsTemplate(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***super.parseTaggedTemplateExpression(base,***REMOVED***startLoc,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.typeParameters***REMOVED***=***REMOVED***typeArguments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noCalls***REMOVED***&&***REMOVED***this.eat(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***this.parseCallExpressionArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsCheckForInvalidTypeCasts(node.arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***typeArguments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.optionalChainMember)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***isOptionalCall;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishCallExpression(node,***REMOVED***state.optionalChainMember);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokenType***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenType***REMOVED***===***REMOVED***48***REMOVED***||***REMOVED***tokenType***REMOVED***===***REMOVED***52***REMOVED***||***REMOVED***tokenType***REMOVED***!==***REMOVED***10***REMOVED***&&***REMOVED***tokenCanStartExpression(tokenType)***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***typeArguments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TSInstantiationExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(missingParenErrorLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(missingParenErrorLoc,***REMOVED***10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.type***REMOVED***===***REMOVED***"TSInstantiationExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(16)***REMOVED***||***REMOVED***this.match(18)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***!==***REMOVED***40)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(16)***REMOVED***&&***REMOVED***!this.match(18))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.expression***REMOVED***=***REMOVED***super.stopParseSubscript(base,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseSubscript(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***state);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNewCallee(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_callee$extra;
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseNewCallee(node);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callee
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callee.type***REMOVED***===***REMOVED***"TSInstantiationExpression"***REMOVED***&&***REMOVED***!((_callee$extra***REMOVED***=***REMOVED***callee.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_callee$extra.parenthesized))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***callee.typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***callee.expression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprOp(left,***REMOVED***leftStartLoc,***REMOVED***minPrec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isSatisfies;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenOperatorPrecedence(58)***REMOVED***>***REMOVED***minPrec***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***(this.isContextual(93)***REMOVED***||***REMOVED***(isSatisfies***REMOVED***=***REMOVED***this.isContextual(120))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(leftStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***this.tsInType(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(75))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSatisfies)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedKeyword,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyword:***REMOVED***"const"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeReference();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseType();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishNode(node,***REMOVED***isSatisfies***REMOVED***?***REMOVED***"TSSatisfiesExpression"***REMOVED***:***REMOVED***"TSAsExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.reScan_lt_gt();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprOp(node,***REMOVED***leftStartLoc,***REMOVED***minPrec);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExprOp(left,***REMOVED***leftStartLoc,***REMOVED***minPrec);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkReservedWord(word,***REMOVED***startLoc,***REMOVED***checkKeywords,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.isAmbientContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.checkReservedWord(word,***REMOVED***startLoc,***REMOVED***checkKeywords,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkImportReflection(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkImportReflection(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.module***REMOVED***&&***REMOVED***node.importKind***REMOVED***!==***REMOVED***"value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ImportReflectionHasImportType,***REMOVED***node.specifiers[0].loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkDuplicateExports()***REMOVED***{}
***REMOVED******REMOVED***isPotentialImportPhase(isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.isPotentialImportPhase(isExport))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(130))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ch***REMOVED***=***REMOVED***this.lookaheadCharCode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isExport***REMOVED***?***REMOVED***ch***REMOVED***===***REMOVED***123***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***42***REMOVED***:***REMOVED***ch***REMOVED***!==***REMOVED***61;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isExport***REMOVED***&&***REMOVED***this.isContextual(87);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***applyImportPhase(node,***REMOVED***isExport,***REMOVED***phase,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.applyImportPhase(node,***REMOVED***isExport,***REMOVED***phase,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***phase***REMOVED***===***REMOVED***"type"***REMOVED***?***REMOVED***"type"***REMOVED***:***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.importKind***REMOVED***=***REMOVED***phase***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***phase***REMOVED***===***REMOVED***"typeof"***REMOVED***?***REMOVED***phase***REMOVED***:***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.importKind***REMOVED***=***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseImport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***importNode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.importKind***REMOVED***=***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseImportEqualsDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(130))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maybeDefaultIdentifier***REMOVED***=***REMOVED***this.parseMaybeImportPhase(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lookaheadCharCode()***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseImportEqualsDeclaration(node,***REMOVED***maybeDefaultIdentifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importNode***REMOVED***=***REMOVED***super.parseImportSpecifiersAndAfter(node,***REMOVED***maybeDefaultIdentifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importNode***REMOVED***=***REMOVED***super.parseImport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importNode.importKind***REMOVED***===***REMOVED***"type"***REMOVED***&&***REMOVED***importNode.specifiers.length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***importNode.specifiers[0].type***REMOVED***===***REMOVED***"ImportDefaultSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed,***REMOVED***importNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***importNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExport(node,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(83))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodeImportEquals***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***maybeDefaultIdentifier***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(130)***REMOVED***&&***REMOVED***this.isPotentialImportPhase(false))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maybeDefaultIdentifier***REMOVED***=***REMOVED***this.parseMaybeImportPhase(nodeImportEquals,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeImportEquals.importKind***REMOVED***=***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***this.tsParseImportEqualsDeclaration(nodeImportEquals,***REMOVED***maybeDefaultIdentifier,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eat(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assign***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assign.expression***REMOVED***=***REMOVED***super.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(assign,***REMOVED***"TSExportAssignment");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eatContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(128);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(decl,***REMOVED***"TSNamespaceExportDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExport(node,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAbstractClass()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isContextual(124)***REMOVED***&&***REMOVED***this.isLookaheadContextual("class");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportDefaultExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAbstractClass())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cls***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cls.abstract***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(cls,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tsParseInterfaceDeclaration(this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result)***REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExportDefaultExpression();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVarStatement(node,***REMOVED***kind,***REMOVED***allowMissingInitializer***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAmbientContext
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***super.parseVarStatement(node,***REMOVED***kind,***REMOVED***allowMissingInitializer***REMOVED***||***REMOVED***isAmbientContext);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isAmbientContext)***REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.declare***REMOVED***&&***REMOVED***(kind***REMOVED***===***REMOVED***"using"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"await***REMOVED***using"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseOverwrite(TSErrors.UsingDeclarationInAmbientContext,***REMOVED***node,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***of***REMOVED***declaration.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!init)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"var"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"let"***REMOVED***||***REMOVED***!!id.typeAnnotation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.InitializerNotAllowedInAmbientContext,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isValidAmbientConstInitializer(init,***REMOVED***this.hasPlugin("estree")))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatementContent(flags,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(75)***REMOVED***&&***REMOVED***this.isLookaheadContextual("enum"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(75);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseEnumDeclaration(node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(126))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseEnumDeclaration(this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tsParseInterfaceDeclaration(this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result)***REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseStatementContent(flags,***REMOVED***decorators);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAccessModifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseModifier(["public",***REMOVED***"protected",***REMOVED***"private"]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsHasSomeModifiers(member,***REMOVED***modifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***modifiers.some(modifier***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tsIsAccessModifier(modifier))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***member.accessibility***REMOVED***===***REMOVED***modifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!member[modifier];
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsIsStartOfStaticBlocks()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isContextual(106)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***123;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassMember(classBody,***REMOVED***member,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modifiers***REMOVED***=***REMOVED***["declare",***REMOVED***"private",***REMOVED***"public",***REMOVED***"protected",***REMOVED***"override",***REMOVED***"abstract",***REMOVED***"readonly",***REMOVED***"static"];
***REMOVED******REMOVED******REMOVED******REMOVED***this.tsParseModifiers({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedModifiers:***REMOVED***modifiers,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disallowedModifiers:***REMOVED***["in",***REMOVED***"out"],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopOnStartOfClassStaticBlock:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errorTemplate:***REMOVED***TSErrors.InvalidModifierOnTypeParameterPositions
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***callParseClassMemberWithIsStatic***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsIsStartOfStaticBlocks())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsHasSomeModifiers(member,***REMOVED***modifiers))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.StaticBlockCannotHaveModifier,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassStaticBlock(classBody,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassMemberWithIsStatic(classBody,***REMOVED***member,***REMOVED***state,***REMOVED***!!member.static);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tsInAmbientContext(callParseClassMemberWithIsStatic);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callParseClassMemberWithIsStatic();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassMemberWithIsStatic(classBody,***REMOVED***member,***REMOVED***state,***REMOVED***isStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***this.tsTryParseIndexSignature(member);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(idx);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.abstract)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.IndexSignatureHasAbstract,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.accessibility)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.IndexSignatureHasAccessibility,***REMOVED***member,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifier:***REMOVED***member.accessibility
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.IndexSignatureHasDeclare,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.override)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.IndexSignatureHasOverride,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.inAbstractClass***REMOVED***&&***REMOVED***member.abstract)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.NonAbstractClassHasAbstractMethod,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.override)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!state.hadSuperClass)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.OverrideNotInSubClass,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassMemberWithIsStatic(classBody,***REMOVED***member,***REMOVED***state,***REMOVED***isStatic);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePostMemberNameModifiers(methodOrProp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***optional***REMOVED***=***REMOVED***this.eat(17);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optional)***REMOVED***methodOrProp.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(methodOrProp.readonly***REMOVED***&&***REMOVED***this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ClassMethodHasReadonly,***REMOVED***methodOrProp);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(methodOrProp.declare***REMOVED***&&***REMOVED***this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ClassMethodHasDeclare,***REMOVED***methodOrProp);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***expr.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***this.tsParseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators)***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***decl***REMOVED***||***REMOVED***super.parseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseExportDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.tsIsDeclarationStart())***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.shouldParseExportDeclaration();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseConditional(expr,***REMOVED***startLoc,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(17))***REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.maybeInArrowParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.lookaheadCharCode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***===***REMOVED***44***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***61***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***58***REMOVED***||***REMOVED***nextCh***REMOVED***===***REMOVED***41)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setOptionalParametersError(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseConditional(expr,***REMOVED***startLoc,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseParenItem(node,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newNode***REMOVED***=***REMOVED***super.parseParenItem(node,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeCastNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeCastNode.expression***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeCastNode.typeAnnotation***REMOVED***=***REMOVED***this.tsParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(typeCastNode,***REMOVED***"TSTypeCastExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.isAmbientContext***REMOVED***&&***REMOVED***this.isContextual(125))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsInAmbientContext(()***REMOVED***=>***REMOVED***this.parseExportDeclaration(node));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDeclare***REMOVED***=***REMOVED***this.eatContextual(125);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDeclare***REMOVED***&&***REMOVED***(this.isContextual(125)***REMOVED***||***REMOVED***!this.shouldParseExportDeclaration()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(TSErrors.ExpectedAmbientAfterExportDeclare,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isIdentifier***REMOVED***=***REMOVED***tokenIsIdentifier(this.state.type);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***isIdentifier***REMOVED***&&***REMOVED***this.tsTryParseExportDeclaration()***REMOVED***||***REMOVED***super.parseExportDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!declaration)***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.type***REMOVED***===***REMOVED***"TSInterfaceDeclaration"***REMOVED***||***REMOVED***declaration.type***REMOVED***===***REMOVED***"TSTypeAliasDeclaration"***REMOVED***||***REMOVED***isDeclare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDeclare***REMOVED***&&***REMOVED***declaration.type***REMOVED***!==***REMOVED***"TSImportEqualsDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocation(declaration,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.declare***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***declaration;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((!isStatement***REMOVED***||***REMOVED***optionalId)***REMOVED***&&***REMOVED***this.isContextual(113))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId,***REMOVED***node.declare***REMOVED***?***REMOVED***1024***REMOVED***:***REMOVED***8331);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***node.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassPropertyAnnotation(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(35))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.definite***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsTryParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassPropertyAnnotation(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.isAmbientContext***REMOVED***&&***REMOVED***!(node.readonly***REMOVED***&&***REMOVED***!node.typeAnnotation)***REMOVED***&&***REMOVED***this.match(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.DeclareClassFieldHasInitializer,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.abstract***REMOVED***&&***REMOVED***this.match(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.AbstractPropertyHasInitializer,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propertyName:***REMOVED***key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***!node.computed***REMOVED***?***REMOVED***key.name***REMOVED***:***REMOVED***`[${this.input.slice(this.offsetToSourcePos(key.start),***REMOVED***this.offsetToSourcePos(key.end))}]`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseClassProperty(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassPrivateProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.abstract)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.PrivateElementHasAbstract,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.accessibility)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.PrivateElementHasAccessibility,***REMOVED***node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifier:***REMOVED***node.accessibility
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassPropertyAnnotation(node);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseClassPrivateProperty(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassAccessorProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassPropertyAnnotation(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.AccessorCannotBeOptional,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseClassAccessorProperty(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters***REMOVED***&&***REMOVED***isConstructor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ConstructorHasTypeParameters,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declare***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***method;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declare***REMOVED***&&***REMOVED***(kind***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"set"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.DeclareAccessor,***REMOVED***method,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***method.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***super.pushClassMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassPrivateMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***method.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***super.pushClassPrivateMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declareClassPrivateMethodInScope(node,***REMOVED***kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSDeclareMethod")***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"MethodDefinition"***REMOVED***&&***REMOVED***node.value.body***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.declareClassPrivateMethodInScope(node,***REMOVED***kind);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassSuper(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassSuper(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.superClass***REMOVED***&&***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.superTypeParameters***REMOVED***=***REMOVED***this.tsParseTypeArgumentsInExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(113))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.implements***REMOVED***=***REMOVED***this.tsParseHeritageClause("implements");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***prop.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionParams(node,***REMOVED***isConstructor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParameters***REMOVED***=***REMOVED***this.tsTryParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***node.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseFunctionParams(node,***REMOVED***isConstructor);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVarId(decl,***REMOVED***kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseVarId(decl,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.id.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***this.eat(35))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.definite***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsTryParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.id.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAsyncArrowFromCallExpression(node,***REMOVED***call)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***this.tsParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseAsyncArrowFromCallExpression(node,***REMOVED***call);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_jsx,***REMOVED***_jsx2,***REMOVED***_typeCast,***REMOVED***_jsx3,***REMOVED***_typeCast2;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***jsx;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***typeCast;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("jsx")***REMOVED***&&***REMOVED***(this.match(143)***REMOVED***||***REMOVED***this.match(47)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***jsx***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse),***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!jsx.error)***REMOVED***return***REMOVED***jsx.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentContext***REMOVED***=***REMOVED***context[context.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentContext***REMOVED***===***REMOVED***types.j_oTag***REMOVED***||***REMOVED***currentContext***REMOVED***===***REMOVED***types.j_expr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!((_jsx***REMOVED***=***REMOVED***jsx)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_jsx.error)***REMOVED***&&***REMOVED***!this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!state***REMOVED***||***REMOVED***state***REMOVED***===***REMOVED***this.state)***REMOVED***state***REMOVED***=***REMOVED***this.state.clone();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrow***REMOVED***=***REMOVED***this.tryParse(abort***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_expr$extra,***REMOVED***_typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters***REMOVED***=***REMOVED***this.tsParseTypeParameters(this.tsParseConstModifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr.type***REMOVED***!==***REMOVED***"ArrowFunctionExpression"***REMOVED***||***REMOVED***(_expr$extra***REMOVED***=***REMOVED***expr.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_expr$extra.parenthesized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***abort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(((_typeParameters***REMOVED***=***REMOVED***typeParameters)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_typeParameters.params.length)***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(expr,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr.typeParameters***REMOVED***=***REMOVED***typeParameters;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!arrow.error***REMOVED***&&***REMOVED***!arrow.aborted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***this.reportReservedArrowTypeParam(typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrow.node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!jsx)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assert(!this.hasPlugin("jsx"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeCast***REMOVED***=***REMOVED***this.tryParse(()***REMOVED***=>***REMOVED***super.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse),***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!typeCast.error)***REMOVED***return***REMOVED***typeCast.node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_jsx2***REMOVED***=***REMOVED***jsx)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_jsx2.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***jsx.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***jsx.node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrow.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***arrow.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***this.reportReservedArrowTypeParam(typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrow.node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_typeCast***REMOVED***=***REMOVED***typeCast)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_typeCast.node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state***REMOVED***=***REMOVED***typeCast.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeCast.node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***((_jsx3***REMOVED***=***REMOVED***jsx)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_jsx3.error)***REMOVED***||***REMOVED***arrow.error***REMOVED***||***REMOVED***((_typeCast2***REMOVED***=***REMOVED***typeCast)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_typeCast2.error);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***reportReservedArrowTypeParam(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$extra2;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.params.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***!node.params[0].constraint***REMOVED***&&***REMOVED***!((_node$extra2***REMOVED***=***REMOVED***node.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_node$extra2.trailingComma)***REMOVED***&&***REMOVED***this.getPluginOption("typescript",***REMOVED***"disallowAmbiguousJSXLike"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.ReservedArrowTypeParam,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeUnary(refExpressionErrors,***REMOVED***sawUnary)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPlugin("jsx")***REMOVED***&&***REMOVED***this.match(47))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseTypeAssertion();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseMaybeUnary(refExpressionErrors,***REMOVED***sawUnary);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrow(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.tryParse(abort***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***returnType***REMOVED***=***REMOVED***this.tsParseTypeOrTypePredicateAnnotation(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.canInsertSemicolon()***REMOVED***||***REMOVED***!this.match(19))***REMOVED***abort();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***returnType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.aborted)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!result.thrown)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.error)***REMOVED***this.state***REMOVED***=***REMOVED***result.failState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.returnType***REMOVED***=***REMOVED***result.node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseArrow(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionParamType(param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***param.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsTryParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***param.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(param);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAssignable(node,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeCastExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isAssignable(node.expression,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSParameterProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isAssignable(node,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignable(node,***REMOVED***isLHS***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableParenthesizedExpression(node,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAsExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSSatisfiesExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSNonNullExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAssertion":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.UnexpectedTypeCastInParameter,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.expression,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isLHS***REMOVED***&&***REMOVED***node.left.type***REMOVED***===***REMOVED***"TSTypeCastExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***this.typeCastToParameter(node.left);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignable(node,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableParenthesizedExpression(node,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.expression.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAsExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSSatisfiesExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSNonNullExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAssertion":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(node.expression,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignable(node,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkToRestConversion(node,***REMOVED***allowPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAsExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSSatisfiesExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAssertion":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSNonNullExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkToRestConversion(node.expression,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.checkToRestConversion(node,***REMOVED***allowPattern);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidLVal(type,***REMOVED***isUnparenthesizedInAssign,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeCastExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSParameterProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"parameter";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSNonNullExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"expression";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAsExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSSatisfiesExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAssertion":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(binding***REMOVED***!==***REMOVED***64***REMOVED***||***REMOVED***!isUnparenthesizedInAssign)***REMOVED***&&***REMOVED***["expression",***REMOVED***true];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isValidLVal(type,***REMOVED***isUnparenthesizedInAssign,***REMOVED***binding);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingAtom()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.type***REMOVED***===***REMOVED***78)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseBindingAtom();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeDecoratorArguments(expr,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeArguments***REMOVED***=***REMOVED***this.tsParseTypeArgumentsInExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***call***REMOVED***=***REMOVED***super.parseMaybeDecoratorArguments(expr,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***call.typeParameters***REMOVED***=***REMOVED***typeArguments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***call;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***10);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseMaybeDecoratorArguments(expr,***REMOVED***startLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkCommaAfterRest(close)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.isAmbientContext***REMOVED***&&***REMOVED***this.match(12)***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***close)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.checkCommaAfterRest(close);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isClassMethod()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(47)***REMOVED***||***REMOVED***super.isClassMethod();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isClassProperty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(35)***REMOVED***||***REMOVED***this.match(14)***REMOVED***||***REMOVED***super.isClassProperty();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeDefault(startLoc,***REMOVED***left)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***super.parseMaybeDefault(startLoc,***REMOVED***left);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"AssignmentPattern"***REMOVED***&&***REMOVED***node.typeAnnotation***REMOVED***&&***REMOVED***node.right.start***REMOVED***<***REMOVED***node.typeAnnotation.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.TypeAnnotationAfterAssign,***REMOVED***node.typeAnnotation);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getTokenFromCode(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.inType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(48,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***60)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(47,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.getTokenFromCode(code);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***reScan_lt_gt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***47)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***-=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_lt();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***48)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***-=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readToken_gt();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***reScan_lt()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***51)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos***REMOVED***-=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(47,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***47;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignableListItem(exprList,***REMOVED***index,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***exprList[index];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSTypeCastExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprList[index]***REMOVED***=***REMOVED***this.typeCastToParameter(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignableListItem(exprList,***REMOVED***index,***REMOVED***isLHS);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***typeCastToParameter(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression.typeAnnotation***REMOVED***=***REMOVED***node.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(node.expression,***REMOVED***node.typeAnnotation.loc.end);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.expression;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseArrow(params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***params.every(expr***REMOVED***=>***REMOVED***this.isAssignable(expr,***REMOVED***true));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.shouldParseArrow(params);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseAsyncArrow()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(14)***REMOVED***||***REMOVED***super.shouldParseAsyncArrow();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***canHaveLeadingDecorator()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.canHaveLeadingDecorator()***REMOVED***||***REMOVED***this.isAbstractClass();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***jsxParseOpeningElementAfterName(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(47)***REMOVED***||***REMOVED***this.match(51))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeArguments***REMOVED***=***REMOVED***this.tsTryParseAndCatch(()***REMOVED***=>***REMOVED***this.tsParseTypeArgumentsInExpression());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeArguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters***REMOVED***=***REMOVED***typeArguments;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.jsxParseOpeningElementAfterName(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getGetterSetterExpectedParamCount(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***baseCount***REMOVED***=***REMOVED***super.getGetterSetterExpectedParamCount(method);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***this.getObjectOrClassMethodParams(method);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstParam***REMOVED***=***REMOVED***params[0];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasContextParam***REMOVED***=***REMOVED***firstParam***REMOVED***&&***REMOVED***this.isThisParam(firstParam);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasContextParam***REMOVED***?***REMOVED***baseCount***REMOVED***+***REMOVED***1***REMOVED***:***REMOVED***baseCount;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseCatchClauseParam()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***param***REMOVED***=***REMOVED***super.parseCatchClauseParam();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***this.tsTryParseTypeAnnotation();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***param.typeAnnotation***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(param);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsInAmbientContext(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAmbientContext:***REMOVED***oldIsAmbientContext,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strict:***REMOVED***oldStrict
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.isAmbientContext***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.strict***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.isAmbientContext***REMOVED***=***REMOVED***oldIsAmbientContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.strict***REMOVED***=***REMOVED***oldStrict;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClass(node,***REMOVED***isStatement,***REMOVED***optionalId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInAbstractClass***REMOVED***=***REMOVED***this.state.inAbstractClass;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inAbstractClass***REMOVED***=***REMOVED***!!node.abstract;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseClass(node,***REMOVED***isStatement,***REMOVED***optionalId);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.inAbstractClass***REMOVED***=***REMOVED***oldInAbstractClass;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseAbstractDeclaration(node,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(80))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.abstract***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.maybeTakeDecorators(decorators,***REMOVED***this.parseClass(node,***REMOVED***true,***REMOVED***false));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(129))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasFollowingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.abstract***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifier,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tsParseInterfaceDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***80);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMethod(node,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowDirectSuper,***REMOVED***type,***REMOVED***inClassScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***method***REMOVED***=***REMOVED***super.parseMethod(node,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowDirectSuper,***REMOVED***type,***REMOVED***inClassScope);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.abstract***REMOVED***||***REMOVED***method.type***REMOVED***===***REMOVED***"TSAbstractMethodDefinition")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasEstreePlugin***REMOVED***=***REMOVED***this.hasPlugin("estree");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***methodFn***REMOVED***=***REMOVED***hasEstreePlugin***REMOVED***?***REMOVED***method.value***REMOVED***:***REMOVED***method;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(methodFn.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***method;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(TSErrors.AbstractMethodHasImplementation,***REMOVED***method,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***methodName:***REMOVED***key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***!method.computed***REMOVED***?***REMOVED***key.name***REMOVED***:***REMOVED***`[${this.input.slice(this.offsetToSourcePos(key.start),***REMOVED***this.offsetToSourcePos(key.end))}]`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***method;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***tsParseTypeParameterName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeName***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeName.name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseAsAmbientContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!this.getPluginOption("typescript",***REMOVED***"dts");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parse()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldParseAsAmbientContext())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.isAmbientContext***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parse();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldParseAsAmbientContext())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.isAmbientContext***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.getExpression();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportSpecifier(node,***REMOVED***isString,***REMOVED***isInTypeExport,***REMOVED***isMaybeTypeOnly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isString***REMOVED***&&***REMOVED***isMaybeTypeOnly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseTypeOnlyImportExportSpecifier(node,***REMOVED***false,***REMOVED***isInTypeExport);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportSpecifier");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.exportKind***REMOVED***=***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExportSpecifier(node,***REMOVED***isString,***REMOVED***isInTypeExport,***REMOVED***isMaybeTypeOnly);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSpecifier(specifier,***REMOVED***importedIsString,***REMOVED***isInTypeOnlyImport,***REMOVED***isMaybeTypeOnly,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!importedIsString***REMOVED***&&***REMOVED***isMaybeTypeOnly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseTypeOnlyImportExportSpecifier(specifier,***REMOVED***true,***REMOVED***isInTypeOnlyImport);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(specifier,***REMOVED***"ImportSpecifier");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***specifier.importKind***REMOVED***=***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseImportSpecifier(specifier,***REMOVED***importedIsString,***REMOVED***isInTypeOnlyImport,***REMOVED***isMaybeTypeOnly,***REMOVED***isInTypeOnlyImport***REMOVED***?***REMOVED***4098***REMOVED***:***REMOVED***4096);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTypeOnlyImportExportSpecifier(node,***REMOVED***isImport,***REMOVED***isInTypeOnlyImportExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***leftOfAsKey***REMOVED***=***REMOVED***isImport***REMOVED***?***REMOVED***"imported"***REMOVED***:***REMOVED***"local";
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rightOfAsKey***REMOVED***=***REMOVED***isImport***REMOVED***?***REMOVED***"local"***REMOVED***:***REMOVED***"exported";
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***leftOfAs***REMOVED***=***REMOVED***node[leftOfAsKey];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rightOfAs;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasTypeSpecifier***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***canParseAsKeyword***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loc***REMOVED***=***REMOVED***leftOfAs.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstAs***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***secondAs***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasTypeSpecifier***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leftOfAs***REMOVED***=***REMOVED***firstAs;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rightOfAs***REMOVED***=***REMOVED***isImport***REMOVED***?***REMOVED***this.parseIdentifier()***REMOVED***:***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***canParseAsKeyword***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rightOfAs***REMOVED***=***REMOVED***secondAs;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***canParseAsKeyword***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***canParseAsKeyword***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rightOfAs***REMOVED***=***REMOVED***isImport***REMOVED***?***REMOVED***this.parseIdentifier()***REMOVED***:***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasTypeSpecifier***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leftOfAs***REMOVED***=***REMOVED***firstAs;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasTypeSpecifier***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isImport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leftOfAs***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedWord(leftOfAs.name,***REMOVED***leftOfAs.loc.start,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leftOfAs***REMOVED***=***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasTypeSpecifier***REMOVED***&&***REMOVED***isInTypeOnlyImportExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(isImport***REMOVED***?***REMOVED***TSErrors.TypeModifierIsUsedInTypeImports***REMOVED***:***REMOVED***TSErrors.TypeModifierIsUsedInTypeExports,***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node[leftOfAsKey]***REMOVED***=***REMOVED***leftOfAs;
***REMOVED******REMOVED******REMOVED******REMOVED***node[rightOfAsKey]***REMOVED***=***REMOVED***rightOfAs;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kindKey***REMOVED***=***REMOVED***isImport***REMOVED***?***REMOVED***"importKind"***REMOVED***:***REMOVED***"exportKind";
***REMOVED******REMOVED******REMOVED******REMOVED***node[kindKey]***REMOVED***=***REMOVED***hasTypeSpecifier***REMOVED***?***REMOVED***"type"***REMOVED***:***REMOVED***"value";
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canParseAsKeyword***REMOVED***&&***REMOVED***this.eatContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node[rightOfAsKey]***REMOVED***=***REMOVED***isImport***REMOVED***?***REMOVED***this.parseIdentifier()***REMOVED***:***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node[rightOfAsKey])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node[rightOfAsKey]***REMOVED***=***REMOVED***this.cloneIdentifier(node[leftOfAsKey]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isImport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node[rightOfAsKey],***REMOVED***hasTypeSpecifier***REMOVED***?***REMOVED***4098***REMOVED***:***REMOVED***4096);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***fillOptionalPropertiesForTSESLint(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$directive,***REMOVED***_node$decorators,***REMOVED***_node$optional,***REMOVED***_node$typeAnnotation,***REMOVED***_node$accessibility,***REMOVED***_node$decorators2,***REMOVED***_node$override,***REMOVED***_node$readonly,***REMOVED***_node$static,***REMOVED***_node$declare,***REMOVED***_node$returnType,***REMOVED***_node$typeParameters,***REMOVED***_node$optional2,***REMOVED***_node$optional3,***REMOVED***_node$accessibility2,***REMOVED***_node$readonly2,***REMOVED***_node$static2,***REMOVED***_node$declare2,***REMOVED***_node$definite,***REMOVED***_node$readonly3,***REMOVED***_node$typeAnnotation2,***REMOVED***_node$accessibility3,***REMOVED***_node$decorators3,***REMOVED***_node$override2,***REMOVED***_node$optional4,***REMOVED***_node$id,***REMOVED***_node$abstract,***REMOVED***_node$declare3,***REMOVED***_node$decorators4,***REMOVED***_node$implements,***REMOVED***_node$superTypeArgume,***REMOVED***_node$typeParameters2,***REMOVED***_node$declare4,***REMOVED***_node$definite2,***REMOVED***_node$const,***REMOVED***_node$declare5,***REMOVED***_node$computed,***REMOVED***_node$qualifier,***REMOVED***_node$options,***REMOVED***_node$declare6,***REMOVED***_node$extends,***REMOVED***_node$optional5,***REMOVED***_node$readonly4,***REMOVED***_node$declare7,***REMOVED***_node$global,***REMOVED***_node$const2,***REMOVED***_node$in,***REMOVED***_node$out;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ExpressionStatement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$directive***REMOVED***=***REMOVED***node.directive)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$directive***REMOVED***:***REMOVED***node.directive***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"RestElement":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AssignmentPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectPattern":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$decorators***REMOVED***=***REMOVED***node.decorators)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$decorators***REMOVED***:***REMOVED***node.decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$optional***REMOVED***=***REMOVED***node.optional)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$optional***REMOVED***:***REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$typeAnnotation***REMOVED***=***REMOVED***node.typeAnnotation)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$typeAnnotation***REMOVED***:***REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSParameterProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$accessibility***REMOVED***=***REMOVED***node.accessibility)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$accessibility***REMOVED***:***REMOVED***node.accessibility***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$decorators2***REMOVED***=***REMOVED***node.decorators)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$decorators2***REMOVED***:***REMOVED***node.decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$override***REMOVED***=***REMOVED***node.override)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$override***REMOVED***:***REMOVED***node.override***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$readonly***REMOVED***=***REMOVED***node.readonly)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$readonly***REMOVED***:***REMOVED***node.readonly***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$static***REMOVED***=***REMOVED***node.static)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$static***REMOVED***:***REMOVED***node.static***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEmptyBodyFunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSDeclareFunction":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"FunctionDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"FunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassMethod":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassPrivateMethod":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$returnType***REMOVED***=***REMOVED***node.returnType)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$returnType***REMOVED***:***REMOVED***node.returnType***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$typeParameters***REMOVED***=***REMOVED***node.typeParameters)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$typeParameters***REMOVED***:***REMOVED***node.typeParameters***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Property":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$optional2***REMOVED***=***REMOVED***node.optional)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$optional2***REMOVED***:***REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSMethodSignature":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSPropertySignature":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$optional3***REMOVED***=***REMOVED***node.optional)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$optional3***REMOVED***:***REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSIndexSignature":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$accessibility2***REMOVED***=***REMOVED***node.accessibility)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$accessibility2***REMOVED***:***REMOVED***node.accessibility***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$readonly2***REMOVED***=***REMOVED***node.readonly)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$readonly2***REMOVED***:***REMOVED***node.readonly***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$static2***REMOVED***=***REMOVED***node.static)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$static2***REMOVED***:***REMOVED***node.static***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAbstractPropertyDefinition":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"PropertyDefinition":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAbstractAccessorProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"AccessorProperty":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare2***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare2***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$definite***REMOVED***=***REMOVED***node.definite)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$definite***REMOVED***:***REMOVED***node.definite***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$readonly3***REMOVED***=***REMOVED***node.readonly)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$readonly3***REMOVED***:***REMOVED***node.readonly***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$typeAnnotation2***REMOVED***=***REMOVED***node.typeAnnotation)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$typeAnnotation2***REMOVED***:***REMOVED***node.typeAnnotation***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAbstractMethodDefinition":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"MethodDefinition":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$accessibility3***REMOVED***=***REMOVED***node.accessibility)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$accessibility3***REMOVED***:***REMOVED***node.accessibility***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$decorators3***REMOVED***=***REMOVED***node.decorators)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$decorators3***REMOVED***:***REMOVED***node.decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$override2***REMOVED***=***REMOVED***node.override)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$override2***REMOVED***:***REMOVED***node.override***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$optional4***REMOVED***=***REMOVED***node.optional)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$optional4***REMOVED***:***REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$id***REMOVED***=***REMOVED***node.id)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$id***REMOVED***:***REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$abstract***REMOVED***=***REMOVED***node.abstract)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$abstract***REMOVED***:***REMOVED***node.abstract***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare3***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare3***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$decorators4***REMOVED***=***REMOVED***node.decorators)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$decorators4***REMOVED***:***REMOVED***node.decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$implements***REMOVED***=***REMOVED***node.implements)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$implements***REMOVED***:***REMOVED***node.implements***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$superTypeArgume***REMOVED***=***REMOVED***node.superTypeArguments)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$superTypeArgume***REMOVED***:***REMOVED***node.superTypeArguments***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$typeParameters2***REMOVED***=***REMOVED***node.typeParameters)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$typeParameters2***REMOVED***:***REMOVED***node.typeParameters***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAliasDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"VariableDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare4***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare4***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"VariableDeclarator":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$definite2***REMOVED***=***REMOVED***node.definite)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$definite2***REMOVED***:***REMOVED***node.definite***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEnumDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$const***REMOVED***=***REMOVED***node.const)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$const***REMOVED***:***REMOVED***node.const***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare5***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare5***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEnumMember":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$computed***REMOVED***=***REMOVED***node.computed)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$computed***REMOVED***:***REMOVED***node.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSImportType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$qualifier***REMOVED***=***REMOVED***node.qualifier)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$qualifier***REMOVED***:***REMOVED***node.qualifier***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$options***REMOVED***=***REMOVED***node.options)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$options***REMOVED***:***REMOVED***node.options***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSInterfaceDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare6***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare6***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$extends***REMOVED***=***REMOVED***node.extends)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$extends***REMOVED***:***REMOVED***node.extends***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSMappedType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$optional5***REMOVED***=***REMOVED***node.optional)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$optional5***REMOVED***:***REMOVED***node.optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$readonly4***REMOVED***=***REMOVED***node.readonly)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$readonly4***REMOVED***:***REMOVED***node.readonly***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSModuleDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$declare7***REMOVED***=***REMOVED***node.declare)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$declare7***REMOVED***:***REMOVED***node.declare***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$global***REMOVED***=***REMOVED***node.global)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$global***REMOVED***:***REMOVED***node.global***REMOVED***=***REMOVED***node.kind***REMOVED***===***REMOVED***"global";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeParameter":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$const2***REMOVED***=***REMOVED***node.const)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$const2***REMOVED***:***REMOVED***node.const***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$in***REMOVED***=***REMOVED***node.in)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$in***REMOVED***:***REMOVED***node.in***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_node$out***REMOVED***=***REMOVED***node.out)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$out***REMOVED***:***REMOVED***node.out***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
function***REMOVED***isPossiblyLiteralEnum(expression)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(expression.type***REMOVED***!==***REMOVED***"MemberExpression")***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***computed,
***REMOVED******REMOVED******REMOVED******REMOVED***property
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED***if***REMOVED***(computed***REMOVED***&&***REMOVED***property.type***REMOVED***!==***REMOVED***"StringLiteral"***REMOVED***&&***REMOVED***(property.type***REMOVED***!==***REMOVED***"TemplateLiteral"***REMOVED***||***REMOVED***property.expressions.length***REMOVED***>***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isUncomputedMemberExpressionChain(expression.object);
}
function***REMOVED***isValidAmbientConstInitializer(expression,***REMOVED***estree)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_expression$extra;
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED***if***REMOVED***((_expression$extra***REMOVED***=***REMOVED***expression.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_expression$extra.parenthesized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(estree)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"Literal")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"string"***REMOVED***||***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"StringLiteral"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"BooleanLiteral")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isNumber(expression,***REMOVED***estree)***REMOVED***||***REMOVED***isNegativeNumber(expression,***REMOVED***estree))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"TemplateLiteral"***REMOVED***&&***REMOVED***expression.expressions.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isPossiblyLiteralEnum(expression))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***isNumber(expression,***REMOVED***estree)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(estree)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expression.type***REMOVED***===***REMOVED***"Literal"***REMOVED***&&***REMOVED***(typeof***REMOVED***expression.value***REMOVED***===***REMOVED***"number"***REMOVED***||***REMOVED***"bigint"***REMOVED***in***REMOVED***expression);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***expression.type***REMOVED***===***REMOVED***"NumericLiteral"***REMOVED***||***REMOVED***expression.type***REMOVED***===***REMOVED***"BigIntLiteral";
}
function***REMOVED***isNegativeNumber(expression,***REMOVED***estree)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(expression.type***REMOVED***===***REMOVED***"UnaryExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***operator,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(operator***REMOVED***===***REMOVED***"-"***REMOVED***&&***REMOVED***isNumber(argument,***REMOVED***estree))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***isUncomputedMemberExpressionChain(expression)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(expression.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(expression.type***REMOVED***!==***REMOVED***"MemberExpression"***REMOVED***||***REMOVED***expression.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isUncomputedMemberExpressionChain(expression.object);
}
const***REMOVED***PlaceholderErrors***REMOVED***=***REMOVED***ParseErrorEnum`placeholders`({
***REMOVED******REMOVED***ClassNameIsRequired:***REMOVED***"A***REMOVED***class***REMOVED***name***REMOVED***is***REMOVED***required.",
***REMOVED******REMOVED***UnexpectedSpace:***REMOVED***"Unexpected***REMOVED***space***REMOVED***in***REMOVED***placeholder."
});
var***REMOVED***placeholders***REMOVED***=***REMOVED***superClass***REMOVED***=>***REMOVED***class***REMOVED***PlaceholdersParserMixin***REMOVED***extends***REMOVED***superClass***REMOVED***{
***REMOVED******REMOVED***parsePlaceholder(expectedNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(133))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assertNoSpace();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***super.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assertNoSpace();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(133);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishPlaceholder(node,***REMOVED***expectedNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishPlaceholder(node,***REMOVED***expectedNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***placeholder***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!placeholder.expectedNode***REMOVED***||***REMOVED***!placeholder.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placeholder***REMOVED***=***REMOVED***this.finishNode(placeholder,***REMOVED***"Placeholder");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***placeholder.expectedNode***REMOVED***=***REMOVED***expectedNode;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***placeholder;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getTokenFromCode(code)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***37***REMOVED***&&***REMOVED***this.input.charCodeAt(this.state.pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***37)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishOp(133,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.getTokenFromCode(code);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprAtom(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePlaceholder("Expression")***REMOVED***||***REMOVED***super.parseExprAtom(refExpressionErrors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseIdentifier(liberal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePlaceholder("Identifier")***REMOVED***||***REMOVED***super.parseIdentifier(liberal);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkReservedWord(word,***REMOVED***startLoc,***REMOVED***checkKeywords,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(word***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.checkReservedWord(word,***REMOVED***startLoc,***REMOVED***checkKeywords,***REMOVED***isBinding);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***cloneIdentifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***super.cloneIdentifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cloned.type***REMOVED***===***REMOVED***"Placeholder")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned.expectedNode***REMOVED***=***REMOVED***node.expectedNode;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***cloneStringLiteral(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Placeholder")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.cloneIdentifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.cloneStringLiteral(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBindingAtom()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePlaceholder("Pattern")***REMOVED***||***REMOVED***super.parseBindingAtom();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidLVal(type,***REMOVED***isParenthesized,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"Placeholder"***REMOVED***||***REMOVED***super.isValidLVal(type,***REMOVED***isParenthesized,***REMOVED***binding);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toAssignable(node,***REMOVED***isLHS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***"Placeholder"***REMOVED***&&***REMOVED***node.expectedNode***REMOVED***===***REMOVED***"Expression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expectedNode***REMOVED***=***REMOVED***"Pattern";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super.toAssignable(node,***REMOVED***isLHS);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***chStartsBindingIdentifier(ch,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(super.chStartsBindingIdentifier(ch,***REMOVED***pos))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(next)***REMOVED***===***REMOVED***37***REMOVED***&&***REMOVED***this.input.charCodeAt(next***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***37)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***verifyBreakContinue(node,***REMOVED***isBreak)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.label***REMOVED***&&***REMOVED***node.label.type***REMOVED***===***REMOVED***"Placeholder")***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***super.verifyBreakContinue(node,***REMOVED***isBreak);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExpressionStatement(node,***REMOVED***expr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_expr$extra;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expr.type***REMOVED***!==***REMOVED***"Placeholder"***REMOVED***||***REMOVED***(_expr$extra***REMOVED***=***REMOVED***expr.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_expr$extra.parenthesized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExpressionStatement(node,***REMOVED***expr);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stmt***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stmt.label***REMOVED***=***REMOVED***this.finishPlaceholder(expr,***REMOVED***"Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stmt.body***REMOVED***=***REMOVED***super.parseStatementOrSloppyAnnexBFunctionDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(stmt,***REMOVED***"LabeledStatement");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stmtPlaceholder***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***stmtPlaceholder.name***REMOVED***=***REMOVED***expr.name;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishPlaceholder(stmtPlaceholder,***REMOVED***"Statement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBlock(allowDirectives,***REMOVED***createNewLexicalScope,***REMOVED***afterBlockParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePlaceholder("BlockStatement")***REMOVED***||***REMOVED***super.parseBlock(allowDirectives,***REMOVED***createNewLexicalScope,***REMOVED***afterBlockParse);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionId(requireId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePlaceholder("Identifier")***REMOVED***||***REMOVED***super.parseFunctionId(requireId);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClass(node,***REMOVED***isStatement,***REMOVED***optionalId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isStatement***REMOVED***?***REMOVED***"ClassDeclaration"***REMOVED***:***REMOVED***"ClassExpression";
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldStrict***REMOVED***=***REMOVED***this.state.strict;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placeholder***REMOVED***=***REMOVED***this.parsePlaceholder("Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placeholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(81)***REMOVED***||***REMOVED***this.match(133)***REMOVED***||***REMOVED***this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***placeholder;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(optionalId***REMOVED***||***REMOVED***!isStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.finishPlaceholder(placeholder,***REMOVED***"ClassBody");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(PlaceholderErrors.ClassNameIsRequired,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.parseClassSuper(node);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parsePlaceholder("ClassBody")***REMOVED***||***REMOVED***super.parseClassBody(!!node.superClass,***REMOVED***oldStrict);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExport(node,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placeholder***REMOVED***=***REMOVED***this.parsePlaceholder("Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!placeholder)***REMOVED***return***REMOVED***super.parseExport(node,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node2***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(98)***REMOVED***&&***REMOVED***!this.match(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.declaration***REMOVED***=***REMOVED***this.finishPlaceholder(placeholder,***REMOVED***"Declaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node2,***REMOVED***"ExportNamedDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("exportDefaultFrom");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***specifier.exported***REMOVED***=***REMOVED***placeholder;
***REMOVED******REMOVED******REMOVED******REMOVED***node2.specifiers***REMOVED***=***REMOVED***[this.finishNode(specifier,***REMOVED***"ExportDefaultSpecifier")];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.parseExport(node2,***REMOVED***decorators);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isExportDefaultSpecifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(65))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUnparsedContextual(next,***REMOVED***"from"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.startsWith(tokenLabelName(133),***REMOVED***this.nextTokenStartSince(next***REMOVED***+***REMOVED***4)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.isExportDefaultSpecifier();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseExportDefaultSpecifier(node,***REMOVED***maybeDefaultIdentifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_specifiers;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_specifiers***REMOVED***=***REMOVED***node.specifiers)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_specifiers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***super.maybeParseExportDefaultSpecifier(node,***REMOVED***maybeDefaultIdentifier);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkExport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifiers***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***specifiers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***specifiers.filter(node***REMOVED***=>***REMOVED***node.exported.type***REMOVED***===***REMOVED***"Placeholder");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.checkExport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***specifiers;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placeholder***REMOVED***=***REMOVED***this.parsePlaceholder("Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!placeholder)***REMOVED***return***REMOVED***super.parseImport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(98)***REMOVED***&&***REMOVED***!this.match(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.finishPlaceholder(placeholder,***REMOVED***"StringLiteral");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNodeAtNode(placeholder);
***REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***placeholder;
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers.push(this.finishNode(specifier,***REMOVED***"ImportDefaultSpecifier"));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasStarImport***REMOVED***=***REMOVED***this.maybeParseStarImportSpecifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasStarImport)***REMOVED***this.parseNamedImportSpecifiers(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(98);
***REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseImportSource();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSource()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePlaceholder("StringLiteral")***REMOVED***||***REMOVED***super.parseImportSource();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***assertNoSpace()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.start***REMOVED***>***REMOVED***this.offsetToSourcePos(this.state.lastTokEndLoc.index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(PlaceholderErrors.UnexpectedSpace,***REMOVED***this.state.lastTokEndLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
var***REMOVED***v8intrinsic***REMOVED***=***REMOVED***superClass***REMOVED***=>***REMOVED***class***REMOVED***V8IntrinsicMixin***REMOVED***extends***REMOVED***superClass***REMOVED***{
***REMOVED******REMOVED***parseV8Intrinsic()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(54))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v8IntrinsicStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.parseIdentifierName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***this.createIdentifier(node,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.castNodeTo(identifier,***REMOVED***"V8IntrinsicIdentifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***identifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(v8IntrinsicStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprAtom(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseV8Intrinsic()***REMOVED***||***REMOVED***super.parseExprAtom(refExpressionErrors);
***REMOVED******REMOVED***}
};
const***REMOVED***PIPELINE_PROPOSALS***REMOVED***=***REMOVED***["minimal",***REMOVED***"fsharp",***REMOVED***"hack",***REMOVED***"smart"];
const***REMOVED***TOPIC_TOKENS***REMOVED***=***REMOVED***["^^",***REMOVED***"@@",***REMOVED***"^",***REMOVED***"%",***REMOVED***"#"];
function***REMOVED***validatePlugins(pluginsMap)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("decorators-legacy"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***use***REMOVED***the***REMOVED***decorators***REMOVED***and***REMOVED***decorators-legacy***REMOVED***plugin***REMOVED***together");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decoratorsBeforeExport***REMOVED***=***REMOVED***pluginsMap.get("decorators").decoratorsBeforeExport;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decoratorsBeforeExport***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***decoratorsBeforeExport***REMOVED***!==***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("'decoratorsBeforeExport'***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***boolean,***REMOVED***if***REMOVED***specified.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowCallParenthesized***REMOVED***=***REMOVED***pluginsMap.get("decorators").allowCallParenthesized;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowCallParenthesized***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***allowCallParenthesized***REMOVED***!==***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("'allowCallParenthesized'***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***boolean.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("flow")***REMOVED***&&***REMOVED***pluginsMap.has("typescript"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***combine***REMOVED***flow***REMOVED***and***REMOVED***typescript***REMOVED***plugins.");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("placeholders")***REMOVED***&&***REMOVED***pluginsMap.has("v8intrinsic"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***combine***REMOVED***placeholders***REMOVED***and***REMOVED***v8intrinsic***REMOVED***plugins.");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("pipelineOperator"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_pluginsMap$get2;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***proposal***REMOVED***=***REMOVED***pluginsMap.get("pipelineOperator").proposal;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!PIPELINE_PROPOSALS.includes(proposal))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***proposalList***REMOVED***=***REMOVED***PIPELINE_PROPOSALS.map(p***REMOVED***=>***REMOVED***`"${p}"`).join(",***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`"pipelineOperator"***REMOVED***requires***REMOVED***"proposal"***REMOVED***option***REMOVED***whose***REMOVED***value***REMOVED***must***REMOVED***be***REMOVED***one***REMOVED***of:***REMOVED***${proposalList}.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(proposal***REMOVED***===***REMOVED***"hack")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("placeholders"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***combine***REMOVED***placeholders***REMOVED***plugin***REMOVED***and***REMOVED***Hack-style***REMOVED***pipes.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("v8intrinsic"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***combine***REMOVED***v8intrinsic***REMOVED***plugin***REMOVED***and***REMOVED***Hack-style***REMOVED***pipes.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***topicToken***REMOVED***=***REMOVED***pluginsMap.get("pipelineOperator").topicToken;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!TOPIC_TOKENS.includes(topicToken))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokenList***REMOVED***=***REMOVED***TOPIC_TOKENS.map(t***REMOVED***=>***REMOVED***`"${t}"`).join(",***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`"pipelineOperator"***REMOVED***in***REMOVED***"proposal":***REMOVED***"hack"***REMOVED***mode***REMOVED***also***REMOVED***requires***REMOVED***a***REMOVED***"topicToken"***REMOVED***option***REMOVED***whose***REMOVED***value***REMOVED***must***REMOVED***be***REMOVED***one***REMOVED***of:***REMOVED***${tokenList}.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_pluginsMap$get;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(topicToken***REMOVED***===***REMOVED***"#"***REMOVED***&&***REMOVED***((_pluginsMap$get***REMOVED***=***REMOVED***pluginsMap.get("recordAndTuple"))***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_pluginsMap$get.syntaxType)***REMOVED***===***REMOVED***"hash")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Plugin***REMOVED***conflict***REMOVED***between***REMOVED***\`["pipelineOperator",***REMOVED***{***REMOVED***proposal:***REMOVED***"hack",***REMOVED***topicToken:***REMOVED***"#"***REMOVED***}]\`***REMOVED***and***REMOVED***\`${JSON.stringify(["recordAndTuple",***REMOVED***pluginsMap.get("recordAndTuple")])}\`.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(proposal***REMOVED***===***REMOVED***"smart"***REMOVED***&&***REMOVED***((_pluginsMap$get2***REMOVED***=***REMOVED***pluginsMap.get("recordAndTuple"))***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_pluginsMap$get2.syntaxType)***REMOVED***===***REMOVED***"hash")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Plugin***REMOVED***conflict***REMOVED***between***REMOVED***\`["pipelineOperator",***REMOVED***{***REMOVED***proposal:***REMOVED***"smart"***REMOVED***}]\`***REMOVED***and***REMOVED***\`${JSON.stringify(["recordAndTuple",***REMOVED***pluginsMap.get("recordAndTuple")])}\`.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("moduleAttributes"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("deprecatedImportAssert")***REMOVED***||***REMOVED***pluginsMap.has("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***combine***REMOVED***importAssertions,***REMOVED***deprecatedImportAssert***REMOVED***and***REMOVED***moduleAttributes***REMOVED***plugins.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***moduleAttributesVersionPluginOption***REMOVED***=***REMOVED***pluginsMap.get("moduleAttributes").version;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moduleAttributesVersionPluginOption***REMOVED***!==***REMOVED***"may-2020")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("The***REMOVED***'moduleAttributes'***REMOVED***plugin***REMOVED***requires***REMOVED***a***REMOVED***'version'***REMOVED***option,"***REMOVED***+***REMOVED***"***REMOVED***representing***REMOVED***the***REMOVED***last***REMOVED***proposal***REMOVED***update.***REMOVED***Currently,***REMOVED***the"***REMOVED***+***REMOVED***"***REMOVED***only***REMOVED***supported***REMOVED***value***REMOVED***is***REMOVED***'may-2020'.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("deprecatedImportAssert"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Cannot***REMOVED***combine***REMOVED***importAssertions***REMOVED***and***REMOVED***deprecatedImportAssert***REMOVED***plugins.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!pluginsMap.has("deprecatedImportAssert")***REMOVED***&&***REMOVED***pluginsMap.has("importAttributes")***REMOVED***&&***REMOVED***pluginsMap.get("importAttributes").deprecatedAssertSyntax)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginsMap.set("deprecatedImportAssert",***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("recordAndTuple"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***syntaxType***REMOVED***=***REMOVED***pluginsMap.get("recordAndTuple").syntaxType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(syntaxType***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***RECORD_AND_TUPLE_SYNTAX_TYPES***REMOVED***=***REMOVED***["hash",***REMOVED***"bar"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(syntaxType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("The***REMOVED***'syntaxType'***REMOVED***option***REMOVED***of***REMOVED***the***REMOVED***'recordAndTuple'***REMOVED***plugin***REMOVED***must***REMOVED***be***REMOVED***one***REMOVED***of:***REMOVED***"***REMOVED***+***REMOVED***RECORD_AND_TUPLE_SYNTAX_TYPES.map(p***REMOVED***=>***REMOVED***`'${p}'`).join(",***REMOVED***"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("asyncDoExpressions")***REMOVED***&&***REMOVED***!pluginsMap.has("doExpressions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***new***REMOVED***Error("'asyncDoExpressions'***REMOVED***requires***REMOVED***'doExpressions',***REMOVED***please***REMOVED***add***REMOVED***'doExpressions'***REMOVED***to***REMOVED***parser***REMOVED***plugins.");
***REMOVED******REMOVED******REMOVED******REMOVED***error.missingPlugins***REMOVED***=***REMOVED***"doExpressions";
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("optionalChainingAssign")***REMOVED***&&***REMOVED***pluginsMap.get("optionalChainingAssign").version***REMOVED***!==***REMOVED***"2023-07")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("The***REMOVED***'optionalChainingAssign'***REMOVED***plugin***REMOVED***requires***REMOVED***a***REMOVED***'version'***REMOVED***option,"***REMOVED***+***REMOVED***"***REMOVED***representing***REMOVED***the***REMOVED***last***REMOVED***proposal***REMOVED***update.***REMOVED***Currently,***REMOVED***the"***REMOVED***+***REMOVED***"***REMOVED***only***REMOVED***supported***REMOVED***value***REMOVED***is***REMOVED***'2023-07'.");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(pluginsMap.has("discardBinding")***REMOVED***&&***REMOVED***pluginsMap.get("discardBinding").syntaxType***REMOVED***!==***REMOVED***"void")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("The***REMOVED***'discardBinding'***REMOVED***plugin***REMOVED***requires***REMOVED***a***REMOVED***'syntaxType'***REMOVED***option.***REMOVED***Currently***REMOVED***the***REMOVED***only***REMOVED***supported***REMOVED***value***REMOVED***is***REMOVED***'void'.");
***REMOVED******REMOVED***}
}
const***REMOVED***mixinPlugins***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***estree,
***REMOVED******REMOVED***jsx,
***REMOVED******REMOVED***flow,
***REMOVED******REMOVED***typescript,
***REMOVED******REMOVED***v8intrinsic,
***REMOVED******REMOVED***placeholders
};
const***REMOVED***mixinPluginNames***REMOVED***=***REMOVED***Object.keys(mixinPlugins);
class***REMOVED***ExpressionParser***REMOVED***extends***REMOVED***LValParser***REMOVED***{
***REMOVED******REMOVED***checkProto(prop,***REMOVED***isRecord,***REMOVED***sawProto,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"SpreadElement"***REMOVED***||***REMOVED***this.isObjectMethod(prop)***REMOVED***||***REMOVED***prop.computed***REMOVED***||***REMOVED***prop.shorthand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sawProto;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***prop.key;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***key.name***REMOVED***:***REMOVED***key.value;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"__proto__")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.RecordNoProto,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sawProto)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.doubleProtoLoc***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.doubleProtoLoc***REMOVED***=***REMOVED***key.loc.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DuplicateProto,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sawProto;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldExitDescending(expr,***REMOVED***potentialArrowAt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr.type***REMOVED***===***REMOVED***"ArrowFunctionExpression"***REMOVED***&&***REMOVED***this.offsetToSourcePos(expr.start)***REMOVED***===***REMOVED***potentialArrowAt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.enterInitialScopes();
***REMOVED******REMOVED******REMOVED******REMOVED***this.nextToken();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(140))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.ParseExpressionEmptyInput,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(140))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.ParseExpressionExpectsEOF,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unexpected:***REMOVED***this.input.codePointAt(this.state.start)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.finalizeRemainingComments();
***REMOVED******REMOVED******REMOVED******REMOVED***expr.comments***REMOVED***=***REMOVED***this.comments;
***REMOVED******REMOVED******REMOVED******REMOVED***expr.errors***REMOVED***=***REMOVED***this.state.errors;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr.tokens***REMOVED***=***REMOVED***this.tokens;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExpression(disallowIn,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(disallowIn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.disallowInAnd(()***REMOVED***=>***REMOVED***this.parseExpressionBase(refExpressionErrors));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.allowInAnd(()***REMOVED***=>***REMOVED***this.parseExpressionBase(refExpressionErrors));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExpressionBase(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseMaybeAssign(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expressions***REMOVED***=***REMOVED***[expr];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expressions.push(this.parseMaybeAssign(refExpressionErrors));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedList(node.expressions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SequenceExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeAssignDisallowIn(refExpressionErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.disallowInAnd(()***REMOVED***=>***REMOVED***this.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeAssignAllowIn(refExpressionErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.allowInAnd(()***REMOVED***=>***REMOVED***this.parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setOptionalParametersError(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.optionalParametersLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeAssign(refExpressionErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isYield***REMOVED***=***REMOVED***this.isContextual(108);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isYield)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prodParam.hasYield)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***left***REMOVED***=***REMOVED***this.parseYield(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***afterLeftParse.call(this,***REMOVED***left,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ownExpressionErrors;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ownExpressionErrors***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors***REMOVED***=***REMOVED***new***REMOVED***ExpressionErrors();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ownExpressionErrors***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***10***REMOVED***||***REMOVED***tokenIsIdentifier(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.potentialArrowAt***REMOVED***=***REMOVED***this.state.start;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***left***REMOVED***=***REMOVED***this.parseMaybeConditional(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***afterLeftParse.call(this,***REMOVED***left,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsAssignment(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***operator***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***operator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(left,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startIndex***REMOVED***=***REMOVED***startLoc.index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.doubleProtoLoc***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***refExpressionErrors.doubleProtoLoc.index***REMOVED***>=***REMOVED***startIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.doubleProtoLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.shorthandAssignLoc***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***refExpressionErrors.shorthandAssignLoc.index***REMOVED***>=***REMOVED***startIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.shorthandAssignLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.privateKeyLoc***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***refExpressionErrors.privateKeyLoc.index***REMOVED***>=***REMOVED***startIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDestructuringPrivate(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.privateKeyLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.voidPatternLoc***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***refExpressionErrors.voidPatternLoc.index***REMOVED***>=***REMOVED***startIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.voidPatternLoc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(left,***REMOVED***this.finishNode(node,***REMOVED***"AssignmentExpression"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ownExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refExpressionErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isYield)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startsExpr***REMOVED***=***REMOVED***this.hasPlugin("v8intrinsic")***REMOVED***?***REMOVED***tokenCanStartExpression(type)***REMOVED***:***REMOVED***tokenCanStartExpression(type)***REMOVED***&&***REMOVED***!this.match(54);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startsExpr***REMOVED***&&***REMOVED***!this.isAmbiguousPrefixOrIdentifier())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseOverwrite(Errors.YieldNotInGeneratorFunction,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseYield(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***left;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeConditional(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***potentialArrowAt***REMOVED***=***REMOVED***this.state.potentialArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseExprOps(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldExitDescending(expr,***REMOVED***potentialArrowAt))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseConditional(expr,***REMOVED***startLoc,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseConditional(expr,***REMOVED***startLoc,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.consequent***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.alternate***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ConditionalExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeUnaryOrPrivate(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(139)***REMOVED***?***REMOVED***this.parsePrivateName()***REMOVED***:***REMOVED***this.parseMaybeUnary(refExpressionErrors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprOps(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***potentialArrowAt***REMOVED***=***REMOVED***this.state.potentialArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseMaybeUnaryOrPrivate(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldExitDescending(expr,***REMOVED***potentialArrowAt))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprOp(expr,***REMOVED***startLoc,***REMOVED***-1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprOp(left,***REMOVED***leftStartLoc,***REMOVED***minPrec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isPrivateName(left))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.getPrivateNameSV(left);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(minPrec***REMOVED***>=***REMOVED***tokenOperatorPrecedence(58)***REMOVED***||***REMOVED***!this.prodParam.hasIn***REMOVED***||***REMOVED***!this.match(58))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PrivateInExpectedIn,***REMOVED***left,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.usePrivateName(value,***REMOVED***left.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***op***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsOperator(op)***REMOVED***&&***REMOVED***(this.prodParam.hasIn***REMOVED***||***REMOVED***!this.match(58)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***prec***REMOVED***=***REMOVED***tokenOperatorPrecedence(op);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prec***REMOVED***>***REMOVED***minPrec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(op***REMOVED***===***REMOVED***39)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("pipelineOperator");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.inFSharpPipelineDirectBody)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkPipelineAtInfixOperator(left,***REMOVED***leftStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(leftStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logical***REMOVED***=***REMOVED***op***REMOVED***===***REMOVED***41***REMOVED***||***REMOVED***op***REMOVED***===***REMOVED***42;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***coalesce***REMOVED***=***REMOVED***op***REMOVED***===***REMOVED***40;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(coalesce)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prec***REMOVED***=***REMOVED***tokenOperatorPrecedence(42);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(op***REMOVED***===***REMOVED***39***REMOVED***&&***REMOVED***this.hasPlugin(["pipelineOperator",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proposal:***REMOVED***"minimal"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.type***REMOVED***===***REMOVED***96***REMOVED***&&***REMOVED***this.prodParam.hasAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnexpectedAwaitAfterPipelineBody,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***this.parseExprOpRightExpr(op,***REMOVED***prec);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finishedNode***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***logical***REMOVED***||***REMOVED***coalesce***REMOVED***?***REMOVED***"LogicalExpression"***REMOVED***:***REMOVED***"BinaryExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextOp***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(coalesce***REMOVED***&&***REMOVED***(nextOp***REMOVED***===***REMOVED***41***REMOVED***||***REMOVED***nextOp***REMOVED***===***REMOVED***42)***REMOVED***||***REMOVED***logical***REMOVED***&&***REMOVED***nextOp***REMOVED***===***REMOVED***40)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.MixingCoalesceWithLogical,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprOp(finishedNode,***REMOVED***leftStartLoc,***REMOVED***minPrec);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***left;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprOpRightExpr(op,***REMOVED***prec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(op)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***39:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.getPluginOption("pipelineOperator",***REMOVED***"proposal"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"hack":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.withTopicBindingContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseHackPipeBody();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"fsharp":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.withSoloAwaitPermittingContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFSharpPipelineBody(prec);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("pipelineOperator",***REMOVED***"proposal")***REMOVED***===***REMOVED***"smart")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.withTopicBindingContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prodParam.hasYield***REMOVED***&&***REMOVED***this.isContextual(108))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.PipeBodyIsTighter,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op,***REMOVED***prec),***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprOpBaseRightExpr(op,***REMOVED***prec);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprOpBaseRightExpr(op,***REMOVED***prec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprOp(this.parseMaybeUnaryOrPrivate(),***REMOVED***startLoc,***REMOVED***tokenIsRightAssociative(op)***REMOVED***?***REMOVED***prec***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***prec);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseHackPipeBody()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_body$extra;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***requiredParentheses***REMOVED***=***REMOVED***UnparenthesizedPipeBodyDescriptions.has(body.type);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requiredParentheses***REMOVED***&&***REMOVED***!((_body$extra***REMOVED***=***REMOVED***body.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_body$extra.parenthesized))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PipeUnparenthesizedBody,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***body.type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.topicReferenceWasUsedInCurrentContext())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PipeTopicUnused,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***body;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkExponentialAfterUnary(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(57))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedTokenUnaryExponentiation,***REMOVED***node.argument);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeUnary(refExpressionErrors,***REMOVED***sawUnary)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAwait***REMOVED***=***REMOVED***this.isContextual(96);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAwait***REMOVED***&&***REMOVED***this.recordAwaitIfAllowed())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseAwait(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!sawUnary)***REMOVED***this.checkExponentialAfterUnary(expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***update***REMOVED***=***REMOVED***this.match(34);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsPrefix(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.prefix***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(72))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("throwExpressions");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDelete***REMOVED***=***REMOVED***this.match(89);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeUnary(null,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refExpressionErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.strict***REMOVED***&&***REMOVED***isDelete)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arg***REMOVED***=***REMOVED***node.argument;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arg.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.StrictDelete,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.hasPropertyAsPrivateName(arg))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DeletePrivateField,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!update)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!sawUnary)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExponentialAfterUnary(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"UnaryExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseUpdate(node,***REMOVED***update,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startsExpr***REMOVED***=***REMOVED***this.hasPlugin("v8intrinsic")***REMOVED***?***REMOVED***tokenCanStartExpression(type)***REMOVED***:***REMOVED***tokenCanStartExpression(type)***REMOVED***&&***REMOVED***!this.match(54);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startsExpr***REMOVED***&&***REMOVED***!this.isAmbiguousPrefixOrIdentifier())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raiseOverwrite(Errors.AwaitNotInAsyncContext,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseAwait(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseUpdate(node,***REMOVED***update,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(update)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***updateExpressionNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(updateExpressionNode.argument,***REMOVED***this.finishNode(updateExpressionNode,***REMOVED***"UpdateExpression"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***expr***REMOVED***=***REMOVED***this.parseExprSubscripts(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.checkExpressionErrors(refExpressionErrors,***REMOVED***false))***REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(tokenIsPostfix(this.state.type)***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.prefix***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(expr,***REMOVED***expr***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"UpdateExpression"));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprSubscripts(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***potentialArrowAt***REMOVED***=***REMOVED***this.state.potentialArrowAt;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseExprAtom(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldExitDescending(expr,***REMOVED***potentialArrowAt))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSubscripts(expr,***REMOVED***startLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSubscripts(base,***REMOVED***startLoc,***REMOVED***noCalls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionalChainMember:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maybeAsyncArrow:***REMOVED***this.atPossibleAsyncArrow(base),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stop:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***this.parseSubscript(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.maybeAsyncArrow***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(!state.stop);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***base;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSubscript(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noCalls***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***15)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBind(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsTemplate(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTaggedTemplateExpression(base,***REMOVED***startLoc,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optional***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***18)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noCalls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.OptionalChainingNoNew,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lookaheadCharCode()***REMOVED***===***REMOVED***40)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.stopParseSubscript(base,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.optionalChainMember***REMOVED***=***REMOVED***optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noCalls***REMOVED***&&***REMOVED***this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseCoverCallAndAsyncArrowHead(base,***REMOVED***startLoc,***REMOVED***state,***REMOVED***optional);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***this.eat(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(computed***REMOVED***||***REMOVED***optional***REMOVED***||***REMOVED***this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseMember(base,***REMOVED***startLoc,***REMOVED***state,***REMOVED***computed,***REMOVED***optional);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.stopParseSubscript(base,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stopParseSubscript(base,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***state.stop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***base;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMember(base,***REMOVED***startLoc,***REMOVED***state,***REMOVED***computed,***REMOVED***optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***node.computed***REMOVED***=***REMOVED***computed;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(139))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(base.type***REMOVED***===***REMOVED***"Super")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.SuperPrivateField,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.usePrivateName(this.state.value,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.optionalChainMember)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"OptionalMemberExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"MemberExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBind(base,***REMOVED***startLoc,***REMOVED***noCalls,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***this.parseNoCallExpr();
***REMOVED******REMOVED******REMOVED******REMOVED***state.stop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSubscripts(this.finishNode(node,***REMOVED***"BindExpression"),***REMOVED***startLoc,***REMOVED***noCalls);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseCoverCallAndAsyncArrowHead(base,***REMOVED***startLoc,***REMOVED***state,***REMOVED***optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldMaybeInArrowParameters***REMOVED***=***REMOVED***this.state.maybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***refExpressionErrors***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maybeAsyncArrow,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionalChainMember
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeAsyncArrow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.enter(newAsyncArrowScope());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors***REMOVED***=***REMOVED***new***REMOVED***ExpressionErrors();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalChainMember)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.optional***REMOVED***=***REMOVED***optional;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***this.parseCallExpressionArguments();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***this.parseCallExpressionArguments(base.type***REMOVED***!==***REMOVED***"Super",***REMOVED***node,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***finishedNode***REMOVED***=***REMOVED***this.finishCallExpression(node,***REMOVED***optionalChainMember);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeAsyncArrow***REMOVED***&&***REMOVED***this.shouldParseAsyncArrow()***REMOVED***&&***REMOVED***!optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.stop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDestructuringPrivate(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.validateAsPattern();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finishedNode***REMOVED***=***REMOVED***this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc),***REMOVED***finishedNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeAsyncArrow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refExpressionErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedArguments(finishedNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***oldMaybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finishedNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***toReferencedArguments(node,***REMOVED***isParenthesizedExpr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedListDeep(node.arguments,***REMOVED***isParenthesizedExpr);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTaggedTemplateExpression(base,***REMOVED***startLoc,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***node.tag***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***node.quasi***REMOVED***=***REMOVED***this.parseTemplate(true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.optionalChainMember)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.OptionalChainingNoTemplate,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TaggedTemplateExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***atPossibleAsyncArrow(base)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***base.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***base.name***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***this.state.lastTokEndLoc.index***REMOVED***===***REMOVED***base.end***REMOVED***&&***REMOVED***!this.canInsertSemicolon()***REMOVED***&&***REMOVED***base.end***REMOVED***-***REMOVED***base.start***REMOVED***===***REMOVED***5***REMOVED***&&***REMOVED***this.offsetToSourcePos(base.start)***REMOVED***===***REMOVED***this.state.potentialArrowAt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishCallExpression(node,***REMOVED***optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.callee.type***REMOVED***===***REMOVED***"Import")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.arguments.length***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***node.arguments.length***REMOVED***>***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportCallArity,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***arg***REMOVED***of***REMOVED***node.arguments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arg.type***REMOVED***===***REMOVED***"SpreadElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportCallSpreadArgument,***REMOVED***arg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***optional***REMOVED***?***REMOVED***"OptionalCallExpression"***REMOVED***:***REMOVED***"CallExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseCallExpressionArguments(allowPlaceholder,***REMOVED***nodeForExtra,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInFSharpPipelineDirectBody***REMOVED***=***REMOVED***this.state.inFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.eat(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodeForExtra)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addTrailingCommaExtraToNode(nodeForExtra);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(this.parseExprListItem(11,***REMOVED***false,***REMOVED***refExpressionErrors,***REMOVED***allowPlaceholder));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***oldInFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***elts;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseAsyncArrow()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(19)***REMOVED***&&***REMOVED***!this.canInsertSemicolon();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAsyncArrowFromCallExpression(node,***REMOVED***call)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_call$extra;
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(call);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(19);
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseArrowExpression(node,***REMOVED***call.arguments,***REMOVED***true,***REMOVED***(_call$extra***REMOVED***=***REMOVED***call.extra)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_call$extra.trailingCommaLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(call.innerComments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setInnerComments(node,***REMOVED***call.innerComments);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(call.callee.trailingComments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setInnerComments(node,***REMOVED***call.callee.trailingComments);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNoCallExpr()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSubscripts(this.parseExprAtom(),***REMOVED***startLoc,***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprAtom(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***decorators***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***79:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSuper();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***83:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportMetaPropertyOrPhaseCall(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***512)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportCall(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Import");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnsupportedImport,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Import");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***78:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ThisExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***90:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseDo(this.startNode(),***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***56:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***31:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readRegexp();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseRegExpLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***135:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseNumericLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***136:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBigIntLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***84:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseNullLiteral();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***85:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBooleanLiteral(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***86:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBooleanLiteral(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***10:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***canBeArrow***REMOVED***=***REMOVED***this.state.potentialArrowAt***REMOVED***===***REMOVED***this.state.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseParenAndDistinguishExpression(canBeArrow);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseArrayLike(3,***REMOVED***true,***REMOVED***false,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObjectLike(8,***REMOVED***false,***REMOVED***false,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***68:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunctionOrFunctionSent();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***26:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators***REMOVED***=***REMOVED***this.parseDecorators();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***80:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(this.maybeTakeDecorators(decorators,***REMOVED***this.startNode()),***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***77:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseNewOrNewTarget();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***25:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***24:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTemplate(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***15:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***callee***REMOVED***=***REMOVED***node.callee***REMOVED***=***REMOVED***this.parseNoCallExpr();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callee.type***REMOVED***===***REMOVED***"MemberExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"BindExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnsupportedBind,***REMOVED***callee);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***139:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PrivateInExpectedIn,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifierName:***REMOVED***this.state.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***33:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTopicReferenceThenEqualsSign(54,***REMOVED***"%");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***32:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTopicReferenceThenEqualsSign(44,***REMOVED***"^");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***37:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***38:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTopicReference("hack");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***44:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***54:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***27:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pipeProposal***REMOVED***=***REMOVED***this.getPluginOption("pipelineOperator",***REMOVED***"proposal");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pipeProposal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTopicReference(pipeProposal);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***47:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookaheadCh***REMOVED***=***REMOVED***this.input.codePointAt(this.nextTokenStart());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(lookaheadCh)***REMOVED***||***REMOVED***lookaheadCh***REMOVED***===***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectOnePlugin(["jsx",***REMOVED***"flow",***REMOVED***"typescript"]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***137)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseDecimalLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***2***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseArrayLike(this.state.type***REMOVED***===***REMOVED***2***REMOVED***?***REMOVED***4***REMOVED***:***REMOVED***3,***REMOVED***false,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***6***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***7)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObjectLike(this.state.type***REMOVED***===***REMOVED***6***REMOVED***?***REMOVED***9***REMOVED***:***REMOVED***8,***REMOVED***false,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(127)***REMOVED***&&***REMOVED***this.lookaheadInLineCharCode()***REMOVED***===***REMOVED***123)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseModuleExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***canBeArrow***REMOVED***=***REMOVED***this.state.potentialArrowAt***REMOVED***===***REMOVED***this.state.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***containsEsc***REMOVED***=***REMOVED***this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!containsEsc***REMOVED***&&***REMOVED***id.name***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***68)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseAsyncFunctionExpression(this.startNodeAtNode(id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsIdentifier(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lookaheadCharCode()***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***90)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseDo(this.startNodeAtNode(id),***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canBeArrow***REMOVED***&&***REMOVED***this.match(19)***REMOVED***&&***REMOVED***!this.canInsertSemicolon())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseArrowExpression(this.startNodeAtNode(id),***REMOVED***[id],***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTopicReferenceThenEqualsSign(topicTokenType,***REMOVED***topicTokenValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pipeProposal***REMOVED***=***REMOVED***this.getPluginOption("pipelineOperator",***REMOVED***"proposal");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pipeProposal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.type***REMOVED***=***REMOVED***topicTokenType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.value***REMOVED***=***REMOVED***topicTokenValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.pos--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.end--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.endLoc***REMOVED***=***REMOVED***createPositionWithColumnOffset(this.state.endLoc,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTopicReference(pipeProposal);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTopicReference(pipeProposal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokenType***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishTopicReference(node,***REMOVED***startLoc,***REMOVED***pipeProposal,***REMOVED***tokenType);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishTopicReference(node,***REMOVED***startLoc,***REMOVED***pipeProposal,***REMOVED***tokenType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.testTopicReferenceConfiguration(pipeProposal,***REMOVED***startLoc,***REMOVED***tokenType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pipeProposal***REMOVED***===***REMOVED***"hack")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.topicReferenceIsAllowedInCurrentContext())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PipeTopicUnbound,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.registerTopicReference();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TopicReference");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.topicReferenceIsAllowedInCurrentContext())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PrimaryTopicNotAllowed,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.registerTopicReference();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"PipelinePrimaryTopicReference");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.PipeTopicUnconfiguredToken,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token:***REMOVED***tokenLabelName(tokenType)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***testTopicReferenceConfiguration(pipeProposal,***REMOVED***startLoc,***REMOVED***tokenType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(pipeProposal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"hack":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hasPlugin(["pipelineOperator",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***topicToken:***REMOVED***tokenLabelName(tokenType)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"smart":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokenType***REMOVED***===***REMOVED***27;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.PipeTopicRequiresHackPipes,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAsyncArrowUnaryFunction(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(functionFlags(true,***REMOVED***this.prodParam.hasYield));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***[this.parseIdentifier()];
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.LineTerminatorBeforeArrow,***REMOVED***this.state.curPosition());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(19);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseArrowExpression(node,***REMOVED***params,***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDo(node,***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("doExpressions");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("asyncDoExpressions");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.async***REMOVED***=***REMOVED***isAsync;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldLabels***REMOVED***=***REMOVED***this.state.labels;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseBlock();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseBlock();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***oldLabels;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DoExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSuper()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10)***REMOVED***&&***REMOVED***!this.scope.allowDirectSuper***REMOVED***&&***REMOVED***!(this.optionFlags***REMOVED***&***REMOVED***16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.SuperNotAllowed,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.scope.allowSuper***REMOVED***&&***REMOVED***!(this.optionFlags***REMOVED***&***REMOVED***16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedSuper,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(10)***REMOVED***&&***REMOVED***!this.match(0)***REMOVED***&&***REMOVED***!this.match(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnsupportedSuper,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Super");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePrivateName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc,***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.createIdentifier(id,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"PrivateName");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionOrFunctionSent()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prodParam.hasYield***REMOVED***&&***REMOVED***this.match(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***meta***REMOVED***=***REMOVED***this.createIdentifier(this.startNodeAtNode(node),***REMOVED***"function");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(103))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("functionSent");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.hasPlugin("functionSent"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseMetaProperty(node,***REMOVED***meta,***REMOVED***"sent");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMetaProperty(node,***REMOVED***meta,***REMOVED***propertyName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.meta***REMOVED***=***REMOVED***meta;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***containsEsc***REMOVED***=***REMOVED***this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.property.name***REMOVED***!==***REMOVED***propertyName***REMOVED***||***REMOVED***containsEsc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnsupportedMetaProperty,***REMOVED***node.property,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***meta.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onlyValidPropertyName:***REMOVED***propertyName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"MetaProperty");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportMetaPropertyOrPhaseCall(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(105)***REMOVED***||***REMOVED***this.isContextual(97))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSource***REMOVED***=***REMOVED***this.isContextual(105);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin(isSource***REMOVED***?***REMOVED***"sourcePhaseImports"***REMOVED***:***REMOVED***"deferredImportEvaluation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.phase***REMOVED***=***REMOVED***isSource***REMOVED***?***REMOVED***"source"***REMOVED***:***REMOVED***"defer";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportCall(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.createIdentifierAt(this.startNodeAtNode(node),***REMOVED***"import",***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(101))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.inModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportMetaOutsideModule,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseMetaProperty(node,***REMOVED***id,***REMOVED***"meta");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseLiteralAtNode(value,***REMOVED***type,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"rawValue",***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"raw",***REMOVED***this.input.slice(this.offsetToSourcePos(node.start),***REMOVED***this.state.end));
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseLiteral(value,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteralAtNode(value,***REMOVED***type,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStringLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(value,***REMOVED***"StringLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNumericLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(value,***REMOVED***"NumericLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBigIntLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(value,***REMOVED***"BigIntLiteral");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDecimalLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLiteral(value,***REMOVED***"DecimalLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseRegExpLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"raw",***REMOVED***this.input.slice(this.offsetToSourcePos(node.start),***REMOVED***this.state.end));
***REMOVED******REMOVED******REMOVED******REMOVED***node.pattern***REMOVED***=***REMOVED***value.pattern;
***REMOVED******REMOVED******REMOVED******REMOVED***node.flags***REMOVED***=***REMOVED***value.flags;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"RegExpLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBooleanLiteral(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"BooleanLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNullLiteral()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"NullLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseParenAndDistinguishExpression(canBeArrow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***val;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.enter(newArrowHeadScope());
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldMaybeInArrowParameters***REMOVED***=***REMOVED***this.state.maybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInFSharpPipelineDirectBody***REMOVED***=***REMOVED***this.state.inFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exprList***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***refExpressionErrors***REMOVED***=***REMOVED***new***REMOVED***ExpressionErrors();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***spreadStartLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optionalCommaStartLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12,***REMOVED***refExpressionErrors.optionalParametersLoc***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***refExpressionErrors.optionalParametersLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionalCommaStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***spreadNodeStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spreadStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprList.push(this.parseParenItem(this.parseRestBinding(),***REMOVED***spreadNodeStartLoc));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.checkCommaAfterRest(41))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprList.push(this.parseMaybeAssignAllowInOrVoidPattern(11,***REMOVED***refExpressionErrors,***REMOVED***this.parseParenItem));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerEndLoc***REMOVED***=***REMOVED***this.state.lastTokEndLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***oldMaybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***oldInFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***arrowNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canBeArrow***REMOVED***&&***REMOVED***this.shouldParseArrow(exprList)***REMOVED***&&***REMOVED***(arrowNode***REMOVED***=***REMOVED***this.parseArrow(arrowNode)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDestructuringPrivate(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.validateAsPattern();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseArrowExpression(arrowNode,***REMOVED***exprList,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrowNode;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!exprList.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalCommaStartLoc)***REMOVED***this.unexpected(optionalCommaStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spreadStartLoc)***REMOVED***this.unexpected(spreadStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refExpressionErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedListDeep(exprList,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exprList.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***this.startNodeAt(innerStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val.expressions***REMOVED***=***REMOVED***exprList;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.finishNode(val,***REMOVED***"SequenceExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(val,***REMOVED***innerEndLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val***REMOVED***=***REMOVED***exprList[0];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.wrapParenthesis(startLoc,***REMOVED***val);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***wrapParenthesis(startLoc,***REMOVED***expression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.optionFlags***REMOVED***&***REMOVED***1024))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(expression,***REMOVED***"parenthesized",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(expression,***REMOVED***"parenStart",***REMOVED***startLoc.index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.takeSurroundingComments(expression,***REMOVED***startLoc.index,***REMOVED***this.state.lastTokEndLoc.index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parenExpression***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***parenExpression.expression***REMOVED***=***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(parenExpression,***REMOVED***"ParenthesizedExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseArrow(params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!this.canInsertSemicolon();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrow(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(19))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseParenItem(node,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNewOrNewTarget()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***meta***REMOVED***=***REMOVED***this.createIdentifier(this.startNodeAtNode(node),***REMOVED***"new");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***metaProp***REMOVED***=***REMOVED***this.parseMetaProperty(node,***REMOVED***meta,***REMOVED***"target");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.scope.allowNewTarget)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedNewTarget,***REMOVED***metaProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***metaProp;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseNew(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNew(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseNewCallee(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***args***REMOVED***=***REMOVED***this.parseExprList(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedList(args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***args;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"NewExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNewCallee(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImport***REMOVED***=***REMOVED***this.match(83);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***callee***REMOVED***=***REMOVED***this.parseNoCallExpr();
***REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***callee;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isImport***REMOVED***&&***REMOVED***(callee.type***REMOVED***===***REMOVED***"Import"***REMOVED***||***REMOVED***callee.type***REMOVED***===***REMOVED***"ImportExpression"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportCallNotNewExpression,***REMOVED***callee);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTemplateElement(isTagged)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elemStart***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elem***REMOVED***=***REMOVED***this.startNodeAt(createPositionWithColumnOffset(startLoc,***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isTagged)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidEscapeSequenceTemplate,***REMOVED***createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos,***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTail***REMOVED***=***REMOVED***this.match(24);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***endOffset***REMOVED***=***REMOVED***isTail***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elemEnd***REMOVED***=***REMOVED***end***REMOVED***+***REMOVED***endOffset;
***REMOVED******REMOVED******REMOVED******REMOVED***elem.value***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw:***REMOVED***this.input.slice(elemStart,***REMOVED***elemEnd).replace(/\r\n?/g,***REMOVED***"\n"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cooked:***REMOVED***value***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***value.slice(1,***REMOVED***endOffset)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***elem.tail***REMOVED***=***REMOVED***isTail;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finishedNode***REMOVED***=***REMOVED***this.finishNode(elem,***REMOVED***"TemplateElement");
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetEndLocation(finishedNode,***REMOVED***createPositionWithColumnOffset(this.state.lastTokEndLoc,***REMOVED***endOffset));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finishedNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTemplate(isTagged)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***curElt***REMOVED***=***REMOVED***this.parseTemplateElement(isTagged);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***quasis***REMOVED***=***REMOVED***[curElt];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***substitutions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!curElt.tail)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***substitutions.push(this.parseTemplateSubstitution());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.readTemplateContinuation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quasis.push(curElt***REMOVED***=***REMOVED***this.parseTemplateElement(isTagged));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.expressions***REMOVED***=***REMOVED***substitutions;
***REMOVED******REMOVED******REMOVED******REMOVED***node.quasis***REMOVED***=***REMOVED***quasis;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TemplateLiteral");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTemplateSubstitution()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExpression();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjectLike(close,***REMOVED***isPattern,***REMOVED***isRecord,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("recordAndTuple");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInFSharpPipelineDirectBody***REMOVED***=***REMOVED***this.state.inFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sawProto***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.properties***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addTrailingCommaExtraToNode(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***prop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop***REMOVED***=***REMOVED***this.parseBindingProperty();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop***REMOVED***=***REMOVED***this.parsePropertyDefinition(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sawProto***REMOVED***=***REMOVED***this.checkProto(prop,***REMOVED***isRecord,***REMOVED***sawProto,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRecord***REMOVED***&&***REMOVED***!this.isObjectProperty(prop)***REMOVED***&&***REMOVED***prop.type***REMOVED***!==***REMOVED***"SpreadElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidRecordProperty,***REMOVED***prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.shorthand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(prop,***REMOVED***"shorthand",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.properties.push(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***oldInFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***"ObjectExpression";
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***"ObjectPattern";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***"RecordExpression";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***addTrailingCommaExtraToNode(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"trailingComma",***REMOVED***this.state.lastTokStartLoc.index);
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"trailingCommaLoc",***REMOVED***this.state.lastTokStartLoc,***REMOVED***false);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeAsyncOrAccessorProp(prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!prop.computed***REMOVED***&&***REMOVED***prop.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***(this.isLiteralPropertyName()***REMOVED***||***REMOVED***this.match(0)***REMOVED***||***REMOVED***this.match(55));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePropertyDefinition(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(26))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnsupportedPropertyDecorator,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.match(26))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators.push(this.parseDecorator());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isAsync***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isAccessor***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSpread();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.decorators***REMOVED***=***REMOVED***decorators;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prop.method***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isGenerator***REMOVED***=***REMOVED***this.eat(55);
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyNamePrefixOperator(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***containsEsc***REMOVED***=***REMOVED***this.state.containsEsc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(prop,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isGenerator***REMOVED***&&***REMOVED***!containsEsc***REMOVED***&&***REMOVED***this.maybeAsyncOrAccessorProp(prop))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***prop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keyName***REMOVED***=***REMOVED***key.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keyName***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAsync***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGenerator***REMOVED***=***REMOVED***this.eat(55);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keyName***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***keyName***REMOVED***===***REMOVED***"set")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAccessor***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.kind***REMOVED***=***REMOVED***keyName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(55))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isGenerator***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.AccessorIsGenerator,***REMOVED***this.state.curPosition(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***keyName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***false,***REMOVED***isAccessor,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getGetterSetterExpectedParamCount(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***method.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getObjectOrClassMethodParams(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***method.params;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkGetterSetterParams(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_params;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paramCount***REMOVED***=***REMOVED***this.getGetterSetterExpectedParamCount(method);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***this.getObjectOrClassMethodParams(method);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(params.length***REMOVED***!==***REMOVED***paramCount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(method.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***Errors.BadGetterArity***REMOVED***:***REMOVED***Errors.BadSetterArity,***REMOVED***method);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(method.kind***REMOVED***===***REMOVED***"set"***REMOVED***&&***REMOVED***((_params***REMOVED***=***REMOVED***params[params.length***REMOVED***-***REMOVED***1])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_params.type)***REMOVED***===***REMOVED***"RestElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.BadSetterRestParameter,***REMOVED***method);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjectMethod(prop,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAccessor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finishedProp***REMOVED***=***REMOVED***this.parseMethod(prop,***REMOVED***isGenerator,***REMOVED***false,***REMOVED***false,***REMOVED***false,***REMOVED***"ObjectMethod");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkGetterSetterParams(finishedProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finishedProp;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsync***REMOVED***||***REMOVED***isGenerator***REMOVED***||***REMOVED***this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.method***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseMethod(prop,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***false,***REMOVED***false,***REMOVED***"ObjectMethod");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjectProperty(prop,***REMOVED***startLoc,***REMOVED***isPattern,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prop.shorthand***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***isPattern***REMOVED***?***REMOVED***this.parseMaybeDefault(this.state.startLoc)***REMOVED***:***REMOVED***this.parseMaybeAssignAllowInOrVoidPattern(8,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishObjectProperty(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prop.computed***REMOVED***&&***REMOVED***prop.key.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedWord(prop.key.name,***REMOVED***prop.key.loc.start,***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.parseMaybeDefault(startLoc,***REMOVED***this.cloneIdentifier(prop.key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(29))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shorthandAssignLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.shorthandAssignLoc***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.shorthandAssignLoc***REMOVED***=***REMOVED***shorthandAssignLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidCoverInitializedName,***REMOVED***shorthandAssignLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.parseMaybeDefault(startLoc,***REMOVED***this.cloneIdentifier(prop.key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value***REMOVED***=***REMOVED***this.cloneIdentifier(prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.shorthand***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishObjectProperty(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishObjectProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ObjectProperty");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseObjPropValue(prop,***REMOVED***startLoc,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.parseObjectMethod(prop,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isPattern,***REMOVED***isAccessor)***REMOVED***||***REMOVED***this.parseObjectProperty(prop,***REMOVED***startLoc,***REMOVED***isPattern,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePropertyName(prop,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.computed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.key***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(3);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***135:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***this.parseNumericLiteral(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***134:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***this.parseStringLiteral(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***136:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***this.parseBigIntLiteral(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***139:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***privateKeyLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors.privateKeyLoc***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.privateKeyLoc***REMOVED***=***REMOVED***privateKeyLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedPrivateField,***REMOVED***privateKeyLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***this.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***137)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***this.parseDecimalLiteral(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***!==***REMOVED***139)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***initFunction(node,***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***node.generator***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***node.async***REMOVED***=***REMOVED***isAsync;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMethod(node,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowDirectSuper,***REMOVED***type,***REMOVED***inClassScope***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.initFunction(node,***REMOVED***isAsync);
***REMOVED******REMOVED******REMOVED******REMOVED***node.generator***REMOVED***=***REMOVED***isGenerator;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(514***REMOVED***|***REMOVED***16***REMOVED***|***REMOVED***(inClassScope***REMOVED***?***REMOVED***576***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(allowDirectSuper***REMOVED***?***REMOVED***32***REMOVED***:***REMOVED***0));
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(functionFlags(isAsync,***REMOVED***node.generator));
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionParams(node,***REMOVED***isConstructor);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finishedNode***REMOVED***=***REMOVED***this.parseFunctionBodyAndFinish(node,***REMOVED***type,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finishedNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrayLike(close,***REMOVED***canBePattern,***REMOVED***isTuple,***REMOVED***refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isTuple)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("recordAndTuple");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInFSharpPipelineDirectBody***REMOVED***=***REMOVED***this.state.inFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.elements***REMOVED***=***REMOVED***this.parseExprList(close,***REMOVED***!isTuple,***REMOVED***refExpressionErrors,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***oldInFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isTuple***REMOVED***?***REMOVED***"TupleExpression"***REMOVED***:***REMOVED***"ArrayExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseArrowExpression(node,***REMOVED***params,***REMOVED***isAsync,***REMOVED***trailingCommaLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(514***REMOVED***|***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***flags***REMOVED***=***REMOVED***functionFlags(isAsync,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(5)***REMOVED***&&***REMOVED***this.prodParam.hasIn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(flags);
***REMOVED******REMOVED******REMOVED******REMOVED***this.initFunction(node,***REMOVED***isAsync);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldMaybeInArrowParameters***REMOVED***=***REMOVED***this.state.maybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setArrowFunctionParameters(node,***REMOVED***params,***REMOVED***trailingCommaLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionBody(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***oldMaybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ArrowFunctionExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setArrowFunctionParameters(node,***REMOVED***params,***REMOVED***trailingCommaLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignableList(params,***REMOVED***trailingCommaLoc,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***params;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionBodyAndFinish(node,***REMOVED***type,***REMOVED***isMethod***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionBody(node,***REMOVED***false,***REMOVED***isMethod);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionBody(node,***REMOVED***allowExpression,***REMOVED***isMethod***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isExpression***REMOVED***=***REMOVED***allowExpression***REMOVED***&&***REMOVED***!this.match(5);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.enter(newExpressionScope());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExpression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkParams(node,***REMOVED***false,***REMOVED***allowExpression,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldStrict***REMOVED***=***REMOVED***this.state.strict;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldLabels***REMOVED***=***REMOVED***this.state.labels;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(this.prodParam.currentFlags()***REMOVED***|***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseBlock(true,***REMOVED***false,***REMOVED***hasStrictModeDirective***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonSimple***REMOVED***=***REMOVED***!this.isSimpleParamList(node.params);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasStrictModeDirective***REMOVED***&&***REMOVED***nonSimple)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.IllegalLanguageModeDirective,***REMOVED***(node.kind***REMOVED***===***REMOVED***"method"***REMOVED***||***REMOVED***node.kind***REMOVED***===***REMOVED***"constructor")***REMOVED***&&***REMOVED***!!node.key***REMOVED***?***REMOVED***node.key.loc.end***REMOVED***:***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***strictModeChanged***REMOVED***=***REMOVED***!oldStrict***REMOVED***&&***REMOVED***this.state.strict;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkParams(node,***REMOVED***!this.state.strict***REMOVED***&&***REMOVED***!allowExpression***REMOVED***&&***REMOVED***!isMethod***REMOVED***&&***REMOVED***!nonSimple,***REMOVED***allowExpression,***REMOVED***strictModeChanged);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.strict***REMOVED***&&***REMOVED***node.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkIdentifier(node.id,***REMOVED***65,***REMOVED***strictModeChanged);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***oldLabels;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isSimpleParameter(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"Identifier";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isSimpleParamList(params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***params.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isSimpleParameter(params[i]))***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkParams(node,***REMOVED***allowDuplicates,***REMOVED***isArrowFunction,***REMOVED***strictModeChanged***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkClashes***REMOVED***=***REMOVED***!allowDuplicates***REMOVED***&&***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***formalParameters***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"FormalParameters"
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***param***REMOVED***of***REMOVED***node.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(param,***REMOVED***formalParameters,***REMOVED***5,***REMOVED***checkClashes,***REMOVED***strictModeChanged);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprList(close,***REMOVED***allowEmpty,***REMOVED***refExpressionErrors,***REMOVED***nodeForExtra)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.eat(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(close))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodeForExtra)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addTrailingCommaExtraToNode(nodeForExtra);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elts.push(this.parseExprListItem(close,***REMOVED***allowEmpty,***REMOVED***refExpressionErrors));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***elts;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExprListItem(close,***REMOVED***allowEmpty,***REMOVED***refExpressionErrors,***REMOVED***allowPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***elt;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowEmpty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedToken,***REMOVED***this.state.curPosition(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unexpected:***REMOVED***","
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elt***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(21))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***spreadNodeStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elt***REMOVED***=***REMOVED***this.parseParenItem(this.parseSpread(refExpressionErrors),***REMOVED***spreadNodeStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.match(17))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("partialApplication");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowPlaceholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedArgumentPlaceholder,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elt***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"ArgumentPlaceholder");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elt***REMOVED***=***REMOVED***this.parseMaybeAssignAllowInOrVoidPattern(close,***REMOVED***refExpressionErrors,***REMOVED***this.parseParenItem);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***elt;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseIdentifier(liberal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***this.parseIdentifierName(liberal);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.createIdentifier(node,***REMOVED***name);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***createIdentifier(node,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***node.loc.identifierName***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Identifier");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***createIdentifierAt(node,***REMOVED***name,***REMOVED***endLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***node.loc.identifierName***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNodeAt(node,***REMOVED***"Identifier",***REMOVED***endLoc);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseIdentifierName(liberal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokenIsKeyword***REMOVED***=***REMOVED***tokenKeywordOrIdentifierIsKeyword(type);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(liberal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsKeyword)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.replaceToken(132);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedWord(name,***REMOVED***startLoc,***REMOVED***tokenIsKeyword,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkReservedWord(word,***REMOVED***startLoc,***REMOVED***checkKeywords,***REMOVED***isBinding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(word.length***REMOVED***>***REMOVED***10)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!canBeReservedWord(word))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkKeywords***REMOVED***&&***REMOVED***isKeyword(word))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedKeyword,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyword:***REMOVED***word
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reservedTest***REMOVED***=***REMOVED***!this.state.strict***REMOVED***?***REMOVED***isReservedWord***REMOVED***:***REMOVED***isBinding***REMOVED***?***REMOVED***isStrictBindReservedWord***REMOVED***:***REMOVED***isStrictReservedWord;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reservedTest(word,***REMOVED***this.inModule))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedReservedWord,***REMOVED***startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reservedWord:***REMOVED***word
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(word***REMOVED***===***REMOVED***"yield")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prodParam.hasYield)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.YieldBindingIdentifier,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(word***REMOVED***===***REMOVED***"await")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.prodParam.hasAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.AwaitBindingIdentifier,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scope.inStaticBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.AwaitBindingIdentifierInStaticBlock,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.recordAsyncArrowParametersError(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(word***REMOVED***===***REMOVED***"arguments")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scope.inClassAndNotInNonArrowFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ArgumentsInClass,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***recordAwaitIfAllowed()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAwaitAllowed***REMOVED***=***REMOVED***this.prodParam.hasAwait;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAwaitAllowed***REMOVED***&&***REMOVED***!this.scope.inFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.hasTopLevelAwait***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isAwaitAllowed;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAwait(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(55))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ObsoleteAwaitStar,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.scope.inFunction***REMOVED***&&***REMOVED***!(this.optionFlags***REMOVED***&***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAmbiguousPrefixOrIdentifier())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ambiguousScriptDifferentAst***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.state.soloAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseMaybeUnary(null,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"AwaitExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAmbiguousPrefixOrIdentifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPrecedingLineBreak())***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***53***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***10***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***tokenIsTemplate(type)***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***102***REMOVED***&&***REMOVED***!this.state.containsEsc***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***138***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***56***REMOVED***||***REMOVED***this.hasPlugin("v8intrinsic")***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***54;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseYield(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***delegating***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***argument***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delegating***REMOVED***=***REMOVED***this.eat(55);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.state.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***140:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***8:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***11:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***3:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***9:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***14:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***12:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!delegating)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argument***REMOVED***=***REMOVED***this.parseMaybeAssign();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.delegate***REMOVED***=***REMOVED***delegating;
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***argument;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"YieldExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportCall(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED***node.options***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.options***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(12))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addTrailingCommaExtraToNode(node.options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(11))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12)***REMOVED***&&***REMOVED***!this.match(11));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportCallArity,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addTrailingCommaExtraToNode(node.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkPipelineAtInfixOperator(left,***REMOVED***leftStartLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin(["pipelineOperator",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proposal:***REMOVED***"smart"
***REMOVED******REMOVED******REMOVED******REMOVED***}]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left.type***REMOVED***===***REMOVED***"SequenceExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PipelineHeadSequenceExpression,***REMOVED***leftStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSmartPipelineBodyInStyle(childExpr,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isSimpleReference(childExpr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bodyNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bodyNode.callee***REMOVED***=***REMOVED***childExpr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(bodyNode,***REMOVED***"PipelineBareFunction");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bodyNode***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkSmartPipeTopicBodyEarlyErrors(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bodyNode.expression***REMOVED***=***REMOVED***childExpr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(bodyNode,***REMOVED***"PipelineTopicExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isSimpleReference(expression)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(expression.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"MemberExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!expression.computed***REMOVED***&&***REMOVED***this.isSimpleReference(expression.object);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkSmartPipeTopicBodyEarlyErrors(startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(19))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.PipelineBodyNoArrow,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.topicReferenceWasUsedInCurrentContext())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.PipelineTopicUnused,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***withTopicBindingContext(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outerContextTopicState***REMOVED***=***REMOVED***this.state.topicContext;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.topicContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxNumOfResolvableTopics:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxTopicIndex:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.topicContext***REMOVED***=***REMOVED***outerContextTopicState;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***withSmartMixTopicForbiddingContext(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin(["pipelineOperator",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proposal:***REMOVED***"smart"
***REMOVED******REMOVED******REMOVED******REMOVED***}]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outerContextTopicState***REMOVED***=***REMOVED***this.state.topicContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.topicContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxNumOfResolvableTopics:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxTopicIndex:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.topicContext***REMOVED***=***REMOVED***outerContextTopicState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***withSoloAwaitPermittingContext(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outerContextSoloAwaitState***REMOVED***=***REMOVED***this.state.soloAwait;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.soloAwait***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.soloAwait***REMOVED***=***REMOVED***outerContextSoloAwaitState;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***allowInAnd(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***this.prodParam.currentFlags();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prodParamToSet***REMOVED***=***REMOVED***8***REMOVED***&***REMOVED***~flags;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prodParamToSet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(flags***REMOVED***|***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***disallowInAnd(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***this.prodParam.currentFlags();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prodParamToClear***REMOVED***=***REMOVED***8***REMOVED***&***REMOVED***flags;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prodParamToClear)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(flags***REMOVED***&***REMOVED***~8);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***registerTopicReference()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.topicContext.maxTopicIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***topicReferenceIsAllowedInCurrentContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.state.topicContext.maxNumOfResolvableTopics***REMOVED***>=***REMOVED***1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***topicReferenceWasUsedInCurrentContext()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.state.topicContext.maxTopicIndex***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***this.state.topicContext.maxTopicIndex***REMOVED***>=***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFSharpPipelineBody(prec)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.potentialArrowAt***REMOVED***=***REMOVED***this.state.start;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldInFSharpPipelineDirectBody***REMOVED***=***REMOVED***this.state.inFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***this.parseExprOp(this.parseMaybeUnaryOrPrivate(),***REMOVED***startLoc,***REMOVED***prec);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.inFSharpPipelineDirectBody***REMOVED***=***REMOVED***oldInFSharpPipelineDirectBody;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseModuleExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("moduleBlocks");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***5);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***program***REMOVED***=***REMOVED***this.startNodeAt(this.state.endLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***revertScopes***REMOVED***=***REMOVED***this.initializeScopes(true);
***REMOVED******REMOVED******REMOVED******REMOVED***this.enterInitialScopes();
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseProgram(program,***REMOVED***8,***REMOVED***"module");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***revertScopes();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ModuleExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVoidPattern(refExpressionErrors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("discardBinding");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refExpressionErrors.voidPatternLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"VoidPattern");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeAssignAllowInOrVoidPattern(close,***REMOVED***refExpressionErrors,***REMOVED***afterLeftParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(refExpressionErrors***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***this.match(88))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCode***REMOVED***=***REMOVED***this.lookaheadCharCode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCode***REMOVED***===***REMOVED***44***REMOVED***||***REMOVED***nextCode***REMOVED***===***REMOVED***(close***REMOVED***===***REMOVED***3***REMOVED***?***REMOVED***93***REMOVED***:***REMOVED***close***REMOVED***===***REMOVED***8***REMOVED***?***REMOVED***125***REMOVED***:***REMOVED***41)***REMOVED***||***REMOVED***nextCode***REMOVED***===***REMOVED***61)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseMaybeDefault(this.state.startLoc,***REMOVED***this.parseVoidPattern(refExpressionErrors));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseMaybeAssignAllowIn(refExpressionErrors,***REMOVED***afterLeftParse);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePropertyNamePrefixOperator(prop)***REMOVED***{}
}
const***REMOVED***loopLabel***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***1
***REMOVED******REMOVED***},
***REMOVED******REMOVED***switchLabel***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***2
***REMOVED******REMOVED***};
const***REMOVED***loneSurrogate***REMOVED***=***REMOVED***/[\uD800-\uDFFF]/u;
const***REMOVED***keywordRelationalOperator***REMOVED***=***REMOVED***/in(?:stanceof)?/y;
function***REMOVED***babel7CompatTokens(tokens,***REMOVED***input,***REMOVED***startIndex)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***tokens.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***token***REMOVED***=***REMOVED***tokens[i];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***type***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***139)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashEndPos***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashEndLoc***REMOVED***=***REMOVED***createPositionWithColumnOffset(loc.start,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.splice(i,***REMOVED***1,***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(27),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"#",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***hashEndPos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***loc.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***hashEndLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(132),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***hashEndPos,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***hashEndLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***loc.end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsTemplate(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***backquoteEnd***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***backquoteEndLoc***REMOVED***=***REMOVED***createPositionWithColumnOffset(loc.start,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***startToken;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(input.charCodeAt(start***REMOVED***-***REMOVED***startIndex)***REMOVED***===***REMOVED***96)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startToken***REMOVED***=***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(22),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"`",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***backquoteEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***loc.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***backquoteEndLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startToken***REMOVED***=***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(8),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"}",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***backquoteEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***loc.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***backquoteEndLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***templateValue,***REMOVED***templateElementEnd,***REMOVED***templateElementEndLoc,***REMOVED***endToken;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***24)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateElementEnd***REMOVED***=***REMOVED***end***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateElementEndLoc***REMOVED***=***REMOVED***createPositionWithColumnOffset(loc.end,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateValue***REMOVED***=***REMOVED***value***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***value.slice(1,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endToken***REMOVED***=***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(22),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"`",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***templateElementEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***templateElementEndLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***loc.end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateElementEnd***REMOVED***=***REMOVED***end***REMOVED***-***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateElementEndLoc***REMOVED***=***REMOVED***createPositionWithColumnOffset(loc.end,***REMOVED***-2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateValue***REMOVED***=***REMOVED***value***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***value.slice(1,***REMOVED***-2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endToken***REMOVED***=***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(23),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"${",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***templateElementEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***templateElementEndLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***loc.end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.splice(i,***REMOVED***1,***REMOVED***startToken,***REMOVED***new***REMOVED***Token({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***getExportedToken(20),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***templateValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***backquoteEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***templateElementEnd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startLoc:***REMOVED***backquoteEndLoc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLoc:***REMOVED***templateElementEndLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***endToken);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.type***REMOVED***=***REMOVED***getExportedToken(type);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***tokens;
}
class***REMOVED***StatementParser***REMOVED***extends***REMOVED***ExpressionParser***REMOVED***{
***REMOVED******REMOVED***parseTopLevel(file,***REMOVED***program)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***file.program***REMOVED***=***REMOVED***this.parseProgram(program,***REMOVED***140,***REMOVED***this.options.sourceType***REMOVED***===***REMOVED***"module"***REMOVED***?***REMOVED***"module"***REMOVED***:***REMOVED***"script");
***REMOVED******REMOVED******REMOVED******REMOVED***file.comments***REMOVED***=***REMOVED***this.comments;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.optionFlags***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file.tokens***REMOVED***=***REMOVED***babel7CompatTokens(this.tokens,***REMOVED***this.input,***REMOVED***this.startIndex);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(file,***REMOVED***"File");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseProgram(program,***REMOVED***end,***REMOVED***sourceType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***program.sourceType***REMOVED***=***REMOVED***sourceType;
***REMOVED******REMOVED******REMOVED******REMOVED***program.interpreter***REMOVED***=***REMOVED***this.parseInterpreterDirective();
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseBlockBody(program,***REMOVED***true,***REMOVED***true,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.inModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.optionFlags***REMOVED***&***REMOVED***64)***REMOVED***&&***REMOVED***this.scope.undefinedExports.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[localName,***REMOVED***at]***REMOVED***of***REMOVED***Array.from(this.scope.undefinedExports))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ModuleExportUndefined,***REMOVED***at,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(program,***REMOVED***"topLevelAwait",***REMOVED***this.state.hasTopLevelAwait);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***finishedProgram;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(end***REMOVED***===***REMOVED***140)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finishedProgram***REMOVED***=***REMOVED***this.finishNode(program,***REMOVED***"Program");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finishedProgram***REMOVED***=***REMOVED***this.finishNodeAt(program,***REMOVED***"Program",***REMOVED***createPositionWithColumnOffset(this.state.startLoc,***REMOVED***-1));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finishedProgram;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stmtToDirective(stmt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directive***REMOVED***=***REMOVED***this.castNodeTo(stmt,***REMOVED***"Directive");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directiveLiteral***REMOVED***=***REMOVED***this.castNodeTo(stmt.expression,***REMOVED***"DirectiveLiteral");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionValue***REMOVED***=***REMOVED***directiveLiteral.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***this.input.slice(this.offsetToSourcePos(directiveLiteral.start),***REMOVED***this.offsetToSourcePos(directiveLiteral.end));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***directiveLiteral.value***REMOVED***=***REMOVED***raw.slice(1,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(directiveLiteral,***REMOVED***"raw",***REMOVED***raw);
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(directiveLiteral,***REMOVED***"rawValue",***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(directiveLiteral,***REMOVED***"expressionValue",***REMOVED***expressionValue);
***REMOVED******REMOVED******REMOVED******REMOVED***directive.value***REMOVED***=***REMOVED***directiveLiteral;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***stmt.expression;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***directive;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseInterpreterDirective()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(28))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"InterpreterDirective");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isLet()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(100))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hasFollowingBindingAtom();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isUsing()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(107))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenInLineStart();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.codePointAtPos(next);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.chStartsBindingIdentifier(nextCh,***REMOVED***next);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isForUsing()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(107))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenInLineStart();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.codePointAtPos(next);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUnparsedContextual(next,***REMOVED***"of"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCharAfterOf***REMOVED***=***REMOVED***this.lookaheadCharCodeSince(next***REMOVED***+***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCharAfterOf***REMOVED***!==***REMOVED***61***REMOVED***&&***REMOVED***nextCharAfterOf***REMOVED***!==***REMOVED***58***REMOVED***&&***REMOVED***nextCharAfterOf***REMOVED***!==***REMOVED***59)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.chStartsBindingIdentifier(nextCh,***REMOVED***next)***REMOVED***||***REMOVED***this.isUnparsedContextual(next,***REMOVED***"void"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAwaitUsing()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(96))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenInLineStart();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUnparsedContextual(next,***REMOVED***"using"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***this.nextTokenInLineStartSince(next***REMOVED***+***REMOVED***5);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.codePointAtPos(next);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.chStartsBindingIdentifier(nextCh,***REMOVED***next))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***chStartsBindingIdentifier(ch,***REMOVED***pos)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifierStart(ch))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keywordRelationalOperator.lastIndex***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keywordRelationalOperator.test(this.input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***endCh***REMOVED***=***REMOVED***this.codePointAtPos(keywordRelationalOperator.lastIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isIdentifierChar(endCh)***REMOVED***&&***REMOVED***endCh***REMOVED***!==***REMOVED***92)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ch***REMOVED***===***REMOVED***92)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***chStartsBindingPattern(ch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ch***REMOVED***===***REMOVED***91***REMOVED***||***REMOVED***ch***REMOVED***===***REMOVED***123;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasFollowingBindingAtom()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.codePointAtPos(next);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.chStartsBindingPattern(nextCh)***REMOVED***||***REMOVED***this.chStartsBindingIdentifier(nextCh,***REMOVED***next);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasInLineFollowingBindingIdentifierOrBrace()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenInLineStart();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.codePointAtPos(next);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nextCh***REMOVED***===***REMOVED***123***REMOVED***||***REMOVED***this.chStartsBindingIdentifier(nextCh,***REMOVED***next);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***allowsUsing()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.scope.inModule***REMOVED***||***REMOVED***!this.scope.inTopLevel)***REMOVED***&&***REMOVED***!this.scope.inBareCaseStatement;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseModuleItem()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStatementLike(1***REMOVED***|***REMOVED***2***REMOVED***|***REMOVED***4***REMOVED***|***REMOVED***8);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatementListItem()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStatementLike(2***REMOVED***|***REMOVED***4***REMOVED***|***REMOVED***(!this.options.annexB***REMOVED***||***REMOVED***this.state.strict***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***8));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***flags***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.annexB***REMOVED***&&***REMOVED***!this.state.strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags***REMOVED***|=***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowLabeledFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStatementLike(flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatement()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStatementLike(0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatementLike(flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***decorators***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(26))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators***REMOVED***=***REMOVED***this.parseDecorators(true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStatementContent(flags,***REMOVED***decorators);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseStatementContent(flags,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startType***REMOVED***=***REMOVED***this.state.type;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowDeclaration***REMOVED***=***REMOVED***!!(flags***REMOVED***&***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowFunctionDeclaration***REMOVED***=***REMOVED***!!(flags***REMOVED***&***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***topLevel***REMOVED***=***REMOVED***flags***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(startType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***60:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBreakContinueStatement(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***63:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBreakContinueStatement(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***64:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseDebuggerStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***90:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseDoWhileStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***91:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseForStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***68:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lookaheadCharCode()***REMOVED***===***REMOVED***46)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowFunctionDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(this.state.strict***REMOVED***?***REMOVED***Errors.StrictFunction***REMOVED***:***REMOVED***this.options.annexB***REMOVED***?***REMOVED***Errors.SloppyFunctionAnnexB***REMOVED***:***REMOVED***Errors.SloppyFunction,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunctionStatement(node,***REMOVED***false,***REMOVED***!allowDeclaration***REMOVED***&&***REMOVED***allowFunctionDeclaration);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***80:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowDeclaration)***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(this.maybeTakeDecorators(decorators,***REMOVED***node),***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***69:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseIfStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***70:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseReturnStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***71:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseSwitchStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***72:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseThrowStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***73:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseTryStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***96:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAwaitUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.allowsUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedUsingDeclaration,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!allowDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedLexicalDeclaration,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.recordAwaitIfAllowed())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.AwaitUsingNotInAsyncContext,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***"await***REMOVED***using");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***107:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.containsEsc***REMOVED***||***REMOVED***!this.hasInLineFollowingBindingIdentifierOrBrace())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.allowsUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedUsingDeclaration,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!allowDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedLexicalDeclaration,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***"using");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***100:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.containsEsc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextCh***REMOVED***=***REMOVED***this.codePointAtPos(next);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCh***REMOVED***!==***REMOVED***91)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowDeclaration***REMOVED***&&***REMOVED***this.hasFollowingLineBreak())***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.chStartsBindingIdentifier(nextCh,***REMOVED***next)***REMOVED***&&***REMOVED***nextCh***REMOVED***!==***REMOVED***123)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***75:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedLexicalDeclaration,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***74:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseVarStatement(node,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***92:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseWhileStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***76:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseWithStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseBlock();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***13:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseEmptyStatement(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***83:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextTokenCharCode***REMOVED***=***REMOVED***this.lookaheadCharCode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextTokenCharCode***REMOVED***===***REMOVED***40***REMOVED***||***REMOVED***nextTokenCharCode***REMOVED***===***REMOVED***46)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***82:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.optionFlags***REMOVED***&***REMOVED***8)***REMOVED***&&***REMOVED***!topLevel)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedImportExport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startType***REMOVED***===***REMOVED***83)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***this.parseImport(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***this.parseExport(node,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.assertModuleNodeAllowed(result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAsyncFunction())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.AsyncFunctionInSingleStatementContext,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunctionStatement(node,***REMOVED***true,***REMOVED***!allowDeclaration***REMOVED***&&***REMOVED***allowFunctionDeclaration);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maybeName***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(startType)***REMOVED***&&***REMOVED***expr.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***this.eat(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseLabeledStatement(node,***REMOVED***maybeName,***REMOVED***expr,***REMOVED***flags);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***assertModuleNodeAllowed(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.optionFlags***REMOVED***&***REMOVED***8)***REMOVED***&&***REMOVED***!this.inModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportOutsideModule,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***decoratorsEnabledBeforeExport()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("decorators-legacy"))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hasPlugin("decorators")***REMOVED***&&***REMOVED***this.getPluginOption("decorators",***REMOVED***"decoratorsBeforeExport")***REMOVED***!==***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeTakeDecorators(maybeDecorators,***REMOVED***classNode,***REMOVED***exportNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeDecorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_classNode$decorators;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_classNode$decorators***REMOVED***=***REMOVED***classNode.decorators)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_classNode$decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.getPluginOption("decorators",***REMOVED***"decoratorsBeforeExport")***REMOVED***!==***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorsBeforeAfterExport,***REMOVED***classNode.decorators[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classNode.decorators.unshift(...maybeDecorators);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classNode.decorators***REMOVED***=***REMOVED***maybeDecorators;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(classNode,***REMOVED***maybeDecorators[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportNode)***REMOVED***this.resetStartLocationFromNode(exportNode,***REMOVED***classNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***classNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***canHaveLeadingDecorator()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(80);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDecorators(allowExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators.push(this.parseDecorator());
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.match(26));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(82))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!allowExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.decoratorsEnabledBeforeExport())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorExportClass,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.canHaveLeadingDecorator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnexpectedLeadingDecorator,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***decorators;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDecorator()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectOnePlugin(["decorators",***REMOVED***"decorators-legacy"]);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.wrapParenthesis(startLoc,***REMOVED***expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paramsStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.parseMaybeDecoratorArguments(expr,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("decorators",***REMOVED***"allowCallParenthesized")***REMOVED***===***REMOVED***false***REMOVED***&&***REMOVED***node.expression***REMOVED***!==***REMOVED***expr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorArgumentsOutsideParentheses,***REMOVED***paramsStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.parseIdentifier(false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.eat(16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(139))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.usePrivateName(this.state.value,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.property***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expr***REMOVED***=***REMOVED***this.finishNode(node,***REMOVED***"MemberExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.parseMaybeDecoratorArguments(expr,***REMOVED***startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***this.parseExprSubscripts();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"Decorator");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeDecoratorArguments(expr,***REMOVED***startLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNodeAt(startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments***REMOVED***=***REMOVED***this.parseCallExpressionArguments();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toReferencedList(node.arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"CallExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expr;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBreakContinueStatement(node,***REMOVED***isBreak)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.label***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.label***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.verifyBreakContinue(node,***REMOVED***isBreak);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isBreak***REMOVED***?***REMOVED***"BreakStatement"***REMOVED***:***REMOVED***"ContinueStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***verifyBreakContinue(node,***REMOVED***isBreak)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this.state.labels.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lab***REMOVED***=***REMOVED***this.state.labels[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.label***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***lab.name***REMOVED***===***REMOVED***node.label.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lab.kind***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***(isBreak***REMOVED***||***REMOVED***lab.kind***REMOVED***===***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.label***REMOVED***&&***REMOVED***isBreak)***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***this.state.labels.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isBreak***REMOVED***?***REMOVED***"BreakStatement"***REMOVED***:***REMOVED***"ContinueStatement";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.IllegalBreakContinue,***REMOVED***node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDebuggerStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DebuggerStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseHeaderExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***val;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseDoWhileStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.push(loopLabel);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***this.parseStatement());
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(92);
***REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.parseHeaderExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.eat(13);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"DoWhileStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseForStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.push(loopLabel);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***awaitAt***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(96)***REMOVED***&&***REMOVED***this.recordAwaitIfAllowed())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***awaitAt***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(13))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(awaitAt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFor(node,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startsWithLet***REMOVED***=***REMOVED***this.isContextual(100);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startsWithAwaitUsing***REMOVED***=***REMOVED***this.isAwaitUsing();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***starsWithUsingDeclaration***REMOVED***=***REMOVED***startsWithAwaitUsing***REMOVED***||***REMOVED***this.isForUsing();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isLetOrUsing***REMOVED***=***REMOVED***startsWithLet***REMOVED***&&***REMOVED***this.hasFollowingBindingAtom()***REMOVED***||***REMOVED***starsWithUsingDeclaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(74)***REMOVED***||***REMOVED***this.match(75)***REMOVED***||***REMOVED***isLetOrUsing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***initNode***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startsWithAwaitUsing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***"await***REMOVED***using";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.recordAwaitIfAllowed())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.AwaitUsingNotInAsyncContext,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseVar(initNode,***REMOVED***true,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***init***REMOVED***=***REMOVED***this.finishNode(initNode,***REMOVED***"VariableDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isForIn***REMOVED***=***REMOVED***this.match(58);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isForIn***REMOVED***&&***REMOVED***starsWithUsingDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ForInUsing,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((isForIn***REMOVED***||***REMOVED***this.isContextual(102))***REMOVED***&&***REMOVED***init.declarations.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseForIn(node,***REMOVED***init,***REMOVED***awaitAt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(awaitAt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFor(node,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startsWithAsync***REMOVED***=***REMOVED***this.isContextual(95);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***refExpressionErrors***REMOVED***=***REMOVED***new***REMOVED***ExpressionErrors();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***init***REMOVED***=***REMOVED***this.parseExpression(true,***REMOVED***refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isForOf***REMOVED***=***REMOVED***this.isContextual(102);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isForOf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startsWithLet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ForOfLet,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***startsWithAsync***REMOVED***&&***REMOVED***init.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ForOfAsync,***REMOVED***init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isForOf***REMOVED***||***REMOVED***this.match(58))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDestructuringPrivate(refExpressionErrors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toAssignable(init,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isForOf***REMOVED***?***REMOVED***"ForOfStatement"***REMOVED***:***REMOVED***"ForInStatement";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(init,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseForIn(node,***REMOVED***init,***REMOVED***awaitAt);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExpressionErrors(refExpressionErrors,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(awaitAt);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFor(node,***REMOVED***init);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionStatement(node,***REMOVED***isAsync,***REMOVED***isHangingDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(node,***REMOVED***1***REMOVED***|***REMOVED***(isHangingDeclaration***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(isAsync***REMOVED***?***REMOVED***8***REMOVED***:***REMOVED***0));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseIfStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.parseHeaderExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***node.consequent***REMOVED***=***REMOVED***this.parseStatementOrSloppyAnnexBFunctionDeclaration();
***REMOVED******REMOVED******REMOVED******REMOVED***node.alternate***REMOVED***=***REMOVED***this.eat(66)***REMOVED***?***REMOVED***this.parseStatementOrSloppyAnnexBFunctionDeclaration()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"IfStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseReturnStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.prodParam.hasReturn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.IllegalReturn,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ReturnStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseSwitchStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.discriminant***REMOVED***=***REMOVED***this.parseHeaderExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cases***REMOVED***=***REMOVED***node.cases***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.push(switchLabel);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(256);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cur;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***sawDefault;***REMOVED***!this.match(8);)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(61)***REMOVED***||***REMOVED***this.match(65))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isCase***REMOVED***=***REMOVED***this.match(61);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cur)***REMOVED***this.finishNode(cur,***REMOVED***"SwitchCase");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cases.push(cur***REMOVED***=***REMOVED***this.startNode());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.consequent***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.test***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sawDefault)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.MultipleDefaultsInSwitch,***REMOVED***this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sawDefault***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.test***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cur)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur.consequent.push(this.parseStatementListItem());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cur)***REMOVED***this.finishNode(cur,***REMOVED***"SwitchCase");
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"SwitchStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseThrowStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.NewlineAfterThrow,***REMOVED***this.state.lastTokEndLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument***REMOVED***=***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ThrowStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseCatchClauseParam()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***param***REMOVED***=***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(this.options.annexB***REMOVED***&&***REMOVED***param.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***8***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(param,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"CatchClause"
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***9);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseTryStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.block***REMOVED***=***REMOVED***this.parseBlock();
***REMOVED******REMOVED******REMOVED******REMOVED***node.handler***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(62))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***clause***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(10))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clause.param***REMOVED***=***REMOVED***this.parseCatchClauseParam();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clause.param***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clause.body***REMOVED***=***REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***this.parseBlock(false,***REMOVED***false));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.handler***REMOVED***=***REMOVED***this.finishNode(clause,***REMOVED***"CatchClause");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.finalizer***REMOVED***=***REMOVED***this.eat(67)***REMOVED***?***REMOVED***this.parseBlock()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.handler***REMOVED***&&***REMOVED***!node.finalizer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.NoCatchOrFinally,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"TryStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVarStatement(node,***REMOVED***kind,***REMOVED***allowMissingInitializer***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseVar(node,***REMOVED***false,***REMOVED***kind,***REMOVED***allowMissingInitializer);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"VariableDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseWhileStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.parseHeaderExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.push(loopLabel);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***this.parseStatement());
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"WhileStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseWithStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.state.strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.StrictWith,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***node.object***REMOVED***=***REMOVED***this.parseHeaderExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***this.parseStatement());
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"WithStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseEmptyStatement(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"EmptyStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseLabeledStatement(node,***REMOVED***maybeName,***REMOVED***expr,***REMOVED***flags)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***label***REMOVED***of***REMOVED***this.state.labels)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(label.name***REMOVED***===***REMOVED***maybeName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.LabelRedeclaration,***REMOVED***expr,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***labelName:***REMOVED***maybeName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***tokenIsLoop(this.state.type)***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***this.match(71)***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.state.labels.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***label***REMOVED***=***REMOVED***this.state.labels[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(label.statementStart***REMOVED***===***REMOVED***node.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label.statementStart***REMOVED***=***REMOVED***this.sourceToOffsetPos(this.state.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label.kind***REMOVED***=***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***maybeName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***kind,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statementStart:***REMOVED***this.sourceToOffsetPos(this.state.start)
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***flags***REMOVED***&***REMOVED***8***REMOVED***?***REMOVED***this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)***REMOVED***:***REMOVED***this.parseStatement();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***node.label***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"LabeledStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExpressionStatement(node,***REMOVED***expr,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.expression***REMOVED***=***REMOVED***expr;
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExpressionStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBlock(allowDirectives***REMOVED***=***REMOVED***false,***REMOVED***createNewLexicalScope***REMOVED***=***REMOVED***true,***REMOVED***afterBlockParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowDirectives)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.strictErrors.clear();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(createNewLexicalScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseBlockBody(node,***REMOVED***allowDirectives,***REMOVED***false,***REMOVED***8,***REMOVED***afterBlockParse);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(createNewLexicalScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"BlockStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isValidDirective(stmt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stmt.type***REMOVED***===***REMOVED***"ExpressionStatement"***REMOVED***&&***REMOVED***stmt.expression.type***REMOVED***===***REMOVED***"StringLiteral"***REMOVED***&&***REMOVED***!stmt.expression.extra.parenthesized;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBlockBody(node,***REMOVED***allowDirectives,***REMOVED***topLevel,***REMOVED***end,***REMOVED***afterBlockParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***node.body***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directives***REMOVED***=***REMOVED***node.directives***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseBlockOrModuleBlockBody(body,***REMOVED***allowDirectives***REMOVED***?***REMOVED***directives***REMOVED***:***REMOVED***undefined,***REMOVED***topLevel,***REMOVED***end,***REMOVED***afterBlockParse);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseBlockOrModuleBlockBody(body,***REMOVED***directives,***REMOVED***topLevel,***REMOVED***end,***REMOVED***afterBlockParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldStrict***REMOVED***=***REMOVED***this.state.strict;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasStrictModeDirective***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsedNonDirective***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(end))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stmt***REMOVED***=***REMOVED***topLevel***REMOVED***?***REMOVED***this.parseModuleItem()***REMOVED***:***REMOVED***this.parseStatementListItem();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(directives***REMOVED***&&***REMOVED***!parsedNonDirective)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isValidDirective(stmt))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***directive***REMOVED***=***REMOVED***this.stmtToDirective(stmt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directives.push(directive);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasStrictModeDirective***REMOVED***&&***REMOVED***directive.value.value***REMOVED***===***REMOVED***"use***REMOVED***strict")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasStrictModeDirective***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setStrict(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedNonDirective***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.state.strictErrors.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body.push(stmt);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***afterBlockParse***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***afterBlockParse.call(this,***REMOVED***hasStrictModeDirective);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!oldStrict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setStrict(false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFor(node,***REMOVED***init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.init***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon(false);
***REMOVED******REMOVED******REMOVED******REMOVED***node.test***REMOVED***=***REMOVED***this.match(13)***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon(false);
***REMOVED******REMOVED******REMOVED******REMOVED***node.update***REMOVED***=***REMOVED***this.match(11)***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this.parseExpression();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***this.parseStatement());
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ForStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseForIn(node,***REMOVED***init,***REMOVED***awaitAt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isForIn***REMOVED***=***REMOVED***this.match(58);
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isForIn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(awaitAt***REMOVED***!==***REMOVED***null)***REMOVED***this.unexpected(awaitAt);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.await***REMOVED***=***REMOVED***awaitAt***REMOVED***!==***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(init.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***&&***REMOVED***init.declarations[0].init***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***(!isForIn***REMOVED***||***REMOVED***!this.options.annexB***REMOVED***||***REMOVED***this.state.strict***REMOVED***||***REMOVED***init.kind***REMOVED***!==***REMOVED***"var"***REMOVED***||***REMOVED***init.declarations[0].id.type***REMOVED***!==***REMOVED***"Identifier"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ForInOfLoopInitializer,***REMOVED***init,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***isForIn***REMOVED***?***REMOVED***"ForInStatement"***REMOVED***:***REMOVED***"ForOfStatement"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(init.type***REMOVED***===***REMOVED***"AssignmentPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.InvalidLhs,***REMOVED***init,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestor:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"ForStatement"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***node.left***REMOVED***=***REMOVED***init;
***REMOVED******REMOVED******REMOVED******REMOVED***node.right***REMOVED***=***REMOVED***isForIn***REMOVED***?***REMOVED***this.parseExpression()***REMOVED***:***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(11);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***this.parseStatement());
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isForIn***REMOVED***?***REMOVED***"ForInStatement"***REMOVED***:***REMOVED***"ForOfStatement");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVar(node,***REMOVED***isFor,***REMOVED***kind,***REMOVED***allowMissingInitializer***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarations***REMOVED***=***REMOVED***node.declarations***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***node.kind***REMOVED***=***REMOVED***kind;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseVarId(decl,***REMOVED***kind);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.init***REMOVED***=***REMOVED***!this.eat(29)***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***isFor***REMOVED***?***REMOVED***this.parseMaybeAssignDisallowIn()***REMOVED***:***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.init***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***!allowMissingInitializer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.id.type***REMOVED***!==***REMOVED***"Identifier"***REMOVED***&&***REMOVED***!(isFor***REMOVED***&&***REMOVED***(this.match(58)***REMOVED***||***REMOVED***this.isContextual(102))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DeclarationMissingInitializer,***REMOVED***this.state.lastTokEndLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***"destructuring"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((kind***REMOVED***===***REMOVED***"const"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"using"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"await***REMOVED***using")***REMOVED***&&***REMOVED***!(this.match(58)***REMOVED***||***REMOVED***this.isContextual(102)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DeclarationMissingInitializer,***REMOVED***this.state.lastTokEndLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarations.push(this.finishNode(decl,***REMOVED***"VariableDeclarator"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.eat(12))***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseVarId(decl,***REMOVED***kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***this.parseBindingAtom();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"using"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"await***REMOVED***using")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.type***REMOVED***===***REMOVED***"ArrayPattern"***REMOVED***||***REMOVED***id.type***REMOVED***===***REMOVED***"ObjectPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UsingDeclarationHasBindingPattern,***REMOVED***id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.type***REMOVED***===***REMOVED***"VoidPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UnexpectedVoidPattern,***REMOVED***id.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(id,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"VariableDeclarator"
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***kind***REMOVED***===***REMOVED***"var"***REMOVED***?***REMOVED***5***REMOVED***:***REMOVED***8201);
***REMOVED******REMOVED******REMOVED******REMOVED***decl.id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseAsyncFunctionExpression(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(node,***REMOVED***8);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunction(node,***REMOVED***flags***REMOVED***=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hangingDeclaration***REMOVED***=***REMOVED***flags***REMOVED***&***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDeclaration***REMOVED***=***REMOVED***!!(flags***REMOVED***&***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***requireId***REMOVED***=***REMOVED***isDeclaration***REMOVED***&&***REMOVED***!(flags***REMOVED***&***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAsync***REMOVED***=***REMOVED***!!(flags***REMOVED***&***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED***this.initFunction(node,***REMOVED***isAsync);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(55))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hangingDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.GeneratorInSingleStatementContext,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.generator***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseFunctionId(requireId);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldMaybeInArrowParameters***REMOVED***=***REMOVED***this.state.maybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(514);
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(functionFlags(isAsync,***REMOVED***node.generator));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseFunctionId();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionParams(node,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseFunctionBodyAndFinish(node,***REMOVED***isDeclaration***REMOVED***?***REMOVED***"FunctionDeclaration"***REMOVED***:***REMOVED***"FunctionExpression");
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDeclaration***REMOVED***&&***REMOVED***!hangingDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.registerFunctionStatementId(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.maybeInArrowParameters***REMOVED***=***REMOVED***oldMaybeInArrowParameters;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionId(requireId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***requireId***REMOVED***||***REMOVED***tokenIsIdentifier(this.state.type)***REMOVED***?***REMOVED***this.parseIdentifier()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseFunctionParams(node,***REMOVED***isConstructor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(10);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.enter(newParameterDeclarationScope());
***REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***this.parseBindingList(11,***REMOVED***41,***REMOVED***2***REMOVED***|***REMOVED***(isConstructor***REMOVED***?***REMOVED***4***REMOVED***:***REMOVED***0));
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***registerFunctionStatementId(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.id)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.declareName(node.id.name,***REMOVED***!this.options.annexB***REMOVED***||***REMOVED***this.state.strict***REMOVED***||***REMOVED***node.generator***REMOVED***||***REMOVED***node.async***REMOVED***?***REMOVED***this.scope.treatFunctionsAsVar***REMOVED***?***REMOVED***5***REMOVED***:***REMOVED***8201***REMOVED***:***REMOVED***17,***REMOVED***node.id.loc.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClass(node,***REMOVED***isStatement,***REMOVED***optionalId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldStrict***REMOVED***=***REMOVED***this.state.strict;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.strict***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId);
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassSuper(node);
***REMOVED******REMOVED******REMOVED******REMOVED***node.body***REMOVED***=***REMOVED***this.parseClassBody(!!node.superClass,***REMOVED***oldStrict);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***isStatement***REMOVED***?***REMOVED***"ClassDeclaration"***REMOVED***:***REMOVED***"ClassExpression");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isClassProperty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(29)***REMOVED***||***REMOVED***this.match(13)***REMOVED***||***REMOVED***this.match(8);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isClassMethod()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.match(10);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***nameIsConstructor(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***key.name***REMOVED***===***REMOVED***"constructor"***REMOVED***||***REMOVED***key.type***REMOVED***===***REMOVED***"StringLiteral"***REMOVED***&&***REMOVED***key.value***REMOVED***===***REMOVED***"constructor";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isNonstaticConstructor(method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!method.computed***REMOVED***&&***REMOVED***!method.static***REMOVED***&&***REMOVED***this.nameIsConstructor(method.key);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassBody(hadSuperClass,***REMOVED***oldStrict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.enter();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadConstructor:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadSuperClass
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***classBody***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***this.withSmartMixTopicForbiddingContext(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(13))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.DecoratorSemicolon,***REMOVED***this.state.lastTokEndLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(26))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators.push(this.parseDecorator());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***member***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***member.decorators***REMOVED***=***REMOVED***decorators;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetStartLocationFromNode(member,***REMOVED***decorators[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decorators***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassMember(classBody,***REMOVED***member,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(member.kind***REMOVED***===***REMOVED***"constructor"***REMOVED***&&***REMOVED***member.decorators***REMOVED***&&***REMOVED***member.decorators.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorConstructor,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.strict***REMOVED***=***REMOVED***oldStrict;
***REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.TrailingDecorator,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(classBody,***REMOVED***"ClassBody");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassMemberFromModifier(classBody,***REMOVED***member)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isClassMethod())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***method***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.static***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassMethod(classBody,***REMOVED***method,***REMOVED***false,***REMOVED***false,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isClassProperty())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.static***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(this.parseClassProperty(prop));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(key);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassMember(classBody,***REMOVED***member,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isStatic***REMOVED***=***REMOVED***this.isContextual(106);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parseClassMemberFromModifier(classBody,***REMOVED***member))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassStaticBlock(classBody,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassMemberWithIsStatic(classBody,***REMOVED***member,***REMOVED***state,***REMOVED***isStatic);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassMemberWithIsStatic(classBody,***REMOVED***member,***REMOVED***state,***REMOVED***isStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***publicMethod***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***privateMethod***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***publicProp***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***privateProp***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***accessorProp***REMOVED***=***REMOVED***member;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***method***REMOVED***=***REMOVED***publicMethod;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***publicMember***REMOVED***=***REMOVED***publicMethod;
***REMOVED******REMOVED******REMOVED******REMOVED***member.static***REMOVED***=***REMOVED***isStatic;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyNamePrefixOperator(member);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(55))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPrivateName***REMOVED***=***REMOVED***this.match(139);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassElementName(method);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parsePostMemberNameModifiers(method);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivateName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassPrivateMethod(classBody,***REMOVED***privateMethod,***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNonstaticConstructor(publicMethod))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ConstructorIsGenerator,***REMOVED***publicMethod.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassMethod(classBody,***REMOVED***publicMethod,***REMOVED***true,***REMOVED***false,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isContextual***REMOVED***=***REMOVED***!this.state.containsEsc***REMOVED***&&***REMOVED***tokenIsIdentifier(this.state.type);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.parseClassElementName(member);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maybeContextualKw***REMOVED***=***REMOVED***isContextual***REMOVED***?***REMOVED***key.name***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPrivate***REMOVED***=***REMOVED***this.isPrivateName(key);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maybeQuestionTokenStartLoc***REMOVED***=***REMOVED***this.state.startLoc;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePostMemberNameModifiers(publicMember);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isClassMethod())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassPrivateMethod(classBody,***REMOVED***privateMethod,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isConstructor***REMOVED***=***REMOVED***this.isNonstaticConstructor(publicMethod);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allowsDirectSuper***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isConstructor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***publicMethod.kind***REMOVED***=***REMOVED***"constructor";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state.hadConstructor***REMOVED***&&***REMOVED***!this.hasPlugin("typescript"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DuplicateConstructor,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isConstructor***REMOVED***&&***REMOVED***this.hasPlugin("typescript")***REMOVED***&&***REMOVED***member.override)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.OverrideOnConstructor,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state.hadConstructor***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowsDirectSuper***REMOVED***=***REMOVED***state.hadSuperClass;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassMethod(classBody,***REMOVED***publicMethod,***REMOVED***false,***REMOVED***false,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isClassProperty())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassPrivateProperty(classBody,***REMOVED***privateProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassProperty(classBody,***REMOVED***publicProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(maybeContextualKw***REMOVED***===***REMOVED***"async"***REMOVED***&&***REMOVED***!this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isGenerator***REMOVED***=***REMOVED***this.eat(55);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(publicMember.optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(maybeQuestionTokenStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.kind***REMOVED***=***REMOVED***"method";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPrivate***REMOVED***=***REMOVED***this.match(139);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassElementName(method);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parsePostMemberNameModifiers(publicMember);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassPrivateMethod(classBody,***REMOVED***privateMethod,***REMOVED***isGenerator,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNonstaticConstructor(publicMethod))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ConstructorIsAsync,***REMOVED***publicMethod.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassMethod(classBody,***REMOVED***publicMethod,***REMOVED***isGenerator,***REMOVED***true,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((maybeContextualKw***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***maybeContextualKw***REMOVED***===***REMOVED***"set")***REMOVED***&&***REMOVED***!(this.match(55)***REMOVED***&&***REMOVED***this.isLineTerminator()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.kind***REMOVED***=***REMOVED***maybeContextualKw;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPrivate***REMOVED***=***REMOVED***this.match(139);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassElementName(publicMethod);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassPrivateMethod(classBody,***REMOVED***privateMethod,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNonstaticConstructor(publicMethod))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ConstructorIsAccessor,***REMOVED***publicMethod.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassMethod(classBody,***REMOVED***publicMethod,***REMOVED***false,***REMOVED***false,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkGetterSetterParams(publicMethod);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(maybeContextualKw***REMOVED***===***REMOVED***"accessor"***REMOVED***&&***REMOVED***!this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("decoratorAutoAccessors");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.resetPreviousNodeTrailingComments(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPrivate***REMOVED***=***REMOVED***this.match(139);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseClassElementName(publicProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassAccessorProperty(classBody,***REMOVED***accessorProp,***REMOVED***isPrivate);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isLineTerminator())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassPrivateProperty(classBody,***REMOVED***privateProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pushClassProperty(classBody,***REMOVED***publicProp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassElementName(member)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((type***REMOVED***===***REMOVED***132***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***134)***REMOVED***&&***REMOVED***member.static***REMOVED***&&***REMOVED***value***REMOVED***===***REMOVED***"prototype")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.StaticPrototype,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***139)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***"constructor")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ConstructorClassPrivateField,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.parsePrivateName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***member.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.parsePropertyName(member);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***member.key;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassStaticBlock(classBody,***REMOVED***member)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_member$decorators;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(576***REMOVED***|***REMOVED***128***REMOVED***|***REMOVED***16);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldLabels***REMOVED***=***REMOVED***this.state.labels;
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***member.body***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseBlockOrModuleBlockBody(body,***REMOVED***undefined,***REMOVED***false,***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.state.labels***REMOVED***=***REMOVED***oldLabels;
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(this.finishNode(member,***REMOVED***"StaticBlock"));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_member$decorators***REMOVED***=***REMOVED***member.decorators)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_member$decorators.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorStaticBlock,***REMOVED***member);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassProperty(classBody,***REMOVED***prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prop.computed***REMOVED***&&***REMOVED***this.nameIsConstructor(prop.key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ConstructorClassField,***REMOVED***prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(this.parseClassProperty(prop));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassPrivateProperty(classBody,***REMOVED***prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.parseClassPrivateProperty(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),***REMOVED***0,***REMOVED***node.key.loc.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassAccessorProperty(classBody,***REMOVED***prop,***REMOVED***isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPrivate***REMOVED***&&***REMOVED***!prop.computed***REMOVED***&&***REMOVED***this.nameIsConstructor(prop.key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ConstructorClassField,***REMOVED***prop.key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.parseClassAccessorProperty(prop);
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPrivate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),***REMOVED***0,***REMOVED***node.key.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(this.parseMethod(method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***isConstructor,***REMOVED***allowsDirectSuper,***REMOVED***"ClassMethod",***REMOVED***true));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pushClassPrivateMethod(classBody,***REMOVED***method,***REMOVED***isGenerator,***REMOVED***isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.parseMethod(method,***REMOVED***isGenerator,***REMOVED***isAsync,***REMOVED***false,***REMOVED***false,***REMOVED***"ClassPrivateMethod",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***classBody.body.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***node.kind***REMOVED***===***REMOVED***"get"***REMOVED***?***REMOVED***node.static***REMOVED***?***REMOVED***6***REMOVED***:***REMOVED***2***REMOVED***:***REMOVED***node.kind***REMOVED***===***REMOVED***"set"***REMOVED***?***REMOVED***node.static***REMOVED***?***REMOVED***5***REMOVED***:***REMOVED***1***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.declareClassPrivateMethodInScope(node,***REMOVED***kind);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***declareClassPrivateMethodInScope(node,***REMOVED***kind)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),***REMOVED***kind,***REMOVED***node.key.loc.start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parsePostMemberNameModifiers(methodOrProp)***REMOVED***{}
***REMOVED******REMOVED***parseClassPrivateProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseInitializer(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ClassPrivateProperty");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseInitializer(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ClassProperty");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassAccessorProperty(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseInitializer(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ClassAccessorProperty");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseInitializer(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.enter(576***REMOVED***|***REMOVED***16);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.enter(newExpressionScope());
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.enter(0);
***REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.eat(29)***REMOVED***?***REMOVED***this.parseMaybeAssignAllowIn()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expressionScope.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.prodParam.exit();
***REMOVED******REMOVED******REMOVED******REMOVED***this.scope.exit();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassId(node,***REMOVED***isStatement,***REMOVED***optionalId,***REMOVED***bindingType***REMOVED***=***REMOVED***8331)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.declareNameFromIdentifier(node.id,***REMOVED***bindingType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionalId***REMOVED***||***REMOVED***!isStatement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.id***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.MissingClassName,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseClassSuper(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.superClass***REMOVED***=***REMOVED***this.eat(81)***REMOVED***?***REMOVED***this.parseExprSubscripts()***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExport(node,***REMOVED***decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maybeDefaultIdentifier***REMOVED***=***REMOVED***this.parseMaybeImportPhase(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDefault***REMOVED***=***REMOVED***this.maybeParseExportDefaultSpecifier(node,***REMOVED***maybeDefaultIdentifier);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parseAfterDefault***REMOVED***=***REMOVED***!hasDefault***REMOVED***||***REMOVED***this.eat(12);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasStar***REMOVED***=***REMOVED***parseAfterDefault***REMOVED***&&***REMOVED***this.eatExportStar(node);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasNamespace***REMOVED***=***REMOVED***hasStar***REMOVED***&&***REMOVED***this.maybeParseExportNamespaceSpecifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parseAfterNamespace***REMOVED***=***REMOVED***parseAfterDefault***REMOVED***&&***REMOVED***(!hasNamespace***REMOVED***||***REMOVED***this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isFromRequired***REMOVED***=***REMOVED***hasDefault***REMOVED***||***REMOVED***hasStar;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasStar***REMOVED***&&***REMOVED***!hasNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDefault)***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnsupportedDecoratorExport,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseExportFrom(node,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportAllDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasSpecifiers***REMOVED***=***REMOVED***this.maybeParseExportNamedSpecifiers(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDefault***REMOVED***&&***REMOVED***parseAfterDefault***REMOVED***&&***REMOVED***!hasStar***REMOVED***&&***REMOVED***!hasSpecifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***5);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasNamespace***REMOVED***&&***REMOVED***parseAfterNamespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***98);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasDeclaration;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFromRequired***REMOVED***||***REMOVED***hasSpecifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDeclaration***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnsupportedDecoratorExport,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseExportFrom(node,***REMOVED***isFromRequired);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasDeclaration***REMOVED***=***REMOVED***this.maybeParseExportDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFromRequired***REMOVED***||***REMOVED***hasSpecifiers***REMOVED***||***REMOVED***hasDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node2$declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node2***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(node2,***REMOVED***true,***REMOVED***false,***REMOVED***!!node2.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(((_node2$declaration***REMOVED***=***REMOVED***node2.declaration)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_node2$declaration.type)***REMOVED***===***REMOVED***"ClassDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeTakeDecorators(decorators,***REMOVED***node2.declaration,***REMOVED***node2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnsupportedDecoratorExport,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node2,***REMOVED***"ExportNamedDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(65))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node2***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***this.parseExportDefaultExpression();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.declaration***REMOVED***=***REMOVED***decl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.type***REMOVED***===***REMOVED***"ClassDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeTakeDecorators(decorators,***REMOVED***decl,***REMOVED***node2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(decorators)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnsupportedDecoratorExport,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(node2,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node2,***REMOVED***"ExportDefaultDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected(null,***REMOVED***5);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***eatExportStar(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.eat(55);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseExportDefaultSpecifier(node,***REMOVED***maybeDefaultIdentifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeDefaultIdentifier***REMOVED***||***REMOVED***this.isExportDefaultSpecifier())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("exportDefaultFrom",***REMOVED***maybeDefaultIdentifier***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***maybeDefaultIdentifier.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***maybeDefaultIdentifier***REMOVED***||***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNodeAtNode(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.exported***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[this.finishNode(specifier,***REMOVED***"ExportDefaultSpecifier")];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseExportNamespaceSpecifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_ref,***REMOVED***_ref$specifiers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_ref$specifiers***REMOVED***=***REMOVED***(_ref***REMOVED***=***REMOVED***node).specifiers)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_ref$specifiers***REMOVED***:***REMOVED***_ref.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNodeAt(this.state.lastTokStartLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.exported***REMOVED***=***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers.push(this.finishNode(specifier,***REMOVED***"ExportNamespaceSpecifier"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseExportNamedSpecifiers(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(5))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node2***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node2.specifiers)***REMOVED***node2.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTypeExport***REMOVED***=***REMOVED***node2.exportKind***REMOVED***===***REMOVED***"type";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.specifiers.push(...this.parseExportSpecifiers(isTypeExport));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.assertions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.attributes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node2.declaration***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseExportDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.shouldParseExportDeclaration())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.assertions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.attributes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration***REMOVED***=***REMOVED***this.parseExportDeclaration(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isAsyncFunction()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isContextual(95))***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenInLineStart();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isUnparsedContextual(next,***REMOVED***"function");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportDefaultExpression()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(68))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(expr,***REMOVED***1***REMOVED***|***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isAsyncFunction())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseFunction(expr,***REMOVED***1***REMOVED***|***REMOVED***4***REMOVED***|***REMOVED***8);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(80))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(expr,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(26))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("decorators")***REMOVED***&&***REMOVED***this.getPluginOption("decorators",***REMOVED***"decoratorsBeforeExport")***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorBeforeExport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false),***REMOVED***this.startNode()),***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(75)***REMOVED***||***REMOVED***this.match(74)***REMOVED***||***REMOVED***this.isLet()***REMOVED***||***REMOVED***this.isUsing()***REMOVED***||***REMOVED***this.isAwaitUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.UnsupportedDefaultExport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***this.parseMaybeAssignAllowIn();
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(80))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.parseClass(this.startNode(),***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseStatementListItem();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isExportDefaultSpecifier()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokenIsIdentifier(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***95***REMOVED***&&***REMOVED***!this.state.containsEsc***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***100)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((type***REMOVED***===***REMOVED***130***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***129)***REMOVED***&&***REMOVED***!this.state.containsEsc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextChar***REMOVED***=***REMOVED***this.input.charCodeAt(next);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextChar***REMOVED***===***REMOVED***123***REMOVED***||***REMOVED***this.chStartsBindingIdentifier(nextChar,***REMOVED***next)***REMOVED***&&***REMOVED***!this.input.startsWith("from",***REMOVED***next))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectOnePlugin(["flow",***REMOVED***"typescript"]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.match(65))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***this.nextTokenStart();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasFrom***REMOVED***=***REMOVED***this.isUnparsedContextual(next,***REMOVED***"from");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.input.charCodeAt(next)***REMOVED***===***REMOVED***44***REMOVED***||***REMOVED***tokenIsIdentifier(this.state.type)***REMOVED***&&***REMOVED***hasFrom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(65)***REMOVED***&&***REMOVED***hasFrom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextAfterFrom***REMOVED***=***REMOVED***this.input.charCodeAt(this.nextTokenStartSince(next***REMOVED***+***REMOVED***4));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nextAfterFrom***REMOVED***===***REMOVED***34***REMOVED***||***REMOVED***nextAfterFrom***REMOVED***===***REMOVED***39;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportFrom(node,***REMOVED***expect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(98))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseImportSource();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkExport(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maybeParseImportAttributes(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkJSONModuleImport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(expect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldParseExportDeclaration()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***26)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectOnePlugin(["decorators",***REMOVED***"decorators-legacy"]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.getPluginOption("decorators",***REMOVED***"decoratorsBeforeExport")***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DecoratorBeforeExport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UsingDeclarationExport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAwaitUsing())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.UsingDeclarationExport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***74***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***75***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***68***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***80***REMOVED***||***REMOVED***this.isLet()***REMOVED***||***REMOVED***this.isAsyncFunction();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkExport(node,***REMOVED***checkNames,***REMOVED***isDefault,***REMOVED***isFrom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$specifiers;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDefault)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDuplicateExports(node,***REMOVED***"default");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("exportDefaultFrom"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_declaration$extra;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***node.declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***declaration.name***REMOVED***===***REMOVED***"from"***REMOVED***&&***REMOVED***declaration.end***REMOVED***-***REMOVED***declaration.start***REMOVED***===***REMOVED***4***REMOVED***&&***REMOVED***!((_declaration$extra***REMOVED***=***REMOVED***declaration.extra)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_declaration$extra.parenthesized))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ExportDefaultFromAsIdentifier,***REMOVED***declaration);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((_node$specifiers***REMOVED***=***REMOVED***node.specifiers)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_node$specifiers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exported
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***specifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportName***REMOVED***=***REMOVED***exported.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***exported.name***REMOVED***:***REMOVED***exported.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDuplicateExports(specifier,***REMOVED***exportName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isFrom***REMOVED***&&***REMOVED***specifier.local)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***specifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(local.type***REMOVED***!==***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ExportBindingIsString,***REMOVED***specifier,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName:***REMOVED***local.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedWord(local.name,***REMOVED***local.loc.start,***REMOVED***true,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scope.checkLocalExport(local);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***node.declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.type***REMOVED***===***REMOVED***"FunctionDeclaration"***REMOVED***||***REMOVED***decl.type***REMOVED***===***REMOVED***"ClassDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***decl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!id)***REMOVED***throw***REMOVED***new***REMOVED***Error("Assertion***REMOVED***failure");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDuplicateExports(node,***REMOVED***id.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(decl.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declaration***REMOVED***of***REMOVED***decl.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(declaration.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkDeclaration(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDuplicateExports(node,***REMOVED***node.name);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ObjectPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prop***REMOVED***of***REMOVED***node.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(prop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ArrayPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***elem***REMOVED***of***REMOVED***node.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(elem)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(elem);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ObjectProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(node.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"RestElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(node.argument);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"AssignmentPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkDeclaration(node.left);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkDuplicateExports(node,***REMOVED***exportName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.exportedIdentifiers.has(exportName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportName***REMOVED***===***REMOVED***"default")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DuplicateDefaultExport,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DuplicateExport,***REMOVED***node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.exportedIdentifiers.add(exportName);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportSpecifiers(isInTypeExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.eat(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(8))***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isMaybeTypeOnly***REMOVED***=***REMOVED***this.isContextual(130);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isString***REMOVED***=***REMOVED***this.match(134);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.local***REMOVED***=***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(this.parseExportSpecifier(node,***REMOVED***isString,***REMOVED***isInTypeExport,***REMOVED***isMaybeTypeOnly));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodes;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseExportSpecifier(node,***REMOVED***isString,***REMOVED***isInTypeExport,***REMOVED***isMaybeTypeOnly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***this.cloneStringLiteral(node.local);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.exported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.exported***REMOVED***=***REMOVED***this.cloneIdentifier(node.local);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ExportSpecifier");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseModuleExportName()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***this.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***surrogate***REMOVED***=***REMOVED***loneSurrogate.exec(result.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(surrogate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ModuleExportNameHasLoneSurrogate,***REMOVED***result,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***surrogateCharCode:***REMOVED***surrogate[0].charCodeAt(0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isJSONModuleImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.assertions***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.assertions.some(({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.value***REMOVED***===***REMOVED***"json"***REMOVED***&&***REMOVED***(key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***key.name***REMOVED***===***REMOVED***"type"***REMOVED***:***REMOVED***key.value***REMOVED***===***REMOVED***"type");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkImportReflection(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***singleBindingType***REMOVED***=***REMOVED***specifiers.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***specifiers[0].type***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.phase***REMOVED***===***REMOVED***"source")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(singleBindingType***REMOVED***!==***REMOVED***"ImportDefaultSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.SourcePhaseImportRequiresDefault,***REMOVED***specifiers[0].loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.phase***REMOVED***===***REMOVED***"defer")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(singleBindingType***REMOVED***!==***REMOVED***"ImportNamespaceSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.DeferImportRequiresNamespace,***REMOVED***specifiers[0].loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.module)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$assertions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(singleBindingType***REMOVED***!==***REMOVED***"ImportDefaultSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportReflectionNotBinding,***REMOVED***specifiers[0].loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(((_node$assertions***REMOVED***=***REMOVED***node.assertions)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_node$assertions.length)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportReflectionHasAssertion,***REMOVED***specifiers[0].loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkJSONModuleImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isJSONModuleImport(node)***REMOVED***&&***REMOVED***node.type***REMOVED***!==***REMOVED***"ExportAllDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifiers***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonDefaultNamedSpecifier***REMOVED***=***REMOVED***specifiers.find(specifier***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***imported;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.type***REMOVED***===***REMOVED***"ExportSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***specifier.local;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(specifier.type***REMOVED***===***REMOVED***"ImportSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported***REMOVED***=***REMOVED***specifier.imported;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(imported***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***imported.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***imported.name***REMOVED***!==***REMOVED***"default"***REMOVED***:***REMOVED***imported.value***REMOVED***!==***REMOVED***"default";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nonDefaultNamedSpecifier***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportJSONBindingNotDefault,***REMOVED***nonDefaultNamedSpecifier.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isPotentialImportPhase(isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExport)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.isContextual(105)***REMOVED***||***REMOVED***this.isContextual(97)***REMOVED***||***REMOVED***this.isContextual(127);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***applyImportPhase(node,***REMOVED***isExport,***REMOVED***phase,***REMOVED***loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(phase***REMOVED***===***REMOVED***"module")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("importReflection",***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.module***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.hasPlugin("importReflection"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.module***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(phase***REMOVED***===***REMOVED***"source")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("sourcePhaseImports",***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.phase***REMOVED***=***REMOVED***"source";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(phase***REMOVED***===***REMOVED***"defer")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectPlugin("deferredImportEvaluation",***REMOVED***loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.phase***REMOVED***=***REMOVED***"defer";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.hasPlugin("sourcePhaseImports"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.phase***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseMaybeImportPhase(node,***REMOVED***isExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isPotentialImportPhase(isExport))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyImportPhase(node,***REMOVED***isExport,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***phaseIdentifier***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***phaseIdentifierName***REMOVED***=***REMOVED***this.parseIdentifierName(true);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportPhase***REMOVED***=***REMOVED***tokenIsKeywordOrIdentifier(type)***REMOVED***?***REMOVED***type***REMOVED***!==***REMOVED***98***REMOVED***||***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***102***REMOVED***:***REMOVED***type***REMOVED***!==***REMOVED***12;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isImportPhase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyImportPhase(node,***REMOVED***isExport,***REMOVED***phaseIdentifierName,***REMOVED***phaseIdentifier.loc.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.applyImportPhase(node,***REMOVED***isExport,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.createIdentifier(phaseIdentifier,***REMOVED***phaseIdentifierName);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isPrecedingIdImportPhase(phase)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.state;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokenIsIdentifier(type)***REMOVED***?***REMOVED***type***REMOVED***!==***REMOVED***98***REMOVED***||***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***102***REMOVED***:***REMOVED***type***REMOVED***!==***REMOVED***12;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImport(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportSourceAndAttributes(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportSpecifiersAndAfter(node,***REMOVED***this.parseMaybeImportPhase(node,***REMOVED***false));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSpecifiersAndAfter(node,***REMOVED***maybeDefaultIdentifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDefault***REMOVED***=***REMOVED***this.maybeParseDefaultImportSpecifier(node,***REMOVED***maybeDefaultIdentifier);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parseNext***REMOVED***=***REMOVED***!hasDefault***REMOVED***||***REMOVED***this.eat(12);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasStar***REMOVED***=***REMOVED***parseNext***REMOVED***&&***REMOVED***this.maybeParseStarImportSpecifier(node);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parseNext***REMOVED***&&***REMOVED***!hasStar)***REMOVED***this.parseNamedImportSpecifiers(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(98);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseImportSourceAndAttributes(node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSourceAndAttributes(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_node$specifiers2;
***REMOVED******REMOVED******REMOVED******REMOVED***(_node$specifiers2***REMOVED***=***REMOVED***node.specifiers)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_node$specifiers2***REMOVED***:***REMOVED***node.specifiers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***node.source***REMOVED***=***REMOVED***this.parseImportSource();
***REMOVED******REMOVED******REMOVED******REMOVED***this.maybeParseImportAttributes(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkImportReflection(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkJSONModuleImport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***this.semicolon();
***REMOVED******REMOVED******REMOVED******REMOVED***this.sawUnambiguousESM***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(node,***REMOVED***"ImportDeclaration");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSource()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(134))***REMOVED***this.unexpected();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parseExprAtom();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSpecifierLocal(node,***REMOVED***specifier,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers.push(this.finishImportSpecifier(specifier,***REMOVED***type));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishImportSpecifier(specifier,***REMOVED***type,***REMOVED***bindingType***REMOVED***=***REMOVED***8201)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.checkLVal(specifier.local,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***bindingType);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishNode(specifier,***REMOVED***type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportAttributes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrNames***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keyName***REMOVED***=***REMOVED***this.state.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrNames.has(keyName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ModuleAttributesWithDuplicateKeys,***REMOVED***this.state.startLoc,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***keyName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrNames.add(keyName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.parseStringLiteral(keyName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.ModuleAttributeInvalidValue,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs.push(this.finishNode(node,***REMOVED***"ImportAttribute"));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(8);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrs;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseModuleAttributes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attributes***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key***REMOVED***=***REMOVED***this.parseIdentifier(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.key.name***REMOVED***!==***REMOVED***"type")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ModuleAttributeDifferentFromType,***REMOVED***node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attributes.has(node.key.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ModuleAttributesWithDuplicateKeys,***REMOVED***node.key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***node.key.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attributes.add(node.key.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(14);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.match(134))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.ModuleAttributeInvalidValue,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***this.parseStringLiteral(this.state.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs.push(this.finishNode(node,***REMOVED***"ImportAttribute"));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this.eat(12));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrs;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseImportAttributes(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***attributes;
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***useWith***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(76))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPrecedingLineBreak()***REMOVED***&&***REMOVED***this.lookaheadCharCode()***REMOVED***===***REMOVED***40)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hasPlugin("moduleAttributes"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attributes***REMOVED***=***REMOVED***this.parseModuleAttributes();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"deprecatedWithLegacySyntax",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attributes***REMOVED***=***REMOVED***this.parseImportAttributes();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***useWith***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.isContextual(94)***REMOVED***&&***REMOVED***!this.hasPrecedingLineBreak())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPlugin("deprecatedImportAssert")***REMOVED***&&***REMOVED***!this.hasPlugin("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raise(Errors.ImportAttributesUseAssert,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.hasPlugin("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addExtra(node,***REMOVED***"deprecatedAssertSyntax",***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attributes***REMOVED***=***REMOVED***this.parseImportAttributes();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attributes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!useWith***REMOVED***&&***REMOVED***this.hasPlugin("importAssertions"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.assertions***REMOVED***=***REMOVED***attributes;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.attributes***REMOVED***=***REMOVED***attributes;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseDefaultImportSpecifier(node,***REMOVED***maybeDefaultIdentifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(maybeDefaultIdentifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNodeAtNode(maybeDefaultIdentifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***maybeDefaultIdentifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers.push(this.finishImportSpecifier(specifier,***REMOVED***"ImportDefaultSpecifier"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tokenIsKeywordOrIdentifier(this.state.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseImportSpecifierLocal(node,***REMOVED***this.startNode(),***REMOVED***"ImportDefaultSpecifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***maybeParseStarImportSpecifier(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.match(55))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expectContextual(93);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseImportSpecifierLocal(node,***REMOVED***specifier,***REMOVED***"ImportNamespaceSpecifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseNamedImportSpecifiers(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***first***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.expect(5);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(!this.eat(8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(first)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(14))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.DestructureNamedImport,***REMOVED***this.state.startLoc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.expect(12);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eat(8))***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedIsString***REMOVED***=***REMOVED***this.match(134);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isMaybeTypeOnly***REMOVED***=***REMOVED***this.isContextual(130);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.imported***REMOVED***=***REMOVED***this.parseModuleExportName();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importSpecifier***REMOVED***=***REMOVED***this.parseImportSpecifier(specifier,***REMOVED***importedIsString,***REMOVED***node.importKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***node.importKind***REMOVED***===***REMOVED***"typeof",***REMOVED***isMaybeTypeOnly,***REMOVED***undefined);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.specifiers.push(importSpecifier);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parseImportSpecifier(specifier,***REMOVED***importedIsString,***REMOVED***isInTypeOnlyImport,***REMOVED***isMaybeTypeOnly,***REMOVED***bindingType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.eatContextual(93))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.parseIdentifier();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***specifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importedIsString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.raise(Errors.ImportBindingIsString,***REMOVED***specifier,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importName:***REMOVED***imported.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.checkReservedWord(imported.name,***REMOVED***specifier.loc.start,***REMOVED***true,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!specifier.local)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local***REMOVED***=***REMOVED***this.cloneIdentifier(imported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.finishImportSpecifier(specifier,***REMOVED***"ImportSpecifier",***REMOVED***bindingType);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isThisParam(param)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***param.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***param.name***REMOVED***===***REMOVED***"this";
***REMOVED******REMOVED***}
}
class***REMOVED***Parser***REMOVED***extends***REMOVED***StatementParser***REMOVED***{
***REMOVED******REMOVED***constructor(options,***REMOVED***input,***REMOVED***pluginsMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***getOptions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***super(options,***REMOVED***input);
***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***this.initializeScopes();
***REMOVED******REMOVED******REMOVED******REMOVED***this.plugins***REMOVED***=***REMOVED***pluginsMap;
***REMOVED******REMOVED******REMOVED******REMOVED***this.filename***REMOVED***=***REMOVED***options.sourceFilename;
***REMOVED******REMOVED******REMOVED******REMOVED***this.startIndex***REMOVED***=***REMOVED***options.startIndex;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optionFlags***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowAwaitOutsideFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowReturnOutsideFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowImportExportEverywhere)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowSuperOutsideMethod)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowUndeclaredExports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***64;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowNewTargetOutsideFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowYieldOutsideFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***32;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.ranges)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***128;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.tokens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***256;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.createImportExpressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***512;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.createParenthesizedExpressions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***1024;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.errorRecovery)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***2048;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.attachComment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***4096;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.annexB)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionFlags***REMOVED***|=***REMOVED***8192;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.optionFlags***REMOVED***=***REMOVED***optionFlags;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getScopeHandler()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ScopeHandler;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parse()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.enterInitialScopes();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***file***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***program***REMOVED***=***REMOVED***this.startNode();
***REMOVED******REMOVED******REMOVED******REMOVED***this.nextToken();
***REMOVED******REMOVED******REMOVED******REMOVED***file.errors***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parseTopLevel(file,***REMOVED***program);
***REMOVED******REMOVED******REMOVED******REMOVED***file.errors***REMOVED***=***REMOVED***this.state.errors;
***REMOVED******REMOVED******REMOVED******REMOVED***file.comments.length***REMOVED***=***REMOVED***this.state.commentsLen;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***file;
***REMOVED******REMOVED***}
}
function***REMOVED***parse(input,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_options;
***REMOVED******REMOVED***if***REMOVED***(((_options***REMOVED***=***REMOVED***options)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_options.sourceType)***REMOVED***===***REMOVED***"unambiguous")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***Object.assign({},***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.sourceType***REMOVED***=***REMOVED***"module";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***getParser(options,***REMOVED***input);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ast***REMOVED***=***REMOVED***parser.parse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parser.sawUnambiguousESM)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ast;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parser.ambiguousScriptDifferentAst)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.sourceType***REMOVED***=***REMOVED***"script";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParser(options,***REMOVED***input).parse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(_unused)***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.program.sourceType***REMOVED***=***REMOVED***"script";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ast;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(moduleError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.sourceType***REMOVED***=***REMOVED***"script";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParser(options,***REMOVED***input).parse();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(_unused2)***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***moduleError;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParser(options,***REMOVED***input).parse();
***REMOVED******REMOVED***}
}
function***REMOVED***parseExpression(input,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***getParser(options,***REMOVED***input);
***REMOVED******REMOVED***if***REMOVED***(parser.options.strictMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parser.state.strict***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***parser.getExpression();
}
function***REMOVED***generateExportedTokenTypes(internalTokenTypes)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***tokenTypes***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***typeName***REMOVED***of***REMOVED***Object.keys(internalTokenTypes))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tokenTypes[typeName]***REMOVED***=***REMOVED***getExportedToken(internalTokenTypes[typeName]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***tokenTypes;
}
const***REMOVED***tokTypes***REMOVED***=***REMOVED***generateExportedTokenTypes(tt);
function***REMOVED***getParser(options,***REMOVED***input)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***cls***REMOVED***=***REMOVED***Parser;
***REMOVED******REMOVED***const***REMOVED***pluginsMap***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***options.plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***options.plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***name,***REMOVED***opts;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***plugin***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***plugin;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[name,***REMOVED***opts]***REMOVED***=***REMOVED***plugin;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!pluginsMap.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginsMap.set(name,***REMOVED***opts***REMOVED***||***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***validatePlugins(pluginsMap);
***REMOVED******REMOVED******REMOVED******REMOVED***cls***REMOVED***=***REMOVED***getParserClass(pluginsMap);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***cls(options,***REMOVED***input,***REMOVED***pluginsMap);
}
const***REMOVED***parserClassCache***REMOVED***=***REMOVED***new***REMOVED***Map();
function***REMOVED***getParserClass(pluginsMap)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***pluginList***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***mixinPluginNames)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pluginsMap.has(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginList.push(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***pluginList.join("|");
***REMOVED******REMOVED***let***REMOVED***cls***REMOVED***=***REMOVED***parserClassCache.get(key);
***REMOVED******REMOVED***if***REMOVED***(!cls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cls***REMOVED***=***REMOVED***Parser;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***plugin***REMOVED***of***REMOVED***pluginList)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cls***REMOVED***=***REMOVED***mixinPlugins[plugin](cls);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parserClassCache.set(key,***REMOVED***cls);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***cls;
}
exports.parse***REMOVED***=***REMOVED***parse;
exports.parseExpression***REMOVED***=***REMOVED***parseExpression;
exports.tokTypes***REMOVED***=***REMOVED***tokTypes;
//#***REMOVED***sourceMappingURL=index.js.map
