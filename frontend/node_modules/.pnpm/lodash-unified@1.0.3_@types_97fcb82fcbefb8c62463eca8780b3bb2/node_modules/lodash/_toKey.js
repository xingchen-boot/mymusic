var***REMOVED***isSymbol***REMOVED***=***REMOVED***require('./isSymbol');

/*****REMOVED***Used***REMOVED***as***REMOVED***references***REMOVED***for***REMOVED***various***REMOVED***`Number`***REMOVED***constants.***REMOVED****/
var***REMOVED***INFINITY***REMOVED***=***REMOVED***1***REMOVED***/***REMOVED***0;

/**
***REMOVED*******REMOVED***Converts***REMOVED***`value`***REMOVED***to***REMOVED***a***REMOVED***string***REMOVED***key***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***a***REMOVED***string***REMOVED***or***REMOVED***symbol.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@returns***REMOVED***{string|symbol}***REMOVED***Returns***REMOVED***the***REMOVED***key.
***REMOVED****/
function***REMOVED***toKey(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***==***REMOVED***'string'***REMOVED***||***REMOVED***isSymbol(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***(value***REMOVED***+***REMOVED***'');
***REMOVED******REMOVED***return***REMOVED***(result***REMOVED***==***REMOVED***'0'***REMOVED***&&***REMOVED***(1***REMOVED***/***REMOVED***value)***REMOVED***==***REMOVED***-INFINITY)***REMOVED***?***REMOVED***'-0'***REMOVED***:***REMOVED***result;
}

module.exports***REMOVED***=***REMOVED***toKey;
