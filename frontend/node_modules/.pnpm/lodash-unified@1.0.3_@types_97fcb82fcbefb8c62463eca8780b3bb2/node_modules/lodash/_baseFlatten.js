var***REMOVED***arrayPush***REMOVED***=***REMOVED***require('./_arrayPush'),
***REMOVED******REMOVED******REMOVED******REMOVED***isFlattenable***REMOVED***=***REMOVED***require('./_isFlattenable');

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.flatten`***REMOVED***with***REMOVED***support***REMOVED***for***REMOVED***restricting***REMOVED***flattening.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***flatten.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***depth***REMOVED***The***REMOVED***maximum***REMOVED***recursion***REMOVED***depth.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[predicate=isFlattenable]***REMOVED***The***REMOVED***function***REMOVED***invoked***REMOVED***per***REMOVED***iteration.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[isStrict]***REMOVED***Restrict***REMOVED***to***REMOVED***values***REMOVED***that***REMOVED***pass***REMOVED***`predicate`***REMOVED***checks.
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[result=[]]***REMOVED***The***REMOVED***initial***REMOVED***result***REMOVED***value.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***flattened***REMOVED***array.
***REMOVED****/
function***REMOVED***baseFlatten(array,***REMOVED***depth,***REMOVED***predicate,***REMOVED***isStrict,***REMOVED***result)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array.length;

***REMOVED******REMOVED***predicate***REMOVED***||***REMOVED***(predicate***REMOVED***=***REMOVED***isFlattenable);
***REMOVED******REMOVED***result***REMOVED***||***REMOVED***(result***REMOVED***=***REMOVED***[]);

***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***array[index];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(depth***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***predicate(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(depth***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Recursively***REMOVED***flatten***REMOVED***arrays***REMOVED***(susceptible***REMOVED***to***REMOVED***call***REMOVED***stack***REMOVED***limits).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseFlatten(value,***REMOVED***depth***REMOVED***-***REMOVED***1,***REMOVED***predicate,***REMOVED***isStrict,***REMOVED***result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrayPush(result,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isStrict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result[result.length]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

module.exports***REMOVED***=***REMOVED***baseFlatten;
