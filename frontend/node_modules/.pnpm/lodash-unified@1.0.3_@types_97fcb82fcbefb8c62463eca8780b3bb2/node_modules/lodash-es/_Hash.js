import***REMOVED***hashClear***REMOVED***from***REMOVED***'./_hashClear.js';
import***REMOVED***hashDelete***REMOVED***from***REMOVED***'./_hashDelete.js';
import***REMOVED***hashGet***REMOVED***from***REMOVED***'./_hashGet.js';
import***REMOVED***hashHas***REMOVED***from***REMOVED***'./_hashHas.js';
import***REMOVED***hashSet***REMOVED***from***REMOVED***'./_hashSet.js';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***hash***REMOVED***object.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@constructor
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[entries]***REMOVED***The***REMOVED***key-value***REMOVED***pairs***REMOVED***to***REMOVED***cache.
***REMOVED****/
function***REMOVED***Hash(entries)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***entries***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***entries.length;

***REMOVED******REMOVED***this.clear();
***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***entry***REMOVED***=***REMOVED***entries[index];
***REMOVED******REMOVED******REMOVED******REMOVED***this.set(entry[0],***REMOVED***entry[1]);
***REMOVED******REMOVED***}
}

//***REMOVED***Add***REMOVED***methods***REMOVED***to***REMOVED***`Hash`.
Hash.prototype.clear***REMOVED***=***REMOVED***hashClear;
Hash.prototype['delete']***REMOVED***=***REMOVED***hashDelete;
Hash.prototype.get***REMOVED***=***REMOVED***hashGet;
Hash.prototype.has***REMOVED***=***REMOVED***hashHas;
Hash.prototype.set***REMOVED***=***REMOVED***hashSet;

export***REMOVED***default***REMOVED***Hash;
