import***REMOVED***isFunction***REMOVED***from***REMOVED***'./isFunction.js';
import***REMOVED***isMasked***REMOVED***from***REMOVED***'./_isMasked.js';
import***REMOVED***isObject***REMOVED***from***REMOVED***'./isObject.js';
import***REMOVED***toSource***REMOVED***from***REMOVED***'./_toSource.js';

/**
***REMOVED*******REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***`RegExp`
***REMOVED*******REMOVED***[syntax***REMOVED***characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
***REMOVED****/
var***REMOVED***reRegExpChar***REMOVED***=***REMOVED***/[\\^$.*+?()[\]{}|]/g;

/*****REMOVED***Used***REMOVED***to***REMOVED***detect***REMOVED***host***REMOVED***constructors***REMOVED***(Safari).***REMOVED****/
var***REMOVED***reIsHostCtor***REMOVED***=***REMOVED***/^\[object***REMOVED***.+?Constructor\]$/;

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***funcProto***REMOVED***=***REMOVED***Function.prototype,
***REMOVED******REMOVED******REMOVED******REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/*****REMOVED***Used***REMOVED***to***REMOVED***resolve***REMOVED***the***REMOVED***decompiled***REMOVED***source***REMOVED***of***REMOVED***functions.***REMOVED****/
var***REMOVED***funcToString***REMOVED***=***REMOVED***funcProto.toString;

/*****REMOVED***Used***REMOVED***to***REMOVED***check***REMOVED***objects***REMOVED***for***REMOVED***own***REMOVED***properties.***REMOVED****/
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***objectProto.hasOwnProperty;

/*****REMOVED***Used***REMOVED***to***REMOVED***detect***REMOVED***if***REMOVED***a***REMOVED***method***REMOVED***is***REMOVED***native.***REMOVED****/
var***REMOVED***reIsNative***REMOVED***=***REMOVED***RegExp('^'***REMOVED***+
***REMOVED******REMOVED***funcToString.call(hasOwnProperty).replace(reRegExpChar,***REMOVED***'\\$&')
***REMOVED******REMOVED***.replace(/hasOwnProperty|(function).*?(?=\\\()|***REMOVED***for***REMOVED***.+?(?=\\\])/g,***REMOVED***'$1.*?')***REMOVED***+***REMOVED***'$'
);

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.isNative`***REMOVED***without***REMOVED***bad***REMOVED***shim***REMOVED***checks.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***native***REMOVED***function,
***REMOVED*******REMOVED******REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***baseIsNative(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isObject(value)***REMOVED***||***REMOVED***isMasked(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***pattern***REMOVED***=***REMOVED***isFunction(value)***REMOVED***?***REMOVED***reIsNative***REMOVED***:***REMOVED***reIsHostCtor;
***REMOVED******REMOVED***return***REMOVED***pattern.test(toSource(value));
}

export***REMOVED***default***REMOVED***baseIsNative;
