import***REMOVED***arrayPush***REMOVED***from***REMOVED***'./_arrayPush.js';
import***REMOVED***baseFlatten***REMOVED***from***REMOVED***'./_baseFlatten.js';
import***REMOVED***copyArray***REMOVED***from***REMOVED***'./_copyArray.js';
import***REMOVED***isArray***REMOVED***from***REMOVED***'./isArray.js';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***new***REMOVED***array***REMOVED***concatenating***REMOVED***`array`***REMOVED***with***REMOVED***any***REMOVED***additional***REMOVED***arrays
***REMOVED*******REMOVED***and/or***REMOVED***values.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***Array
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***concatenate.
***REMOVED*******REMOVED***@param***REMOVED***{...*}***REMOVED***[values]***REMOVED***The***REMOVED***values***REMOVED***to***REMOVED***concatenate.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***concatenated***REMOVED***array.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***array***REMOVED***=***REMOVED***[1];
***REMOVED*******REMOVED***var***REMOVED***other***REMOVED***=***REMOVED***_.concat(array,***REMOVED***2,***REMOVED***[3],***REMOVED***[[4]]);
***REMOVED****
***REMOVED*******REMOVED***console.log(other);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[1,***REMOVED***2,***REMOVED***3,***REMOVED***[4]]
***REMOVED****
***REMOVED*******REMOVED***console.log(array);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[1]
***REMOVED****/
function***REMOVED***concat()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***arguments.length;
***REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***args***REMOVED***=***REMOVED***Array(length***REMOVED***-***REMOVED***1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array***REMOVED***=***REMOVED***arguments[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***length;

***REMOVED******REMOVED***while***REMOVED***(index--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args[index***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[index];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***arrayPush(isArray(array)***REMOVED***?***REMOVED***copyArray(array)***REMOVED***:***REMOVED***[array],***REMOVED***baseFlatten(args,***REMOVED***1));
}

export***REMOVED***default***REMOVED***concat;
