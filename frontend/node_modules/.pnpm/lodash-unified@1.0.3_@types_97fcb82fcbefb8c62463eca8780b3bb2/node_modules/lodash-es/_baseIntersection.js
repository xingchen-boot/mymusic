import***REMOVED***SetCache***REMOVED***from***REMOVED***'./_SetCache.js';
import***REMOVED***arrayIncludes***REMOVED***from***REMOVED***'./_arrayIncludes.js';
import***REMOVED***arrayIncludesWith***REMOVED***from***REMOVED***'./_arrayIncludesWith.js';
import***REMOVED***arrayMap***REMOVED***from***REMOVED***'./_arrayMap.js';
import***REMOVED***baseUnary***REMOVED***from***REMOVED***'./_baseUnary.js';
import***REMOVED***cacheHas***REMOVED***from***REMOVED***'./_cacheHas.js';

/****REMOVED***Built-in***REMOVED***method***REMOVED***references***REMOVED***for***REMOVED***those***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***other***REMOVED***`lodash`***REMOVED***methods.***REMOVED****/
var***REMOVED***nativeMin***REMOVED***=***REMOVED***Math.min;

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***methods***REMOVED***like***REMOVED***`_.intersection`,***REMOVED***without***REMOVED***support
***REMOVED*******REMOVED***for***REMOVED***iteratee***REMOVED***shorthands,***REMOVED***that***REMOVED***accepts***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***arrays***REMOVED***to***REMOVED***inspect.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***arrays***REMOVED***The***REMOVED***arrays***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[iteratee]***REMOVED***The***REMOVED***iteratee***REMOVED***invoked***REMOVED***per***REMOVED***element.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[comparator]***REMOVED***The***REMOVED***comparator***REMOVED***invoked***REMOVED***per***REMOVED***element.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***array***REMOVED***of***REMOVED***shared***REMOVED***values.
***REMOVED****/
function***REMOVED***baseIntersection(arrays,***REMOVED***iteratee,***REMOVED***comparator)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***includes***REMOVED***=***REMOVED***comparator***REMOVED***?***REMOVED***arrayIncludesWith***REMOVED***:***REMOVED***arrayIncludes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***arrays[0].length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othLength***REMOVED***=***REMOVED***arrays.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othIndex***REMOVED***=***REMOVED***othLength,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***caches***REMOVED***=***REMOVED***Array(othLength),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxLength***REMOVED***=***REMOVED***Infinity,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***while***REMOVED***(othIndex--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***array***REMOVED***=***REMOVED***arrays[othIndex];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(othIndex***REMOVED***&&***REMOVED***iteratee)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array***REMOVED***=***REMOVED***arrayMap(array,***REMOVED***baseUnary(iteratee));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***maxLength***REMOVED***=***REMOVED***nativeMin(array.length,***REMOVED***maxLength);
***REMOVED******REMOVED******REMOVED******REMOVED***caches[othIndex]***REMOVED***=***REMOVED***!comparator***REMOVED***&&***REMOVED***(iteratee***REMOVED***||***REMOVED***(length***REMOVED***>=***REMOVED***120***REMOVED***&&***REMOVED***array.length***REMOVED***>=***REMOVED***120))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***new***REMOVED***SetCache(othIndex***REMOVED***&&***REMOVED***array)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***array***REMOVED***=***REMOVED***arrays[0];

***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seen***REMOVED***=***REMOVED***caches[0];

***REMOVED******REMOVED***outer:
***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length***REMOVED***&&***REMOVED***result.length***REMOVED***<***REMOVED***maxLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***array[index],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed***REMOVED***=***REMOVED***iteratee***REMOVED***?***REMOVED***iteratee(value)***REMOVED***:***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***(comparator***REMOVED***||***REMOVED***value***REMOVED***!==***REMOVED***0)***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(seen
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***cacheHas(seen,***REMOVED***computed)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***includes(result,***REMOVED***computed,***REMOVED***comparator)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othIndex***REMOVED***=***REMOVED***othLength;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(--othIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***caches[othIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(cache
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***cacheHas(cache,***REMOVED***computed)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***includes(arrays[othIndex],***REMOVED***computed,***REMOVED***comparator))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue***REMOVED***outer;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(seen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seen.push(computed);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

export***REMOVED***default***REMOVED***baseIntersection;
