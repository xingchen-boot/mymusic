import***REMOVED***baseGetTag***REMOVED***from***REMOVED***'./_baseGetTag.js';
import***REMOVED***getPrototype***REMOVED***from***REMOVED***'./_getPrototype.js';
import***REMOVED***isObjectLike***REMOVED***from***REMOVED***'./isObjectLike.js';

/*****REMOVED***`Object#toString`***REMOVED***result***REMOVED***references.***REMOVED****/
var***REMOVED***objectTag***REMOVED***=***REMOVED***'[object***REMOVED***Object]';

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***funcProto***REMOVED***=***REMOVED***Function.prototype,
***REMOVED******REMOVED******REMOVED******REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/*****REMOVED***Used***REMOVED***to***REMOVED***resolve***REMOVED***the***REMOVED***decompiled***REMOVED***source***REMOVED***of***REMOVED***functions.***REMOVED****/
var***REMOVED***funcToString***REMOVED***=***REMOVED***funcProto.toString;

/*****REMOVED***Used***REMOVED***to***REMOVED***check***REMOVED***objects***REMOVED***for***REMOVED***own***REMOVED***properties.***REMOVED****/
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***objectProto.hasOwnProperty;

/*****REMOVED***Used***REMOVED***to***REMOVED***infer***REMOVED***the***REMOVED***`Object`***REMOVED***constructor.***REMOVED****/
var***REMOVED***objectCtorString***REMOVED***=***REMOVED***funcToString.call(Object);

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***plain***REMOVED***object,***REMOVED***that***REMOVED***is,***REMOVED***an***REMOVED***object***REMOVED***created***REMOVED***by***REMOVED***the
***REMOVED*******REMOVED***`Object`***REMOVED***constructor***REMOVED***or***REMOVED***one***REMOVED***with***REMOVED***a***REMOVED***`[[Prototype]]`***REMOVED***of***REMOVED***`null`.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***0.8.0
***REMOVED*******REMOVED***@category***REMOVED***Lang
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***plain***REMOVED***object,***REMOVED***else***REMOVED***`false`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***function***REMOVED***Foo()***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***this.a***REMOVED***=***REMOVED***1;
***REMOVED*******REMOVED***}
***REMOVED****
***REMOVED*******REMOVED***_.isPlainObject(new***REMOVED***Foo);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****
***REMOVED*******REMOVED***_.isPlainObject([1,***REMOVED***2,***REMOVED***3]);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****
***REMOVED*******REMOVED***_.isPlainObject({***REMOVED***'x':***REMOVED***0,***REMOVED***'y':***REMOVED***0***REMOVED***});
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.isPlainObject(Object.create(null));
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****/
function***REMOVED***isPlainObject(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isObjectLike(value)***REMOVED***||***REMOVED***baseGetTag(value)***REMOVED***!=***REMOVED***objectTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***proto***REMOVED***=***REMOVED***getPrototype(value);
***REMOVED******REMOVED***if***REMOVED***(proto***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***Ctor***REMOVED***=***REMOVED***hasOwnProperty.call(proto,***REMOVED***'constructor')***REMOVED***&&***REMOVED***proto.constructor;
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***Ctor***REMOVED***==***REMOVED***'function'***REMOVED***&&***REMOVED***Ctor***REMOVED***instanceof***REMOVED***Ctor***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***funcToString.call(Ctor)***REMOVED***==***REMOVED***objectCtorString;
}

export***REMOVED***default***REMOVED***isPlainObject;
