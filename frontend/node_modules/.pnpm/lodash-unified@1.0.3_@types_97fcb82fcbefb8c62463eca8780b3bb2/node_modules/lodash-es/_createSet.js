import***REMOVED***Set***REMOVED***from***REMOVED***'./_Set.js';
import***REMOVED***noop***REMOVED***from***REMOVED***'./noop.js';
import***REMOVED***setToArray***REMOVED***from***REMOVED***'./_setToArray.js';

/*****REMOVED***Used***REMOVED***as***REMOVED***references***REMOVED***for***REMOVED***various***REMOVED***`Number`***REMOVED***constants.***REMOVED****/
var***REMOVED***INFINITY***REMOVED***=***REMOVED***1***REMOVED***/***REMOVED***0;

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***set***REMOVED***object***REMOVED***of***REMOVED***`values`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***values***REMOVED***The***REMOVED***values***REMOVED***to***REMOVED***add***REMOVED***to***REMOVED***the***REMOVED***set.
***REMOVED*******REMOVED***@returns***REMOVED***{Object}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***set.
***REMOVED****/
var***REMOVED***createSet***REMOVED***=***REMOVED***!(Set***REMOVED***&&***REMOVED***(1***REMOVED***/***REMOVED***setToArray(new***REMOVED***Set([,-0]))[1])***REMOVED***==***REMOVED***INFINITY)***REMOVED***?***REMOVED***noop***REMOVED***:***REMOVED***function(values)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Set(values);
};

export***REMOVED***default***REMOVED***createSet;
