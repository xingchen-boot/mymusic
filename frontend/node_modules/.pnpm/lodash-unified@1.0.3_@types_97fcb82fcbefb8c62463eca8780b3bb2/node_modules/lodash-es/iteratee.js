import***REMOVED***baseClone***REMOVED***from***REMOVED***'./_baseClone.js';
import***REMOVED***baseIteratee***REMOVED***from***REMOVED***'./_baseIteratee.js';

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***bitmasks***REMOVED***for***REMOVED***cloning.***REMOVED****/
var***REMOVED***CLONE_DEEP_FLAG***REMOVED***=***REMOVED***1;

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***invokes***REMOVED***`func`***REMOVED***with***REMOVED***the***REMOVED***arguments***REMOVED***of***REMOVED***the***REMOVED***created
***REMOVED*******REMOVED***function.***REMOVED***If***REMOVED***`func`***REMOVED***is***REMOVED***a***REMOVED***property***REMOVED***name,***REMOVED***the***REMOVED***created***REMOVED***function***REMOVED***returns***REMOVED***the
***REMOVED*******REMOVED***property***REMOVED***value***REMOVED***for***REMOVED***a***REMOVED***given***REMOVED***element.***REMOVED***If***REMOVED***`func`***REMOVED***is***REMOVED***an***REMOVED***array***REMOVED***or***REMOVED***object,***REMOVED***the
***REMOVED*******REMOVED***created***REMOVED***function***REMOVED***returns***REMOVED***`true`***REMOVED***for***REMOVED***elements***REMOVED***that***REMOVED***contain***REMOVED***the***REMOVED***equivalent
***REMOVED*******REMOVED***source***REMOVED***properties,***REMOVED***otherwise***REMOVED***it***REMOVED***returns***REMOVED***`false`.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@category***REMOVED***Util
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***[func=_.identity]***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***convert***REMOVED***to***REMOVED***a***REMOVED***callback.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***callback.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***users***REMOVED***=***REMOVED***[
***REMOVED*******REMOVED******REMOVED******REMOVED***{***REMOVED***'user':***REMOVED***'barney',***REMOVED***'age':***REMOVED***36,***REMOVED***'active':***REMOVED***true***REMOVED***},
***REMOVED*******REMOVED******REMOVED******REMOVED***{***REMOVED***'user':***REMOVED***'fred',***REMOVED******REMOVED******REMOVED***'age':***REMOVED***40,***REMOVED***'active':***REMOVED***false***REMOVED***}
***REMOVED*******REMOVED***];
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***The***REMOVED***`_.matches`***REMOVED***iteratee***REMOVED***shorthand.
***REMOVED*******REMOVED***_.filter(users,***REMOVED***_.iteratee({***REMOVED***'user':***REMOVED***'barney',***REMOVED***'active':***REMOVED***true***REMOVED***}));
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[{***REMOVED***'user':***REMOVED***'barney',***REMOVED***'age':***REMOVED***36,***REMOVED***'active':***REMOVED***true***REMOVED***}]
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***The***REMOVED***`_.matchesProperty`***REMOVED***iteratee***REMOVED***shorthand.
***REMOVED*******REMOVED***_.filter(users,***REMOVED***_.iteratee(['user',***REMOVED***'fred']));
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[{***REMOVED***'user':***REMOVED***'fred',***REMOVED***'age':***REMOVED***40***REMOVED***}]
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***The***REMOVED***`_.property`***REMOVED***iteratee***REMOVED***shorthand.
***REMOVED*******REMOVED***_.map(users,***REMOVED***_.iteratee('user'));
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['barney',***REMOVED***'fred']
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***Create***REMOVED***custom***REMOVED***iteratee***REMOVED***shorthands.
***REMOVED*******REMOVED***_.iteratee***REMOVED***=***REMOVED***_.wrap(_.iteratee,***REMOVED***function(iteratee,***REMOVED***func)***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***return***REMOVED***!_.isRegExp(func)***REMOVED***?***REMOVED***iteratee(func)***REMOVED***:***REMOVED***function(string)***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func.test(string);
***REMOVED*******REMOVED******REMOVED******REMOVED***};
***REMOVED*******REMOVED***});
***REMOVED****
***REMOVED*******REMOVED***_.filter(['abc',***REMOVED***'def'],***REMOVED***/ef/);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['def']
***REMOVED****/
function***REMOVED***iteratee(func)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***baseIteratee(typeof***REMOVED***func***REMOVED***==***REMOVED***'function'***REMOVED***?***REMOVED***func***REMOVED***:***REMOVED***baseClone(func,***REMOVED***CLONE_DEEP_FLAG));
}

export***REMOVED***default***REMOVED***iteratee;
