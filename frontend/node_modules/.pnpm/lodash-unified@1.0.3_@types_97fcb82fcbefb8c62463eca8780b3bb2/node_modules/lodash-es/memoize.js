import***REMOVED***MapCache***REMOVED***from***REMOVED***'./_MapCache.js';

/*****REMOVED***Error***REMOVED***message***REMOVED***constants.***REMOVED****/
var***REMOVED***FUNC_ERROR_TEXT***REMOVED***=***REMOVED***'Expected***REMOVED***a***REMOVED***function';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***memoizes***REMOVED***the***REMOVED***result***REMOVED***of***REMOVED***`func`.***REMOVED***If***REMOVED***`resolver`***REMOVED***is
***REMOVED*******REMOVED***provided,***REMOVED***it***REMOVED***determines***REMOVED***the***REMOVED***cache***REMOVED***key***REMOVED***for***REMOVED***storing***REMOVED***the***REMOVED***result***REMOVED***based***REMOVED***on***REMOVED***the
***REMOVED*******REMOVED***arguments***REMOVED***provided***REMOVED***to***REMOVED***the***REMOVED***memoized***REMOVED***function.***REMOVED***By***REMOVED***default,***REMOVED***the***REMOVED***first***REMOVED***argument
***REMOVED*******REMOVED***provided***REMOVED***to***REMOVED***the***REMOVED***memoized***REMOVED***function***REMOVED***is***REMOVED***used***REMOVED***as***REMOVED***the***REMOVED***map***REMOVED***cache***REMOVED***key.***REMOVED***The***REMOVED***`func`
***REMOVED*******REMOVED***is***REMOVED***invoked***REMOVED***with***REMOVED***the***REMOVED***`this`***REMOVED***binding***REMOVED***of***REMOVED***the***REMOVED***memoized***REMOVED***function.
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***The***REMOVED***cache***REMOVED***is***REMOVED***exposed***REMOVED***as***REMOVED***the***REMOVED***`cache`***REMOVED***property***REMOVED***on***REMOVED***the***REMOVED***memoized
***REMOVED*******REMOVED***function.***REMOVED***Its***REMOVED***creation***REMOVED***may***REMOVED***be***REMOVED***customized***REMOVED***by***REMOVED***replacing***REMOVED***the***REMOVED***`_.memoize.Cache`
***REMOVED*******REMOVED***constructor***REMOVED***with***REMOVED***one***REMOVED***whose***REMOVED***instances***REMOVED***implement***REMOVED***the
***REMOVED*******REMOVED***[`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
***REMOVED*******REMOVED***method***REMOVED***interface***REMOVED***of***REMOVED***`clear`,***REMOVED***`delete`,***REMOVED***`get`,***REMOVED***`has`,***REMOVED***and***REMOVED***`set`.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***0.1.0
***REMOVED*******REMOVED***@category***REMOVED***Function
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***have***REMOVED***its***REMOVED***output***REMOVED***memoized.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[resolver]***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***resolve***REMOVED***the***REMOVED***cache***REMOVED***key.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***memoized***REMOVED***function.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***object***REMOVED***=***REMOVED***{***REMOVED***'a':***REMOVED***1,***REMOVED***'b':***REMOVED***2***REMOVED***};
***REMOVED*******REMOVED***var***REMOVED***other***REMOVED***=***REMOVED***{***REMOVED***'c':***REMOVED***3,***REMOVED***'d':***REMOVED***4***REMOVED***};
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***values***REMOVED***=***REMOVED***_.memoize(_.values);
***REMOVED*******REMOVED***values(object);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[1,***REMOVED***2]
***REMOVED****
***REMOVED*******REMOVED***values(other);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[3,***REMOVED***4]
***REMOVED****
***REMOVED*******REMOVED***object.a***REMOVED***=***REMOVED***2;
***REMOVED*******REMOVED***values(object);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[1,***REMOVED***2]
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***Modify***REMOVED***the***REMOVED***result***REMOVED***cache.
***REMOVED*******REMOVED***values.cache.set(object,***REMOVED***['a',***REMOVED***'b']);
***REMOVED*******REMOVED***values(object);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['a',***REMOVED***'b']
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***Replace***REMOVED***`_.memoize.Cache`.
***REMOVED*******REMOVED***_.memoize.Cache***REMOVED***=***REMOVED***WeakMap;
***REMOVED****/
function***REMOVED***memoize(func,***REMOVED***resolver)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***func***REMOVED***!=***REMOVED***'function'***REMOVED***||***REMOVED***(resolver***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***resolver***REMOVED***!=***REMOVED***'function'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(FUNC_ERROR_TEXT);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***memoized***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***args***REMOVED***=***REMOVED***arguments,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***resolver***REMOVED***?***REMOVED***resolver.apply(this,***REMOVED***args)***REMOVED***:***REMOVED***args[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache***REMOVED***=***REMOVED***memoized.cache;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache.has(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cache.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***func.apply(this,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***memoized.cache***REMOVED***=***REMOVED***cache.set(key,***REMOVED***result)***REMOVED***||***REMOVED***cache;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***memoized.cache***REMOVED***=***REMOVED***new***REMOVED***(memoize.Cache***REMOVED***||***REMOVED***MapCache);
***REMOVED******REMOVED***return***REMOVED***memoized;
}

//***REMOVED***Expose***REMOVED***`MapCache`.
memoize.Cache***REMOVED***=***REMOVED***MapCache;

export***REMOVED***default***REMOVED***memoize;
