/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.conformsTo`***REMOVED***which***REMOVED***accepts***REMOVED***`props`***REMOVED***to***REMOVED***check.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***source***REMOVED***The***REMOVED***object***REMOVED***of***REMOVED***property***REMOVED***predicates***REMOVED***to***REMOVED***conform***REMOVED***to.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`object`***REMOVED***conforms,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***baseConformsTo(object,***REMOVED***source,***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***props.length;
***REMOVED******REMOVED***if***REMOVED***(object***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!length;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***object***REMOVED***=***REMOVED***Object(object);
***REMOVED******REMOVED***while***REMOVED***(length--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***props[length],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***predicate***REMOVED***=***REMOVED***source[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***object[key];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((value***REMOVED***===***REMOVED***undefined***REMOVED***&&***REMOVED***!(key***REMOVED***in***REMOVED***object))***REMOVED***||***REMOVED***!predicate(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}

export***REMOVED***default***REMOVED***baseConformsTo;
