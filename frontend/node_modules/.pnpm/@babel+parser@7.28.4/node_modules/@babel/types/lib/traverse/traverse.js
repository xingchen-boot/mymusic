"use***REMOVED***strict";

Object.defineProperty(exports,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
exports.default***REMOVED***=***REMOVED***traverse;
var***REMOVED***_index***REMOVED***=***REMOVED***require("../definitions/index.js");
function***REMOVED***traverse(node,***REMOVED***handlers,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***handlers***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enter:***REMOVED***handlers
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enter,
***REMOVED******REMOVED******REMOVED******REMOVED***exit
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***handlers;
***REMOVED******REMOVED***traverseSimpleImpl(node,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***[]);
}
function***REMOVED***traverseSimpleImpl(node,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***ancestors)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***_index.VISITOR_KEYS[node.type];
***REMOVED******REMOVED***if***REMOVED***(!keys)***REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(enter)***REMOVED***enter(node,***REMOVED***ancestors,***REMOVED***state);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subNode***REMOVED***=***REMOVED***node[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(subNode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***subNode.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***subNode[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!child)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***i
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseSimpleImpl(child,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***ancestors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(subNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseSimpleImpl(subNode,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***ancestors);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(exit)***REMOVED***exit(node,***REMOVED***ancestors,***REMOVED***state);
}

//#***REMOVED***sourceMappingURL=traverse.js.map
