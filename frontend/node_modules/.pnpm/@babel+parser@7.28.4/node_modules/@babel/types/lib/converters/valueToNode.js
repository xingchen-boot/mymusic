"use***REMOVED***strict";

Object.defineProperty(exports,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
exports.default***REMOVED***=***REMOVED***void***REMOVED***0;
var***REMOVED***_isValidIdentifier***REMOVED***=***REMOVED***require("../validators/isValidIdentifier.js");
var***REMOVED***_index***REMOVED***=***REMOVED***require("../builders/generated/index.js");
var***REMOVED***_default***REMOVED***=***REMOVED***exports.default***REMOVED***=***REMOVED***valueToNode;
const***REMOVED***objectToString***REMOVED***=***REMOVED***Function.call.bind(Object.prototype.toString);
function***REMOVED***isRegExp(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***objectToString(value)***REMOVED***===***REMOVED***"[object***REMOVED***RegExp]";
}
function***REMOVED***isPlainObject(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***"object"***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***Object.prototype.toString.call(value)***REMOVED***!==***REMOVED***"[object***REMOVED***Object]")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***proto***REMOVED***=***REMOVED***Object.getPrototypeOf(value);
***REMOVED******REMOVED***return***REMOVED***proto***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***Object.getPrototypeOf(proto)***REMOVED***===***REMOVED***null;
}
function***REMOVED***valueToNode(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.identifier)("undefined");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.booleanLiteral)(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.nullLiteral)();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.stringLiteral)(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Number.isFinite(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***(0,***REMOVED***_index.numericLiteral)(Math.abs(value));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***numerator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Number.isNaN(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***numerator***REMOVED***=***REMOVED***(0,***REMOVED***_index.numericLiteral)(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***numerator***REMOVED***=***REMOVED***(0,***REMOVED***_index.numericLiteral)(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***(0,***REMOVED***_index.binaryExpression)("/",***REMOVED***numerator,***REMOVED***(0,***REMOVED***_index.numericLiteral)(0));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***Object.is(value,***REMOVED***-0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***(0,***REMOVED***_index.unaryExpression)("-",***REMOVED***result);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"bigint")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.unaryExpression)("-",***REMOVED***(0,***REMOVED***_index.bigIntLiteral)(-value));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.bigIntLiteral)(value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isRegExp(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***value.source;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***/\/([a-z]*)$/.exec(value.toString())[1];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.regExpLiteral)(pattern,***REMOVED***flags);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.arrayExpression)(value.map(valueToNode));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isPlainObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nodeKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_isValidIdentifier.default)(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__proto__")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeKey***REMOVED***=***REMOVED***(0,***REMOVED***_index.stringLiteral)(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeKey***REMOVED***=***REMOVED***(0,***REMOVED***_index.identifier)(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeKey***REMOVED***=***REMOVED***(0,***REMOVED***_index.stringLiteral)(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props.push((0,***REMOVED***_index.objectProperty)(nodeKey,***REMOVED***valueToNode(value[key]),***REMOVED***computed));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index.objectExpression)(props);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("don't***REMOVED***know***REMOVED***how***REMOVED***to***REMOVED***turn***REMOVED***this***REMOVED***value***REMOVED***into***REMOVED***a***REMOVED***node");
}

//#***REMOVED***sourceMappingURL=valueToNode.js.map
