"use***REMOVED***strict";

Object.defineProperty(exports,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
exports.default***REMOVED***=***REMOVED***gatherSequenceExpressions;
var***REMOVED***_getBindingIdentifiers***REMOVED***=***REMOVED***require("../retrievers/getBindingIdentifiers.js");
var***REMOVED***_index***REMOVED***=***REMOVED***require("../validators/generated/index.js");
var***REMOVED***_index2***REMOVED***=***REMOVED***require("../builders/generated/index.js");
var***REMOVED***_productions***REMOVED***=***REMOVED***require("../builders/productions.js");
var***REMOVED***_cloneNode***REMOVED***=***REMOVED***require("../clone/cloneNode.js");
;
function***REMOVED***gatherSequenceExpressions(nodes,***REMOVED***declars)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***exprs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***nodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(0,***REMOVED***_index.isEmptyStatement)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_index.isExpression)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((0,***REMOVED***_index.isExpressionStatement)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(node.expression);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((0,***REMOVED***_index.isVariableDeclaration)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.kind***REMOVED***!==***REMOVED***"var")***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declar***REMOVED***of***REMOVED***node.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bindings***REMOVED***=***REMOVED***(0,***REMOVED***_getBindingIdentifiers.default)(declar);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(bindings))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declars.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***node.kind,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***(0,***REMOVED***_cloneNode.default)(bindings[key])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declar.init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push((0,***REMOVED***_index2.assignmentExpression)("=",***REMOVED***declar.id,***REMOVED***declar.init));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((0,***REMOVED***_index.isIfStatement)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consequent***REMOVED***=***REMOVED***node.consequent***REMOVED***?***REMOVED***gatherSequenceExpressions([node.consequent],***REMOVED***declars)***REMOVED***:***REMOVED***(0,***REMOVED***_productions.buildUndefinedNode)();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alternate***REMOVED***=***REMOVED***node.alternate***REMOVED***?***REMOVED***gatherSequenceExpressions([node.alternate],***REMOVED***declars)***REMOVED***:***REMOVED***(0,***REMOVED***_productions.buildUndefinedNode)();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!consequent***REMOVED***||***REMOVED***!alternate)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push((0,***REMOVED***_index2.conditionalExpression)(node.test,***REMOVED***consequent,***REMOVED***alternate));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((0,***REMOVED***_index.isBlockStatement)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***gatherSequenceExpressions(node.body,***REMOVED***declars);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!body)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(body);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((0,***REMOVED***_index.isEmptyStatement)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodes.indexOf(node)***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ensureLastUndefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***exprs.push((0,***REMOVED***_productions.buildUndefinedNode)());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(exprs.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exprs[0];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_index2.sequenceExpression)(exprs);
***REMOVED******REMOVED***}
}

//#***REMOVED***sourceMappingURL=gatherSequenceExpressions.js.map
