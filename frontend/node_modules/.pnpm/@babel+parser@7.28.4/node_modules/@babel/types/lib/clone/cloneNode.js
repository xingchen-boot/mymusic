"use***REMOVED***strict";

Object.defineProperty(exports,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
exports.default***REMOVED***=***REMOVED***cloneNode;
var***REMOVED***_index***REMOVED***=***REMOVED***require("../definitions/index.js");
var***REMOVED***_index2***REMOVED***=***REMOVED***require("../validators/generated/index.js");
const***REMOVED***{
***REMOVED******REMOVED***hasOwn
}***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***hasOwn:***REMOVED***Function.call.bind(Object.prototype.hasOwnProperty)
};
function***REMOVED***cloneIfNode(obj,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***typeof***REMOVED***obj.type***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloneNodeInternal(obj,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***obj;
}
function***REMOVED***cloneIfNodeOrArray(obj,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(obj))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***obj.map(node***REMOVED***=>***REMOVED***cloneIfNode(node,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***cloneIfNode(obj,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache);
}
function***REMOVED***cloneNode(node,***REMOVED***deep***REMOVED***=***REMOVED***true,***REMOVED***withoutLoc***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***cloneNodeInternal(node,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***new***REMOVED***Map());
}
function***REMOVED***cloneNodeInternal(node,***REMOVED***deep***REMOVED***=***REMOVED***true,***REMOVED***withoutLoc***REMOVED***=***REMOVED***false,***REMOVED***commentsCache)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED***const***REMOVED***newNode***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***node.type
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_index2.isIdentifier)(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newNode.name***REMOVED***=***REMOVED***node.name;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"optional")***REMOVED***&&***REMOVED***typeof***REMOVED***node.optional***REMOVED***===***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.optional***REMOVED***=***REMOVED***node.optional;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"typeAnnotation"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.typeAnnotation***REMOVED***=***REMOVED***deep***REMOVED***?***REMOVED***cloneIfNodeOrArray(node.typeAnnotation,***REMOVED***true,***REMOVED***withoutLoc,***REMOVED***commentsCache)***REMOVED***:***REMOVED***node.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.decorators***REMOVED***=***REMOVED***deep***REMOVED***?***REMOVED***cloneIfNodeOrArray(node.decorators,***REMOVED***true,***REMOVED***withoutLoc,***REMOVED***commentsCache)***REMOVED***:***REMOVED***node.decorators;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!hasOwn(_index.NODE_FIELDS,***REMOVED***type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Unknown***REMOVED***node***REMOVED***type:***REMOVED***"${type}"`);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***field***REMOVED***of***REMOVED***Object.keys(_index.NODE_FIELDS[type]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***field))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode[field]***REMOVED***=***REMOVED***(0,***REMOVED***_index2.isFile)(node)***REMOVED***&&***REMOVED***field***REMOVED***===***REMOVED***"comments"***REMOVED***?***REMOVED***maybeCloneComments(node.comments,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache)***REMOVED***:***REMOVED***cloneIfNodeOrArray(node[field],***REMOVED***true,***REMOVED***withoutLoc,***REMOVED***commentsCache);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode[field]***REMOVED***=***REMOVED***node[field];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"loc"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(withoutLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.loc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNode.loc***REMOVED***=***REMOVED***node.loc;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"leadingComments"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newNode.leadingComments***REMOVED***=***REMOVED***maybeCloneComments(node.leadingComments,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"innerComments"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newNode.innerComments***REMOVED***=***REMOVED***maybeCloneComments(node.innerComments,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"trailingComments"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newNode.trailingComments***REMOVED***=***REMOVED***maybeCloneComments(node.trailingComments,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasOwn(node,***REMOVED***"extra"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newNode.extra***REMOVED***=***REMOVED***Object.assign({},***REMOVED***node.extra);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***newNode;
}
function***REMOVED***maybeCloneComments(comments,***REMOVED***deep,***REMOVED***withoutLoc,***REMOVED***commentsCache)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!comments***REMOVED***||***REMOVED***!deep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***comments;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***comments.map(comment***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***commentsCache.get(comment);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache)***REMOVED***return***REMOVED***cache;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***comment;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(withoutLoc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret.loc***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***commentsCache.set(comment,***REMOVED***ret);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
***REMOVED******REMOVED***});
}

//#***REMOVED***sourceMappingURL=cloneNode.js.map
