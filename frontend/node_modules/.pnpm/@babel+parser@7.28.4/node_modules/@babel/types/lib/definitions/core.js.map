{"version":3,"names":["_is","require","_isValidIdentifier","_helperValidatorIdentifier","_helperStringParser","_index","_utils","defineType","defineAliasedType","fields","elements","validate","arrayOf","assertNodeOrValueType","default","process","env","BABEL_TYPES_8_BREAKING","undefined","visitor","aliases","operator","assertValueType","Object","assign","identifier","assertOneOf","ASSIGNMENT_OPERATORS","pattern","node","key","val","validator","is","left","oneOf","assertNodeType","right","builder","BINARY_OPERATORS","expression","inOp","oneOfNodeTypes","value","directives","arrayOfType","body","validateArrayOfType","label","optional","callee","arguments","typeArguments","typeParameters","param","test","consequent","alternate","program","comments","each","assertEach","tokens","type","init","update","functionCommon","params","generator","async","exports","functionTypeAnnotationCommon","returnType","functionDeclarationCommon","declare","id","predicate","parent","inherits","patternLikeCommon","typeAnnotation","decorators","name","chain","isValidIdentifier","TypeError","match","exec","toString","parentKey","nonComp","computed","imported","meta","isKeyword","isReservedWord","deprecatedAlias","Number","isFinite","error","Error","flags","invalid","LOGICAL_OPERATORS","object","property","normal","sourceType","interpreter","properties","kind","shorthand","argument","listKey","index","length","expressions","discriminant","cases","block","handler","finalizer","prefix","UNARY_OPERATORS","UPDATE_OPERATORS","declarations","withoutInit","constOrLetOrVar","usingOrAwaitUsing","parentIsForX","decl","definite","superClass","implements","mixins","abstract","importAttributes","attributes","assertions","deprecated","source","exportKind","validateOptional","declaration","validateType","specifiers","sourced","sourceless","local","exported","lval","await","module","phase","importKind","options","classMethodOrPropertyCommon","accessibility","static","override","classMethodOrDeclareMethodCommon","access","tag","quasi","assertShape","raw","cooked","templateElementCookedValidator","unterminatedCalled","str","firstInvalidLoc","readStringContents","unterminated","strictNumericEscape","invalidEscapeSequence","numericSeparatorInEscapeSequence","unexpectedNumericSeparator","invalidDigit","invalidCodePoint","tail","quasis","delegate","assertOptionalChainStart","readonly","variance"],"sources":["../../src/definitions/core.ts"],"sourcesContent":["import***REMOVED***is***REMOVED***from***REMOVED***\"../validators/is.ts\";\nimport***REMOVED***isValidIdentifier***REMOVED***from***REMOVED***\"../validators/isValidIdentifier.ts\";\nimport***REMOVED***{***REMOVED***isKeyword,***REMOVED***isReservedWord***REMOVED***}***REMOVED***from***REMOVED***\"@babel/helper-validator-identifier\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\nimport***REMOVED***{***REMOVED***readStringContents***REMOVED***}***REMOVED***from***REMOVED***\"@babel/helper-string-parser\";\n\nimport***REMOVED***{\n***REMOVED******REMOVED***BINARY_OPERATORS,\n***REMOVED******REMOVED***LOGICAL_OPERATORS,\n***REMOVED******REMOVED***ASSIGNMENT_OPERATORS,\n***REMOVED******REMOVED***UNARY_OPERATORS,\n***REMOVED******REMOVED***UPDATE_OPERATORS,\n}***REMOVED***from***REMOVED***\"../constants/index.ts\";\n\nimport***REMOVED***{\n***REMOVED******REMOVED***defineAliasedType,\n***REMOVED******REMOVED***assertShape,\n***REMOVED******REMOVED***assertOptionalChainStart,\n***REMOVED******REMOVED***assertValueType,\n***REMOVED******REMOVED***assertNodeType,\n***REMOVED******REMOVED***assertNodeOrValueType,\n***REMOVED******REMOVED***assertEach,\n***REMOVED******REMOVED***chain,\n***REMOVED******REMOVED***assertOneOf,\n***REMOVED******REMOVED***validateOptional,\n***REMOVED******REMOVED***type***REMOVED***Validator,\n***REMOVED******REMOVED***arrayOf,\n***REMOVED******REMOVED***arrayOfType,\n***REMOVED******REMOVED***validateArrayOfType,\n***REMOVED******REMOVED***validateType,\n}***REMOVED***from***REMOVED***\"./utils.ts\";\n\nconst***REMOVED***defineType***REMOVED***=***REMOVED***defineAliasedType(\"Standardized\");\n\ndefineType(\"ArrayExpression\",***REMOVED***{\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOf(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeOrValueType(\"null\",***REMOVED***\"Expression\",***REMOVED***\"SpreadElement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***visitor:***REMOVED***[\"elements\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"AssignmentExpression\",***REMOVED***{\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertValueType(\"string\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***assertOneOf(...ASSIGNMENT_OPERATORS);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***assertOneOf(\"=\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(node:***REMOVED***t.AssignmentExpression,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***is(\"Pattern\",***REMOVED***node.left)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***pattern\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***identifier;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***oneOf:***REMOVED***ASSIGNMENT_OPERATORS***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"LVal\",***REMOVED***\"OptionalMemberExpression\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"OptionalMemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***builder:***REMOVED***[\"operator\",***REMOVED***\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"BinaryExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"operator\",***REMOVED***\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(...BINARY_OPERATORS),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inOp***REMOVED***=***REMOVED***assertNodeType(\"Expression\",***REMOVED***\"PrivateName\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator:***REMOVED***Validator***REMOVED***=***REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.BinaryExpression,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.operator***REMOVED***===***REMOVED***\"in\"***REMOVED***?***REMOVED***inOp***REMOVED***:***REMOVED***expression;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***todo(ts):***REMOVED***can***REMOVED***be***REMOVED***discriminated***REMOVED***union***REMOVED***by***REMOVED***`operator`***REMOVED***property\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***[\"Expression\",***REMOVED***\"PrivateName\"]***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***visitor:***REMOVED***[\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Binary\",***REMOVED***\"Expression\"],\n});\n\ndefineType(\"InterpreterDirective\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"Directive\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"DirectiveLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"DirectiveLiteral\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"BlockStatement\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"body\",***REMOVED***\"directives\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"directives\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Directive\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[],\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***validateArrayOfType(\"Statement\"),\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"BlockParent\",***REMOVED***\"Block\",***REMOVED***\"Statement\"],\n});\n\ndefineType(\"BreakStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"label\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Terminatorless\",***REMOVED***\"CompletionStatement\"],\n});\n\ndefineType(\"CallExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"callee\",***REMOVED***\"typeArguments\",***REMOVED***\"arguments\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"callee\",***REMOVED***\"typeParameters\",***REMOVED***\"typeArguments\",***REMOVED***\"arguments\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"callee\",***REMOVED***\"arguments\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\",***REMOVED***\"Super\",***REMOVED***\"V8IntrinsicIdentifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***validateArrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"SpreadElement\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArgumentPlaceholder\",\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***typeArguments:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\"TypeParameterInstantiation\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***...(process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"TSTypeParameterInstantiation\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"CatchClause\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"param\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***param:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"ArrayPattern\",***REMOVED***\"ObjectPattern\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"BlockParent\"],\n});\n\ndefineType(\"ConditionalExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"test\",***REMOVED***\"consequent\",***REMOVED***\"alternate\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Conditional\"],\n});\n\ndefineType(\"ContinueStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"label\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Terminatorless\",***REMOVED***\"CompletionStatement\"],\n});\n\ndefineType(\"DebuggerStatement\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\"],\n});\n\ndefineType(\"DoWhileStatement\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"test\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"body\",***REMOVED***\"test\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"BlockParent\",***REMOVED***\"Loop\",***REMOVED***\"While\",***REMOVED***\"Scopable\"],\n});\n\ndefineType(\"EmptyStatement\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\"],\n});\n\ndefineType(\"ExpressionStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"ExpressionWrapper\"],\n});\n\ndefineType(\"File\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"program\",***REMOVED***\"comments\",***REMOVED***\"tokens\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"program\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***program:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Program\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***comments:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***Object.assign(()***REMOVED***=>***REMOVED***{},***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***each:***REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***[\"CommentBlock\",***REMOVED***\"CommentLine\"]***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertEach(assertNodeType(\"CommentBlock\",***REMOVED***\"CommentLine\")),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***tokens:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***todo(ts):***REMOVED***add***REMOVED***Token***REMOVED***type\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertEach(Object.assign(()***REMOVED***=>***REMOVED***{},***REMOVED***{***REMOVED***type:***REMOVED***\"any\"***REMOVED***})),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ForInStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"left\",***REMOVED***\"right\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Statement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"For\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Loop\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ForXStatement\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"VariableDeclaration\",***REMOVED***\"LVal\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"VariableDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ForStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"init\",***REMOVED***\"test\",***REMOVED***\"update\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"Statement\",***REMOVED***\"For\",***REMOVED***\"BlockParent\",***REMOVED***\"Loop\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***init:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"VariableDeclaration\",***REMOVED***\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***update:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\nexport***REMOVED***const***REMOVED***functionCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({\n***REMOVED******REMOVED***params:***REMOVED***validateArrayOfType(\"FunctionParameter\"),\n***REMOVED******REMOVED***generator:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***async:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED***},\n});\n\nexport***REMOVED***const***REMOVED***functionTypeAnnotationCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({\n***REMOVED******REMOVED***returnType:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"TypeAnnotation\",***REMOVED***\"TSTypeAnnotation\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***typeParameters:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"TypeParameterDeclaration\",***REMOVED***\"TSTypeParameterDeclaration\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n});\n\nexport***REMOVED***const***REMOVED***functionDeclarationCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({\n***REMOVED******REMOVED***...functionCommon(),\n***REMOVED******REMOVED***declare:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***id:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,***REMOVED***//***REMOVED***May***REMOVED***be***REMOVED***null***REMOVED***for***REMOVED***`export***REMOVED***default***REMOVED***function`\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"FunctionDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"id\",***REMOVED***\"params\",***REMOVED***\"body\",***REMOVED***\"generator\",***REMOVED***\"async\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"id\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeParameters\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"params\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"predicate\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"returnType\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"body\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionDeclarationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionTypeAnnotationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***predicate:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"DeclaredPredicate\",***REMOVED***\"InferredPredicate\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Function\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Statement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Pureish\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Declaration\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***undefined\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***assertNodeType(\"Identifier\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!is(\"ExportDefaultDeclaration\",***REMOVED***parent))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifier(node,***REMOVED***\"id\",***REMOVED***node.id);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n});\n\ndefineType(\"FunctionExpression\",***REMOVED***{\n***REMOVED******REMOVED***inherits:***REMOVED***\"FunctionDeclaration\",\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Function\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Pureish\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionTypeAnnotationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***predicate:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"DeclaredPredicate\",***REMOVED***\"InferredPredicate\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\nexport***REMOVED***const***REMOVED***patternLikeCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({\n***REMOVED******REMOVED***typeAnnotation:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"TypeAnnotation\",***REMOVED***\"TSTypeAnnotation\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"Identifier\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"name\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"typeAnnotation\",***REMOVED***\"decorators\"***REMOVED***/****REMOVED***for***REMOVED***legacy***REMOVED***param***REMOVED***decorators***REMOVED****/],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionParameter\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"PatternLike\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"LVal\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"TSEntityName\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...patternLikeCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isValidIdentifier(val,***REMOVED***false))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`\"${val}\"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***identifier***REMOVED***name`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***type:***REMOVED***\"string\"***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/\\.(\\w+)$/.exec(key.toString());\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***return;\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***parentKey]***REMOVED***=***REMOVED***match;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonComp***REMOVED***=***REMOVED***{***REMOVED***computed:***REMOVED***false***REMOVED***};\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***can't***REMOVED***check***REMOVED***if***REMOVED***`parent.property***REMOVED***===***REMOVED***node`,***REMOVED***because***REMOVED***nodes***REMOVED***are***REMOVED***validated\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***before***REMOVED***replacing***REMOVED***them***REMOVED***in***REMOVED***the***REMOVED***AST.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***\"property\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"MemberExpression\",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"OptionalMemberExpression\",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***\"key\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"Property\",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"Method\",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***\"exported\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"ExportSpecifier\",***REMOVED***parent))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***\"imported\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"ImportSpecifier\",***REMOVED***parent,***REMOVED***{***REMOVED***imported:***REMOVED***node***REMOVED***}))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***\"meta\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"MetaProperty\",***REMOVED***parent,***REMOVED***{***REMOVED***meta:***REMOVED***node***REMOVED***}))***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ideally***REMOVED***we***REMOVED***should***REMOVED***call***REMOVED***isStrictReservedWord***REMOVED***if***REMOVED***this***REMOVED***node***REMOVED***is***REMOVED***a***REMOVED***descendant\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***of***REMOVED***a***REMOVED***block***REMOVED***in***REMOVED***strict***REMOVED***mode.***REMOVED***Also,***REMOVED***we***REMOVED***should***REMOVED***pass***REMOVED***the***REMOVED***inModule***REMOVED***option***REMOVED***so\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***can***REMOVED***disable***REMOVED***\"await\"***REMOVED***in***REMOVED***module.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(isKeyword(node.name)***REMOVED***||***REMOVED***isReservedWord(node.name,***REMOVED***false))***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Even***REMOVED***if***REMOVED***\"this\"***REMOVED***is***REMOVED***a***REMOVED***keyword,***REMOVED***we***REMOVED***are***REMOVED***using***REMOVED***the***REMOVED***Identifier\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***node***REMOVED***to***REMOVED***represent***REMOVED***it.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.name***REMOVED***!==***REMOVED***\"this\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`\"${node.name}\"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***identifier`);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined,\n});\n\ndefineType(\"IfStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"test\",***REMOVED***\"consequent\",***REMOVED***\"alternate\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Conditional\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"LabeledStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"label\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"StringLiteral\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\",***REMOVED***\"Immutable\"],\n});\n\ndefineType(\"NumericLiteral\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***deprecatedAlias:***REMOVED***\"NumberLiteral\",\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"number\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(1***REMOVED***/***REMOVED***val***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***!Number.isFinite(val))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***new***REMOVED***Error(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiterals***REMOVED***must***REMOVED***be***REMOVED***non-negative***REMOVED***finite***REMOVED***numbers.***REMOVED***\"***REMOVED***+\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`You***REMOVED***can***REMOVED***use***REMOVED***t.valueToNode(${val})***REMOVED***instead.`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(process.env.BABEL_8_BREAKING)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO(@nicolo-ribaudo)***REMOVED***Fix***REMOVED***regenerator***REMOVED***to***REMOVED***not***REMOVED***pass***REMOVED***negative\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***numbers***REMOVED***here.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!IS_STANDALONE)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!new***REMOVED***Error().stack.includes(\"regenerator\"))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO:***REMOVED***Enable***REMOVED***this***REMOVED***warning***REMOVED***once***REMOVED***regenerator***REMOVED***is***REMOVED***fixed.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/facebook/regenerator/pull/680\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***console.warn(error);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***satisfies***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***type:***REMOVED***\"number\"***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\",***REMOVED***\"Immutable\"],\n});\n\ndefineType(\"NullLiteral\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\",***REMOVED***\"Immutable\"],\n});\n\ndefineType(\"BooleanLiteral\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\",***REMOVED***\"Immutable\"],\n});\n\ndefineType(\"RegExpLiteral\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"pattern\",***REMOVED***\"flags\"],\n***REMOVED******REMOVED***deprecatedAlias:***REMOVED***\"RegexLiteral\",\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***pattern:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***flags:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***invalid***REMOVED***=***REMOVED***/[^dgimsuvy]/.exec(val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(invalid)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`\"${invalid[0]}\"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***RegExp***REMOVED***flag`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***type:***REMOVED***\"string\"***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***\"\",\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"LogicalExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"operator\",***REMOVED***\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Binary\",***REMOVED***\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(...LOGICAL_OPERATORS),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"MemberExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"object\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"property\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"computed\",\n***REMOVED******REMOVED******REMOVED******REMOVED***...(!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"optional\"]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[]),\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"object\",***REMOVED***\"property\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"LVal\",***REMOVED***\"PatternLike\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\",***REMOVED***\"Super\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"PrivateName\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator:***REMOVED***Validator***REMOVED***=***REMOVED***function***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***t.MemberExpression,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator:***REMOVED***Validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***todo(ts):***REMOVED***can***REMOVED***be***REMOVED***discriminated***REMOVED***union***REMOVED***by***REMOVED***`computed`***REMOVED***property\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator.oneOfNodeTypes***REMOVED***=***REMOVED***[\"Expression\",***REMOVED***\"Identifier\",***REMOVED***\"PrivateName\"];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***...(!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{}),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"NewExpression\",***REMOVED***{***REMOVED***inherits:***REMOVED***\"CallExpression\"***REMOVED***});\n\ndefineType(\"Program\",***REMOVED***{\n***REMOVED******REMOVED***//***REMOVED***Note:***REMOVED***We***REMOVED***explicitly***REMOVED***leave***REMOVED***'interpreter'***REMOVED***out***REMOVED***here***REMOVED***because***REMOVED***it***REMOVED***is\n***REMOVED******REMOVED***//***REMOVED***conceptually***REMOVED***comment-like,***REMOVED***and***REMOVED***Babel***REMOVED***does***REMOVED***not***REMOVED***traverse***REMOVED***comments***REMOVED***either.\n***REMOVED******REMOVED***visitor:***REMOVED***[\"directives\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"body\",***REMOVED***\"directives\",***REMOVED***\"sourceType\",***REMOVED***\"interpreter\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"script\",***REMOVED***\"module\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***\"script\",\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***interpreter:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"InterpreterDirective\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Directive\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[],\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***validateArrayOfType(\"Statement\"),\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"BlockParent\",***REMOVED***\"Block\"],\n});\n\ndefineType(\"ObjectExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"properties\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***validateArrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectMethod\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectProperty\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"SpreadElement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ObjectMethod\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"kind\",***REMOVED***\"key\",***REMOVED***\"params\",***REMOVED***\"body\",***REMOVED***\"computed\",***REMOVED***\"generator\",***REMOVED***\"async\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeParameters\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"params\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"returnType\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"body\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionTypeAnnotationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"method\",***REMOVED***\"get\",***REMOVED***\"set\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{***REMOVED***default:***REMOVED***\"method\"***REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{}),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator:***REMOVED***Validator***REMOVED***=***REMOVED***function***REMOVED***(node:***REMOVED***t.ObjectMethod,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***todo(ts):***REMOVED***can***REMOVED***be***REMOVED***discriminated***REMOVED***union***REMOVED***by***REMOVED***`computed`***REMOVED***property\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator.oneOfNodeTypes***REMOVED***=***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"UserWhitespacable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Function\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Method\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectMember\",\n***REMOVED******REMOVED***],\n});\n\ndefineType(\"ObjectProperty\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"value\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"computed\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"shorthand\",\n***REMOVED******REMOVED******REMOVED******REMOVED***...(!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"decorators\"]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[]),\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"PrivateName\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"DecimalLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"PrivateName\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator:***REMOVED***Validator***REMOVED***=***REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.ObjectProperty,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***todo(ts):***REMOVED***can***REMOVED***be***REMOVED***discriminated***REMOVED***union***REMOVED***by***REMOVED***`computed`***REMOVED***property\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"PrivateName\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"DecimalLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"PrivateName\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Value***REMOVED***may***REMOVED***be***REMOVED***PatternLike***REMOVED***if***REMOVED***this***REMOVED***is***REMOVED***an***REMOVED***AssignmentProperty\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/babel/babylon/issues/434\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\",***REMOVED***\"PatternLike\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***shorthand:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.ObjectProperty,***REMOVED***key,***REMOVED***shorthand)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shorthand)***REMOVED***return;\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.computed)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Property***REMOVED***shorthand***REMOVED***of***REMOVED***ObjectProperty***REMOVED***cannot***REMOVED***be***REMOVED***true***REMOVED***if***REMOVED***computed***REMOVED***is***REMOVED***true\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!is(\"Identifier\",***REMOVED***node.key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Property***REMOVED***shorthand***REMOVED***of***REMOVED***ObjectProperty***REMOVED***cannot***REMOVED***be***REMOVED***true***REMOVED***if***REMOVED***key***REMOVED***is***REMOVED***not***REMOVED***an***REMOVED***Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***type:***REMOVED***\"boolean\"***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***visitor:***REMOVED***[\"decorators\",***REMOVED***\"key\",***REMOVED***\"value\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"UserWhitespacable\",***REMOVED***\"Property\",***REMOVED***\"ObjectMember\"],\n***REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***undefined\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Pattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***is(\"ObjectPattern\",***REMOVED***parent)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***pattern\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***expression;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***\"value\",***REMOVED***node.value);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n});\n\ndefineType(\"RestElement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\",***REMOVED***\"typeAnnotation\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"FunctionParameter\",***REMOVED***\"PatternLike\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"FunctionParameter\",***REMOVED***\"PatternLike\",***REMOVED***\"LVal\"],\n***REMOVED******REMOVED***deprecatedAlias:***REMOVED***\"RestProperty\",\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...patternLikeCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***are***REMOVED***not***REMOVED***valid***REMOVED***in***REMOVED***RestElement,***REMOVED***but***REMOVED***we***REMOVED***allow***REMOVED***them***REMOVED***for***REMOVED***backwards***REMOVED***compatibility.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"RestElement\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"AssignmentPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***function***REMOVED***(parent:***REMOVED***t.ArrayPattern***REMOVED***|***REMOVED***t.ObjectPattern,***REMOVED***key)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/(\\w+)\\[(\\d+)\\]/.exec(key.toString());\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***throw***REMOVED***new***REMOVED***Error(\"Internal***REMOVED***Babel***REMOVED***error:***REMOVED***malformed***REMOVED***key.\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***listKey,***REMOVED***index]***REMOVED***=***REMOVED***match***REMOVED***as***REMOVED***unknown***REMOVED***as***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyof***REMOVED***typeof***REMOVED***parent,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((parent[listKey]***REMOVED***as***REMOVED***t.Node[]).length***REMOVED***>***REMOVED***+index***REMOVED***+***REMOVED***1)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`RestElement***REMOVED***must***REMOVED***be***REMOVED***last***REMOVED***element***REMOVED***of***REMOVED***${listKey}`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined,\n});\n\ndefineType(\"ReturnStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Terminatorless\",***REMOVED***\"CompletionStatement\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"SequenceExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"expressions\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***expressions:***REMOVED***validateArrayOfType(\"Expression\"),\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"ParenthesizedExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"expression\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"ExpressionWrapper\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"SwitchCase\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"test\",***REMOVED***\"consequent\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***validateArrayOfType(\"Statement\"),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"SwitchStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"discriminant\",***REMOVED***\"cases\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"BlockParent\",***REMOVED***\"Scopable\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***discriminant:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***cases:***REMOVED***validateArrayOfType(\"SwitchCase\"),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ThisExpression\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"Expression\",***REMOVED***\"TSEntityName\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"ThrowStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Terminatorless\",***REMOVED***\"CompletionStatement\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"TryStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"block\",***REMOVED***\"handler\",***REMOVED***\"finalizer\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***block:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.TryStatement)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***validator***REMOVED***isn't***REMOVED***put***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***because***REMOVED***we***REMOVED***can***REMOVED***run***REMOVED***it\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***even***REMOVED***if***REMOVED***this***REMOVED***node***REMOVED***doesn't***REMOVED***have***REMOVED***a***REMOVED***parent.\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.handler***REMOVED***&&***REMOVED***!node.finalizer)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TryStatement***REMOVED***expects***REMOVED***either***REMOVED***a***REMOVED***handler***REMOVED***or***REMOVED***finalizer,***REMOVED***or***REMOVED***both\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***[\"BlockStatement\"]***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***handler:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"CatchClause\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***finalizer:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"UnaryExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"operator\",***REMOVED***\"argument\",***REMOVED***\"prefix\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***prefix:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(...UNARY_OPERATORS),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"UnaryLike\",***REMOVED***\"Expression\"],\n});\n\ndefineType(\"UpdateExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"operator\",***REMOVED***\"argument\",***REMOVED***\"prefix\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***prefix:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"Expression\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"MemberExpression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(...UPDATE_OPERATORS),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"VariableDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"kind\",***REMOVED***\"declarations\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"declarations\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Declaration\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"var\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"let\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"const\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/tc39/proposal-explicit-resource-management\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"using\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/tc39/proposal-async-explicit-resource-management\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"await***REMOVED***using\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***declarations:***REMOVED***validateArrayOfType(\"VariableDeclarator\"),\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***withoutInit***REMOVED***=***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"Placeholder\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***constOrLetOrVar***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Placeholder\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usingOrAwaitUsing***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"VoidPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Placeholder\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node:***REMOVED***t.VariableDeclaration)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***kind,***REMOVED***declarations***REMOVED***}***REMOVED***=***REMOVED***node;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentIsForX***REMOVED***=***REMOVED***is(\"ForXStatement\",***REMOVED***parent,***REMOVED***{***REMOVED***left:***REMOVED***node***REMOVED***});\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentIsForX)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declarations.length***REMOVED***!==***REMOVED***1)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Exactly***REMOVED***one***REMOVED***VariableDeclarator***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***the***REMOVED***VariableDeclaration***REMOVED***of***REMOVED***a***REMOVED***${parent.type}`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***decl***REMOVED***of***REMOVED***declarations)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***\"const\"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***\"let\"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***\"var\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parentIsForX***REMOVED***&&***REMOVED***!decl.init)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withoutInit(decl,***REMOVED***\"id\",***REMOVED***decl.id);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constOrLetOrVar(decl,***REMOVED***\"id\",***REMOVED***decl.id);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usingOrAwaitUsing(decl,***REMOVED***\"id\",***REMOVED***decl.id);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined,\n});\n\ndefineType(\"VariableDeclarator\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"id\",***REMOVED***\"init\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"LVal\",***REMOVED***\"VoidPattern\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"VoidPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***init:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"WhileStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"test\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"BlockParent\",***REMOVED***\"Loop\",***REMOVED***\"While\",***REMOVED***\"Scopable\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"WithStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"object\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\n//***REMOVED***---***REMOVED***ES2015***REMOVED***---\ndefineType(\"AssignmentPattern\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"left\",***REMOVED***\"right\",***REMOVED***\"decorators\"***REMOVED***/****REMOVED***for***REMOVED***legacy***REMOVED***param***REMOVED***decorators***REMOVED****/],\n***REMOVED******REMOVED***builder:***REMOVED***[\"left\",***REMOVED***\"right\"],\n***REMOVED******REMOVED***aliases:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"FunctionParameter\",***REMOVED***\"Pattern\",***REMOVED***\"PatternLike\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"FunctionParameter\",***REMOVED***\"Pattern\",***REMOVED***\"PatternLike\",***REMOVED***\"LVal\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...patternLikeCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***For***REMOVED***TypeScript\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ArrayPattern\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"elements\",***REMOVED***\"typeAnnotation\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"elements\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"FunctionParameter\",***REMOVED***\"Pattern\",***REMOVED***\"PatternLike\",***REMOVED***\"LVal\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...patternLikeCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"array\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertEach(assertNodeOrValueType(\"null\",***REMOVED***\"PatternLike\")),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ArrowFunctionExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"params\",***REMOVED***\"body\",***REMOVED***\"async\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"typeParameters\",***REMOVED***\"params\",***REMOVED***\"predicate\",***REMOVED***\"returnType\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Function\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Pureish\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionTypeAnnotationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/babel/babylon/issues/505\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\",***REMOVED***\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***predicate:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"DeclaredPredicate\",***REMOVED***\"InferredPredicate\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassBody\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"body\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***validateArrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassMethod\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassPrivateMethod\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassProperty\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassPrivateProperty\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassAccessorProperty\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSDeclareMethod\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSIndexSignature\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StaticBlock\",\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"id\",***REMOVED***\"superClass\",***REMOVED***\"body\",***REMOVED***\"decorators\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"id\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeParameters\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"superClass\",\n***REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***?***REMOVED***\"superTypeArguments\"***REMOVED***:***REMOVED***\"superTypeParameters\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"mixins\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"implements\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"body\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"Class\",***REMOVED***\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"ClassBody\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***superClass:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***[process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***\"superTypeArguments\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***\"superTypeParameters\"]:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***implements:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***\"TSClassImplements\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***\"TSExpressionWithTypeArguments\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassImplements\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***mixins:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"InterfaceExtends\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***inherits:***REMOVED***\"ClassExpression\",\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"Class\",***REMOVED***\"Statement\",***REMOVED***\"Declaration\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***id***REMOVED***may***REMOVED***be***REMOVED***omitted***REMOVED***if***REMOVED***this***REMOVED***is***REMOVED***the***REMOVED***child***REMOVED***of***REMOVED***an\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ExportDefaultDeclaration.\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"ClassBody\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***superClass:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***[process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***\"superTypeArguments\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***\"superTypeParameters\"]:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***implements:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***\"TSClassImplements\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***\"TSExpressionWithTypeArguments\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassImplements\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***mixins:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"InterfaceExtends\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***abstract:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***undefined\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***assertNodeType(\"Identifier\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!is(\"ExportDefaultDeclaration\",***REMOVED***parent))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifier(node,***REMOVED***\"id\",***REMOVED***node.id);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n});\n\nexport***REMOVED***const***REMOVED***importAttributes***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED***attributes:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"ImportAttribute\"),\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***assertions:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***deprecated:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"ImportAttribute\"),\n***REMOVED******REMOVED***},\n};\n\ndefineType(\"ExportAllDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"source\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"source\",***REMOVED***\"attributes\",***REMOVED***\"assertions\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Statement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Declaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ImportOrExportDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ExportDeclaration\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***validateOptional(assertOneOf(\"type\",***REMOVED***\"value\")),\n***REMOVED******REMOVED******REMOVED******REMOVED***...importAttributes,\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ExportDefaultDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"declaration\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Statement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Declaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ImportOrExportDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ExportDeclaration\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***declaration:***REMOVED***validateType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSDeclareFunction\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ClassDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***validateOptional(assertOneOf(\"value\")),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ExportNamedDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"declaration\",***REMOVED***\"specifiers\",***REMOVED***\"source\"],\n***REMOVED******REMOVED***visitor:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"declaration\",***REMOVED***\"specifiers\",***REMOVED***\"source\",***REMOVED***\"attributes\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"declaration\",***REMOVED***\"specifiers\",***REMOVED***\"source\",***REMOVED***\"attributes\",***REMOVED***\"assertions\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Statement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Declaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ImportOrExportDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ExportDeclaration\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***declaration:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeType(\"Declaration\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.ExportNamedDeclaration,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***validator***REMOVED***isn't***REMOVED***put***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***because***REMOVED***we***REMOVED***can***REMOVED***run***REMOVED***it\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***even***REMOVED***if***REMOVED***this***REMOVED***node***REMOVED***doesn't***REMOVED***have***REMOVED***a***REMOVED***parent.\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***&&***REMOVED***node.specifiers.length)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Only***REMOVED***declaration***REMOVED***or***REMOVED***specifiers***REMOVED***is***REMOVED***allowed***REMOVED***on***REMOVED***ExportNamedDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***validator***REMOVED***isn't***REMOVED***put***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level***REMOVED***because***REMOVED***we***REMOVED***can***REMOVED***run***REMOVED***it\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***even***REMOVED***if***REMOVED***this***REMOVED***node***REMOVED***doesn't***REMOVED***have***REMOVED***a***REMOVED***parent.\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***&&***REMOVED***node.source)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Cannot***REMOVED***export***REMOVED***a***REMOVED***declaration***REMOVED***from***REMOVED***a***REMOVED***source\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***[\"Declaration\"]***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\"Declaration\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***...importAttributes,\n***REMOVED******REMOVED******REMOVED******REMOVED***specifiers:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOf(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourced***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ExportSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ExportDefaultSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ExportNamespaceSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceless***REMOVED***=***REMOVED***assertNodeType(\"ExportSpecifier\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sourced;\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.ExportNamedDeclaration,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.source***REMOVED***?***REMOVED***sourced***REMOVED***:***REMOVED***sourceless;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ExportSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ExportDefaultSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ExportNamespaceSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***validateOptional(assertOneOf(\"type\",***REMOVED***\"value\")),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ExportSpecifier\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"local\",***REMOVED***\"exported\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"ModuleSpecifier\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***exported:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***And***REMOVED***TypeScript's***REMOVED***\"export***REMOVED***{***REMOVED***type***REMOVED***foo***REMOVED***}***REMOVED***from\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"type\",***REMOVED***\"value\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ForOfStatement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"left\",***REMOVED***\"right\",***REMOVED***\"body\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"left\",***REMOVED***\"right\",***REMOVED***\"body\",***REMOVED***\"await\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Statement\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"For\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Loop\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"ForXStatement\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assertNodeType(\"VariableDeclaration\",***REMOVED***\"LVal\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***assertNodeType(\"VariableDeclaration\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lval***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(\"VariableDeclaration\",***REMOVED***val))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lval(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"VariableDeclaration\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"MemberExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArrayPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ObjectPattern\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSAsExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSSatisfiesExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAssertion\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSNonNullExpression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Statement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***await:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ImportDeclaration\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"specifiers\",***REMOVED***\"source\"],\n***REMOVED******REMOVED***visitor:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"specifiers\",***REMOVED***\"source\",***REMOVED***\"attributes\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"specifiers\",***REMOVED***\"source\",***REMOVED***\"attributes\",***REMOVED***\"assertions\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Statement\",***REMOVED***\"Declaration\",***REMOVED***\"ImportOrExportDeclaration\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...importAttributes,\n***REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***phase:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"source\",***REMOVED***\"defer\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***specifiers:***REMOVED***validateArrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ImportSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ImportDefaultSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ImportNamespaceSpecifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***importKind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Handle***REMOVED***TypeScript/Flowtype's***REMOVED***extension***REMOVED***\"import***REMOVED***type***REMOVED***foo***REMOVED***from\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TypeScript***REMOVED***doesn't***REMOVED***support***REMOVED***typeof\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"type\",***REMOVED***\"typeof\",***REMOVED***\"value\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ImportDefaultSpecifier\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"local\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"ModuleSpecifier\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ImportNamespaceSpecifier\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"local\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"ModuleSpecifier\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ImportSpecifier\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"imported\",***REMOVED***\"local\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"local\",***REMOVED***\"imported\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"ModuleSpecifier\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***imported:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***importKind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Handle***REMOVED***Flowtype's***REMOVED***extension***REMOVED***\"import***REMOVED***{typeof***REMOVED***foo}***REMOVED***from\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***And***REMOVED***TypeScript's***REMOVED***\"import***REMOVED***{***REMOVED***type***REMOVED***foo***REMOVED***}***REMOVED***from\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"type\",***REMOVED***\"typeof\",***REMOVED***\"value\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ImportExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"source\",***REMOVED***\"options\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***phase:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"source\",***REMOVED***\"defer\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"MetaProperty\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"meta\",***REMOVED***\"property\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.MetaProperty,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***property;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(val.name)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***\"function\":\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property***REMOVED***=***REMOVED***\"sent\";\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***\"new\":\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property***REMOVED***=***REMOVED***\"target\";\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***\"import\":\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property***REMOVED***=***REMOVED***\"meta\";\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!is(\"Identifier\",***REMOVED***node.property,***REMOVED***{***REMOVED***name:***REMOVED***property***REMOVED***}))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\"Unrecognised***REMOVED***MetaProperty\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***[\"Identifier\"]***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\nexport***REMOVED***const***REMOVED***classMethodOrPropertyCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({\n***REMOVED******REMOVED***abstract:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***accessibility:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"public\",***REMOVED***\"private\",***REMOVED***\"protected\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***static:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***override:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***computed:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(node:***REMOVED***any,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED***},\n});\n\nexport***REMOVED***const***REMOVED***classMethodOrDeclareMethodCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({\n***REMOVED******REMOVED***...functionCommon(),\n***REMOVED******REMOVED***...classMethodOrPropertyCommon(),\n***REMOVED******REMOVED***params:***REMOVED***validateArrayOfType(\"FunctionParameter\",***REMOVED***\"TSParameterProperty\"),\n***REMOVED******REMOVED***kind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"get\",***REMOVED***\"set\",***REMOVED***\"method\",***REMOVED***\"constructor\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***\"method\",\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***access:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertOneOf(\"public\",***REMOVED***\"private\",***REMOVED***\"protected\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassMethod\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Function\",***REMOVED***\"Scopable\",***REMOVED***\"BlockParent\",***REMOVED***\"FunctionParent\",***REMOVED***\"Method\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"kind\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"params\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"body\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"computed\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"static\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"generator\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"async\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***visitor:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeParameters\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"params\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"returnType\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"body\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...classMethodOrDeclareMethodCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionTypeAnnotationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ObjectPattern\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\"***REMOVED***/****REMOVED***for***REMOVED***legacy***REMOVED***param***REMOVED***decorators***REMOVED****/,\n***REMOVED******REMOVED******REMOVED******REMOVED***\"properties\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeAnnotation\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***builder:***REMOVED***[\"properties\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"FunctionParameter\",***REMOVED***\"Pattern\",***REMOVED***\"PatternLike\",***REMOVED***\"LVal\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...patternLikeCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***validateArrayOfType(\"RestElement\",***REMOVED***\"ObjectProperty\"),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"SpreadElement\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"UnaryLike\"],\n***REMOVED******REMOVED***deprecatedAlias:***REMOVED***\"SpreadProperty\",\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\n***REMOVED******REMOVED***\"Super\",\n***REMOVED******REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***undefined\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n);\n\ndefineType(\"TaggedTemplateExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"tag\",***REMOVED***\"typeArguments\",***REMOVED***\"quasi\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"tag\",***REMOVED***\"typeParameters\",***REMOVED***\"quasi\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"tag\",***REMOVED***\"quasi\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***tag:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***quasi:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"TemplateLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***[process.env.BABEL_8_BREAKING***REMOVED***?***REMOVED***\"typeArguments\"***REMOVED***:***REMOVED***\"typeParameters\"]:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"TemplateElement\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\",***REMOVED***\"tail\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertShape({\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cooked:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***templateElementCookedValidator(node:***REMOVED***t.TemplateElement)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***node.value.raw;\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***unterminatedCalled***REMOVED***=***REMOVED***false;\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***unreachable\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(\"Internal***REMOVED***@babel/types***REMOVED***error.\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***str,***REMOVED***firstInvalidLoc***REMOVED***}***REMOVED***=***REMOVED***readStringContents(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"template\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***0,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***0,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***0,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unterminated()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unterminatedCalled***REMOVED***=***REMOVED***true;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictNumericEscape:***REMOVED***error,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidEscapeSequence:***REMOVED***error,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***numericSeparatorInEscapeSequence:***REMOVED***error,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unexpectedNumericSeparator:***REMOVED***error,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidDigit:***REMOVED***error,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidCodePoint:***REMOVED***error,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!unterminatedCalled)***REMOVED***throw***REMOVED***new***REMOVED***Error(\"Invalid***REMOVED***raw\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value.cooked***REMOVED***=***REMOVED***firstInvalidLoc***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***str;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***tail:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"TemplateLiteral\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"quasis\",***REMOVED***\"expressions\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Literal\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***quasis:***REMOVED***validateArrayOfType(\"TemplateElement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***expressions:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"array\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertEach(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***For***REMOVED***TypeScript***REMOVED***template***REMOVED***literal***REMOVED***types\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSType\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.TemplateLiteral,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.quasis.length***REMOVED***!==***REMOVED***val.length***REMOVED***+***REMOVED***1)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Number***REMOVED***of***REMOVED***${\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***quasis***REMOVED***should***REMOVED***be***REMOVED***exactly***REMOVED***one***REMOVED***more***REMOVED***than***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***expressions.\\nExpected***REMOVED***${\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val.length***REMOVED***+***REMOVED***1\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***quasis***REMOVED***but***REMOVED***got***REMOVED***${node.quasis.length}`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"YieldExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"argument\",***REMOVED***\"delegate\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Terminatorless\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***delegate:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.YieldExpression,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***&&***REMOVED***!node.argument)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Property***REMOVED***delegate***REMOVED***of***REMOVED***YieldExpression***REMOVED***cannot***REMOVED***be***REMOVED***true***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***argument\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***type:***REMOVED***\"boolean\"***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\n//***REMOVED***---***REMOVED***ES2017***REMOVED***---\ndefineType(\"AwaitExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"argument\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Terminatorless\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\n//***REMOVED***---***REMOVED***ES2019***REMOVED***---\ndefineType(\"Import\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\n//***REMOVED***---***REMOVED***ES2020***REMOVED***---\ndefineType(\"BigIntLiteral\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertValueType(\"bigint\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\",***REMOVED***\"Immutable\"],\n});\n\ndefineType(\"ExportNamespaceSpecifier\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"exported\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"ModuleSpecifier\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***exported:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"OptionalMemberExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"object\",***REMOVED***\"property\",***REMOVED***\"computed\",***REMOVED***\"optional\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"object\",***REMOVED***\"property\"],\n***REMOVED******REMOVED***//***REMOVED***todo:***REMOVED***Add***REMOVED***OptionalMemberExpression***REMOVED***to***REMOVED***LVal***REMOVED***when***REMOVED***optional-chaining-assign***REMOVED***reaches***REMOVED***stage***REMOVED***4\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***assertNodeType(\"Identifier\");\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator:***REMOVED***Validator***REMOVED***=***REMOVED***Object.assign(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***(node:***REMOVED***t.OptionalMemberExpression,***REMOVED***key,***REMOVED***val)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***as***REMOVED***Validator,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***todo(ts):***REMOVED***can***REMOVED***be***REMOVED***discriminated***REMOVED***union***REMOVED***by***REMOVED***`computed`***REMOVED***property\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***[\"Expression\",***REMOVED***\"Identifier\"]***REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertValueType(\"boolean\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***chain(assertValueType(\"boolean\"),***REMOVED***assertOptionalChainStart()),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"OptionalCallExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***[\"callee\",***REMOVED***\"typeArguments\",***REMOVED***\"arguments\"]\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[\"callee\",***REMOVED***\"typeParameters\",***REMOVED***\"typeArguments\",***REMOVED***\"arguments\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"callee\",***REMOVED***\"arguments\",***REMOVED***\"optional\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***validateArrayOfType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"SpreadElement\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"ArgumentPlaceholder\",\n***REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertValueType(\"boolean\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***chain(assertValueType(\"boolean\"),***REMOVED***assertOptionalChainStart()),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***typeArguments:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeParameterInstantiation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\"TypeParameterInstantiation\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***...(process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"TSTypeParameterInstantiation\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),\n***REMOVED******REMOVED***},\n});\n\n//***REMOVED***---***REMOVED***ES2022***REMOVED***---\ndefineType(\"ClassProperty\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"decorators\",***REMOVED***\"variance\",***REMOVED***\"key\",***REMOVED***\"typeAnnotation\",***REMOVED***\"value\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"value\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"computed\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"static\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Property\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...classMethodOrPropertyCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"TypeAnnotation\",***REMOVED***\"TSTypeAnnotation\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***readonly:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***variance:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Variance\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassAccessorProperty\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"decorators\",***REMOVED***\"key\",***REMOVED***\"typeAnnotation\",***REMOVED***\"value\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"value\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"computed\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"static\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Property\",***REMOVED***\"Accessor\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...classMethodOrPropertyCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***chain(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(function***REMOVED***()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"PrivateName\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***assertNodeType(\"Expression\");\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(node:***REMOVED***any,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})(),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Identifier\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"StringLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"NumericLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"BigIntLiteral\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Expression\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"PrivateName\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"TypeAnnotation\",***REMOVED***\"TSTypeAnnotation\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***readonly:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***variance:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Variance\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassPrivateProperty\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"decorators\",***REMOVED***\"variance\",***REMOVED***\"key\",***REMOVED***\"typeAnnotation\",***REMOVED***\"value\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"key\",***REMOVED***\"value\",***REMOVED***\"decorators\",***REMOVED***\"static\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Property\",***REMOVED***\"Private\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"PrivateName\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***assertNodeType(\"TypeAnnotation\",***REMOVED***\"TSTypeAnnotation\")\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***assertNodeType(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"TSTypeAnnotation\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-ignore(Babel***REMOVED***7***REMOVED***vs***REMOVED***Babel***REMOVED***8)***REMOVED***Babel***REMOVED***7***REMOVED***AST\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"Noop\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Decorator\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***static:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***readonly:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***variance:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Variance\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ClassPrivateMethod\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"kind\",***REMOVED***\"key\",***REMOVED***\"params\",***REMOVED***\"body\",***REMOVED***\"static\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"decorators\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"key\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"typeParameters\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"params\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"returnType\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"body\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***aliases:***REMOVED***[\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Function\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Scopable\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"BlockParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"FunctionParent\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Method\",\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Private\",\n***REMOVED******REMOVED***],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***...classMethodOrDeclareMethodCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***...functionTypeAnnotationCommon(),\n***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertOneOf(\"get\",***REMOVED***\"set\",***REMOVED***\"method\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***\"method\",\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"PrivateName\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"PrivateName\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"id\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Private\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"StaticBlock\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"body\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***validateArrayOfType(\"Statement\"),\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Scopable\",***REMOVED***\"BlockParent\",***REMOVED***\"FunctionParent\"],\n});\n\n//***REMOVED***---***REMOVED***ES2025***REMOVED***---\ndefineType(\"ImportAttribute\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"key\",***REMOVED***\"value\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\",***REMOVED***\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"StringLiteral\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n"],"mappings":"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","ignoreList":[]}