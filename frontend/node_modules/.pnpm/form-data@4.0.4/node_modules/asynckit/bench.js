/****REMOVED***eslint***REMOVED***no-console:***REMOVED***"off"***REMOVED****/

var***REMOVED***asynckit***REMOVED***=***REMOVED***require('./')
***REMOVED******REMOVED***,***REMOVED***async***REMOVED******REMOVED******REMOVED******REMOVED***=***REMOVED***require('async')
***REMOVED******REMOVED***,***REMOVED***assert***REMOVED******REMOVED******REMOVED***=***REMOVED***require('assert')
***REMOVED******REMOVED***,***REMOVED***expected***REMOVED***=***REMOVED***0
***REMOVED******REMOVED***;

var***REMOVED***Benchmark***REMOVED***=***REMOVED***require('benchmark');
var***REMOVED***suite***REMOVED***=***REMOVED***new***REMOVED***Benchmark.Suite;

var***REMOVED***source***REMOVED***=***REMOVED***[];
for***REMOVED***(var***REMOVED***z***REMOVED***=***REMOVED***1;***REMOVED***z***REMOVED***<***REMOVED***100;***REMOVED***z++)
{
***REMOVED******REMOVED***source.push(z);
***REMOVED******REMOVED***expected***REMOVED***+=***REMOVED***z;
}

suite
//***REMOVED***add***REMOVED***tests

.add('async.map',***REMOVED***function(deferred)
{
***REMOVED******REMOVED***var***REMOVED***total***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***async.map(source,
***REMOVED******REMOVED***function(i,***REMOVED***cb)
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setImmediate(function()
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***total***REMOVED***+=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***total);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***},
***REMOVED******REMOVED***function(err,***REMOVED***result)
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***assert.ifError(err);
***REMOVED******REMOVED******REMOVED******REMOVED***assert.equal(result[result.length***REMOVED***-***REMOVED***1],***REMOVED***expected);
***REMOVED******REMOVED******REMOVED******REMOVED***deferred.resolve();
***REMOVED******REMOVED***});
},***REMOVED***{'defer':***REMOVED***true})


.add('asynckit.parallel',***REMOVED***function(deferred)
{
***REMOVED******REMOVED***var***REMOVED***total***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***asynckit.parallel(source,
***REMOVED******REMOVED***function(i,***REMOVED***cb)
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setImmediate(function()
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***total***REMOVED***+=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***total);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***},
***REMOVED******REMOVED***function(err,***REMOVED***result)
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***assert.ifError(err);
***REMOVED******REMOVED******REMOVED******REMOVED***assert.equal(result[result.length***REMOVED***-***REMOVED***1],***REMOVED***expected);
***REMOVED******REMOVED******REMOVED******REMOVED***deferred.resolve();
***REMOVED******REMOVED***});
},***REMOVED***{'defer':***REMOVED***true})


//***REMOVED***add***REMOVED***listeners
.on('cycle',***REMOVED***function(ev)
{
***REMOVED******REMOVED***console.log(String(ev.target));
})
.on('complete',***REMOVED***function()
{
***REMOVED******REMOVED***console.log('Fastest***REMOVED***is***REMOVED***'***REMOVED***+***REMOVED***this.filter('fastest').map('name'));
})
//***REMOVED***run***REMOVED***async
.run({***REMOVED***'async':***REMOVED***true***REMOVED***});
