var***REMOVED***util***REMOVED***=***REMOVED***require('util');
var***REMOVED***Stream***REMOVED***=***REMOVED***require('stream').Stream;
var***REMOVED***DelayedStream***REMOVED***=***REMOVED***require('delayed-stream');

module.exports***REMOVED***=***REMOVED***CombinedStream;
function***REMOVED***CombinedStream()***REMOVED***{
***REMOVED******REMOVED***this.writable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this.readable***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***this.dataSize***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.maxDataSize***REMOVED***=***REMOVED***2***REMOVED*******REMOVED***1024***REMOVED*******REMOVED***1024;
***REMOVED******REMOVED***this.pauseStreams***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED***this._released***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this._streams***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this._currentStream***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***this._insideLoop***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this._pendingNext***REMOVED***=***REMOVED***false;
}
util.inherits(CombinedStream,***REMOVED***Stream);

CombinedStream.create***REMOVED***=***REMOVED***function(options)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***combinedStream***REMOVED***=***REMOVED***new***REMOVED***this();

***REMOVED******REMOVED***options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***option***REMOVED***in***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***combinedStream[option]***REMOVED***=***REMOVED***options[option];
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***combinedStream;
};

CombinedStream.isStreamLike***REMOVED***=***REMOVED***function(stream)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(typeof***REMOVED***stream***REMOVED***!==***REMOVED***'function')
***REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***(typeof***REMOVED***stream***REMOVED***!==***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***(typeof***REMOVED***stream***REMOVED***!==***REMOVED***'boolean')
***REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***(typeof***REMOVED***stream***REMOVED***!==***REMOVED***'number')
***REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***(!Buffer.isBuffer(stream));
};

CombinedStream.prototype.append***REMOVED***=***REMOVED***function(stream)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isStreamLike***REMOVED***=***REMOVED***CombinedStream.isStreamLike(stream);

***REMOVED******REMOVED***if***REMOVED***(isStreamLike)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(stream***REMOVED***instanceof***REMOVED***DelayedStream))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newStream***REMOVED***=***REMOVED***DelayedStream.create(stream,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxDataSize:***REMOVED***Infinity,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseStream:***REMOVED***this.pauseStreams,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream.on('data',***REMOVED***this._checkDataSize.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream***REMOVED***=***REMOVED***newStream;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***this._handleErrors(stream);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.pauseStreams)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream.pause();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this._streams.push(stream);
***REMOVED******REMOVED***return***REMOVED***this;
};

CombinedStream.prototype.pipe***REMOVED***=***REMOVED***function(dest,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***Stream.prototype.pipe.call(this,***REMOVED***dest,***REMOVED***options);
***REMOVED******REMOVED***this.resume();
***REMOVED******REMOVED***return***REMOVED***dest;
};

CombinedStream.prototype._getNext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this._currentStream***REMOVED***=***REMOVED***null;

***REMOVED******REMOVED***if***REMOVED***(this._insideLoop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._pendingNext***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return;***REMOVED***//***REMOVED***defer***REMOVED***call
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this._insideLoop***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._pendingNext***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._realGetNext();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(this._pendingNext);
***REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._insideLoop***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
};

CombinedStream.prototype._realGetNext***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***stream***REMOVED***=***REMOVED***this._streams.shift();


***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***stream***REMOVED***==***REMOVED***'undefined')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.end();
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***stream***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._pipeNext(stream);
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***getStream***REMOVED***=***REMOVED***stream;
***REMOVED******REMOVED***getStream(function(stream)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isStreamLike***REMOVED***=***REMOVED***CombinedStream.isStreamLike(stream);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isStreamLike)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream.on('data',***REMOVED***this._checkDataSize.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._handleErrors(stream);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***this._pipeNext(stream);
***REMOVED******REMOVED***}.bind(this));
};

CombinedStream.prototype._pipeNext***REMOVED***=***REMOVED***function(stream)***REMOVED***{
***REMOVED******REMOVED***this._currentStream***REMOVED***=***REMOVED***stream;

***REMOVED******REMOVED***var***REMOVED***isStreamLike***REMOVED***=***REMOVED***CombinedStream.isStreamLike(stream);
***REMOVED******REMOVED***if***REMOVED***(isStreamLike)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***stream.on('end',***REMOVED***this._getNext.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED***stream.pipe(this,***REMOVED***{end:***REMOVED***false});
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***stream;
***REMOVED******REMOVED***this.write(value);
***REMOVED******REMOVED***this._getNext();
};

CombinedStream.prototype._handleErrors***REMOVED***=***REMOVED***function(stream)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***self***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED***stream.on('error',***REMOVED***function(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***self._emitError(err);
***REMOVED******REMOVED***});
};

CombinedStream.prototype.write***REMOVED***=***REMOVED***function(data)***REMOVED***{
***REMOVED******REMOVED***this.emit('data',***REMOVED***data);
};

CombinedStream.prototype.pause***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this.pauseStreams)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if(this.pauseStreams***REMOVED***&&***REMOVED***this._currentStream***REMOVED***&&***REMOVED***typeof(this._currentStream.pause)***REMOVED***==***REMOVED***'function')***REMOVED***this._currentStream.pause();
***REMOVED******REMOVED***this.emit('pause');
};

CombinedStream.prototype.resume***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!this._released)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._released***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.writable***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this._getNext();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if(this.pauseStreams***REMOVED***&&***REMOVED***this._currentStream***REMOVED***&&***REMOVED***typeof(this._currentStream.resume)***REMOVED***==***REMOVED***'function')***REMOVED***this._currentStream.resume();
***REMOVED******REMOVED***this.emit('resume');
};

CombinedStream.prototype.end***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this._reset();
***REMOVED******REMOVED***this.emit('end');
};

CombinedStream.prototype.destroy***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this._reset();
***REMOVED******REMOVED***this.emit('close');
};

CombinedStream.prototype._reset***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.writable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this._streams***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this._currentStream***REMOVED***=***REMOVED***null;
};

CombinedStream.prototype._checkDataSize***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this._updateDataSize();
***REMOVED******REMOVED***if***REMOVED***(this.dataSize***REMOVED***<=***REMOVED***this.maxDataSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***message***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***'DelayedStream#maxDataSize***REMOVED***of***REMOVED***'***REMOVED***+***REMOVED***this.maxDataSize***REMOVED***+***REMOVED***'***REMOVED***bytes***REMOVED***exceeded.';
***REMOVED******REMOVED***this._emitError(new***REMOVED***Error(message));
};

CombinedStream.prototype._updateDataSize***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED***this.dataSize***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***var***REMOVED***self***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED***this._streams.forEach(function(stream)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!stream.dataSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***self.dataSize***REMOVED***+=***REMOVED***stream.dataSize;
***REMOVED******REMOVED***});

***REMOVED******REMOVED***if***REMOVED***(this._currentStream***REMOVED***&&***REMOVED***this._currentStream.dataSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.dataSize***REMOVED***+=***REMOVED***this._currentStream.dataSize;
***REMOVED******REMOVED***}
};

CombinedStream.prototype._emitError***REMOVED***=***REMOVED***function(err)***REMOVED***{
***REMOVED******REMOVED***this._reset();
***REMOVED******REMOVED***this.emit('error',***REMOVED***err);
};
