/**
****REMOVED***vue***REMOVED***v3.5.21
****REMOVED***(c)***REMOVED***2018-present***REMOVED***Yuxi***REMOVED***(Evan)***REMOVED***You***REMOVED***and***REMOVED***Vue***REMOVED***contributors
****REMOVED***@license***REMOVED***MIT
**/
'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***compilerDom***REMOVED***=***REMOVED***require('@vue/compiler-dom');
var***REMOVED***runtimeDom***REMOVED***=***REMOVED***require('@vue/runtime-dom');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');

function***REMOVED***_interopNamespaceDefault(e)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED***if***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***k***REMOVED***in***REMOVED***e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n[k]***REMOVED***=***REMOVED***e[k];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***n.default***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED***return***REMOVED***Object.freeze(n);
}

var***REMOVED***runtimeDom__namespace***REMOVED***=***REMOVED***/*#__PURE__*/_interopNamespaceDefault(runtimeDom);

const***REMOVED***compileCache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
function***REMOVED***compileToFunction(template,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!shared.isString(template))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(template.nodeType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***template***REMOVED***=***REMOVED***template.innerHTML;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runtimeDom.warn(`invalid***REMOVED***template***REMOVED***option:***REMOVED***`,***REMOVED***template);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***shared.NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***shared.genCacheKey(template,***REMOVED***options);
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***compileCache[key];
***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cached;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(template[0]***REMOVED***===***REMOVED***"#")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***document.querySelector(template);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runtimeDom.warn(`Template***REMOVED***element***REMOVED***not***REMOVED***found***REMOVED***or***REMOVED***is***REMOVED***empty:***REMOVED***${template}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***template***REMOVED***=***REMOVED***el***REMOVED***?***REMOVED***el.innerHTML***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***opts***REMOVED***=***REMOVED***shared.extend(
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onError:***REMOVED***onError***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onWarn:***REMOVED***(e)***REMOVED***=>***REMOVED***onError(e,***REMOVED***true)***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***options
***REMOVED******REMOVED***);
***REMOVED******REMOVED***if***REMOVED***(!opts.isCustomElement***REMOVED***&&***REMOVED***typeof***REMOVED***customElements***REMOVED***!==***REMOVED***"undefined")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***opts.isCustomElement***REMOVED***=***REMOVED***(tag)***REMOVED***=>***REMOVED***!!customElements.get(tag);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***code***REMOVED***}***REMOVED***=***REMOVED***compilerDom.compile(template,***REMOVED***opts);
***REMOVED******REMOVED***function***REMOVED***onError(err,***REMOVED***asWarning***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***message***REMOVED***=***REMOVED***asWarning***REMOVED***?***REMOVED***err.message***REMOVED***:***REMOVED***`Template***REMOVED***compilation***REMOVED***error:***REMOVED***${err.message}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***codeFrame***REMOVED***=***REMOVED***err.loc***REMOVED***&&***REMOVED***shared.generateCodeFrame(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***template,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.start.offset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.end.offset
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***runtimeDom.warn(codeFrame***REMOVED***?***REMOVED***`${message}
${codeFrame}`***REMOVED***:***REMOVED***message);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***render***REMOVED***=***REMOVED***new***REMOVED***Function("Vue",***REMOVED***code)(runtimeDom__namespace);
***REMOVED******REMOVED***render._rc***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***return***REMOVED***compileCache[key]***REMOVED***=***REMOVED***render;
}
runtimeDom.registerRuntimeCompiler(compileToFunction);

exports.compile***REMOVED***=***REMOVED***compileToFunction;
Object.keys(runtimeDom).forEach(function***REMOVED***(k)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(k***REMOVED***!==***REMOVED***'default'***REMOVED***&&***REMOVED***!Object.prototype.hasOwnProperty.call(exports,***REMOVED***k))***REMOVED***exports[k]***REMOVED***=***REMOVED***runtimeDom[k];
});
