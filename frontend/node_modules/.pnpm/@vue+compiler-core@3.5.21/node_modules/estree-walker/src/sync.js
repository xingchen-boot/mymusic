//***REMOVED***@ts-check
import***REMOVED***{***REMOVED***WalkerBase***REMOVED***}***REMOVED***from***REMOVED***'./walker.js';

/*****REMOVED***@typedef***REMOVED***{***REMOVED***import('estree').BaseNode}***REMOVED***BaseNode***REMOVED****/
/*****REMOVED***@typedef***REMOVED***{***REMOVED***import('./walker.js').WalkerContext}***REMOVED***WalkerContext***REMOVED****/

/*****REMOVED***@typedef***REMOVED***{(
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***this:***REMOVED***WalkerContext,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***BaseNode,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***parent:***REMOVED***BaseNode,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***string,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***number
***REMOVED*******REMOVED***)***REMOVED***=>***REMOVED***void}***REMOVED***SyncHandler***REMOVED****/

export***REMOVED***class***REMOVED***SyncWalker***REMOVED***extends***REMOVED***WalkerBase***REMOVED***{
	/**
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{SyncHandler}***REMOVED***enter
	***REMOVED*******REMOVED***@param***REMOVED***{SyncHandler}***REMOVED***leave
	***REMOVED****/
	constructor(enter,***REMOVED***leave)***REMOVED***{
		super();

		/*****REMOVED***@type***REMOVED***{SyncHandler}***REMOVED****/
		this.enter***REMOVED***=***REMOVED***enter;

		/*****REMOVED***@type***REMOVED***{SyncHandler}***REMOVED****/
		this.leave***REMOVED***=***REMOVED***leave;
	}

	/**
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{BaseNode}***REMOVED***node
	***REMOVED*******REMOVED***@param***REMOVED***{BaseNode}***REMOVED***parent
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[prop]
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[index]
	***REMOVED*******REMOVED***@returns***REMOVED***{BaseNode}
	***REMOVED****/
	visit(node,***REMOVED***parent,***REMOVED***prop,***REMOVED***index)***REMOVED***{
		if***REMOVED***(node)***REMOVED***{
			if***REMOVED***(this.enter)***REMOVED***{
				const***REMOVED***_should_skip***REMOVED***=***REMOVED***this.should_skip;
				const***REMOVED***_should_remove***REMOVED***=***REMOVED***this.should_remove;
				const***REMOVED***_replacement***REMOVED***=***REMOVED***this.replacement;
				this.should_skip***REMOVED***=***REMOVED***false;
				this.should_remove***REMOVED***=***REMOVED***false;
				this.replacement***REMOVED***=***REMOVED***null;

				this.enter.call(this.context,***REMOVED***node,***REMOVED***parent,***REMOVED***prop,***REMOVED***index);

				if***REMOVED***(this.replacement)***REMOVED***{
					node***REMOVED***=***REMOVED***this.replacement;
					this.replace(parent,***REMOVED***prop,***REMOVED***index,***REMOVED***node);
				}

				if***REMOVED***(this.should_remove)***REMOVED***{
					this.remove(parent,***REMOVED***prop,***REMOVED***index);
				}

				const***REMOVED***skipped***REMOVED***=***REMOVED***this.should_skip;
				const***REMOVED***removed***REMOVED***=***REMOVED***this.should_remove;

				this.should_skip***REMOVED***=***REMOVED***_should_skip;
				this.should_remove***REMOVED***=***REMOVED***_should_remove;
				this.replacement***REMOVED***=***REMOVED***_replacement;

				if***REMOVED***(skipped)***REMOVED***return***REMOVED***node;
				if***REMOVED***(removed)***REMOVED***return***REMOVED***null;
			}

			for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***node)***REMOVED***{
				const***REMOVED***value***REMOVED***=***REMOVED***node[key];

				if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***"object")***REMOVED***{
					continue;
				}***REMOVED***else***REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
					for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
						if***REMOVED***(value[i]***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***value[i].type***REMOVED***===***REMOVED***'string')***REMOVED***{
							if***REMOVED***(!this.visit(value[i],***REMOVED***node,***REMOVED***key,***REMOVED***i))***REMOVED***{
								//***REMOVED***removed
								i--;
							}
						}
					}
				}***REMOVED***else***REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***value.type***REMOVED***===***REMOVED***"string")***REMOVED***{
					this.visit(value,***REMOVED***node,***REMOVED***key,***REMOVED***null);
				}
			}

			if***REMOVED***(this.leave)***REMOVED***{
				const***REMOVED***_replacement***REMOVED***=***REMOVED***this.replacement;
				const***REMOVED***_should_remove***REMOVED***=***REMOVED***this.should_remove;
				this.replacement***REMOVED***=***REMOVED***null;
				this.should_remove***REMOVED***=***REMOVED***false;

				this.leave.call(this.context,***REMOVED***node,***REMOVED***parent,***REMOVED***prop,***REMOVED***index);

				if***REMOVED***(this.replacement)***REMOVED***{
					node***REMOVED***=***REMOVED***this.replacement;
					this.replace(parent,***REMOVED***prop,***REMOVED***index,***REMOVED***node);
				}

				if***REMOVED***(this.should_remove)***REMOVED***{
					this.remove(parent,***REMOVED***prop,***REMOVED***index);
				}

				const***REMOVED***removed***REMOVED***=***REMOVED***this.should_remove;

				this.replacement***REMOVED***=***REMOVED***_replacement;
				this.should_remove***REMOVED***=***REMOVED***_should_remove;

				if***REMOVED***(removed)***REMOVED***return***REMOVED***null;
			}
		}

		return***REMOVED***node;
	}
}
