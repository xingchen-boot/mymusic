/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/
/*
***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
***REMOVED****/

var***REMOVED***util***REMOVED***=***REMOVED***require('./util');
var***REMOVED***binarySearch***REMOVED***=***REMOVED***require('./binary-search');
var***REMOVED***ArraySet***REMOVED***=***REMOVED***require('./array-set').ArraySet;
var***REMOVED***base64VLQ***REMOVED***=***REMOVED***require('./base64-vlq');
var***REMOVED***quickSort***REMOVED***=***REMOVED***require('./quick-sort').quickSort;

function***REMOVED***SourceMapConsumer(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***sourceMap***REMOVED***=***REMOVED***aSourceMap;
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***aSourceMap***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***util.parseSourceMapInput(aSourceMap);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***sourceMap.sections***REMOVED***!=***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***new***REMOVED***IndexedSourceMapConsumer(sourceMap,***REMOVED***aSourceMapURL)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***new***REMOVED***BasicSourceMapConsumer(sourceMap,***REMOVED***aSourceMapURL);
}

SourceMapConsumer.fromSourceMap***REMOVED***=***REMOVED***function(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***BasicSourceMapConsumer.fromSourceMap(aSourceMap,***REMOVED***aSourceMapURL);
}

/**
***REMOVED*******REMOVED***The***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***mapping***REMOVED***spec***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***consuming.
***REMOVED****/
SourceMapConsumer.prototype._version***REMOVED***=***REMOVED***3;

//***REMOVED***`__generatedMappings`***REMOVED***and***REMOVED***`__originalMappings`***REMOVED***are***REMOVED***arrays***REMOVED***that***REMOVED***hold***REMOVED***the
//***REMOVED***parsed***REMOVED***mapping***REMOVED***coordinates***REMOVED***from***REMOVED***the***REMOVED***source***REMOVED***map's***REMOVED***"mappings"***REMOVED***attribute.***REMOVED***They
//***REMOVED***are***REMOVED***lazily***REMOVED***instantiated,***REMOVED***accessed***REMOVED***via***REMOVED***the***REMOVED***`_generatedMappings`***REMOVED***and
//***REMOVED***`_originalMappings`***REMOVED***getters***REMOVED***respectively,***REMOVED***and***REMOVED***we***REMOVED***only***REMOVED***parse***REMOVED***the***REMOVED***mappings
//***REMOVED***and***REMOVED***create***REMOVED***these***REMOVED***arrays***REMOVED***once***REMOVED***queried***REMOVED***for***REMOVED***a***REMOVED***source***REMOVED***location.***REMOVED***We***REMOVED***jump***REMOVED***through
//***REMOVED***these***REMOVED***hoops***REMOVED***because***REMOVED***there***REMOVED***can***REMOVED***be***REMOVED***many***REMOVED***thousands***REMOVED***of***REMOVED***mappings,***REMOVED***and***REMOVED***parsing
//***REMOVED***them***REMOVED***is***REMOVED***expensive,***REMOVED***so***REMOVED***we***REMOVED***only***REMOVED***want***REMOVED***to***REMOVED***do***REMOVED***it***REMOVED***if***REMOVED***we***REMOVED***must.
//
//***REMOVED***Each***REMOVED***object***REMOVED***in***REMOVED***the***REMOVED***arrays***REMOVED***is***REMOVED***of***REMOVED***the***REMOVED***form:
//
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***code,
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***code,
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***The***REMOVED***path***REMOVED***to***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***file***REMOVED***that***REMOVED***generated***REMOVED***this
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk***REMOVED***of***REMOVED***code,
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***that
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***corresponds***REMOVED***to***REMOVED***this***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***code,
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***that
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***corresponds***REMOVED***to***REMOVED***this***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***code,
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***symbol***REMOVED***which***REMOVED***generated***REMOVED***this***REMOVED***chunk***REMOVED***of
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.
//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
//
//***REMOVED***All***REMOVED***properties***REMOVED***except***REMOVED***for***REMOVED***`generatedLine`***REMOVED***and***REMOVED***`generatedColumn`***REMOVED***can***REMOVED***be
//***REMOVED***`null`.
//
//***REMOVED***`_generatedMappings`***REMOVED***is***REMOVED***ordered***REMOVED***by***REMOVED***the***REMOVED***generated***REMOVED***positions.
//
//***REMOVED***`_originalMappings`***REMOVED***is***REMOVED***ordered***REMOVED***by***REMOVED***the***REMOVED***original***REMOVED***positions.

SourceMapConsumer.prototype.__generatedMappings***REMOVED***=***REMOVED***null;
Object.defineProperty(SourceMapConsumer.prototype,***REMOVED***'_generatedMappings',***REMOVED***{
***REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.__generatedMappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._parseMappings(this._mappings,***REMOVED***this.sourceRoot);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.__generatedMappings;
***REMOVED******REMOVED***}
});

SourceMapConsumer.prototype.__originalMappings***REMOVED***=***REMOVED***null;
Object.defineProperty(SourceMapConsumer.prototype,***REMOVED***'_originalMappings',***REMOVED***{
***REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.__originalMappings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._parseMappings(this._mappings,***REMOVED***this.sourceRoot);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.__originalMappings;
***REMOVED******REMOVED***}
});

SourceMapConsumer.prototype._charIsMappingSeparator***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_charIsMappingSeparator(aStr,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***c***REMOVED***=***REMOVED***aStr.charAt(index);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***c***REMOVED***===***REMOVED***";"***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***",";
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***mappings***REMOVED***in***REMOVED***a***REMOVED***string***REMOVED***in***REMOVED***to***REMOVED***a***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***we***REMOVED***can***REMOVED***easily
***REMOVED*******REMOVED***query***REMOVED***(the***REMOVED***ordered***REMOVED***arrays***REMOVED***in***REMOVED***the***REMOVED***`this.__generatedMappings`***REMOVED***and
***REMOVED*******REMOVED***`this.__originalMappings`***REMOVED***properties).
***REMOVED****/
SourceMapConsumer.prototype._parseMappings***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_parseMappings(aStr,***REMOVED***aSourceRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Subclasses***REMOVED***must***REMOVED***implement***REMOVED***_parseMappings");
***REMOVED******REMOVED***};

SourceMapConsumer.GENERATED_ORDER***REMOVED***=***REMOVED***1;
SourceMapConsumer.ORIGINAL_ORDER***REMOVED***=***REMOVED***2;

SourceMapConsumer.GREATEST_LOWER_BOUND***REMOVED***=***REMOVED***1;
SourceMapConsumer.LEAST_UPPER_BOUND***REMOVED***=***REMOVED***2;

/**
***REMOVED*******REMOVED***Iterate***REMOVED***over***REMOVED***each***REMOVED***mapping***REMOVED***between***REMOVED***an***REMOVED***original***REMOVED***source/line/column***REMOVED***and***REMOVED***a
***REMOVED*******REMOVED***generated***REMOVED***line/column***REMOVED***in***REMOVED***this***REMOVED***source***REMOVED***map.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***Function***REMOVED***aCallback
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***function***REMOVED***that***REMOVED***is***REMOVED***called***REMOVED***with***REMOVED***each***REMOVED***mapping.
***REMOVED*******REMOVED***@param***REMOVED***Object***REMOVED***aContext
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Optional.***REMOVED***If***REMOVED***specified,***REMOVED***this***REMOVED***object***REMOVED***will***REMOVED***be***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***`this`***REMOVED***every
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time***REMOVED***that***REMOVED***`aCallback`***REMOVED***is***REMOVED***called.
***REMOVED*******REMOVED***@param***REMOVED***aOrder
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Either***REMOVED***`SourceMapConsumer.GENERATED_ORDER`***REMOVED***or
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`SourceMapConsumer.ORIGINAL_ORDER`.***REMOVED***Specifies***REMOVED***whether***REMOVED***you***REMOVED***want***REMOVED***to
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***iterate***REMOVED***over***REMOVED***the***REMOVED***mappings***REMOVED***sorted***REMOVED***by***REMOVED***the***REMOVED***generated***REMOVED***file's***REMOVED***line/column
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***order***REMOVED***or***REMOVED***the***REMOVED***original's***REMOVED***source/line/column***REMOVED***order,***REMOVED***respectively.***REMOVED***Defaults***REMOVED***to
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`SourceMapConsumer.GENERATED_ORDER`.
***REMOVED****/
SourceMapConsumer.prototype.eachMapping***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_eachMapping(aCallback,***REMOVED***aContext,***REMOVED***aOrder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***context***REMOVED***=***REMOVED***aContext***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***order***REMOVED***=***REMOVED***aOrder***REMOVED***||***REMOVED***SourceMapConsumer.GENERATED_ORDER;

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mappings;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(order)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***SourceMapConsumer.GENERATED_ORDER:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings***REMOVED***=***REMOVED***this._generatedMappings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***SourceMapConsumer.ORIGINAL_ORDER:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings***REMOVED***=***REMOVED***this._originalMappings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Unknown***REMOVED***order***REMOVED***of***REMOVED***iteration.");
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceRoot***REMOVED***=***REMOVED***this.sourceRoot;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***boundCallback***REMOVED***=***REMOVED***aCallback.bind(context);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***names***REMOVED***=***REMOVED***this._names;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***this._sources;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceMapURL***REMOVED***=***REMOVED***this._sourceMapURL;

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***n***REMOVED***=***REMOVED***mappings.length;***REMOVED***i***REMOVED***<***REMOVED***n;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***mappings[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***mapping.source***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***sources.at(mapping.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if(source***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.computeSourceURL(sourceRoot,***REMOVED***source,***REMOVED***sourceMapURL);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***boundCallback({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***mapping.generatedLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***mapping.generatedColumn,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***mapping.originalLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***mapping.originalColumn,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***mapping.name***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***names.at(mapping.name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Returns***REMOVED***all***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***source,
***REMOVED*******REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***provided.***REMOVED***If***REMOVED***no***REMOVED***column***REMOVED***is***REMOVED***provided,***REMOVED***returns***REMOVED***all***REMOVED***mappings
***REMOVED*******REMOVED***corresponding***REMOVED***to***REMOVED***a***REMOVED***either***REMOVED***the***REMOVED***line***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for***REMOVED***or***REMOVED***the***REMOVED***next
***REMOVED*******REMOVED***closest***REMOVED***line***REMOVED***that***REMOVED***has***REMOVED***any***REMOVED***mappings.***REMOVED***Otherwise,***REMOVED***returns***REMOVED***all***REMOVED***mappings
***REMOVED*******REMOVED***corresponding***REMOVED***to***REMOVED***the***REMOVED***given***REMOVED***line***REMOVED***and***REMOVED***either***REMOVED***the***REMOVED***column***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for
***REMOVED*******REMOVED***or***REMOVED***the***REMOVED***next***REMOVED***closest***REMOVED***column***REMOVED***that***REMOVED***has***REMOVED***any***REMOVED***offsets.
***REMOVED****
***REMOVED*******REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***Optional.***REMOVED***the***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED****
***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***objects***REMOVED***is***REMOVED***returned,***REMOVED***each***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED****/
SourceMapConsumer.prototype.allGeneratedPositionsFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_allGeneratedPositionsFor(aArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***line***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'line');

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***exact***REMOVED***match,***REMOVED***BasicSourceMapConsumer.prototype._findMapping
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***closest***REMOVED***mapping***REMOVED***less***REMOVED***than***REMOVED***the***REMOVED***needle.***REMOVED***By
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***setting***REMOVED***needle.originalColumn***REMOVED***to***REMOVED***0,***REMOVED***we***REMOVED***thus***REMOVED***find***REMOVED***the***REMOVED***last***REMOVED***mapping***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***given***REMOVED***line,***REMOVED***provided***REMOVED***such***REMOVED***a***REMOVED***mapping***REMOVED***exists.
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***util.getArg(aArgs,***REMOVED***'source'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column',***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***needle.source***REMOVED***=***REMOVED***this._findSourceIndex(needle.source);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needle.source***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mappings***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findMapping(needle,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._originalMappings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalLine",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalColumn",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByOriginalPositions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binarySearch.LEAST_UPPER_BOUND);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[index];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aArgs.column***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalLine***REMOVED***=***REMOVED***mapping.originalLine;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Iterate***REMOVED***until***REMOVED***either***REMOVED***we***REMOVED***run***REMOVED***out***REMOVED***of***REMOVED***mappings,***REMOVED***or***REMOVED***we***REMOVED***run***REMOVED***into
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***mapping***REMOVED***for***REMOVED***a***REMOVED***different***REMOVED***line***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***found.***REMOVED***Since
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mappings***REMOVED***are***REMOVED***sorted,***REMOVED***this***REMOVED***is***REMOVED***guaranteed***REMOVED***to***REMOVED***find***REMOVED***all***REMOVED***mappings***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***line***REMOVED***we***REMOVED***found.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(mapping***REMOVED***&&***REMOVED***mapping.originalLine***REMOVED***===***REMOVED***originalLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'generatedLine',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'generatedColumn',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***util.getArg(mapping,***REMOVED***'lastGeneratedColumn',***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[++index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalColumn***REMOVED***=***REMOVED***mapping.originalColumn;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Iterate***REMOVED***until***REMOVED***either***REMOVED***we***REMOVED***run***REMOVED***out***REMOVED***of***REMOVED***mappings,***REMOVED***or***REMOVED***we***REMOVED***run***REMOVED***into
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***mapping***REMOVED***for***REMOVED***a***REMOVED***different***REMOVED***line***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***were***REMOVED***searching***REMOVED***for.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Since***REMOVED***mappings***REMOVED***are***REMOVED***sorted,***REMOVED***this***REMOVED***is***REMOVED***guaranteed***REMOVED***to***REMOVED***find***REMOVED***all***REMOVED***mappings***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***line***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(mapping***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***===***REMOVED***line***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn***REMOVED***==***REMOVED***originalColumn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'generatedLine',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'generatedColumn',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***util.getArg(mapping,***REMOVED***'lastGeneratedColumn',***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[++index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mappings;
***REMOVED******REMOVED***};

exports.SourceMapConsumer***REMOVED***=***REMOVED***SourceMapConsumer;

/**
***REMOVED*******REMOVED***A***REMOVED***BasicSourceMapConsumer***REMOVED***instance***REMOVED***represents***REMOVED***a***REMOVED***parsed***REMOVED***source***REMOVED***map***REMOVED***which***REMOVED***we***REMOVED***can
***REMOVED*******REMOVED***query***REMOVED***for***REMOVED***information***REMOVED***about***REMOVED***the***REMOVED***original***REMOVED***file***REMOVED***positions***REMOVED***by***REMOVED***giving***REMOVED***it***REMOVED***a***REMOVED***file
***REMOVED*******REMOVED***position***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.
***REMOVED****
***REMOVED*******REMOVED***The***REMOVED***first***REMOVED***parameter***REMOVED***is***REMOVED***the***REMOVED***raw***REMOVED***source***REMOVED***map***REMOVED***(either***REMOVED***as***REMOVED***a***REMOVED***JSON***REMOVED***string,***REMOVED***or
***REMOVED*******REMOVED***already***REMOVED***parsed***REMOVED***to***REMOVED***an***REMOVED***object).***REMOVED***According***REMOVED***to***REMOVED***the***REMOVED***spec,***REMOVED***source***REMOVED***maps***REMOVED***have***REMOVED***the
***REMOVED*******REMOVED***following***REMOVED***attributes:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***version:***REMOVED***Which***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec***REMOVED***this***REMOVED***map***REMOVED***is***REMOVED***following.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sources:***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***URLs***REMOVED***to***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***files.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***names:***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***identifiers***REMOVED***which***REMOVED***can***REMOVED***be***REMOVED***referrenced***REMOVED***by***REMOVED***individual***REMOVED***mappings.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sourceRoot:***REMOVED***Optional.***REMOVED***The***REMOVED***URL***REMOVED***root***REMOVED***from***REMOVED***which***REMOVED***all***REMOVED***sources***REMOVED***are***REMOVED***relative.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sourcesContent:***REMOVED***Optional.***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***contents***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***files.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***mappings:***REMOVED***A***REMOVED***string***REMOVED***of***REMOVED***base64***REMOVED***VLQs***REMOVED***which***REMOVED***contain***REMOVED***the***REMOVED***actual***REMOVED***mappings.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***file:***REMOVED***Optional.***REMOVED***The***REMOVED***generated***REMOVED***file***REMOVED***this***REMOVED***source***REMOVED***map***REMOVED***is***REMOVED***associated***REMOVED***with.
***REMOVED****
***REMOVED*******REMOVED***Here***REMOVED***is***REMOVED***an***REMOVED***example***REMOVED***source***REMOVED***map,***REMOVED***taken***REMOVED***from***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec[0]:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version***REMOVED***:***REMOVED***3,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***"out.js",
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot***REMOVED***:***REMOVED***"",
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***["foo.js",***REMOVED***"bar.js"],
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***["src",***REMOVED***"maps",***REMOVED***"are",***REMOVED***"fun"],
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***"AA,AB;;ABCDE;"
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED****
***REMOVED*******REMOVED***The***REMOVED***second***REMOVED***parameter,***REMOVED***if***REMOVED***given,***REMOVED***is***REMOVED***a***REMOVED***string***REMOVED***whose***REMOVED***value***REMOVED***is***REMOVED***the***REMOVED***URL
***REMOVED*******REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***was***REMOVED***found.***REMOVED******REMOVED***This***REMOVED***URL***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***compute***REMOVED***the
***REMOVED*******REMOVED***sources***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***[0]:***REMOVED***https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
***REMOVED****/
function***REMOVED***BasicSourceMapConsumer(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***sourceMap***REMOVED***=***REMOVED***aSourceMap;
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***aSourceMap***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***util.parseSourceMapInput(aSourceMap);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***version***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'version');
***REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sources');
***REMOVED******REMOVED***//***REMOVED***Sass***REMOVED***3.3***REMOVED***leaves***REMOVED***out***REMOVED***the***REMOVED***'names'***REMOVED***array,***REMOVED***so***REMOVED***we***REMOVED***deviate***REMOVED***from***REMOVED***the***REMOVED***spec***REMOVED***(which
***REMOVED******REMOVED***//***REMOVED***requires***REMOVED***the***REMOVED***array)***REMOVED***to***REMOVED***play***REMOVED***nice***REMOVED***here.
***REMOVED******REMOVED***var***REMOVED***names***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'names',***REMOVED***[]);
***REMOVED******REMOVED***var***REMOVED***sourceRoot***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sourceRoot',***REMOVED***null);
***REMOVED******REMOVED***var***REMOVED***sourcesContent***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sourcesContent',***REMOVED***null);
***REMOVED******REMOVED***var***REMOVED***mappings***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'mappings');
***REMOVED******REMOVED***var***REMOVED***file***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'file',***REMOVED***null);

***REMOVED******REMOVED***//***REMOVED***Once***REMOVED***again,***REMOVED***Sass***REMOVED***deviates***REMOVED***from***REMOVED***the***REMOVED***spec***REMOVED***and***REMOVED***supplies***REMOVED***the***REMOVED***version***REMOVED***as***REMOVED***a
***REMOVED******REMOVED***//***REMOVED***string***REMOVED***rather***REMOVED***than***REMOVED***a***REMOVED***number,***REMOVED***so***REMOVED***we***REMOVED***use***REMOVED***loose***REMOVED***equality***REMOVED***checking***REMOVED***here.
***REMOVED******REMOVED***if***REMOVED***(version***REMOVED***!=***REMOVED***this._version)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Unsupported***REMOVED***version:***REMOVED***'***REMOVED***+***REMOVED***version);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(sourceRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot***REMOVED***=***REMOVED***util.normalize(sourceRoot);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***sources***REMOVED***=***REMOVED***sources
***REMOVED******REMOVED******REMOVED******REMOVED***.map(String)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Some***REMOVED***source***REMOVED***maps***REMOVED***produce***REMOVED***relative***REMOVED***source***REMOVED***paths***REMOVED***like***REMOVED***"./foo.js"***REMOVED***instead***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"foo.js".***REMOVED******REMOVED***Normalize***REMOVED***these***REMOVED***first***REMOVED***so***REMOVED***that***REMOVED***future***REMOVED***comparisons***REMOVED***will***REMOVED***succeed.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***See***REMOVED***bugzil.la/1090768.
***REMOVED******REMOVED******REMOVED******REMOVED***.map(util.normalize)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Always***REMOVED***ensure***REMOVED***that***REMOVED***absolute***REMOVED***sources***REMOVED***are***REMOVED***internally***REMOVED***stored***REMOVED***relative***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***source***REMOVED***root,***REMOVED***if***REMOVED***the***REMOVED***source***REMOVED***root***REMOVED***is***REMOVED***absolute.***REMOVED***Not***REMOVED***doing***REMOVED***this***REMOVED***would
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***be***REMOVED***particularly***REMOVED***problematic***REMOVED***when***REMOVED***the***REMOVED***source***REMOVED***root***REMOVED***is***REMOVED***a***REMOVED***prefix***REMOVED***of***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***source***REMOVED***(valid,***REMOVED***but***REMOVED***why??).***REMOVED***See***REMOVED***github***REMOVED***issue***REMOVED***#199***REMOVED***and***REMOVED***bugzil.la/1188982.
***REMOVED******REMOVED******REMOVED******REMOVED***.map(function***REMOVED***(source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sourceRoot***REMOVED***&&***REMOVED***util.isAbsolute(sourceRoot)***REMOVED***&&***REMOVED***util.isAbsolute(source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***util.relative(sourceRoot,***REMOVED***source)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED***//***REMOVED***Pass***REMOVED***`true`***REMOVED***below***REMOVED***to***REMOVED***allow***REMOVED***duplicate***REMOVED***names***REMOVED***and***REMOVED***sources.***REMOVED***While***REMOVED***source***REMOVED***maps
***REMOVED******REMOVED***//***REMOVED***are***REMOVED***intended***REMOVED***to***REMOVED***be***REMOVED***compressed***REMOVED***and***REMOVED***deduplicated,***REMOVED***the***REMOVED***TypeScript***REMOVED***compiler
***REMOVED******REMOVED***//***REMOVED***sometimes***REMOVED***generates***REMOVED***source***REMOVED***maps***REMOVED***with***REMOVED***duplicates***REMOVED***in***REMOVED***them.***REMOVED***See***REMOVED***Github***REMOVED***issue
***REMOVED******REMOVED***//***REMOVED***#72***REMOVED***and***REMOVED***bugzil.la/889492.
***REMOVED******REMOVED***this._names***REMOVED***=***REMOVED***ArraySet.fromArray(names.map(String),***REMOVED***true);
***REMOVED******REMOVED***this._sources***REMOVED***=***REMOVED***ArraySet.fromArray(sources,***REMOVED***true);

***REMOVED******REMOVED***this._absoluteSources***REMOVED***=***REMOVED***this._sources.toArray().map(function***REMOVED***(s)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***util.computeSourceURL(sourceRoot,***REMOVED***s,***REMOVED***aSourceMapURL);
***REMOVED******REMOVED***});

***REMOVED******REMOVED***this.sourceRoot***REMOVED***=***REMOVED***sourceRoot;
***REMOVED******REMOVED***this.sourcesContent***REMOVED***=***REMOVED***sourcesContent;
***REMOVED******REMOVED***this._mappings***REMOVED***=***REMOVED***mappings;
***REMOVED******REMOVED***this._sourceMapURL***REMOVED***=***REMOVED***aSourceMapURL;
***REMOVED******REMOVED***this.file***REMOVED***=***REMOVED***file;
}

BasicSourceMapConsumer.prototype***REMOVED***=***REMOVED***Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer***REMOVED***=***REMOVED***SourceMapConsumer;

/**
***REMOVED*******REMOVED***Utility***REMOVED***function***REMOVED***to***REMOVED***find***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***a***REMOVED***source.***REMOVED******REMOVED***Returns***REMOVED***-1***REMOVED***if***REMOVED***not
***REMOVED*******REMOVED***found.
***REMOVED****/
BasicSourceMapConsumer.prototype._findSourceIndex***REMOVED***=***REMOVED***function(aSource)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***relativeSource***REMOVED***=***REMOVED***aSource;
***REMOVED******REMOVED***if***REMOVED***(this.sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***relativeSource***REMOVED***=***REMOVED***util.relative(this.sourceRoot,***REMOVED***relativeSource);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(this._sources.has(relativeSource))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._sources.indexOf(relativeSource);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Maybe***REMOVED***aSource***REMOVED***is***REMOVED***an***REMOVED***absolute***REMOVED***URL***REMOVED***as***REMOVED***returned***REMOVED***by***REMOVED***|sources|.***REMOVED******REMOVED***In
***REMOVED******REMOVED***//***REMOVED***this***REMOVED***case***REMOVED***we***REMOVED***can't***REMOVED***simply***REMOVED***undo***REMOVED***the***REMOVED***transform.
***REMOVED******REMOVED***var***REMOVED***i;
***REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._absoluteSources.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._absoluteSources[i]***REMOVED***==***REMOVED***aSource)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***-1;
};

/**
***REMOVED*******REMOVED***Create***REMOVED***a***REMOVED***BasicSourceMapConsumer***REMOVED***from***REMOVED***a***REMOVED***SourceMapGenerator.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***SourceMapGenerator***REMOVED***aSourceMap
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***source***REMOVED***map***REMOVED***that***REMOVED***will***REMOVED***be***REMOVED***consumed.
***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aSourceMapURL
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***URL***REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***can***REMOVED***be***REMOVED***found***REMOVED***(optional)
***REMOVED*******REMOVED***@returns***REMOVED***BasicSourceMapConsumer
***REMOVED****/
BasicSourceMapConsumer.fromSourceMap***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_fromSourceMap(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***smc***REMOVED***=***REMOVED***Object.create(BasicSourceMapConsumer.prototype);

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***names***REMOVED***=***REMOVED***smc._names***REMOVED***=***REMOVED***ArraySet.fromArray(aSourceMap._names.toArray(),***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***smc._sources***REMOVED***=***REMOVED***ArraySet.fromArray(aSourceMap._sources.toArray(),***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***smc.sourceRoot***REMOVED***=***REMOVED***aSourceMap._sourceRoot;
***REMOVED******REMOVED******REMOVED******REMOVED***smc.sourcesContent***REMOVED***=***REMOVED***aSourceMap._generateSourcesContent(smc._sources.toArray(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***smc.sourceRoot);
***REMOVED******REMOVED******REMOVED******REMOVED***smc.file***REMOVED***=***REMOVED***aSourceMap._file;
***REMOVED******REMOVED******REMOVED******REMOVED***smc._sourceMapURL***REMOVED***=***REMOVED***aSourceMapURL;
***REMOVED******REMOVED******REMOVED******REMOVED***smc._absoluteSources***REMOVED***=***REMOVED***smc._sources.toArray().map(function***REMOVED***(s)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***util.computeSourceURL(smc.sourceRoot,***REMOVED***s,***REMOVED***aSourceMapURL);
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Because***REMOVED***we***REMOVED***are***REMOVED***modifying***REMOVED***the***REMOVED***entries***REMOVED***(by***REMOVED***converting***REMOVED***string***REMOVED***sources***REMOVED***and
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***names***REMOVED***to***REMOVED***indices***REMOVED***into***REMOVED***the***REMOVED***sources***REMOVED***and***REMOVED***names***REMOVED***ArraySets),***REMOVED***we***REMOVED***have***REMOVED***to***REMOVED***make
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the***REMOVED***entry***REMOVED***or***REMOVED***else***REMOVED***bad***REMOVED***things***REMOVED***happen.***REMOVED***Shared***REMOVED***mutable***REMOVED***state
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***strikes***REMOVED***again!***REMOVED***See***REMOVED***github***REMOVED***issue***REMOVED***#191.

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedMappings***REMOVED***=***REMOVED***aSourceMap._mappings.toArray().slice();
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***destGeneratedMappings***REMOVED***=***REMOVED***smc.__generatedMappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***destOriginalMappings***REMOVED***=***REMOVED***smc.__originalMappings***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***generatedMappings.length;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***srcMapping***REMOVED***=***REMOVED***generatedMappings[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***destMapping***REMOVED***=***REMOVED***new***REMOVED***Mapping;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.generatedLine***REMOVED***=***REMOVED***srcMapping.generatedLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.generatedColumn***REMOVED***=***REMOVED***srcMapping.generatedColumn;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(srcMapping.source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.source***REMOVED***=***REMOVED***sources.indexOf(srcMapping.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.originalLine***REMOVED***=***REMOVED***srcMapping.originalLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.originalColumn***REMOVED***=***REMOVED***srcMapping.originalColumn;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(srcMapping.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.name***REMOVED***=***REMOVED***names.indexOf(srcMapping.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destOriginalMappings.push(destMapping);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destGeneratedMappings.push(destMapping);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(smc.__originalMappings,***REMOVED***util.compareByOriginalPositions);

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***smc;
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***The***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***mapping***REMOVED***spec***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***consuming.
***REMOVED****/
BasicSourceMapConsumer.prototype._version***REMOVED***=***REMOVED***3;

/**
***REMOVED*******REMOVED***The***REMOVED***list***REMOVED***of***REMOVED***original***REMOVED***sources.
***REMOVED****/
Object.defineProperty(BasicSourceMapConsumer.prototype,***REMOVED***'sources',***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._absoluteSources.slice();
***REMOVED******REMOVED***}
});

/**
***REMOVED*******REMOVED***Provide***REMOVED***the***REMOVED***JIT***REMOVED***with***REMOVED***a***REMOVED***nice***REMOVED***shape***REMOVED***/***REMOVED***hidden***REMOVED***class.
***REMOVED****/
function***REMOVED***Mapping()***REMOVED***{
***REMOVED******REMOVED***this.generatedLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.generatedColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***this.originalLine***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***this.originalColumn***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***null;
}

/**
***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***mappings***REMOVED***in***REMOVED***a***REMOVED***string***REMOVED***in***REMOVED***to***REMOVED***a***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***we***REMOVED***can***REMOVED***easily
***REMOVED*******REMOVED***query***REMOVED***(the***REMOVED***ordered***REMOVED***arrays***REMOVED***in***REMOVED***the***REMOVED***`this.__generatedMappings`***REMOVED***and
***REMOVED*******REMOVED***`this.__originalMappings`***REMOVED***properties).
***REMOVED****/

const***REMOVED***compareGenerated***REMOVED***=***REMOVED***util.compareByGeneratedPositionsDeflatedNoLine;
function***REMOVED***sortGenerated(array,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***l***REMOVED***=***REMOVED***array.length;
***REMOVED******REMOVED***let***REMOVED***n***REMOVED***=***REMOVED***array.length***REMOVED***-***REMOVED***start;
***REMOVED******REMOVED***if***REMOVED***(n***REMOVED***<=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(n***REMOVED***==***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***a***REMOVED***=***REMOVED***array[start];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***b***REMOVED***=***REMOVED***array[start***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(compareGenerated(a,***REMOVED***b)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array[start]***REMOVED***=***REMOVED***b;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array[start***REMOVED***+***REMOVED***1]***REMOVED***=***REMOVED***a;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(n***REMOVED***<***REMOVED***20)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***start;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***i;***REMOVED***j***REMOVED***>***REMOVED***start;***REMOVED***j--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***a***REMOVED***=***REMOVED***array[j***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***b***REMOVED***=***REMOVED***array[j];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(compareGenerated(a,***REMOVED***b)***REMOVED***<=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array[j***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***b;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array[j]***REMOVED***=***REMOVED***a;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(array,***REMOVED***compareGenerated,***REMOVED***start);
***REMOVED******REMOVED***}
}
BasicSourceMapConsumer.prototype._parseMappings***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_parseMappings(aStr,***REMOVED***aSourceRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedLine***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousOriginalLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousOriginalColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousSource***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousName***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***aStr.length;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cachedSegments***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***temp***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalMappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedMappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping,***REMOVED***str,***REMOVED***segment,***REMOVED***end,***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***subarrayStart***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aStr.charAt(index)***REMOVED***===***REMOVED***';')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sortGenerated(generatedMappings,***REMOVED***subarrayStart);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subarrayStart***REMOVED***=***REMOVED***generatedMappings.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aStr.charAt(index)***REMOVED***===***REMOVED***',')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***new***REMOVED***Mapping();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.generatedLine***REMOVED***=***REMOVED***generatedLine;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(end***REMOVED***=***REMOVED***index;***REMOVED***end***REMOVED***<***REMOVED***length;***REMOVED***end++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._charIsMappingSeparator(aStr,***REMOVED***end))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***aStr.slice(index,***REMOVED***end);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(index***REMOVED***<***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base64VLQ.decode(aStr,***REMOVED***index,***REMOVED***temp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***temp.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***temp.rest;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment.push(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Found***REMOVED***a***REMOVED***source,***REMOVED***but***REMOVED***no***REMOVED***line***REMOVED***and***REMOVED***column');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Found***REMOVED***a***REMOVED***source***REMOVED***and***REMOVED***line,***REMOVED***but***REMOVED***no***REMOVED***column');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Generated***REMOVED***column.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.generatedColumn***REMOVED***=***REMOVED***previousGeneratedColumn***REMOVED***+***REMOVED***segment[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***source.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.source***REMOVED***=***REMOVED***previousSource***REMOVED***+***REMOVED***segment[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousSource***REMOVED***+=***REMOVED***segment[1];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***line.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***=***REMOVED***previousOriginalLine***REMOVED***+***REMOVED***segment[2];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousOriginalLine***REMOVED***=***REMOVED***mapping.originalLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Lines***REMOVED***are***REMOVED***stored***REMOVED***0-based
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***+=***REMOVED***1;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***column.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn***REMOVED***=***REMOVED***previousOriginalColumn***REMOVED***+***REMOVED***segment[3];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousOriginalColumn***REMOVED***=***REMOVED***mapping.originalColumn;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***>***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***name.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.name***REMOVED***=***REMOVED***previousName***REMOVED***+***REMOVED***segment[4];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousName***REMOVED***+=***REMOVED***segment[4];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedMappings.push(mapping);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***mapping.originalLine***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentSource***REMOVED***=***REMOVED***mapping.source;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(originalMappings.length***REMOVED***<=***REMOVED***currentSource)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalMappings.push(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalMappings[currentSource]***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalMappings[currentSource]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalMappings[currentSource].push(mapping);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***sortGenerated(generatedMappings,***REMOVED***subarrayStart);
***REMOVED******REMOVED******REMOVED******REMOVED***this.__generatedMappings***REMOVED***=***REMOVED***generatedMappings;

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***originalMappings.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalMappings[i]***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quickSort(originalMappings[i],***REMOVED***util.compareByOriginalPositionsNoSource);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.__originalMappings***REMOVED***=***REMOVED***[].concat(...originalMappings);
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Find***REMOVED***the***REMOVED***mapping***REMOVED***that***REMOVED***best***REMOVED***matches***REMOVED***the***REMOVED***hypothetical***REMOVED***"needle"***REMOVED***mapping***REMOVED***that
***REMOVED*******REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for***REMOVED***in***REMOVED***the***REMOVED***given***REMOVED***"haystack"***REMOVED***of***REMOVED***mappings.
***REMOVED****/
BasicSourceMapConsumer.prototype._findMapping***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_findMapping(aNeedle,***REMOVED***aMappings,***REMOVED***aLineName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aColumnName,***REMOVED***aComparator,***REMOVED***aBias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***return***REMOVED***the***REMOVED***position***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for,***REMOVED***we***REMOVED***must***REMOVED***first***REMOVED***find***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mapping***REMOVED***for***REMOVED***the***REMOVED***given***REMOVED***position***REMOVED***and***REMOVED***then***REMOVED***return***REMOVED***the***REMOVED***opposite***REMOVED***position***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***points***REMOVED***to.***REMOVED***Because***REMOVED***the***REMOVED***mappings***REMOVED***are***REMOVED***sorted,***REMOVED***we***REMOVED***can***REMOVED***use***REMOVED***binary***REMOVED***search***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***find***REMOVED***the***REMOVED***best***REMOVED***mapping.

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aNeedle[aLineName]***REMOVED***<=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Line***REMOVED***must***REMOVED***be***REMOVED***greater***REMOVED***than***REMOVED***or***REMOVED***equal***REMOVED***to***REMOVED***1,***REMOVED***got***REMOVED***'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***+***REMOVED***aNeedle[aLineName]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aNeedle[aColumnName]***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Column***REMOVED***must***REMOVED***be***REMOVED***greater***REMOVED***than***REMOVED***or***REMOVED***equal***REMOVED***to***REMOVED***0,***REMOVED***got***REMOVED***'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***+***REMOVED***aNeedle[aColumnName]);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***binarySearch.search(aNeedle,***REMOVED***aMappings,***REMOVED***aComparator,***REMOVED***aBias);
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Compute***REMOVED***the***REMOVED***last***REMOVED***column***REMOVED***for***REMOVED***each***REMOVED***generated***REMOVED***mapping.***REMOVED***The***REMOVED***last***REMOVED***column***REMOVED***is
***REMOVED*******REMOVED***inclusive.
***REMOVED****/
BasicSourceMapConsumer.prototype.computeColumnSpans***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_computeColumnSpans()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***this._generatedMappings.length;***REMOVED***++index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._generatedMappings[index];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Mappings***REMOVED***do***REMOVED***not***REMOVED***contain***REMOVED***a***REMOVED***field***REMOVED***for***REMOVED***the***REMOVED***last***REMOVED***generated***REMOVED***columnt.***REMOVED***We
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***come***REMOVED***up***REMOVED***with***REMOVED***an***REMOVED***optimistic***REMOVED***estimate,***REMOVED***however,***REMOVED***by***REMOVED***assuming***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mappings***REMOVED***are***REMOVED***contiguous***REMOVED***(i.e.***REMOVED***given***REMOVED***two***REMOVED***consecutive***REMOVED***mappings,***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***first***REMOVED***mapping***REMOVED***ends***REMOVED***where***REMOVED***the***REMOVED***second***REMOVED***one***REMOVED***starts).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***+***REMOVED***1***REMOVED***<***REMOVED***this._generatedMappings.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextMapping***REMOVED***=***REMOVED***this._generatedMappings[index***REMOVED***+***REMOVED***1];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.generatedLine***REMOVED***===***REMOVED***nextMapping.generatedLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.lastGeneratedColumn***REMOVED***=***REMOVED***nextMapping.generatedColumn***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***last***REMOVED***mapping***REMOVED***for***REMOVED***each***REMOVED***line***REMOVED***spans***REMOVED***the***REMOVED***entire***REMOVED***line.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.lastGeneratedColumn***REMOVED***=***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***generated
***REMOVED*******REMOVED***source's***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object
***REMOVED*******REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***bias:***REMOVED***Either***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'***REMOVED***or
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'SourceMapConsumer.LEAST_UPPER_BOUND'.***REMOVED***Specifies***REMOVED***whether***REMOVED***to***REMOVED***return***REMOVED***the
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closest***REMOVED***element***REMOVED***that***REMOVED***is***REMOVED***smaller***REMOVED***than***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searching***REMOVED***for,***REMOVED***respectively,***REMOVED***if***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***cannot***REMOVED***be***REMOVED***found.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Defaults***REMOVED***to***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'.
***REMOVED****
***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***original***REMOVED***source***REMOVED***file,***REMOVED***or***REMOVED***null.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***name:***REMOVED***The***REMOVED***original***REMOVED***identifier,***REMOVED***or***REMOVED***null.
***REMOVED****/
BasicSourceMapConsumer.prototype.originalPositionFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_originalPositionFor(aArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***util.getArg(aArgs,***REMOVED***'line'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column')
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findMapping(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needle,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._generatedMappings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"generatedLine",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"generatedColumn",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByGeneratedPositionsDeflated,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.getArg(aArgs,***REMOVED***'bias',***REMOVED***SourceMapConsumer.GREATEST_LOWER_BOUND)
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._generatedMappings[index];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.generatedLine***REMOVED***===***REMOVED***needle.generatedLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***util.getArg(mapping,***REMOVED***'source',***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***this._sources.at(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.computeSourceURL(this.sourceRoot,***REMOVED***source,***REMOVED***this._sourceMapURL);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***util.getArg(mapping,***REMOVED***'name',***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***this._names.at(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'originalLine',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'originalColumn',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Return***REMOVED***true***REMOVED***if***REMOVED***we***REMOVED***have***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***every***REMOVED***source***REMOVED***in***REMOVED***the***REMOVED***source
***REMOVED*******REMOVED***map,***REMOVED***false***REMOVED***otherwise.
***REMOVED****/
BasicSourceMapConsumer.prototype.hasContentsOfAllSources***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***BasicSourceMapConsumer_hasContentsOfAllSources()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.sourcesContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent.length***REMOVED***>=***REMOVED***this._sources.size()***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.sourcesContent.some(function***REMOVED***(sc)***REMOVED***{***REMOVED***return***REMOVED***sc***REMOVED***==***REMOVED***null;***REMOVED***});
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***content.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***the***REMOVED***url***REMOVED***of***REMOVED***the
***REMOVED*******REMOVED***original***REMOVED***source***REMOVED***file.***REMOVED***Returns***REMOVED***null***REMOVED***if***REMOVED***no***REMOVED***original***REMOVED***source***REMOVED***content***REMOVED***is
***REMOVED*******REMOVED***available.
***REMOVED****/
BasicSourceMapConsumer.prototype.sourceContentFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_sourceContentFor(aSource,***REMOVED***nullOnMissing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.sourcesContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findSourceIndex(aSource);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent[index];
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***relativeSource***REMOVED***=***REMOVED***aSource;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relativeSource***REMOVED***=***REMOVED***util.relative(this.sourceRoot,***REMOVED***relativeSource);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***url;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.sourceRoot***REMOVED***!=***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***(url***REMOVED***=***REMOVED***util.urlParse(this.sourceRoot)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***XXX:***REMOVED***file://***REMOVED***URIs***REMOVED***and***REMOVED***absolute***REMOVED***paths***REMOVED***lead***REMOVED***to***REMOVED***unexpected***REMOVED***behavior***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***many***REMOVED***users.***REMOVED***We***REMOVED***can***REMOVED***help***REMOVED***them***REMOVED***out***REMOVED***when***REMOVED***they***REMOVED***expect***REMOVED***file://***REMOVED***URIs***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***behave***REMOVED***like***REMOVED***it***REMOVED***would***REMOVED***if***REMOVED***they***REMOVED***were***REMOVED***running***REMOVED***a***REMOVED***local***REMOVED***HTTP***REMOVED***server.***REMOVED***See
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***fileUriAbsPath***REMOVED***=***REMOVED***relativeSource.replace(/^file:\/\//,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(url.scheme***REMOVED***==***REMOVED***"file"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***this._sources.has(fileUriAbsPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((!url.path***REMOVED***||***REMOVED***url.path***REMOVED***==***REMOVED***"/")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***this._sources.has("/"***REMOVED***+***REMOVED***relativeSource))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent[this._sources.indexOf("/"***REMOVED***+***REMOVED***relativeSource)];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***function***REMOVED***is***REMOVED***used***REMOVED***recursively***REMOVED***from
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***IndexedSourceMapConsumer.prototype.sourceContentFor.***REMOVED***In***REMOVED***that***REMOVED***case,***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***don't***REMOVED***want***REMOVED***to***REMOVED***throw***REMOVED***if***REMOVED***we***REMOVED***can't***REMOVED***find***REMOVED***the***REMOVED***source***REMOVED***-***REMOVED***we***REMOVED***just***REMOVED***want***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***return***REMOVED***null,***REMOVED***so***REMOVED***we***REMOVED***provide***REMOVED***a***REMOVED***flag***REMOVED***to***REMOVED***exit***REMOVED***gracefully.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nullOnMissing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***relativeSource***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***SourceMap.');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***source,
***REMOVED*******REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object***REMOVED***with
***REMOVED*******REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***bias:***REMOVED***Either***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'***REMOVED***or
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'SourceMapConsumer.LEAST_UPPER_BOUND'.***REMOVED***Specifies***REMOVED***whether***REMOVED***to***REMOVED***return***REMOVED***the
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closest***REMOVED***element***REMOVED***that***REMOVED***is***REMOVED***smaller***REMOVED***than***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searching***REMOVED***for,***REMOVED***respectively,***REMOVED***if***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***cannot***REMOVED***be***REMOVED***found.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Defaults***REMOVED***to***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'.
***REMOVED****
***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED****/
BasicSourceMapConsumer.prototype.generatedPositionFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_generatedPositionFor(aArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'source');
***REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***this._findSourceIndex(source);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***util.getArg(aArgs,***REMOVED***'line'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column')
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findMapping(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needle,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._originalMappings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalLine",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalColumn",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByOriginalPositions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.getArg(aArgs,***REMOVED***'bias',***REMOVED***SourceMapConsumer.GREATEST_LOWER_BOUND)
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[index];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.source***REMOVED***===***REMOVED***needle.source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'generatedLine',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'generatedColumn',***REMOVED***null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***util.getArg(mapping,***REMOVED***'lastGeneratedColumn',***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};

exports.BasicSourceMapConsumer***REMOVED***=***REMOVED***BasicSourceMapConsumer;

/**
***REMOVED*******REMOVED***An***REMOVED***IndexedSourceMapConsumer***REMOVED***instance***REMOVED***represents***REMOVED***a***REMOVED***parsed***REMOVED***source***REMOVED***map***REMOVED***which
***REMOVED*******REMOVED***we***REMOVED***can***REMOVED***query***REMOVED***for***REMOVED***information.***REMOVED***It***REMOVED***differs***REMOVED***from***REMOVED***BasicSourceMapConsumer***REMOVED***in
***REMOVED*******REMOVED***that***REMOVED***it***REMOVED***takes***REMOVED***"indexed"***REMOVED***source***REMOVED***maps***REMOVED***(i.e.***REMOVED***ones***REMOVED***with***REMOVED***a***REMOVED***"sections"***REMOVED***field)***REMOVED***as
***REMOVED*******REMOVED***input.
***REMOVED****
***REMOVED*******REMOVED***The***REMOVED***first***REMOVED***parameter***REMOVED***is***REMOVED***a***REMOVED***raw***REMOVED***source***REMOVED***map***REMOVED***(either***REMOVED***as***REMOVED***a***REMOVED***JSON***REMOVED***string,***REMOVED***or***REMOVED***already
***REMOVED*******REMOVED***parsed***REMOVED***to***REMOVED***an***REMOVED***object).***REMOVED***According***REMOVED***to***REMOVED***the***REMOVED***spec***REMOVED***for***REMOVED***indexed***REMOVED***source***REMOVED***maps,***REMOVED***they
***REMOVED*******REMOVED***have***REMOVED***the***REMOVED***following***REMOVED***attributes:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***version:***REMOVED***Which***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec***REMOVED***this***REMOVED***map***REMOVED***is***REMOVED***following.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***file:***REMOVED***Optional.***REMOVED***The***REMOVED***generated***REMOVED***file***REMOVED***this***REMOVED***source***REMOVED***map***REMOVED***is***REMOVED***associated***REMOVED***with.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sections:***REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***section***REMOVED***definitions.
***REMOVED****
***REMOVED*******REMOVED***Each***REMOVED***value***REMOVED***under***REMOVED***the***REMOVED***"sections"***REMOVED***field***REMOVED***has***REMOVED***two***REMOVED***fields:
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***offset:***REMOVED***The***REMOVED***offset***REMOVED***into***REMOVED***the***REMOVED***original***REMOVED***specified***REMOVED***at***REMOVED***which***REMOVED***this***REMOVED***section
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***begins***REMOVED***to***REMOVED***apply,***REMOVED***defined***REMOVED***as***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***a***REMOVED***"line"***REMOVED***and***REMOVED***"column"
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***map:***REMOVED***A***REMOVED***source***REMOVED***map***REMOVED***definition.***REMOVED***This***REMOVED***source***REMOVED***map***REMOVED***could***REMOVED***also***REMOVED***be***REMOVED***indexed,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***but***REMOVED***doesn't***REMOVED***have***REMOVED***to***REMOVED***be.
***REMOVED****
***REMOVED*******REMOVED***Instead***REMOVED***of***REMOVED***the***REMOVED***"map"***REMOVED***field,***REMOVED***it's***REMOVED***also***REMOVED***possible***REMOVED***to***REMOVED***have***REMOVED***a***REMOVED***"url"***REMOVED***field
***REMOVED*******REMOVED***specifying***REMOVED***a***REMOVED***URL***REMOVED***to***REMOVED***retrieve***REMOVED***a***REMOVED***source***REMOVED***map***REMOVED***from,***REMOVED***but***REMOVED***that's***REMOVED***currently
***REMOVED*******REMOVED***unsupported.
***REMOVED****
***REMOVED*******REMOVED***Here's***REMOVED***an***REMOVED***example***REMOVED***source***REMOVED***map,***REMOVED***taken***REMOVED***from***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec[0],***REMOVED***but
***REMOVED*******REMOVED***modified***REMOVED***to***REMOVED***omit***REMOVED***a***REMOVED***section***REMOVED***which***REMOVED***uses***REMOVED***the***REMOVED***"url"***REMOVED***field.
***REMOVED****
***REMOVED*******REMOVED******REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***version***REMOVED***:***REMOVED***3,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***"app.js",
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***sections:***REMOVED***[{
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset:***REMOVED***{line:100,***REMOVED***column:10},
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version***REMOVED***:***REMOVED***3,
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***"section.js",
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***["foo.js",***REMOVED***"bar.js"],
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***["src",***REMOVED***"maps",***REMOVED***"are",***REMOVED***"fun"],
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***"AAAA,E;;ABCDE;"
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***}],
***REMOVED*******REMOVED******REMOVED***}
***REMOVED****
***REMOVED*******REMOVED***The***REMOVED***second***REMOVED***parameter,***REMOVED***if***REMOVED***given,***REMOVED***is***REMOVED***a***REMOVED***string***REMOVED***whose***REMOVED***value***REMOVED***is***REMOVED***the***REMOVED***URL
***REMOVED*******REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***was***REMOVED***found.***REMOVED******REMOVED***This***REMOVED***URL***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***compute***REMOVED***the
***REMOVED*******REMOVED***sources***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***[0]:***REMOVED***https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
***REMOVED****/
function***REMOVED***IndexedSourceMapConsumer(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***sourceMap***REMOVED***=***REMOVED***aSourceMap;
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***aSourceMap***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***util.parseSourceMapInput(aSourceMap);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***version***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'version');
***REMOVED******REMOVED***var***REMOVED***sections***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sections');

***REMOVED******REMOVED***if***REMOVED***(version***REMOVED***!=***REMOVED***this._version)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Unsupported***REMOVED***version:***REMOVED***'***REMOVED***+***REMOVED***version);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this._sources***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
***REMOVED******REMOVED***this._names***REMOVED***=***REMOVED***new***REMOVED***ArraySet();

***REMOVED******REMOVED***var***REMOVED***lastOffset***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***0
***REMOVED******REMOVED***};
***REMOVED******REMOVED***this._sections***REMOVED***=***REMOVED***sections.map(function***REMOVED***(s)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(s.url)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***url***REMOVED***field***REMOVED***will***REMOVED***require***REMOVED***support***REMOVED***for***REMOVED***asynchronicity.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***See***REMOVED***https://github.com/mozilla/source-map/issues/16
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Support***REMOVED***for***REMOVED***url***REMOVED***field***REMOVED***in***REMOVED***sections***REMOVED***not***REMOVED***implemented.');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***offset***REMOVED***=***REMOVED***util.getArg(s,***REMOVED***'offset');
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***offsetLine***REMOVED***=***REMOVED***util.getArg(offset,***REMOVED***'line');
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***offsetColumn***REMOVED***=***REMOVED***util.getArg(offset,***REMOVED***'column');

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(offsetLine***REMOVED***<***REMOVED***lastOffset.line***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(offsetLine***REMOVED***===***REMOVED***lastOffset.line***REMOVED***&&***REMOVED***offsetColumn***REMOVED***<***REMOVED***lastOffset.column))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Section***REMOVED***offsets***REMOVED***must***REMOVED***be***REMOVED***ordered***REMOVED***and***REMOVED***non-overlapping.');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***lastOffset***REMOVED***=***REMOVED***offset;

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedOffset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***offset***REMOVED***fields***REMOVED***are***REMOVED***0-based,***REMOVED***but***REMOVED***we***REMOVED***use***REMOVED***1-based***REMOVED***indices***REMOVED***when
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***encoding/decoding***REMOVED***from***REMOVED***VLQ.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***offsetLine***REMOVED***+***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***offsetColumn***REMOVED***+***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumer:***REMOVED***new***REMOVED***SourceMapConsumer(util.getArg(s,***REMOVED***'map'),***REMOVED***aSourceMapURL)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}

IndexedSourceMapConsumer.prototype***REMOVED***=***REMOVED***Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor***REMOVED***=***REMOVED***SourceMapConsumer;

/**
***REMOVED*******REMOVED***The***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***mapping***REMOVED***spec***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***consuming.
***REMOVED****/
IndexedSourceMapConsumer.prototype._version***REMOVED***=***REMOVED***3;

/**
***REMOVED*******REMOVED***The***REMOVED***list***REMOVED***of***REMOVED***original***REMOVED***sources.
***REMOVED****/
Object.defineProperty(IndexedSourceMapConsumer.prototype,***REMOVED***'sources',***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***this._sections[i].consumer.sources.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources.push(this._sections[i].consumer.sources[j]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sources;
***REMOVED******REMOVED***}
});

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***generated
***REMOVED*******REMOVED***source's***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object
***REMOVED*******REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED****
***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***original***REMOVED***source***REMOVED***file,***REMOVED***or***REMOVED***null.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***name:***REMOVED***The***REMOVED***original***REMOVED***identifier,***REMOVED***or***REMOVED***null.
***REMOVED****/
IndexedSourceMapConsumer.prototype.originalPositionFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_originalPositionFor(aArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***util.getArg(aArgs,***REMOVED***'line'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column')
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***the***REMOVED***section***REMOVED***containing***REMOVED***the***REMOVED***generated***REMOVED***position***REMOVED***we're***REMOVED***trying***REMOVED***to***REMOVED***map
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***an***REMOVED***original***REMOVED***position.
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sectionIndex***REMOVED***=***REMOVED***binarySearch.search(needle,***REMOVED***this._sections,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function(needle,***REMOVED***section)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cmp***REMOVED***=***REMOVED***needle.generatedLine***REMOVED***-***REMOVED***section.generatedOffset.generatedLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cmp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(needle.generatedColumn***REMOVED***-
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***section.generatedOffset.generatedColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[sectionIndex];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!section)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***section.consumer.originalPositionFor({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***needle.generatedLine***REMOVED***-
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***-***REMOVED***1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***needle.generatedColumn***REMOVED***-
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***===***REMOVED***needle.generatedLine
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***section.generatedOffset.generatedColumn***REMOVED***-***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bias:***REMOVED***aArgs.bias
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Return***REMOVED***true***REMOVED***if***REMOVED***we***REMOVED***have***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***every***REMOVED***source***REMOVED***in***REMOVED***the***REMOVED***source
***REMOVED*******REMOVED***map,***REMOVED***false***REMOVED***otherwise.
***REMOVED****/
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_hasContentsOfAllSources()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._sections.every(function***REMOVED***(s)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s.consumer.hasContentsOfAllSources();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***content.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***the***REMOVED***url***REMOVED***of***REMOVED***the
***REMOVED*******REMOVED***original***REMOVED***source***REMOVED***file.***REMOVED***Returns***REMOVED***null***REMOVED***if***REMOVED***no***REMOVED***original***REMOVED***source***REMOVED***content***REMOVED***is
***REMOVED*******REMOVED***available.
***REMOVED****/
IndexedSourceMapConsumer.prototype.sourceContentFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_sourceContentFor(aSource,***REMOVED***nullOnMissing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***section.consumer.sourceContentFor(aSource,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nullOnMissing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***aSource***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***SourceMap.');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***source,
***REMOVED*******REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object***REMOVED***with
***REMOVED*******REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED****
***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
***REMOVED****
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.***REMOVED***
***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
***REMOVED****/
IndexedSourceMapConsumer.prototype.generatedPositionFor***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_generatedPositionFor(aArgs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[i];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Only***REMOVED***consider***REMOVED***this***REMOVED***section***REMOVED***if***REMOVED***the***REMOVED***requested***REMOVED***source***REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***list***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***sources***REMOVED***of***REMOVED***the***REMOVED***consumer.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(section.consumer._findSourceIndex(util.getArg(aArgs,***REMOVED***'source'))***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedPosition***REMOVED***=***REMOVED***section.consumer.generatedPositionFor(aArgs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(generatedPosition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ret***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generatedPosition.line***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***-***REMOVED***1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generatedPosition.column***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***===***REMOVED***generatedPosition.line
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***section.generatedOffset.generatedColumn***REMOVED***-***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};

/**
***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***mappings***REMOVED***in***REMOVED***a***REMOVED***string***REMOVED***in***REMOVED***to***REMOVED***a***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***we***REMOVED***can***REMOVED***easily
***REMOVED*******REMOVED***query***REMOVED***(the***REMOVED***ordered***REMOVED***arrays***REMOVED***in***REMOVED***the***REMOVED***`this.__generatedMappings`***REMOVED***and
***REMOVED*******REMOVED***`this.__originalMappings`***REMOVED***properties).
***REMOVED****/
IndexedSourceMapConsumer.prototype._parseMappings***REMOVED***=
***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_parseMappings(aStr,***REMOVED***aSourceRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.__generatedMappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.__originalMappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sectionMappings***REMOVED***=***REMOVED***section.consumer._generatedMappings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***sectionMappings.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***sectionMappings[j];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***section.consumer._sources.at(mapping.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if(source***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.computeSourceURL(section.consumer.sourceRoot,***REMOVED***source,***REMOVED***this._sourceMapURL);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._sources.add(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***this._sources.indexOf(source);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***section.consumer._names.at(mapping.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._names.add(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***this._names.indexOf(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***mappings***REMOVED***coming***REMOVED***from***REMOVED***the***REMOVED***consumer***REMOVED***for***REMOVED***the***REMOVED***section***REMOVED***have
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***generated***REMOVED***positions***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***section,***REMOVED***so***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***need***REMOVED***to***REMOVED***offset***REMOVED***them***REMOVED***to***REMOVED***be***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***concatenated
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***generated***REMOVED***file.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***adjustedMapping***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***mapping.generatedLine***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***-***REMOVED***1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***mapping.generatedColumn***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***===***REMOVED***mapping.generatedLine
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***section.generatedOffset.generatedColumn***REMOVED***-***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***mapping.originalLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***mapping.originalColumn,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.__generatedMappings.push(adjustedMapping);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***adjustedMapping.originalLine***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.__originalMappings.push(adjustedMapping);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(this.__generatedMappings,***REMOVED***util.compareByGeneratedPositionsDeflated);
***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(this.__originalMappings,***REMOVED***util.compareByOriginalPositions);
***REMOVED******REMOVED***};

exports.IndexedSourceMapConsumer***REMOVED***=***REMOVED***IndexedSourceMapConsumer;
