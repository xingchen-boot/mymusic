import***REMOVED***{
***REMOVED******REMOVED***setupDevtoolsPlugin
}***REMOVED***from***REMOVED***"./chunk-ISH6AKKV.js";
import***REMOVED***{
***REMOVED******REMOVED***computed,
***REMOVED******REMOVED***defineComponent,
***REMOVED******REMOVED***getCurrentInstance,
***REMOVED******REMOVED***h,
***REMOVED******REMOVED***inject,
***REMOVED******REMOVED***nextTick,
***REMOVED******REMOVED***onActivated,
***REMOVED******REMOVED***onDeactivated,
***REMOVED******REMOVED***onUnmounted,
***REMOVED******REMOVED***provide,
***REMOVED******REMOVED***reactive,
***REMOVED******REMOVED***ref,
***REMOVED******REMOVED***shallowReactive,
***REMOVED******REMOVED***shallowRef,
***REMOVED******REMOVED***unref,
***REMOVED******REMOVED***watch,
***REMOVED******REMOVED***watchEffect
}***REMOVED***from***REMOVED***"./chunk-KKUTVOXU.js";

//***REMOVED***node_modules/.pnpm/vue-router@4.5.1_vue@3.5.21_typescript@5.9.2_/node_modules/vue-router/dist/vue-router.mjs
var***REMOVED***isBrowser***REMOVED***=***REMOVED***typeof***REMOVED***document***REMOVED***!==***REMOVED***"undefined";
function***REMOVED***isRouteComponent(component)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***component***REMOVED***===***REMOVED***"object"***REMOVED***||***REMOVED***"displayName"***REMOVED***in***REMOVED***component***REMOVED***||***REMOVED***"props"***REMOVED***in***REMOVED***component***REMOVED***||***REMOVED***"__vccOpts"***REMOVED***in***REMOVED***component;
}
function***REMOVED***isESModule(obj)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***obj.__esModule***REMOVED***||***REMOVED***obj[Symbol.toStringTag]***REMOVED***===***REMOVED***"Module"***REMOVED***||***REMOVED***//***REMOVED***support***REMOVED***CF***REMOVED***with***REMOVED***dynamic***REMOVED***imports***REMOVED***that***REMOVED***do***REMOVED***not
***REMOVED******REMOVED***//***REMOVED***add***REMOVED***the***REMOVED***Module***REMOVED***string***REMOVED***tag
***REMOVED******REMOVED***obj.default***REMOVED***&&***REMOVED***isRouteComponent(obj.default);
}
var***REMOVED***assign***REMOVED***=***REMOVED***Object.assign;
function***REMOVED***applyToParams(fn,***REMOVED***params)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***newParams***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***params[key];
***REMOVED******REMOVED******REMOVED******REMOVED***newParams[key]***REMOVED***=***REMOVED***isArray(value)***REMOVED***?***REMOVED***value.map(fn)***REMOVED***:***REMOVED***fn(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***newParams;
}
var***REMOVED***noop***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
};
var***REMOVED***isArray***REMOVED***=***REMOVED***Array.isArray;
function***REMOVED***warn(msg)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***args***REMOVED***=***REMOVED***Array.from(arguments).slice(1);
***REMOVED******REMOVED***console.warn.apply(console,***REMOVED***["[Vue***REMOVED***Router***REMOVED***warn]:***REMOVED***"***REMOVED***+***REMOVED***msg].concat(args));
}
var***REMOVED***HASH_RE***REMOVED***=***REMOVED***/#/g;
var***REMOVED***AMPERSAND_RE***REMOVED***=***REMOVED***/&/g;
var***REMOVED***SLASH_RE***REMOVED***=***REMOVED***/\//g;
var***REMOVED***EQUAL_RE***REMOVED***=***REMOVED***/=/g;
var***REMOVED***IM_RE***REMOVED***=***REMOVED***/\?/g;
var***REMOVED***PLUS_RE***REMOVED***=***REMOVED***/\+/g;
var***REMOVED***ENC_BRACKET_OPEN_RE***REMOVED***=***REMOVED***/%5B/g;
var***REMOVED***ENC_BRACKET_CLOSE_RE***REMOVED***=***REMOVED***/%5D/g;
var***REMOVED***ENC_CARET_RE***REMOVED***=***REMOVED***/%5E/g;
var***REMOVED***ENC_BACKTICK_RE***REMOVED***=***REMOVED***/%60/g;
var***REMOVED***ENC_CURLY_OPEN_RE***REMOVED***=***REMOVED***/%7B/g;
var***REMOVED***ENC_PIPE_RE***REMOVED***=***REMOVED***/%7C/g;
var***REMOVED***ENC_CURLY_CLOSE_RE***REMOVED***=***REMOVED***/%7D/g;
var***REMOVED***ENC_SPACE_RE***REMOVED***=***REMOVED***/%20/g;
function***REMOVED***commonEncode(text)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***encodeURI(""***REMOVED***+***REMOVED***text).replace(ENC_PIPE_RE,***REMOVED***"|").replace(ENC_BRACKET_OPEN_RE,***REMOVED***"[").replace(ENC_BRACKET_CLOSE_RE,***REMOVED***"]");
}
function***REMOVED***encodeHash(text)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***commonEncode(text).replace(ENC_CURLY_OPEN_RE,***REMOVED***"{").replace(ENC_CURLY_CLOSE_RE,***REMOVED***"}").replace(ENC_CARET_RE,***REMOVED***"^");
}
function***REMOVED***encodeQueryValue(text)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***commonEncode(text).replace(PLUS_RE,***REMOVED***"%2B").replace(ENC_SPACE_RE,***REMOVED***"+").replace(HASH_RE,***REMOVED***"%23").replace(AMPERSAND_RE,***REMOVED***"%26").replace(ENC_BACKTICK_RE,***REMOVED***"`").replace(ENC_CURLY_OPEN_RE,***REMOVED***"{").replace(ENC_CURLY_CLOSE_RE,***REMOVED***"}").replace(ENC_CARET_RE,***REMOVED***"^");
}
function***REMOVED***encodeQueryKey(text)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***encodeQueryValue(text).replace(EQUAL_RE,***REMOVED***"%3D");
}
function***REMOVED***encodePath(text)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***commonEncode(text).replace(HASH_RE,***REMOVED***"%23").replace(IM_RE,***REMOVED***"%3F");
}
function***REMOVED***encodeParam(text)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***text***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***encodePath(text).replace(SLASH_RE,***REMOVED***"%2F");
}
function***REMOVED***decode(text)***REMOVED***{
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***decodeURIComponent(""***REMOVED***+***REMOVED***text);
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`Error***REMOVED***decoding***REMOVED***"${text}".***REMOVED***Using***REMOVED***original***REMOVED***value`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***""***REMOVED***+***REMOVED***text;
}
var***REMOVED***TRAILING_SLASH_RE***REMOVED***=***REMOVED***/\/$/;
var***REMOVED***removeTrailingSlash***REMOVED***=***REMOVED***(path)***REMOVED***=>***REMOVED***path.replace(TRAILING_SLASH_RE,***REMOVED***"");
function***REMOVED***parseURL(parseQuery2,***REMOVED***location2,***REMOVED***currentLocation***REMOVED***=***REMOVED***"/")***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***path,***REMOVED***query***REMOVED***=***REMOVED***{},***REMOVED***searchString***REMOVED***=***REMOVED***"",***REMOVED***hash***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***const***REMOVED***hashPos***REMOVED***=***REMOVED***location2.indexOf("#");
***REMOVED******REMOVED***let***REMOVED***searchPos***REMOVED***=***REMOVED***location2.indexOf("?");
***REMOVED******REMOVED***if***REMOVED***(hashPos***REMOVED***<***REMOVED***searchPos***REMOVED***&&***REMOVED***hashPos***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***searchPos***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(searchPos***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***location2.slice(0,***REMOVED***searchPos);
***REMOVED******REMOVED******REMOVED******REMOVED***searchString***REMOVED***=***REMOVED***location2.slice(searchPos***REMOVED***+***REMOVED***1,***REMOVED***hashPos***REMOVED***>***REMOVED***-1***REMOVED***?***REMOVED***hashPos***REMOVED***:***REMOVED***location2.length);
***REMOVED******REMOVED******REMOVED******REMOVED***query***REMOVED***=***REMOVED***parseQuery2(searchString);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hashPos***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***path***REMOVED***||***REMOVED***location2.slice(0,***REMOVED***hashPos);
***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***location2.slice(hashPos,***REMOVED***location2.length);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***path***REMOVED***=***REMOVED***resolveRelativePath(path***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***path***REMOVED***:***REMOVED***location2,***REMOVED***currentLocation);
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fullPath:***REMOVED***path***REMOVED***+***REMOVED***(searchString***REMOVED***&&***REMOVED***"?")***REMOVED***+***REMOVED***searchString***REMOVED***+***REMOVED***hash,
***REMOVED******REMOVED******REMOVED******REMOVED***path,
***REMOVED******REMOVED******REMOVED******REMOVED***query,
***REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***decode(hash)
***REMOVED******REMOVED***};
}
function***REMOVED***stringifyURL(stringifyQuery2,***REMOVED***location2)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***query***REMOVED***=***REMOVED***location2.query***REMOVED***?***REMOVED***stringifyQuery2(location2.query)***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED***return***REMOVED***location2.path***REMOVED***+***REMOVED***(query***REMOVED***&&***REMOVED***"?")***REMOVED***+***REMOVED***query***REMOVED***+***REMOVED***(location2.hash***REMOVED***||***REMOVED***"");
}
function***REMOVED***stripBase(pathname,***REMOVED***base)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!base***REMOVED***||***REMOVED***!pathname.toLowerCase().startsWith(base.toLowerCase()))
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pathname;
***REMOVED******REMOVED***return***REMOVED***pathname.slice(base.length)***REMOVED***||***REMOVED***"/";
}
function***REMOVED***isSameRouteLocation(stringifyQuery2,***REMOVED***a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***aLastIndex***REMOVED***=***REMOVED***a.matched.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***const***REMOVED***bLastIndex***REMOVED***=***REMOVED***b.matched.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***return***REMOVED***aLastIndex***REMOVED***>***REMOVED***-1***REMOVED***&&***REMOVED***aLastIndex***REMOVED***===***REMOVED***bLastIndex***REMOVED***&&***REMOVED***isSameRouteRecord(a.matched[aLastIndex],***REMOVED***b.matched[bLastIndex])***REMOVED***&&***REMOVED***isSameRouteLocationParams(a.params,***REMOVED***b.params)***REMOVED***&&***REMOVED***stringifyQuery2(a.query)***REMOVED***===***REMOVED***stringifyQuery2(b.query)***REMOVED***&&***REMOVED***a.hash***REMOVED***===***REMOVED***b.hash;
}
function***REMOVED***isSameRouteRecord(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(a.aliasOf***REMOVED***||***REMOVED***a)***REMOVED***===***REMOVED***(b.aliasOf***REMOVED***||***REMOVED***b);
}
function***REMOVED***isSameRouteLocationParams(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Object.keys(a).length***REMOVED***!==***REMOVED***Object.keys(b).length)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***a)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isSameRouteLocationParamsValue(a[key],***REMOVED***b[key]))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***isSameRouteLocationParamsValue(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isArray(a)***REMOVED***?***REMOVED***isEquivalentArray(a,***REMOVED***b)***REMOVED***:***REMOVED***isArray(b)***REMOVED***?***REMOVED***isEquivalentArray(b,***REMOVED***a)***REMOVED***:***REMOVED***a***REMOVED***===***REMOVED***b;
}
function***REMOVED***isEquivalentArray(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isArray(b)***REMOVED***?***REMOVED***a.length***REMOVED***===***REMOVED***b.length***REMOVED***&&***REMOVED***a.every((value,***REMOVED***i)***REMOVED***=>***REMOVED***value***REMOVED***===***REMOVED***b[i])***REMOVED***:***REMOVED***a.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***a[0]***REMOVED***===***REMOVED***b;
}
function***REMOVED***resolveRelativePath(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(to.startsWith("/"))
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***to;
***REMOVED******REMOVED***if***REMOVED***(!from.startsWith("/"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`Cannot***REMOVED***resolve***REMOVED***a***REMOVED***relative***REMOVED***location***REMOVED***without***REMOVED***an***REMOVED***absolute***REMOVED***path.***REMOVED***Trying***REMOVED***to***REMOVED***resolve***REMOVED***"${to}"***REMOVED***from***REMOVED***"${from}".***REMOVED***It***REMOVED***should***REMOVED***look***REMOVED***like***REMOVED***"/${from}".`);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***to;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!to)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***from;
***REMOVED******REMOVED***const***REMOVED***fromSegments***REMOVED***=***REMOVED***from.split("/");
***REMOVED******REMOVED***const***REMOVED***toSegments***REMOVED***=***REMOVED***to.split("/");
***REMOVED******REMOVED***const***REMOVED***lastToSegment***REMOVED***=***REMOVED***toSegments[toSegments.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***if***REMOVED***(lastToSegment***REMOVED***===***REMOVED***".."***REMOVED***||***REMOVED***lastToSegment***REMOVED***===***REMOVED***".")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***toSegments.push("");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***position***REMOVED***=***REMOVED***fromSegments.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***let***REMOVED***toPosition;
***REMOVED******REMOVED***let***REMOVED***segment;
***REMOVED******REMOVED***for***REMOVED***(toPosition***REMOVED***=***REMOVED***0;***REMOVED***toPosition***REMOVED***<***REMOVED***toSegments.length;***REMOVED***toPosition++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***segment***REMOVED***=***REMOVED***toSegments[toPosition];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment***REMOVED***===***REMOVED***".")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment***REMOVED***===***REMOVED***"..")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(position***REMOVED***>***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position--;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***fromSegments.slice(0,***REMOVED***position).join("/")***REMOVED***+***REMOVED***"/"***REMOVED***+***REMOVED***toSegments.slice(toPosition).join("/");
}
var***REMOVED***START_LOCATION_NORMALIZED***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***path:***REMOVED***"/",
***REMOVED******REMOVED***//***REMOVED***TODO:***REMOVED***could***REMOVED***we***REMOVED***use***REMOVED***a***REMOVED***symbol***REMOVED***in***REMOVED***the***REMOVED***future?
***REMOVED******REMOVED***name:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED***params:***REMOVED***{},
***REMOVED******REMOVED***query:***REMOVED***{},
***REMOVED******REMOVED***hash:***REMOVED***"",
***REMOVED******REMOVED***fullPath:***REMOVED***"/",
***REMOVED******REMOVED***matched:***REMOVED***[],
***REMOVED******REMOVED***meta:***REMOVED***{},
***REMOVED******REMOVED***redirectedFrom:***REMOVED***void***REMOVED***0
};
var***REMOVED***NavigationType;
(function(NavigationType2)***REMOVED***{
***REMOVED******REMOVED***NavigationType2["pop"]***REMOVED***=***REMOVED***"pop";
***REMOVED******REMOVED***NavigationType2["push"]***REMOVED***=***REMOVED***"push";
})(NavigationType***REMOVED***||***REMOVED***(NavigationType***REMOVED***=***REMOVED***{}));
var***REMOVED***NavigationDirection;
(function(NavigationDirection2)***REMOVED***{
***REMOVED******REMOVED***NavigationDirection2["back"]***REMOVED***=***REMOVED***"back";
***REMOVED******REMOVED***NavigationDirection2["forward"]***REMOVED***=***REMOVED***"forward";
***REMOVED******REMOVED***NavigationDirection2["unknown"]***REMOVED***=***REMOVED***"";
})(NavigationDirection***REMOVED***||***REMOVED***(NavigationDirection***REMOVED***=***REMOVED***{}));
var***REMOVED***START***REMOVED***=***REMOVED***"";
function***REMOVED***normalizeBase(base)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!base)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBrowser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***baseEl***REMOVED***=***REMOVED***document.querySelector("base");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***baseEl***REMOVED***&&***REMOVED***baseEl.getAttribute("href")***REMOVED***||***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***base.replace(/^\w+:\/\/[^\/]+/,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(base[0]***REMOVED***!==***REMOVED***"/"***REMOVED***&&***REMOVED***base[0]***REMOVED***!==***REMOVED***"#")
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***=***REMOVED***"/"***REMOVED***+***REMOVED***base;
***REMOVED******REMOVED***return***REMOVED***removeTrailingSlash(base);
}
var***REMOVED***BEFORE_HASH_RE***REMOVED***=***REMOVED***/^[^#]+#/;
function***REMOVED***createHref(base,***REMOVED***location2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***base.replace(BEFORE_HASH_RE,***REMOVED***"#")***REMOVED***+***REMOVED***location2;
}
function***REMOVED***getElementPosition(el,***REMOVED***offset)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***docRect***REMOVED***=***REMOVED***document.documentElement.getBoundingClientRect();
***REMOVED******REMOVED***const***REMOVED***elRect***REMOVED***=***REMOVED***el.getBoundingClientRect();
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***behavior:***REMOVED***offset.behavior,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***elRect.left***REMOVED***-***REMOVED***docRect.left***REMOVED***-***REMOVED***(offset.left***REMOVED***||***REMOVED***0),
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***elRect.top***REMOVED***-***REMOVED***docRect.top***REMOVED***-***REMOVED***(offset.top***REMOVED***||***REMOVED***0)
***REMOVED******REMOVED***};
}
var***REMOVED***computeScrollPosition***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***left:***REMOVED***window.scrollX,
***REMOVED******REMOVED***top:***REMOVED***window.scrollY
});
function***REMOVED***scrollToPosition(position)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***scrollToOptions;
***REMOVED******REMOVED***if***REMOVED***("el"***REMOVED***in***REMOVED***position)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***positionEl***REMOVED***=***REMOVED***position.el;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isIdSelector***REMOVED***=***REMOVED***typeof***REMOVED***positionEl***REMOVED***===***REMOVED***"string"***REMOVED***&&***REMOVED***positionEl.startsWith("#");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***position.el***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isIdSelector***REMOVED***||***REMOVED***!document.getElementById(position.el.slice(1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***foundEl***REMOVED***=***REMOVED***document.querySelector(position.el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdSelector***REMOVED***&&***REMOVED***foundEl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`The***REMOVED***selector***REMOVED***"${position.el}"***REMOVED***should***REMOVED***be***REMOVED***passed***REMOVED***as***REMOVED***"el:***REMOVED***document.querySelector('${position.el}')"***REMOVED***because***REMOVED***it***REMOVED***starts***REMOVED***with***REMOVED***"#".`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`The***REMOVED***selector***REMOVED***"${position.el}"***REMOVED***is***REMOVED***invalid.***REMOVED***If***REMOVED***you***REMOVED***are***REMOVED***using***REMOVED***an***REMOVED***id***REMOVED***selector,***REMOVED***make***REMOVED***sure***REMOVED***to***REMOVED***escape***REMOVED***it.***REMOVED***You***REMOVED***can***REMOVED***find***REMOVED***more***REMOVED***information***REMOVED***about***REMOVED***escaping***REMOVED***characters***REMOVED***in***REMOVED***selectors***REMOVED***at***REMOVED***https://mathiasbynens.be/notes/css-escapes***REMOVED***or***REMOVED***use***REMOVED***CSS.escape***REMOVED***(https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***typeof***REMOVED***positionEl***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***isIdSelector***REMOVED***?***REMOVED***document.getElementById(positionEl.slice(1))***REMOVED***:***REMOVED***document.querySelector(positionEl)***REMOVED***:***REMOVED***positionEl;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Couldn't***REMOVED***find***REMOVED***element***REMOVED***using***REMOVED***selector***REMOVED***"${position.el}"***REMOVED***returned***REMOVED***by***REMOVED***scrollBehavior.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***scrollToOptions***REMOVED***=***REMOVED***getElementPosition(el,***REMOVED***position);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***scrollToOptions***REMOVED***=***REMOVED***position;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***("scrollBehavior"***REMOVED***in***REMOVED***document.documentElement.style)
***REMOVED******REMOVED******REMOVED******REMOVED***window.scrollTo(scrollToOptions);
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***window.scrollTo(scrollToOptions.left***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***scrollToOptions.left***REMOVED***:***REMOVED***window.scrollX,***REMOVED***scrollToOptions.top***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***scrollToOptions.top***REMOVED***:***REMOVED***window.scrollY);
***REMOVED******REMOVED***}
}
function***REMOVED***getScrollKey(path,***REMOVED***delta)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***position***REMOVED***=***REMOVED***history.state***REMOVED***?***REMOVED***history.state.position***REMOVED***-***REMOVED***delta***REMOVED***:***REMOVED***-1;
***REMOVED******REMOVED***return***REMOVED***position***REMOVED***+***REMOVED***path;
}
var***REMOVED***scrollPositions***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
function***REMOVED***saveScrollPosition(key,***REMOVED***scrollPosition)***REMOVED***{
***REMOVED******REMOVED***scrollPositions.set(key,***REMOVED***scrollPosition);
}
function***REMOVED***getSavedScrollPosition(key)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***scroll***REMOVED***=***REMOVED***scrollPositions.get(key);
***REMOVED******REMOVED***scrollPositions.delete(key);
***REMOVED******REMOVED***return***REMOVED***scroll;
}
var***REMOVED***createBaseLocation***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***location.protocol***REMOVED***+***REMOVED***"//"***REMOVED***+***REMOVED***location.host;
function***REMOVED***createCurrentLocation(base,***REMOVED***location2)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***pathname,***REMOVED***search,***REMOVED***hash***REMOVED***}***REMOVED***=***REMOVED***location2;
***REMOVED******REMOVED***const***REMOVED***hashPos***REMOVED***=***REMOVED***base.indexOf("#");
***REMOVED******REMOVED***if***REMOVED***(hashPos***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***slicePos***REMOVED***=***REMOVED***hash.includes(base.slice(hashPos))***REMOVED***?***REMOVED***base.slice(hashPos).length***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***pathFromHash***REMOVED***=***REMOVED***hash.slice(slicePos);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pathFromHash[0]***REMOVED***!==***REMOVED***"/")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pathFromHash***REMOVED***=***REMOVED***"/"***REMOVED***+***REMOVED***pathFromHash;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stripBase(pathFromHash,***REMOVED***"");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***path***REMOVED***=***REMOVED***stripBase(pathname,***REMOVED***base);
***REMOVED******REMOVED***return***REMOVED***path***REMOVED***+***REMOVED***search***REMOVED***+***REMOVED***hash;
}
function***REMOVED***useHistoryListeners(base,***REMOVED***historyState,***REMOVED***currentLocation,***REMOVED***replace)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***listeners***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***teardowns***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***pauseState***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***popStateHandler***REMOVED***=***REMOVED***({***REMOVED***state***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***to***REMOVED***=***REMOVED***createCurrentLocation(base,***REMOVED***location);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***from***REMOVED***=***REMOVED***currentLocation.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fromState***REMOVED***=***REMOVED***historyState.value;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***delta***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentLocation.value***REMOVED***=***REMOVED***to;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***historyState.value***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pauseState***REMOVED***&&***REMOVED***pauseState***REMOVED***===***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseState***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delta***REMOVED***=***REMOVED***fromState***REMOVED***?***REMOVED***state.position***REMOVED***-***REMOVED***fromState.position***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replace(to);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***listeners.forEach((listener)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***listener(currentLocation.value,***REMOVED***from,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delta,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NavigationType.pop,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***direction:***REMOVED***delta***REMOVED***?***REMOVED***delta***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***NavigationDirection.forward***REMOVED***:***REMOVED***NavigationDirection.back***REMOVED***:***REMOVED***NavigationDirection.unknown
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};
***REMOVED******REMOVED***function***REMOVED***pauseListeners()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pauseState***REMOVED***=***REMOVED***currentLocation.value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***listen(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***listeners.push(callback);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***teardown***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***listeners.indexOf(callback);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***-1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***listeners.splice(index,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***teardowns.push(teardown);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***teardown;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***beforeUnloadListener()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***history:***REMOVED***history2***REMOVED***}***REMOVED***=***REMOVED***window;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!history2.state)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***history2.replaceState(assign({},***REMOVED***history2.state,***REMOVED***{***REMOVED***scroll:***REMOVED***computeScrollPosition()***REMOVED***}),***REMOVED***"");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***destroy()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***teardown***REMOVED***of***REMOVED***teardowns)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***teardown();
***REMOVED******REMOVED******REMOVED******REMOVED***teardowns***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***window.removeEventListener("popstate",***REMOVED***popStateHandler);
***REMOVED******REMOVED******REMOVED******REMOVED***window.removeEventListener("beforeunload",***REMOVED***beforeUnloadListener);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***window.addEventListener("popstate",***REMOVED***popStateHandler);
***REMOVED******REMOVED***window.addEventListener("beforeunload",***REMOVED***beforeUnloadListener,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***passive:***REMOVED***true
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pauseListeners,
***REMOVED******REMOVED******REMOVED******REMOVED***listen,
***REMOVED******REMOVED******REMOVED******REMOVED***destroy
***REMOVED******REMOVED***};
}
function***REMOVED***buildState(back,***REMOVED***current,***REMOVED***forward,***REMOVED***replaced***REMOVED***=***REMOVED***false,***REMOVED***computeScroll***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***back,
***REMOVED******REMOVED******REMOVED******REMOVED***current,
***REMOVED******REMOVED******REMOVED******REMOVED***forward,
***REMOVED******REMOVED******REMOVED******REMOVED***replaced,
***REMOVED******REMOVED******REMOVED******REMOVED***position:***REMOVED***window.history.length,
***REMOVED******REMOVED******REMOVED******REMOVED***scroll:***REMOVED***computeScroll***REMOVED***?***REMOVED***computeScrollPosition()***REMOVED***:***REMOVED***null
***REMOVED******REMOVED***};
}
function***REMOVED***useHistoryStateNavigation(base)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***history:***REMOVED***history2,***REMOVED***location:***REMOVED***location2***REMOVED***}***REMOVED***=***REMOVED***window;
***REMOVED******REMOVED***const***REMOVED***currentLocation***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***createCurrentLocation(base,***REMOVED***location2)
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***historyState***REMOVED***=***REMOVED***{***REMOVED***value:***REMOVED***history2.state***REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(!historyState.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***changeLocation(currentLocation.value,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***back:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current:***REMOVED***currentLocation.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forward:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***length***REMOVED***is***REMOVED***off***REMOVED***by***REMOVED***one,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***decrease***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position:***REMOVED***history2.length***REMOVED***-***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replaced:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***don't***REMOVED***add***REMOVED***a***REMOVED***scroll***REMOVED***as***REMOVED***the***REMOVED***user***REMOVED***may***REMOVED***have***REMOVED***an***REMOVED***anchor,***REMOVED***and***REMOVED***we***REMOVED***want
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***scrollBehavior***REMOVED***to***REMOVED***be***REMOVED***triggered***REMOVED***without***REMOVED***a***REMOVED***saved***REMOVED***position
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scroll:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***changeLocation(to,***REMOVED***state,***REMOVED***replace2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashIndex***REMOVED***=***REMOVED***base.indexOf("#");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***url***REMOVED***=***REMOVED***hashIndex***REMOVED***>***REMOVED***-1***REMOVED***?***REMOVED***(location2.host***REMOVED***&&***REMOVED***document.querySelector("base")***REMOVED***?***REMOVED***base***REMOVED***:***REMOVED***base.slice(hashIndex))***REMOVED***+***REMOVED***to***REMOVED***:***REMOVED***createBaseLocation()***REMOVED***+***REMOVED***base***REMOVED***+***REMOVED***to;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***history2[replace2***REMOVED***?***REMOVED***"replaceState"***REMOVED***:***REMOVED***"pushState"](state,***REMOVED***"",***REMOVED***url);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***historyState.value***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn("Error***REMOVED***with***REMOVED***push/replace***REMOVED***State",***REMOVED***err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location2[replace2***REMOVED***?***REMOVED***"replace"***REMOVED***:***REMOVED***"assign"](url);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***replace(to,***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***assign({},***REMOVED***history2.state,***REMOVED***buildState(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***historyState.value.back,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***keep***REMOVED***back***REMOVED***and***REMOVED***forward***REMOVED***entries***REMOVED***but***REMOVED***override***REMOVED***current***REMOVED***position
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***historyState.value.forward,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***),***REMOVED***data,***REMOVED***{***REMOVED***position:***REMOVED***historyState.value.position***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***changeLocation(to,***REMOVED***state,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***currentLocation.value***REMOVED***=***REMOVED***to;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***push(to,***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentState***REMOVED***=***REMOVED***assign(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***current***REMOVED***history***REMOVED***state***REMOVED***to***REMOVED***gracefully***REMOVED***handle***REMOVED***a***REMOVED***wrong***REMOVED***call***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***history.replaceState
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/vuejs/router/issues/366
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***historyState.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***history2.state,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forward:***REMOVED***to,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scroll:***REMOVED***computeScrollPosition()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!history2.state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`history.state***REMOVED***seems***REMOVED***to***REMOVED***have***REMOVED***been***REMOVED***manually***REMOVED***replaced***REMOVED***without***REMOVED***preserving***REMOVED***the***REMOVED***necessary***REMOVED***values.***REMOVED***Make***REMOVED***sure***REMOVED***to***REMOVED***preserve***REMOVED***existing***REMOVED***history***REMOVED***state***REMOVED***if***REMOVED***you***REMOVED***are***REMOVED***manually***REMOVED***calling***REMOVED***history.replaceState:

history.replaceState(history.state,***REMOVED***'',***REMOVED***url)

You***REMOVED***can***REMOVED***find***REMOVED***more***REMOVED***information***REMOVED***at***REMOVED***https://router.vuejs.org/guide/migration/#Usage-of-history-state`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***changeLocation(currentState.current,***REMOVED***currentState,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***assign({},***REMOVED***buildState(currentLocation.value,***REMOVED***to,***REMOVED***null),***REMOVED***{***REMOVED***position:***REMOVED***currentState.position***REMOVED***+***REMOVED***1***REMOVED***},***REMOVED***data);
***REMOVED******REMOVED******REMOVED******REMOVED***changeLocation(to,***REMOVED***state,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***currentLocation.value***REMOVED***=***REMOVED***to;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***location:***REMOVED***currentLocation,
***REMOVED******REMOVED******REMOVED******REMOVED***state:***REMOVED***historyState,
***REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED***replace
***REMOVED******REMOVED***};
}
function***REMOVED***createWebHistory(base)***REMOVED***{
***REMOVED******REMOVED***base***REMOVED***=***REMOVED***normalizeBase(base);
***REMOVED******REMOVED***const***REMOVED***historyNavigation***REMOVED***=***REMOVED***useHistoryStateNavigation(base);
***REMOVED******REMOVED***const***REMOVED***historyListeners***REMOVED***=***REMOVED***useHistoryListeners(base,***REMOVED***historyNavigation.state,***REMOVED***historyNavigation.location,***REMOVED***historyNavigation.replace);
***REMOVED******REMOVED***function***REMOVED***go(delta,***REMOVED***triggerListeners***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!triggerListeners)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***historyListeners.pauseListeners();
***REMOVED******REMOVED******REMOVED******REMOVED***history.go(delta);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***routerHistory***REMOVED***=***REMOVED***assign({
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it's***REMOVED***overridden***REMOVED***right***REMOVED***after
***REMOVED******REMOVED******REMOVED******REMOVED***location:***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED***base,
***REMOVED******REMOVED******REMOVED******REMOVED***go,
***REMOVED******REMOVED******REMOVED******REMOVED***createHref:***REMOVED***createHref.bind(null,***REMOVED***base)
***REMOVED******REMOVED***},***REMOVED***historyNavigation,***REMOVED***historyListeners);
***REMOVED******REMOVED***Object.defineProperty(routerHistory,***REMOVED***"location",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***historyNavigation.location.value
***REMOVED******REMOVED***});
***REMOVED******REMOVED***Object.defineProperty(routerHistory,***REMOVED***"state",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***historyNavigation.state.value
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***routerHistory;
}
function***REMOVED***createMemoryHistory(base***REMOVED***=***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***listeners***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***queue***REMOVED***=***REMOVED***[[START,***REMOVED***{}]];
***REMOVED******REMOVED***let***REMOVED***position***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***base***REMOVED***=***REMOVED***normalizeBase(base);
***REMOVED******REMOVED***function***REMOVED***setLocation(location2,***REMOVED***state***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***position++;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(position***REMOVED***!==***REMOVED***queue.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queue.splice(position);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***queue.push([location2,***REMOVED***state]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***triggerListeners(to,***REMOVED***from,***REMOVED***{***REMOVED***direction,***REMOVED***delta***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***info***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***direction,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delta,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NavigationType.pop
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***callback***REMOVED***of***REMOVED***listeners)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback(to,***REMOVED***from,***REMOVED***info);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***routerHistory***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***rewritten***REMOVED***by***REMOVED***Object.defineProperty
***REMOVED******REMOVED******REMOVED******REMOVED***location:***REMOVED***START,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***rewritten***REMOVED***by***REMOVED***Object.defineProperty
***REMOVED******REMOVED******REMOVED******REMOVED***state:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***base,
***REMOVED******REMOVED******REMOVED******REMOVED***createHref:***REMOVED***createHref.bind(null,***REMOVED***base),
***REMOVED******REMOVED******REMOVED******REMOVED***replace(to,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queue.splice(position--,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setLocation(to,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***push(to,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setLocation(to,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***listen(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***listeners.push(callback);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***listeners.indexOf(callback);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***-1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***listeners.splice(index,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***destroy()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***listeners***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queue***REMOVED***=***REMOVED***[[START,***REMOVED***{}]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***go(delta,***REMOVED***shouldTrigger***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***from***REMOVED***=***REMOVED***this.location;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***direction***REMOVED***=***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***are***REMOVED***considering***REMOVED***delta***REMOVED***===***REMOVED***0***REMOVED***going***REMOVED***forward,***REMOVED***but***REMOVED***in***REMOVED***abstract***REMOVED***mode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***using***REMOVED***0***REMOVED***for***REMOVED***the***REMOVED***delta***REMOVED***doesn't***REMOVED***make***REMOVED***sense***REMOVED***like***REMOVED***it***REMOVED***does***REMOVED***in***REMOVED***html5***REMOVED***where
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it***REMOVED***reloads***REMOVED***the***REMOVED***page
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delta***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***NavigationDirection.back***REMOVED***:***REMOVED***NavigationDirection.forward
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position***REMOVED***=***REMOVED***Math.max(0,***REMOVED***Math.min(position***REMOVED***+***REMOVED***delta,***REMOVED***queue.length***REMOVED***-***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldTrigger)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***triggerListeners(this.location,***REMOVED***from,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***direction,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delta
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***Object.defineProperty(routerHistory,***REMOVED***"location",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***queue[position][0]
***REMOVED******REMOVED***});
***REMOVED******REMOVED***Object.defineProperty(routerHistory,***REMOVED***"state",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***queue[position][1]
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***routerHistory;
}
function***REMOVED***createWebHashHistory(base)***REMOVED***{
***REMOVED******REMOVED***base***REMOVED***=***REMOVED***location.host***REMOVED***?***REMOVED***base***REMOVED***||***REMOVED***location.pathname***REMOVED***+***REMOVED***location.search***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(!base.includes("#"))
***REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***+=***REMOVED***"#";
***REMOVED******REMOVED***if***REMOVED***(!base.endsWith("#/")***REMOVED***&&***REMOVED***!base.endsWith("#"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`A***REMOVED***hash***REMOVED***base***REMOVED***must***REMOVED***end***REMOVED***with***REMOVED***a***REMOVED***"#":
"${base}"***REMOVED***should***REMOVED***be***REMOVED***"${base.replace(/#.*$/,***REMOVED***"#")}".`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***createWebHistory(base);
}
function***REMOVED***isRouteLocation(route)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***route***REMOVED***===***REMOVED***"string"***REMOVED***||***REMOVED***route***REMOVED***&&***REMOVED***typeof***REMOVED***route***REMOVED***===***REMOVED***"object";
}
function***REMOVED***isRouteName(name)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***name***REMOVED***===***REMOVED***"string"***REMOVED***||***REMOVED***typeof***REMOVED***name***REMOVED***===***REMOVED***"symbol";
}
var***REMOVED***NavigationFailureSymbol***REMOVED***=***REMOVED***Symbol(true***REMOVED***?***REMOVED***"navigation***REMOVED***failure"***REMOVED***:***REMOVED***"");
var***REMOVED***NavigationFailureType;
(function(NavigationFailureType2)***REMOVED***{
***REMOVED******REMOVED***NavigationFailureType2[NavigationFailureType2["aborted"]***REMOVED***=***REMOVED***4]***REMOVED***=***REMOVED***"aborted";
***REMOVED******REMOVED***NavigationFailureType2[NavigationFailureType2["cancelled"]***REMOVED***=***REMOVED***8]***REMOVED***=***REMOVED***"cancelled";
***REMOVED******REMOVED***NavigationFailureType2[NavigationFailureType2["duplicated"]***REMOVED***=***REMOVED***16]***REMOVED***=***REMOVED***"duplicated";
})(NavigationFailureType***REMOVED***||***REMOVED***(NavigationFailureType***REMOVED***=***REMOVED***{}));
var***REMOVED***ErrorTypeMessages***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.MATCHER_NOT_FOUND***REMOVED****/
***REMOVED******REMOVED***]({***REMOVED***location:***REMOVED***location2,***REMOVED***currentLocation***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`No***REMOVED***match***REMOVED***for
***REMOVED***${JSON.stringify(location2)}${currentLocation***REMOVED***?***REMOVED***"\nwhile***REMOVED***being***REMOVED***at\n"***REMOVED***+***REMOVED***JSON.stringify(currentLocation)***REMOVED***:***REMOVED***""}`;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_GUARD_REDIRECT***REMOVED****/
***REMOVED******REMOVED***]({***REMOVED***from,***REMOVED***to***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Redirected***REMOVED***from***REMOVED***"${from.fullPath}"***REMOVED***to***REMOVED***"${stringifyRoute(to)}"***REMOVED***via***REMOVED***a***REMOVED***navigation***REMOVED***guard.`;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***4
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_ABORTED***REMOVED****/
***REMOVED******REMOVED***]({***REMOVED***from,***REMOVED***to***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Navigation***REMOVED***aborted***REMOVED***from***REMOVED***"${from.fullPath}"***REMOVED***to***REMOVED***"${to.fullPath}"***REMOVED***via***REMOVED***a***REMOVED***navigation***REMOVED***guard.`;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***8
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_CANCELLED***REMOVED****/
***REMOVED******REMOVED***]({***REMOVED***from,***REMOVED***to***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Navigation***REMOVED***cancelled***REMOVED***from***REMOVED***"${from.fullPath}"***REMOVED***to***REMOVED***"${to.fullPath}"***REMOVED***with***REMOVED***a***REMOVED***new***REMOVED***navigation.`;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***16
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_DUPLICATED***REMOVED****/
***REMOVED******REMOVED***]({***REMOVED***from,***REMOVED***to***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Avoided***REMOVED***redundant***REMOVED***navigation***REMOVED***to***REMOVED***current***REMOVED***location:***REMOVED***"${from.fullPath}".`;
***REMOVED******REMOVED***}
};
function***REMOVED***createRouterError(type,***REMOVED***params)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assign(new***REMOVED***Error(ErrorTypeMessages[type](params)),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[NavigationFailureSymbol]:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***params);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assign(new***REMOVED***Error(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[NavigationFailureSymbol]:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***params);
***REMOVED******REMOVED***}
}
function***REMOVED***isNavigationFailure(error,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***error***REMOVED***instanceof***REMOVED***Error***REMOVED***&&***REMOVED***NavigationFailureSymbol***REMOVED***in***REMOVED***error***REMOVED***&&***REMOVED***(type***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***!!(error.type***REMOVED***&***REMOVED***type));
}
var***REMOVED***propertiesToLog***REMOVED***=***REMOVED***["params",***REMOVED***"query",***REMOVED***"hash"];
function***REMOVED***stringifyRoute(to)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***to***REMOVED***===***REMOVED***"string")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***to;
***REMOVED******REMOVED***if***REMOVED***(to.path***REMOVED***!=***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***to.path;
***REMOVED******REMOVED***const***REMOVED***location2***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***propertiesToLog)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***to)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location2[key]***REMOVED***=***REMOVED***to[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***JSON.stringify(location2,***REMOVED***null,***REMOVED***2);
}
var***REMOVED***BASE_PARAM_PATTERN***REMOVED***=***REMOVED***"[^/]+?";
var***REMOVED***BASE_PATH_PARSER_OPTIONS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***sensitive:***REMOVED***false,
***REMOVED******REMOVED***strict:***REMOVED***false,
***REMOVED******REMOVED***start:***REMOVED***true,
***REMOVED******REMOVED***end:***REMOVED***true
};
var***REMOVED***REGEX_CHARS_RE***REMOVED***=***REMOVED***/[.+*?^${}()[\]/\\]/g;
function***REMOVED***tokensToParser(segments,***REMOVED***extraOptions)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***assign({},***REMOVED***BASE_PATH_PARSER_OPTIONS,***REMOVED***extraOptions);
***REMOVED******REMOVED***const***REMOVED***score***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***pattern***REMOVED***=***REMOVED***options.start***REMOVED***?***REMOVED***"^"***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***segment***REMOVED***of***REMOVED***segments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***segmentScores***REMOVED***=***REMOVED***segment.length***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***90
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***PathScore.Root***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.strict***REMOVED***&&***REMOVED***!segment.length)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***tokenIndex***REMOVED***=***REMOVED***0;***REMOVED***tokenIndex***REMOVED***<***REMOVED***segment.length;***REMOVED***tokenIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***token***REMOVED***=***REMOVED***segment[tokenIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***subSegmentScore***REMOVED***=***REMOVED***40***REMOVED***+***REMOVED***(options.sensitive***REMOVED***?***REMOVED***0.25***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.type***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tokenIndex)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***token.value.replace(REGEX_CHARS_RE,***REMOVED***"\\$&");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subSegmentScore***REMOVED***+=***REMOVED***40;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(token.type***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***value,***REMOVED***repeatable,***REMOVED***optional,***REMOVED***regexp***REMOVED***}***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keys.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***repeatable,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***re2***REMOVED***=***REMOVED***regexp***REMOVED***?***REMOVED***regexp***REMOVED***:***REMOVED***BASE_PARAM_PATTERN;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(re2***REMOVED***!==***REMOVED***BASE_PARAM_PATTERN)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subSegmentScore***REMOVED***+=***REMOVED***10;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***RegExp(`(${re2})`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Invalid***REMOVED***custom***REMOVED***RegExp***REMOVED***for***REMOVED***param***REMOVED***"${value}"***REMOVED***(${re2}):***REMOVED***`***REMOVED***+***REMOVED***err.message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***subPattern***REMOVED***=***REMOVED***repeatable***REMOVED***?***REMOVED***`((?:${re2})(?:/(?:${re2}))*)`***REMOVED***:***REMOVED***`(${re2})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tokenIndex)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subPattern***REMOVED***=***REMOVED***//***REMOVED***avoid***REMOVED***an***REMOVED***optional***REMOVED***/***REMOVED***if***REMOVED***there***REMOVED***are***REMOVED***more***REMOVED***segments***REMOVED***e.g.***REMOVED***/:p?-static
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***or***REMOVED***/:p?-:p2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional***REMOVED***&&***REMOVED***segment.length***REMOVED***<***REMOVED***2***REMOVED***?***REMOVED***`(?:/${subPattern})`***REMOVED***:***REMOVED***"/"***REMOVED***+***REMOVED***subPattern;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optional)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subPattern***REMOVED***+=***REMOVED***"?";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***subPattern;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subSegmentScore***REMOVED***+=***REMOVED***20;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optional)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subSegmentScore***REMOVED***+=***REMOVED***-8;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(repeatable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subSegmentScore***REMOVED***+=***REMOVED***-20;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(re2***REMOVED***===***REMOVED***".*")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subSegmentScore***REMOVED***+=***REMOVED***-50;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segmentScores.push(subSegmentScore);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***score.push(segmentScores);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(options.strict***REMOVED***&&***REMOVED***options.end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***score.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***score[i][score[i].length***REMOVED***-***REMOVED***1]***REMOVED***+=***REMOVED***0.7000000000000001;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!options.strict)
***REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***"/?";
***REMOVED******REMOVED***if***REMOVED***(options.end)
***REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***"$";
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(options.strict***REMOVED***&&***REMOVED***!pattern.endsWith("/"))
***REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***+=***REMOVED***"(?:/|$)";
***REMOVED******REMOVED***const***REMOVED***re***REMOVED***=***REMOVED***new***REMOVED***RegExp(pattern,***REMOVED***options.sensitive***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***"i");
***REMOVED******REMOVED***function***REMOVED***parse(path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***path.match(re);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***params***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***match.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***match[i]***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***keys[i***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params[key.name]***REMOVED***=***REMOVED***value***REMOVED***&&***REMOVED***key.repeatable***REMOVED***?***REMOVED***value.split("/")***REMOVED***:***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***params;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***stringify(params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***path***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***avoidDuplicatedSlash***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***segment***REMOVED***of***REMOVED***segments)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!avoidDuplicatedSlash***REMOVED***||***REMOVED***!path.endsWith("/"))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***+=***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***avoidDuplicatedSlash***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***token***REMOVED***of***REMOVED***segment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.type***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***+=***REMOVED***token.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(token.type***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***value,***REMOVED***repeatable,***REMOVED***optional***REMOVED***}***REMOVED***=***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***param***REMOVED***=***REMOVED***value***REMOVED***in***REMOVED***params***REMOVED***?***REMOVED***params[value]***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(param)***REMOVED***&&***REMOVED***!repeatable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Provided***REMOVED***param***REMOVED***"${value}"***REMOVED***is***REMOVED***an***REMOVED***array***REMOVED***but***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***repeatable***REMOVED***(****REMOVED***or***REMOVED***+***REMOVED***modifiers)`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***text***REMOVED***=***REMOVED***isArray(param)***REMOVED***?***REMOVED***param.join("/")***REMOVED***:***REMOVED***param;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!text)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***<***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path.endsWith("/"))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***path.slice(0,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***avoidDuplicatedSlash***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Missing***REMOVED***required***REMOVED***param***REMOVED***"${value}"`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***+=***REMOVED***text;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path***REMOVED***||***REMOVED***"/";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***re,
***REMOVED******REMOVED******REMOVED******REMOVED***score,
***REMOVED******REMOVED******REMOVED******REMOVED***keys,
***REMOVED******REMOVED******REMOVED******REMOVED***parse,
***REMOVED******REMOVED******REMOVED******REMOVED***stringify
***REMOVED******REMOVED***};
}
function***REMOVED***compareScoreArray(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***a.length***REMOVED***&&***REMOVED***i***REMOVED***<***REMOVED***b.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***diff***REMOVED***=***REMOVED***b[i]***REMOVED***-***REMOVED***a[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(diff)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***diff;
***REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***<***REMOVED***b.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***a[0]***REMOVED***===***REMOVED***40***REMOVED***+***REMOVED***40***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(a.length***REMOVED***>***REMOVED***b.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***b.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***b[0]***REMOVED***===***REMOVED***40***REMOVED***+***REMOVED***40***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***-1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***0;
}
function***REMOVED***comparePathParserScore(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***const***REMOVED***aScore***REMOVED***=***REMOVED***a.score;
***REMOVED******REMOVED***const***REMOVED***bScore***REMOVED***=***REMOVED***b.score;
***REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***aScore.length***REMOVED***&&***REMOVED***i***REMOVED***<***REMOVED***bScore.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comp***REMOVED***=***REMOVED***compareScoreArray(aScore[i],***REMOVED***bScore[i]);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comp)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***comp;
***REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(Math.abs(bScore.length***REMOVED***-***REMOVED***aScore.length)***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLastScoreNegative(aScore))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLastScoreNegative(bScore))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***bScore.length***REMOVED***-***REMOVED***aScore.length;
}
function***REMOVED***isLastScoreNegative(score)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***score[score.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***return***REMOVED***score.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***last[last.length***REMOVED***-***REMOVED***1]***REMOVED***<***REMOVED***0;
}
var***REMOVED***ROOT_TOKEN***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***type:***REMOVED***0,
***REMOVED******REMOVED***value:***REMOVED***""
};
var***REMOVED***VALID_PARAM_RE***REMOVED***=***REMOVED***/[a-zA-Z0-9_]/;
function***REMOVED***tokenizePath(path)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!path)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[[]];
***REMOVED******REMOVED***if***REMOVED***(path***REMOVED***===***REMOVED***"/")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[[ROOT_TOKEN]];
***REMOVED******REMOVED***if***REMOVED***(!path.startsWith("/"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(true***REMOVED***?***REMOVED***`Route***REMOVED***paths***REMOVED***should***REMOVED***start***REMOVED***with***REMOVED***a***REMOVED***"/":***REMOVED***"${path}"***REMOVED***should***REMOVED***be***REMOVED***"/${path}".`***REMOVED***:***REMOVED***`Invalid***REMOVED***path***REMOVED***"${path}"`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***crash(message)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`ERR***REMOVED***(${state})/"${buffer}":***REMOVED***${message}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***state***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***previousState***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***segment;
***REMOVED******REMOVED***function***REMOVED***finalizeSegment()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(segment);
***REMOVED******REMOVED******REMOVED******REMOVED***segment***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***char;
***REMOVED******REMOVED***let***REMOVED***buffer***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***customRe***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***function***REMOVED***consumeBuffer()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!buffer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(state***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***buffer
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(state***REMOVED***===***REMOVED***1***REMOVED***||***REMOVED***state***REMOVED***===***REMOVED***2***REMOVED***||***REMOVED***state***REMOVED***===***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***(char***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***char***REMOVED***===***REMOVED***"+"))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crash(`A***REMOVED***repeatable***REMOVED***param***REMOVED***(${buffer})***REMOVED***must***REMOVED***be***REMOVED***alone***REMOVED***in***REMOVED***its***REMOVED***segment.***REMOVED***eg:***REMOVED***'/:ids+.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***buffer,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***regexp:***REMOVED***customRe,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***repeatable:***REMOVED***char***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***char***REMOVED***===***REMOVED***"+",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***char***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***char***REMOVED***===***REMOVED***"?"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crash("Invalid***REMOVED***state***REMOVED***to***REMOVED***consume***REMOVED***buffer");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***buffer***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***addCharToBuffer()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***buffer***REMOVED***+=***REMOVED***char;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***path.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***char***REMOVED***=***REMOVED***path[i++];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***"\\"***REMOVED***&&***REMOVED***state***REMOVED***!==***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousState***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***"/")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(buffer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumeBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finalizeSegment();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***":")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumeBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addCharToBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***4:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addCharToBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***previousState;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***"(")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(VALID_PARAM_RE.test(char))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addCharToBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumeBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***!==***REMOVED***"*"***REMOVED***&&***REMOVED***char***REMOVED***!==***REMOVED***"?"***REMOVED***&&***REMOVED***char***REMOVED***!==***REMOVED***"+")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***2:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***")")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(customRe[customRe.length***REMOVED***-***REMOVED***1]***REMOVED***==***REMOVED***"\\")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customRe***REMOVED***=***REMOVED***customRe.slice(0,***REMOVED***-1)***REMOVED***+***REMOVED***char;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***3;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customRe***REMOVED***+=***REMOVED***char;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***3:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumeBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***!==***REMOVED***"*"***REMOVED***&&***REMOVED***char***REMOVED***!==***REMOVED***"?"***REMOVED***&&***REMOVED***char***REMOVED***!==***REMOVED***"+")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customRe***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crash("Unknown***REMOVED***state");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state***REMOVED***===***REMOVED***2)
***REMOVED******REMOVED******REMOVED******REMOVED***crash(`Unfinished***REMOVED***custom***REMOVED***RegExp***REMOVED***for***REMOVED***param***REMOVED***"${buffer}"`);
***REMOVED******REMOVED***consumeBuffer();
***REMOVED******REMOVED***finalizeSegment();
***REMOVED******REMOVED***return***REMOVED***tokens;
}
function***REMOVED***createRouteRecordMatcher(record,***REMOVED***parent,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***tokensToParser(tokenizePath(record.path),***REMOVED***options);
***REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingKeys***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***parser.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingKeys.has(key.name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Found***REMOVED***duplicated***REMOVED***params***REMOVED***with***REMOVED***name***REMOVED***"${key.name}"***REMOVED***for***REMOVED***path***REMOVED***"${record.path}".***REMOVED***Only***REMOVED***the***REMOVED***last***REMOVED***one***REMOVED***will***REMOVED***be***REMOVED***available***REMOVED***on***REMOVED***"$route.params".`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingKeys.add(key.name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***matcher***REMOVED***=***REMOVED***assign(parser,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***record,
***REMOVED******REMOVED******REMOVED******REMOVED***parent,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***these***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***populated***REMOVED***by***REMOVED***the***REMOVED***parent
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***alias:***REMOVED***[]
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matcher.record.aliasOf***REMOVED***===***REMOVED***!parent.record.aliasOf)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.children.push(matcher);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***matcher;
}
function***REMOVED***createRouterMatcher(routes,***REMOVED***globalOptions)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***matchers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***matcherMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***globalOptions***REMOVED***=***REMOVED***mergeOptions({***REMOVED***strict:***REMOVED***false,***REMOVED***end:***REMOVED***true,***REMOVED***sensitive:***REMOVED***false***REMOVED***},***REMOVED***globalOptions);
***REMOVED******REMOVED***function***REMOVED***getRecordMatcher(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***matcherMap.get(name);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***addRoute(record,***REMOVED***parent,***REMOVED***originalRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isRootAdd***REMOVED***=***REMOVED***!originalRecord;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mainNormalizedRecord***REMOVED***=***REMOVED***normalizeRouteRecord(record);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkChildMissingNameWithEmptyPath(mainNormalizedRecord,***REMOVED***parent);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***mainNormalizedRecord.aliasOf***REMOVED***=***REMOVED***originalRecord***REMOVED***&&***REMOVED***originalRecord.record;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***mergeOptions(globalOptions,***REMOVED***record);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedRecords***REMOVED***=***REMOVED***[mainNormalizedRecord];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("alias"***REMOVED***in***REMOVED***record)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aliases***REMOVED***=***REMOVED***typeof***REMOVED***record.alias***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***[record.alias]***REMOVED***:***REMOVED***record.alias;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***alias***REMOVED***of***REMOVED***aliases)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizedRecords.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***normalize***REMOVED***again***REMOVED***to***REMOVED***ensure***REMOVED***the***REMOVED***`mods`***REMOVED***property
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***being***REMOVED***non***REMOVED***enumerable
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeRouteRecord(assign({},***REMOVED***mainNormalizedRecord,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***allows***REMOVED***us***REMOVED***to***REMOVED***hold***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the***REMOVED***`components`***REMOVED***option
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***that***REMOVED***async***REMOVED***components***REMOVED***cache***REMOVED***is***REMOVED***hold***REMOVED***on***REMOVED***the***REMOVED***original***REMOVED***record
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***components:***REMOVED***originalRecord***REMOVED***?***REMOVED***originalRecord.record.components***REMOVED***:***REMOVED***mainNormalizedRecord.components,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***alias,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***might***REMOVED***be***REMOVED***the***REMOVED***child***REMOVED***of***REMOVED***an***REMOVED***alias
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aliasOf:***REMOVED***originalRecord***REMOVED***?***REMOVED***originalRecord.record***REMOVED***:***REMOVED***mainNormalizedRecord
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***aliases***REMOVED***are***REMOVED***always***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***kind***REMOVED***as***REMOVED***the***REMOVED***original***REMOVED***since***REMOVED***they
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***are***REMOVED***defined***REMOVED***on***REMOVED***the***REMOVED***same***REMOVED***record
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***matcher;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***originalMatcher;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***normalizedRecord***REMOVED***of***REMOVED***normalizedRecords)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***path***REMOVED***}***REMOVED***=***REMOVED***normalizedRecord;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***&&***REMOVED***path[0]***REMOVED***!==***REMOVED***"/")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentPath***REMOVED***=***REMOVED***parent.record.path;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***connectingSlash***REMOVED***=***REMOVED***parentPath[parentPath.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***"/"***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizedRecord.path***REMOVED***=***REMOVED***parent.record.path***REMOVED***+***REMOVED***(path***REMOVED***&&***REMOVED***connectingSlash***REMOVED***+***REMOVED***path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalizedRecord.path***REMOVED***===***REMOVED***"*")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Catch***REMOVED***all***REMOVED***routes***REMOVED***("*")***REMOVED***must***REMOVED***now***REMOVED***be***REMOVED***defined***REMOVED***using***REMOVED***a***REMOVED***param***REMOVED***with***REMOVED***a***REMOVED***custom***REMOVED***regexp.\nSee***REMOVED***more***REMOVED***at***REMOVED***https://router.vuejs.org/guide/migration/#Removed-star-or-catch-all-routes.');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher***REMOVED***=***REMOVED***createRouteRecordMatcher(normalizedRecord,***REMOVED***parent,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***&&***REMOVED***path[0]***REMOVED***===***REMOVED***"/")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkMissingParamsInAbsolutePath(matcher,***REMOVED***parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalRecord.alias.push(matcher);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkSameParams(originalRecord,***REMOVED***matcher);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalMatcher***REMOVED***=***REMOVED***originalMatcher***REMOVED***||***REMOVED***matcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalMatcher***REMOVED***!==***REMOVED***matcher)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalMatcher.alias.push(matcher);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRootAdd***REMOVED***&&***REMOVED***record.name***REMOVED***&&***REMOVED***!isAliasRecord(matcher))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkSameNameAsAncestor(record,***REMOVED***parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeRoute(record.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMatchable(matcher))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***insertMatcher(matcher);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mainNormalizedRecord.children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***mainNormalizedRecord.children;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addRoute(children[i],***REMOVED***matcher,***REMOVED***originalRecord***REMOVED***&&***REMOVED***originalRecord.children[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalRecord***REMOVED***=***REMOVED***originalRecord***REMOVED***||***REMOVED***matcher;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***originalMatcher***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeRoute(originalMatcher);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***noop;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***removeRoute(matcherRef)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRouteName(matcherRef))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matcher***REMOVED***=***REMOVED***matcherMap.get(matcherRef);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherMap.delete(matcherRef);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchers.splice(matchers.indexOf(matcher),***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher.children.forEach(removeRoute);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher.alias.forEach(removeRoute);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***matchers.indexOf(matcherRef);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchers.splice(index,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matcherRef.record.name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherMap.delete(matcherRef.record.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherRef.children.forEach(removeRoute);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherRef.alias.forEach(removeRoute);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getRoutes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***matchers;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***insertMatcher(matcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***findInsertionIndex(matcher,***REMOVED***matchers);
***REMOVED******REMOVED******REMOVED******REMOVED***matchers.splice(index,***REMOVED***0,***REMOVED***matcher);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matcher.record.name***REMOVED***&&***REMOVED***!isAliasRecord(matcher))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherMap.set(matcher.record.name,***REMOVED***matcher);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***resolve(location2,***REMOVED***currentLocation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***matcher;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***params***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***path;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("name"***REMOVED***in***REMOVED***location2***REMOVED***&&***REMOVED***location2.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher***REMOVED***=***REMOVED***matcherMap.get(location2.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matcher)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***createRouterError(1,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location:***REMOVED***location2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***invalidParams***REMOVED***=***REMOVED***Object.keys(location2.params***REMOVED***||***REMOVED***{}).filter((paramName)***REMOVED***=>***REMOVED***!matcher.keys.find((k)***REMOVED***=>***REMOVED***k.name***REMOVED***===***REMOVED***paramName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(invalidParams.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Discarded***REMOVED***invalid***REMOVED***param(s)***REMOVED***"${invalidParams.join('",***REMOVED***"')}"***REMOVED***when***REMOVED***navigating.***REMOVED***See***REMOVED***https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22***REMOVED***for***REMOVED***more***REMOVED***details.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***matcher.record.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params***REMOVED***=***REMOVED***assign(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***paramsFromLocation***REMOVED***is***REMOVED***a***REMOVED***new***REMOVED***object
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paramsFromLocation(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentLocation.params,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***only***REMOVED***keep***REMOVED***params***REMOVED***that***REMOVED***exist***REMOVED***in***REMOVED***the***REMOVED***resolved***REMOVED***location
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***only***REMOVED***keep***REMOVED***optional***REMOVED***params***REMOVED***coming***REMOVED***from***REMOVED***a***REMOVED***parent***REMOVED***record
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher.keys.filter((k)***REMOVED***=>***REMOVED***!k.optional).concat(matcher.parent***REMOVED***?***REMOVED***matcher.parent.keys.filter((k)***REMOVED***=>***REMOVED***k.optional)***REMOVED***:***REMOVED***[]).map((k)***REMOVED***=>***REMOVED***k.name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***discard***REMOVED***any***REMOVED***existing***REMOVED***params***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***location***REMOVED***that***REMOVED***do***REMOVED***not***REMOVED***exist***REMOVED***here
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#1497***REMOVED***this***REMOVED***ensures***REMOVED***better***REMOVED***active/exact***REMOVED***matching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location2.params***REMOVED***&&***REMOVED***paramsFromLocation(location2.params,***REMOVED***matcher.keys.map((k)***REMOVED***=>***REMOVED***k.name))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***matcher.stringify(params);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(location2.path***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***location2.path;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!path.startsWith("/"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`The***REMOVED***Matcher***REMOVED***cannot***REMOVED***resolve***REMOVED***relative***REMOVED***paths***REMOVED***but***REMOVED***received***REMOVED***"${path}".***REMOVED***Unless***REMOVED***you***REMOVED***directly***REMOVED***called***REMOVED***\`matcher.resolve("${path}")\`,***REMOVED***this***REMOVED***is***REMOVED***probably***REMOVED***a***REMOVED***bug***REMOVED***in***REMOVED***vue-router.***REMOVED***Please***REMOVED***open***REMOVED***an***REMOVED***issue***REMOVED***at***REMOVED***https://github.com/vuejs/router/issues/new/choose.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher***REMOVED***=***REMOVED***matchers.find((m)***REMOVED***=>***REMOVED***m.re.test(path));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params***REMOVED***=***REMOVED***matcher.parse(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***matcher.record.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher***REMOVED***=***REMOVED***currentLocation.name***REMOVED***?***REMOVED***matcherMap.get(currentLocation.name)***REMOVED***:***REMOVED***matchers.find((m)***REMOVED***=>***REMOVED***m.re.test(currentLocation.path));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matcher)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***createRouterError(1,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location:***REMOVED***location2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentLocation
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***matcher.record.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params***REMOVED***=***REMOVED***assign({},***REMOVED***currentLocation.params,***REMOVED***location2.params);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***matcher.stringify(params);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matched***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parentMatcher***REMOVED***=***REMOVED***matcher;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(parentMatcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matched.unshift(parentMatcher.record);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentMatcher***REMOVED***=***REMOVED***parentMatcher.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matched,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***mergeMetaFields(matched)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***routes.forEach((route)***REMOVED***=>***REMOVED***addRoute(route));
***REMOVED******REMOVED***function***REMOVED***clearRoutes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***matchers.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***matcherMap.clear();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***addRoute,
***REMOVED******REMOVED******REMOVED******REMOVED***resolve,
***REMOVED******REMOVED******REMOVED******REMOVED***removeRoute,
***REMOVED******REMOVED******REMOVED******REMOVED***clearRoutes,
***REMOVED******REMOVED******REMOVED******REMOVED***getRoutes,
***REMOVED******REMOVED******REMOVED******REMOVED***getRecordMatcher
***REMOVED******REMOVED***};
}
function***REMOVED***paramsFromLocation(params,***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***newParams***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***params)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newParams[key]***REMOVED***=***REMOVED***params[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***newParams;
}
function***REMOVED***normalizeRouteRecord(record)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***record.path,
***REMOVED******REMOVED******REMOVED******REMOVED***redirect:***REMOVED***record.redirect,
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***record.name,
***REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***record.meta***REMOVED***||***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***aliasOf:***REMOVED***record.aliasOf,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeEnter:***REMOVED***record.beforeEnter,
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***normalizeRecordProps(record),
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***record.children***REMOVED***||***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***instances:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***leaveGuards:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED***updateGuards:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set(),
***REMOVED******REMOVED******REMOVED******REMOVED***enterCallbacks:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***must***REMOVED***be***REMOVED***declared***REMOVED***afterwards
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mods:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***components:***REMOVED***"components"***REMOVED***in***REMOVED***record***REMOVED***?***REMOVED***record.components***REMOVED***||***REMOVED***null***REMOVED***:***REMOVED***record.component***REMOVED***&&***REMOVED***{***REMOVED***default:***REMOVED***record.component***REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***Object.defineProperty(normalized,***REMOVED***"mods",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***normalized;
}
function***REMOVED***normalizeRecordProps(record)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***propsObject***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***record.props***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***("component"***REMOVED***in***REMOVED***record)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***propsObject.default***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***in***REMOVED***record.components)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propsObject[name]***REMOVED***=***REMOVED***typeof***REMOVED***props***REMOVED***===***REMOVED***"object"***REMOVED***?***REMOVED***props[name]***REMOVED***:***REMOVED***props;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***propsObject;
}
function***REMOVED***isAliasRecord(record)***REMOVED***{
***REMOVED******REMOVED***while***REMOVED***(record)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(record.record.aliasOf)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***record***REMOVED***=***REMOVED***record.parent;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***mergeMetaFields(matched)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***matched.reduce((meta,***REMOVED***record)***REMOVED***=>***REMOVED***assign(meta,***REMOVED***record.meta),***REMOVED***{});
}
function***REMOVED***mergeOptions(defaults,***REMOVED***partialOptions)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***defaults)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options[key]***REMOVED***=***REMOVED***key***REMOVED***in***REMOVED***partialOptions***REMOVED***?***REMOVED***partialOptions[key]***REMOVED***:***REMOVED***defaults[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***options;
}
function***REMOVED***isSameParam(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***a.name***REMOVED***===***REMOVED***b.name***REMOVED***&&***REMOVED***a.optional***REMOVED***===***REMOVED***b.optional***REMOVED***&&***REMOVED***a.repeatable***REMOVED***===***REMOVED***b.repeatable;
}
function***REMOVED***checkSameParams(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***a.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!key.optional***REMOVED***&&***REMOVED***!b.keys.find(isSameParam.bind(null,***REMOVED***key)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***warn(`Alias***REMOVED***"${b.record.path}"***REMOVED***and***REMOVED***the***REMOVED***original***REMOVED***record:***REMOVED***"${a.record.path}"***REMOVED***must***REMOVED***have***REMOVED***the***REMOVED***exact***REMOVED***same***REMOVED***param***REMOVED***named***REMOVED***"${key.name}"`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***b.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!key.optional***REMOVED***&&***REMOVED***!a.keys.find(isSameParam.bind(null,***REMOVED***key)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***warn(`Alias***REMOVED***"${b.record.path}"***REMOVED***and***REMOVED***the***REMOVED***original***REMOVED***record:***REMOVED***"${a.record.path}"***REMOVED***must***REMOVED***have***REMOVED***the***REMOVED***exact***REMOVED***same***REMOVED***param***REMOVED***named***REMOVED***"${key.name}"`);
***REMOVED******REMOVED***}
}
function***REMOVED***checkChildMissingNameWithEmptyPath(mainNormalizedRecord,***REMOVED***parent)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***&&***REMOVED***parent.record.name***REMOVED***&&***REMOVED***!mainNormalizedRecord.name***REMOVED***&&***REMOVED***!mainNormalizedRecord.path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`The***REMOVED***route***REMOVED***named***REMOVED***"${String(parent.record.name)}"***REMOVED***has***REMOVED***a***REMOVED***child***REMOVED***without***REMOVED***a***REMOVED***name***REMOVED***and***REMOVED***an***REMOVED***empty***REMOVED***path.***REMOVED***Using***REMOVED***that***REMOVED***name***REMOVED***won't***REMOVED***render***REMOVED***the***REMOVED***empty***REMOVED***path***REMOVED***child***REMOVED***so***REMOVED***you***REMOVED***probably***REMOVED***want***REMOVED***to***REMOVED***move***REMOVED***the***REMOVED***name***REMOVED***to***REMOVED***the***REMOVED***child***REMOVED***instead.***REMOVED***If***REMOVED***this***REMOVED***is***REMOVED***intentional,***REMOVED***add***REMOVED***a***REMOVED***name***REMOVED***to***REMOVED***the***REMOVED***child***REMOVED***route***REMOVED***to***REMOVED***remove***REMOVED***the***REMOVED***warning.`);
***REMOVED******REMOVED***}
}
function***REMOVED***checkSameNameAsAncestor(record,***REMOVED***parent)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***ancestor***REMOVED***=***REMOVED***parent;***REMOVED***ancestor;***REMOVED***ancestor***REMOVED***=***REMOVED***ancestor.parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ancestor.record.name***REMOVED***===***REMOVED***record.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`A***REMOVED***route***REMOVED***named***REMOVED***"${String(record.name)}"***REMOVED***has***REMOVED***been***REMOVED***added***REMOVED***as***REMOVED***a***REMOVED***${parent***REMOVED***===***REMOVED***ancestor***REMOVED***?***REMOVED***"child"***REMOVED***:***REMOVED***"descendant"}***REMOVED***of***REMOVED***a***REMOVED***route***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name.***REMOVED***Route***REMOVED***names***REMOVED***must***REMOVED***be***REMOVED***unique***REMOVED***and***REMOVED***a***REMOVED***nested***REMOVED***route***REMOVED***cannot***REMOVED***use***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***an***REMOVED***ancestor.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***checkMissingParamsInAbsolutePath(record,***REMOVED***parent)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***parent.keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!record.keys.find(isSameParam.bind(null,***REMOVED***key)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***warn(`Absolute***REMOVED***path***REMOVED***"${record.record.path}"***REMOVED***must***REMOVED***have***REMOVED***the***REMOVED***exact***REMOVED***same***REMOVED***param***REMOVED***named***REMOVED***"${key.name}"***REMOVED***as***REMOVED***its***REMOVED***parent***REMOVED***"${parent.record.path}".`);
***REMOVED******REMOVED***}
}
function***REMOVED***findInsertionIndex(matcher,***REMOVED***matchers)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***lower***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***upper***REMOVED***=***REMOVED***matchers.length;
***REMOVED******REMOVED***while***REMOVED***(lower***REMOVED***!==***REMOVED***upper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mid***REMOVED***=***REMOVED***lower***REMOVED***+***REMOVED***upper***REMOVED***>>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sortOrder***REMOVED***=***REMOVED***comparePathParserScore(matcher,***REMOVED***matchers[mid]);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sortOrder***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***upper***REMOVED***=***REMOVED***mid;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lower***REMOVED***=***REMOVED***mid***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***insertionAncestor***REMOVED***=***REMOVED***getInsertionAncestor(matcher);
***REMOVED******REMOVED***if***REMOVED***(insertionAncestor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***upper***REMOVED***=***REMOVED***matchers.lastIndexOf(insertionAncestor,***REMOVED***upper***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(upper***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Finding***REMOVED***ancestor***REMOVED***route***REMOVED***"${insertionAncestor.record.path}"***REMOVED***failed***REMOVED***for***REMOVED***"${matcher.record.path}"`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***upper;
}
function***REMOVED***getInsertionAncestor(matcher)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***ancestor***REMOVED***=***REMOVED***matcher;
***REMOVED******REMOVED***while***REMOVED***(ancestor***REMOVED***=***REMOVED***ancestor.parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMatchable(ancestor)***REMOVED***&&***REMOVED***comparePathParserScore(matcher,***REMOVED***ancestor)***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ancestor;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return;
}
function***REMOVED***isMatchable({***REMOVED***record***REMOVED***})***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(record.name***REMOVED***||***REMOVED***record.components***REMOVED***&&***REMOVED***Object.keys(record.components).length***REMOVED***||***REMOVED***record.redirect);
}
function***REMOVED***parseQuery(search)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***query***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***if***REMOVED***(search***REMOVED***===***REMOVED***""***REMOVED***||***REMOVED***search***REMOVED***===***REMOVED***"?")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***query;
***REMOVED******REMOVED***const***REMOVED***hasLeadingIM***REMOVED***=***REMOVED***search[0]***REMOVED***===***REMOVED***"?";
***REMOVED******REMOVED***const***REMOVED***searchParams***REMOVED***=***REMOVED***(hasLeadingIM***REMOVED***?***REMOVED***search.slice(1)***REMOVED***:***REMOVED***search).split("&");
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***searchParams.length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***searchParam***REMOVED***=***REMOVED***searchParams[i].replace(PLUS_RE,***REMOVED***"***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***eqPos***REMOVED***=***REMOVED***searchParam.indexOf("=");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***decode(eqPos***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***searchParam***REMOVED***:***REMOVED***searchParam.slice(0,***REMOVED***eqPos));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***eqPos***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***decode(searchParam.slice(eqPos***REMOVED***+***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***query)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***currentValue***REMOVED***=***REMOVED***query[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isArray(currentValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentValue***REMOVED***=***REMOVED***query[key]***REMOVED***=***REMOVED***[currentValue];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentValue.push(value);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***query[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***query;
}
function***REMOVED***stringifyQuery(query)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***search***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***key***REMOVED***in***REMOVED***query)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***query[key];
***REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***encodeQueryKey(key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***search***REMOVED***+=***REMOVED***(search.length***REMOVED***?***REMOVED***"&"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***values***REMOVED***=***REMOVED***isArray(value)***REMOVED***?***REMOVED***value.map((v)***REMOVED***=>***REMOVED***v***REMOVED***&&***REMOVED***encodeQueryValue(v))***REMOVED***:***REMOVED***[value***REMOVED***&&***REMOVED***encodeQueryValue(value)];
***REMOVED******REMOVED******REMOVED******REMOVED***values.forEach((value2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value2***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***search***REMOVED***+=***REMOVED***(search.length***REMOVED***?***REMOVED***"&"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value2***REMOVED***!=***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***search***REMOVED***+=***REMOVED***"="***REMOVED***+***REMOVED***value2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***search;
}
function***REMOVED***normalizeQuery(query)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***normalizedQuery***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***query)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***query[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizedQuery[key]***REMOVED***=***REMOVED***isArray(value)***REMOVED***?***REMOVED***value.map((v)***REMOVED***=>***REMOVED***v***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***""***REMOVED***+***REMOVED***v)***REMOVED***:***REMOVED***value***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***""***REMOVED***+***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***normalizedQuery;
}
var***REMOVED***matchedRouteKey***REMOVED***=***REMOVED***Symbol(true***REMOVED***?***REMOVED***"router***REMOVED***view***REMOVED***location***REMOVED***matched"***REMOVED***:***REMOVED***"");
var***REMOVED***viewDepthKey***REMOVED***=***REMOVED***Symbol(true***REMOVED***?***REMOVED***"router***REMOVED***view***REMOVED***depth"***REMOVED***:***REMOVED***"");
var***REMOVED***routerKey***REMOVED***=***REMOVED***Symbol(true***REMOVED***?***REMOVED***"router"***REMOVED***:***REMOVED***"");
var***REMOVED***routeLocationKey***REMOVED***=***REMOVED***Symbol(true***REMOVED***?***REMOVED***"route***REMOVED***location"***REMOVED***:***REMOVED***"");
var***REMOVED***routerViewLocationKey***REMOVED***=***REMOVED***Symbol(true***REMOVED***?***REMOVED***"router***REMOVED***view***REMOVED***location"***REMOVED***:***REMOVED***"");
function***REMOVED***useCallbacks()***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***handlers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***function***REMOVED***add(handler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handlers.push(handler);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***handlers.indexOf(handler);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***-1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handlers.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***reset()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handlers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***add,
***REMOVED******REMOVED******REMOVED******REMOVED***list:***REMOVED***()***REMOVED***=>***REMOVED***handlers.slice(),
***REMOVED******REMOVED******REMOVED******REMOVED***reset
***REMOVED******REMOVED***};
}
function***REMOVED***registerGuard(record,***REMOVED***name,***REMOVED***guard)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***removeFromList***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***record[name].delete(guard);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***onUnmounted(removeFromList);
***REMOVED******REMOVED***onDeactivated(removeFromList);
***REMOVED******REMOVED***onActivated(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***record[name].add(guard);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***record[name].add(guard);
}
function***REMOVED***onBeforeRouteLeave(leaveGuard)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!getCurrentInstance())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn("getCurrentInstance()***REMOVED***returned***REMOVED***null.***REMOVED***onBeforeRouteLeave()***REMOVED***must***REMOVED***be***REMOVED***called***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***of***REMOVED***a***REMOVED***setup***REMOVED***function");
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***activeRecord***REMOVED***=***REMOVED***inject(
***REMOVED******REMOVED******REMOVED******REMOVED***matchedRouteKey,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***avoid***REMOVED***warning
***REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED***).value;
***REMOVED******REMOVED***if***REMOVED***(!activeRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn("No***REMOVED***active***REMOVED***route***REMOVED***record***REMOVED***was***REMOVED***found***REMOVED***when***REMOVED***calling***REMOVED***`onBeforeRouteLeave()`.***REMOVED***Make***REMOVED***sure***REMOVED***you***REMOVED***call***REMOVED***this***REMOVED***function***REMOVED***inside***REMOVED***a***REMOVED***component***REMOVED***child***REMOVED***of***REMOVED***<router-view>.***REMOVED***Maybe***REMOVED***you***REMOVED***called***REMOVED***it***REMOVED***inside***REMOVED***of***REMOVED***App.vue?");
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***registerGuard(activeRecord,***REMOVED***"leaveGuards",***REMOVED***leaveGuard);
}
function***REMOVED***onBeforeRouteUpdate(updateGuard)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!getCurrentInstance())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn("getCurrentInstance()***REMOVED***returned***REMOVED***null.***REMOVED***onBeforeRouteUpdate()***REMOVED***must***REMOVED***be***REMOVED***called***REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***of***REMOVED***a***REMOVED***setup***REMOVED***function");
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***activeRecord***REMOVED***=***REMOVED***inject(
***REMOVED******REMOVED******REMOVED******REMOVED***matchedRouteKey,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***avoid***REMOVED***warning
***REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED***).value;
***REMOVED******REMOVED***if***REMOVED***(!activeRecord)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn("No***REMOVED***active***REMOVED***route***REMOVED***record***REMOVED***was***REMOVED***found***REMOVED***when***REMOVED***calling***REMOVED***`onBeforeRouteUpdate()`.***REMOVED***Make***REMOVED***sure***REMOVED***you***REMOVED***call***REMOVED***this***REMOVED***function***REMOVED***inside***REMOVED***a***REMOVED***component***REMOVED***child***REMOVED***of***REMOVED***<router-view>.***REMOVED***Maybe***REMOVED***you***REMOVED***called***REMOVED***it***REMOVED***inside***REMOVED***of***REMOVED***App.vue?");
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***registerGuard(activeRecord,***REMOVED***"updateGuards",***REMOVED***updateGuard);
}
function***REMOVED***guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from,***REMOVED***record,***REMOVED***name,***REMOVED***runWithContext***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***fn())***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***enterCallbackArray***REMOVED***=***REMOVED***record***REMOVED***&&***REMOVED***//***REMOVED***name***REMOVED***is***REMOVED***defined***REMOVED***if***REMOVED***record***REMOVED***is***REMOVED***because***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***overload
***REMOVED******REMOVED***(record.enterCallbacks[name]***REMOVED***=***REMOVED***record.enterCallbacks[name]***REMOVED***||***REMOVED***[]);
***REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***(valid)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valid***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(createRouterError(4,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(valid***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(valid);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isRouteLocation(valid))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(createRouterError(2,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***to,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to:***REMOVED***valid
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(enterCallbackArray***REMOVED***&&***REMOVED***//***REMOVED***since***REMOVED***enterCallbackArray***REMOVED***is***REMOVED***truthy,***REMOVED***both***REMOVED***record***REMOVED***and***REMOVED***name***REMOVED***also***REMOVED***are
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.enterCallbacks[name]***REMOVED***===***REMOVED***enterCallbackArray***REMOVED***&&***REMOVED***typeof***REMOVED***valid***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enterCallbackArray.push(valid);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***guardReturn***REMOVED***=***REMOVED***runWithContext(()***REMOVED***=>***REMOVED***guard.call(record***REMOVED***&&***REMOVED***record.instances[name],***REMOVED***to,***REMOVED***from,***REMOVED***true***REMOVED***?***REMOVED***canOnlyBeCalledOnce(next,***REMOVED***to,***REMOVED***from)***REMOVED***:***REMOVED***next));
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***guardCall***REMOVED***=***REMOVED***Promise.resolve(guardReturn);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(guard.length***REMOVED***<***REMOVED***3)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guardCall***REMOVED***=***REMOVED***guardCall.then(next);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(guard.length***REMOVED***>***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***message***REMOVED***=***REMOVED***`The***REMOVED***"next"***REMOVED***callback***REMOVED***was***REMOVED***never***REMOVED***called***REMOVED***inside***REMOVED***of***REMOVED***${guard.name***REMOVED***?***REMOVED***'"'***REMOVED***+***REMOVED***guard.name***REMOVED***+***REMOVED***'"'***REMOVED***:***REMOVED***""}:
${guard.toString()}
.***REMOVED***If***REMOVED***you***REMOVED***are***REMOVED***returning***REMOVED***a***REMOVED***value***REMOVED***instead***REMOVED***of***REMOVED***calling***REMOVED***"next",***REMOVED***make***REMOVED***sure***REMOVED***to***REMOVED***remove***REMOVED***the***REMOVED***"next"***REMOVED***parameter***REMOVED***from***REMOVED***your***REMOVED***function.`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***guardReturn***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***"then"***REMOVED***in***REMOVED***guardReturn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guardCall***REMOVED***=***REMOVED***guardCall.then((resolvedValue)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!next._called)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject(new***REMOVED***Error("Invalid***REMOVED***navigation***REMOVED***guard"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolvedValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(guardReturn***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!next._called)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(new***REMOVED***Error("Invalid***REMOVED***navigation***REMOVED***guard"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***guardCall.catch((err)***REMOVED***=>***REMOVED***reject(err));
***REMOVED******REMOVED***});
}
function***REMOVED***canOnlyBeCalledOnce(next,***REMOVED***to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***called***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***return***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(called++***REMOVED***===***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`The***REMOVED***"next"***REMOVED***callback***REMOVED***was***REMOVED***called***REMOVED***more***REMOVED***than***REMOVED***once***REMOVED***in***REMOVED***one***REMOVED***navigation***REMOVED***guard***REMOVED***when***REMOVED***going***REMOVED***from***REMOVED***"${from.fullPath}"***REMOVED***to***REMOVED***"${to.fullPath}".***REMOVED***It***REMOVED***should***REMOVED***be***REMOVED***called***REMOVED***exactly***REMOVED***one***REMOVED***time***REMOVED***in***REMOVED***each***REMOVED***navigation***REMOVED***guard.***REMOVED***This***REMOVED***will***REMOVED***fail***REMOVED***in***REMOVED***production.`);
***REMOVED******REMOVED******REMOVED******REMOVED***next._called***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(called***REMOVED***===***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next.apply(null,***REMOVED***arguments);
***REMOVED******REMOVED***};
}
function***REMOVED***extractComponentsGuards(matched,***REMOVED***guardType,***REMOVED***to,***REMOVED***from,***REMOVED***runWithContext***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***fn())***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***guards***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***record***REMOVED***of***REMOVED***matched)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!record.components***REMOVED***&&***REMOVED***!record.children.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Record***REMOVED***with***REMOVED***path***REMOVED***"${record.path}"***REMOVED***is***REMOVED***either***REMOVED***missing***REMOVED***a***REMOVED***"component(s)"***REMOVED***or***REMOVED***"children"***REMOVED***property.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***in***REMOVED***record.components)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rawComponent***REMOVED***=***REMOVED***record.components[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rawComponent***REMOVED***||***REMOVED***typeof***REMOVED***rawComponent***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***rawComponent***REMOVED***!==***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Component***REMOVED***"${name}"***REMOVED***in***REMOVED***record***REMOVED***with***REMOVED***path***REMOVED***"${record.path}"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***component.***REMOVED***Received***REMOVED***"${String(rawComponent)}".`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Invalid***REMOVED***route***REMOVED***component");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***("then"***REMOVED***in***REMOVED***rawComponent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Component***REMOVED***"${name}"***REMOVED***in***REMOVED***record***REMOVED***with***REMOVED***path***REMOVED***"${record.path}"***REMOVED***is***REMOVED***a***REMOVED***Promise***REMOVED***instead***REMOVED***of***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***returns***REMOVED***a***REMOVED***Promise.***REMOVED***Did***REMOVED***you***REMOVED***write***REMOVED***"import('./MyPage.vue')"***REMOVED***instead***REMOVED***of***REMOVED***"()***REMOVED***=>***REMOVED***import('./MyPage.vue')"***REMOVED***?***REMOVED***This***REMOVED***will***REMOVED***break***REMOVED***in***REMOVED***production***REMOVED***if***REMOVED***not***REMOVED***fixed.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***promise***REMOVED***=***REMOVED***rawComponent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawComponent***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***promise;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(rawComponent.__asyncLoader***REMOVED***&&***REMOVED***//***REMOVED***warn***REMOVED***only***REMOVED***once***REMOVED***per***REMOVED***component
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!rawComponent.__warnedDefineAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawComponent.__warnedDefineAsync***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Component***REMOVED***"${name}"***REMOVED***in***REMOVED***record***REMOVED***with***REMOVED***path***REMOVED***"${record.path}"***REMOVED***is***REMOVED***defined***REMOVED***using***REMOVED***"defineAsyncComponent()".***REMOVED***Write***REMOVED***"()***REMOVED***=>***REMOVED***import('./MyPage.vue')"***REMOVED***instead***REMOVED***of***REMOVED***"defineAsyncComponent(()***REMOVED***=>***REMOVED***import('./MyPage.vue'))".`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(guardType***REMOVED***!==***REMOVED***"beforeRouteEnter"***REMOVED***&&***REMOVED***!record.instances[name])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRouteComponent(rawComponent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***rawComponent.__vccOpts***REMOVED***||***REMOVED***rawComponent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***guard***REMOVED***=***REMOVED***options[guardType];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guard***REMOVED***&&***REMOVED***guards.push(guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from,***REMOVED***record,***REMOVED***name,***REMOVED***runWithContext));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***componentPromise***REMOVED***=***REMOVED***rawComponent();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!("catch"***REMOVED***in***REMOVED***componentPromise))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Component***REMOVED***"${name}"***REMOVED***in***REMOVED***record***REMOVED***with***REMOVED***path***REMOVED***"${record.path}"***REMOVED***is***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***does***REMOVED***not***REMOVED***return***REMOVED***a***REMOVED***Promise.***REMOVED***If***REMOVED***you***REMOVED***were***REMOVED***passing***REMOVED***a***REMOVED***functional***REMOVED***component,***REMOVED***make***REMOVED***sure***REMOVED***to***REMOVED***add***REMOVED***a***REMOVED***"displayName"***REMOVED***to***REMOVED***the***REMOVED***component.***REMOVED***This***REMOVED***will***REMOVED***break***REMOVED***in***REMOVED***production***REMOVED***if***REMOVED***not***REMOVED***fixed.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***componentPromise***REMOVED***=***REMOVED***Promise.resolve(componentPromise);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(()***REMOVED***=>***REMOVED***componentPromise.then((resolved)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resolved)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Couldn't***REMOVED***resolve***REMOVED***component***REMOVED***"${name}"***REMOVED***at***REMOVED***"${record.path}"`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolvedComponent***REMOVED***=***REMOVED***isESModule(resolved)***REMOVED***?***REMOVED***resolved.default***REMOVED***:***REMOVED***resolved;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.mods[name]***REMOVED***=***REMOVED***resolved;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.components[name]***REMOVED***=***REMOVED***resolvedComponent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***resolvedComponent.__vccOpts***REMOVED***||***REMOVED***resolvedComponent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***guard***REMOVED***=***REMOVED***options[guardType];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***guard***REMOVED***&&***REMOVED***guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from,***REMOVED***record,***REMOVED***name,***REMOVED***runWithContext)();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***guards;
}
function***REMOVED***loadRouteLocation(route)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***route.matched.every((record)***REMOVED***=>***REMOVED***record.redirect)***REMOVED***?***REMOVED***Promise.reject(new***REMOVED***Error("Cannot***REMOVED***load***REMOVED***a***REMOVED***route***REMOVED***that***REMOVED***redirects."))***REMOVED***:***REMOVED***Promise.all(route.matched.map((record)***REMOVED***=>***REMOVED***record.components***REMOVED***&&***REMOVED***Promise.all(Object.keys(record.components).reduce((promises,***REMOVED***name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawComponent***REMOVED***=***REMOVED***record.components[name];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***rawComponent***REMOVED***===***REMOVED***"function"***REMOVED***&&***REMOVED***!("displayName"***REMOVED***in***REMOVED***rawComponent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promises.push(rawComponent().then((resolved)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resolved)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject(new***REMOVED***Error(`Couldn't***REMOVED***resolve***REMOVED***component***REMOVED***"${name}"***REMOVED***at***REMOVED***"${record.path}".***REMOVED***Ensure***REMOVED***you***REMOVED***passed***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***returns***REMOVED***a***REMOVED***promise.`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolvedComponent***REMOVED***=***REMOVED***isESModule(resolved)***REMOVED***?***REMOVED***resolved.default***REMOVED***:***REMOVED***resolved;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.mods[name]***REMOVED***=***REMOVED***resolved;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.components[name]***REMOVED***=***REMOVED***resolvedComponent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promises;
***REMOVED******REMOVED***},***REMOVED***[])))).then(()***REMOVED***=>***REMOVED***route);
}
function***REMOVED***useLink(props)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***router***REMOVED***=***REMOVED***inject(routerKey);
***REMOVED******REMOVED***const***REMOVED***currentRoute***REMOVED***=***REMOVED***inject(routeLocationKey);
***REMOVED******REMOVED***let***REMOVED***hasPrevious***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***previousTo***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***route***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***to***REMOVED***=***REMOVED***unref(props.to);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasPrevious***REMOVED***||***REMOVED***to***REMOVED***!==***REMOVED***previousTo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isRouteLocation(to))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasPrevious)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Invalid***REMOVED***value***REMOVED***for***REMOVED***prop***REMOVED***"to"***REMOVED***in***REMOVED***useLink()
-***REMOVED***to:`,***REMOVED***to,***REMOVED***`
-***REMOVED***previous***REMOVED***to:`,***REMOVED***previousTo,***REMOVED***`
-***REMOVED***props:`,***REMOVED***props);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Invalid***REMOVED***value***REMOVED***for***REMOVED***prop***REMOVED***"to"***REMOVED***in***REMOVED***useLink()
-***REMOVED***to:`,***REMOVED***to,***REMOVED***`
-***REMOVED***props:`,***REMOVED***props);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousTo***REMOVED***=***REMOVED***to;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasPrevious***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***router.resolve(to);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***activeRecordIndex***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***matched***REMOVED***}***REMOVED***=***REMOVED***route.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***matched;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***routeMatched***REMOVED***=***REMOVED***matched[length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentMatched***REMOVED***=***REMOVED***currentRoute.matched;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!routeMatched***REMOVED***||***REMOVED***!currentMatched.length)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***currentMatched.findIndex(isSameRouteRecord.bind(null,***REMOVED***routeMatched));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***-1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***index;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentRecordPath***REMOVED***=***REMOVED***getOriginalPath(matched[length***REMOVED***-***REMOVED***2]);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***are***REMOVED***dealing***REMOVED***with***REMOVED***nested***REMOVED***routes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***parent***REMOVED***and***REMOVED***matched***REMOVED***route***REMOVED***have***REMOVED***the***REMOVED***same***REMOVED***path,***REMOVED***this***REMOVED***link***REMOVED***is
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***referring***REMOVED***to***REMOVED***the***REMOVED***empty***REMOVED***child.***REMOVED***Or***REMOVED***we***REMOVED***currently***REMOVED***are***REMOVED***on***REMOVED***a***REMOVED***different
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***child***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***parent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getOriginalPath(routeMatched)***REMOVED***===***REMOVED***parentRecordPath***REMOVED***&&***REMOVED***//***REMOVED***avoid***REMOVED***comparing***REMOVED***the***REMOVED***child***REMOVED***with***REMOVED***its***REMOVED***parent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentMatched[currentMatched.length***REMOVED***-***REMOVED***1].path***REMOVED***!==***REMOVED***parentRecordPath***REMOVED***?***REMOVED***currentMatched.findIndex(isSameRouteRecord.bind(null,***REMOVED***matched[length***REMOVED***-***REMOVED***2]))***REMOVED***:***REMOVED***index
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***isActive***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***activeRecordIndex.value***REMOVED***>***REMOVED***-1***REMOVED***&&***REMOVED***includesParams(currentRoute.params,***REMOVED***route.value.params));
***REMOVED******REMOVED***const***REMOVED***isExactActive***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***activeRecordIndex.value***REMOVED***>***REMOVED***-1***REMOVED***&&***REMOVED***activeRecordIndex.value***REMOVED***===***REMOVED***currentRoute.matched.length***REMOVED***-***REMOVED***1***REMOVED***&&***REMOVED***isSameRouteLocationParams(currentRoute.params,***REMOVED***route.value.params));
***REMOVED******REMOVED***function***REMOVED***navigate(e***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(guardEvent(e))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***router[unref(props.replace)***REMOVED***?***REMOVED***"replace"***REMOVED***:***REMOVED***"push"](
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unref(props.to)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***avoid***REMOVED***uncaught***REMOVED***errors***REMOVED***are***REMOVED***they***REMOVED***are***REMOVED***logged***REMOVED***anyway
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***).catch(noop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.viewTransition***REMOVED***&&***REMOVED***typeof***REMOVED***document***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***"startViewTransition"***REMOVED***in***REMOVED***document)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.startViewTransition(()***REMOVED***=>***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.resolve();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isBrowser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***getCurrentInstance();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***linkContextDevtools***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***route:***REMOVED***route.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isActive:***REMOVED***isActive.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isExactActive:***REMOVED***isExactActive.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.__vrl_devtools***REMOVED***=***REMOVED***instance.__vrl_devtools***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.__vrl_devtools.push(linkContextDevtools);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchEffect(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***linkContextDevtools.route***REMOVED***=***REMOVED***route.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***linkContextDevtools.isActive***REMOVED***=***REMOVED***isActive.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***linkContextDevtools.isExactActive***REMOVED***=***REMOVED***isExactActive.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***linkContextDevtools.error***REMOVED***=***REMOVED***isRouteLocation(unref(props.to))***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***'Invalid***REMOVED***"to"***REMOVED***value';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{***REMOVED***flush:***REMOVED***"post"***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***route,
***REMOVED******REMOVED******REMOVED******REMOVED***href:***REMOVED***computed(()***REMOVED***=>***REMOVED***route.value.href),
***REMOVED******REMOVED******REMOVED******REMOVED***isActive,
***REMOVED******REMOVED******REMOVED******REMOVED***isExactActive,
***REMOVED******REMOVED******REMOVED******REMOVED***navigate
***REMOVED******REMOVED***};
}
function***REMOVED***preferSingleVNode(vnodes)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***vnodes.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***vnodes[0]***REMOVED***:***REMOVED***vnodes;
}
var***REMOVED***RouterLinkImpl***REMOVED***=***REMOVED***defineComponent({
***REMOVED******REMOVED***name:***REMOVED***"RouterLink",
***REMOVED******REMOVED***compatConfig:***REMOVED***{***REMOVED***MODE:***REMOVED***3***REMOVED***},
***REMOVED******REMOVED***props:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***to:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***[String,***REMOVED***Object],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***required:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***replace:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***activeClass:***REMOVED***String,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***inactiveClass:***REMOVED***String,
***REMOVED******REMOVED******REMOVED******REMOVED***exactActiveClass:***REMOVED***String,
***REMOVED******REMOVED******REMOVED******REMOVED***custom:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***ariaCurrentValue:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***String,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"page"
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***viewTransition:***REMOVED***Boolean
***REMOVED******REMOVED***},
***REMOVED******REMOVED***useLink,
***REMOVED******REMOVED***setup(props,***REMOVED***{***REMOVED***slots***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***link***REMOVED***=***REMOVED***reactive(useLink(props));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***options***REMOVED***}***REMOVED***=***REMOVED***inject(routerKey);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***elClass***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[getLinkClass(props.activeClass,***REMOVED***options.linkActiveClass,***REMOVED***"router-link-active")]:***REMOVED***link.isActive,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[getLinkClass(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***props.inactiveClass,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***options.linkInactiveClass,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***'router-link-inactive'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***)]:***REMOVED***!link.isExactActive,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[getLinkClass(props.exactActiveClass,***REMOVED***options.linkExactActiveClass,***REMOVED***"router-link-exact-active")]:***REMOVED***link.isExactActive
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***slots.default***REMOVED***&&***REMOVED***preferSingleVNode(slots.default(link));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props.custom***REMOVED***?***REMOVED***children***REMOVED***:***REMOVED***h("a",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"aria-current":***REMOVED***link.isExactActive***REMOVED***?***REMOVED***props.ariaCurrentValue***REMOVED***:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***href:***REMOVED***link.href,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***would***REMOVED***override***REMOVED***user***REMOVED***added***REMOVED***attrs***REMOVED***but***REMOVED***Vue***REMOVED***will***REMOVED***still***REMOVED***add
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***listener,***REMOVED***so***REMOVED***we***REMOVED***end***REMOVED***up***REMOVED***triggering***REMOVED***both
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onClick:***REMOVED***link.navigate,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***class:***REMOVED***elClass.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***children);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
});
var***REMOVED***RouterLink***REMOVED***=***REMOVED***RouterLinkImpl;
function***REMOVED***guardEvent(e)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(e.metaKey***REMOVED***||***REMOVED***e.altKey***REMOVED***||***REMOVED***e.ctrlKey***REMOVED***||***REMOVED***e.shiftKey)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(e.defaultPrevented)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(e.button***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***&&***REMOVED***e.button***REMOVED***!==***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(e.currentTarget***REMOVED***&&***REMOVED***e.currentTarget.getAttribute)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***e.currentTarget.getAttribute("target");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/\b_blank\b/i.test(target))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(e.preventDefault)
***REMOVED******REMOVED******REMOVED******REMOVED***e.preventDefault();
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***includesParams(outer,***REMOVED***inner)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***inner)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerValue***REMOVED***=***REMOVED***inner[key];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outerValue***REMOVED***=***REMOVED***outer[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***innerValue***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(innerValue***REMOVED***!==***REMOVED***outerValue)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isArray(outerValue)***REMOVED***||***REMOVED***outerValue.length***REMOVED***!==***REMOVED***innerValue.length***REMOVED***||***REMOVED***innerValue.some((value,***REMOVED***i)***REMOVED***=>***REMOVED***value***REMOVED***!==***REMOVED***outerValue[i]))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***getOriginalPath(record)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***record***REMOVED***?***REMOVED***record.aliasOf***REMOVED***?***REMOVED***record.aliasOf.path***REMOVED***:***REMOVED***record.path***REMOVED***:***REMOVED***"";
}
var***REMOVED***getLinkClass***REMOVED***=***REMOVED***(propClass,***REMOVED***globalClass,***REMOVED***defaultClass)***REMOVED***=>***REMOVED***propClass***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***propClass***REMOVED***:***REMOVED***globalClass***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***globalClass***REMOVED***:***REMOVED***defaultClass;
var***REMOVED***RouterViewImpl***REMOVED***=***REMOVED***defineComponent({
***REMOVED******REMOVED***name:***REMOVED***"RouterView",
***REMOVED******REMOVED***//***REMOVED***#674***REMOVED***we***REMOVED***manually***REMOVED***inherit***REMOVED***them
***REMOVED******REMOVED***inheritAttrs:***REMOVED***false,
***REMOVED******REMOVED***props:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***String,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"default"
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***route:***REMOVED***Object
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***Better***REMOVED***compat***REMOVED***for***REMOVED***@vue/compat***REMOVED***users
***REMOVED******REMOVED***//***REMOVED***https://github.com/vuejs/router/issues/1315
***REMOVED******REMOVED***compatConfig:***REMOVED***{***REMOVED***MODE:***REMOVED***3***REMOVED***},
***REMOVED******REMOVED***setup(props,***REMOVED***{***REMOVED***attrs,***REMOVED***slots***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warnDeprecatedUsage();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***injectedRoute***REMOVED***=***REMOVED***inject(routerViewLocationKey);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***routeToDisplay***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***props.route***REMOVED***||***REMOVED***injectedRoute.value);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***injectedDepth***REMOVED***=***REMOVED***inject(viewDepthKey,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***depth***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***initialDepth***REMOVED***=***REMOVED***unref(injectedDepth);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***matched***REMOVED***}***REMOVED***=***REMOVED***routeToDisplay.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***matchedRoute;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((matchedRoute***REMOVED***=***REMOVED***matched[initialDepth])***REMOVED***&&***REMOVED***!matchedRoute.components)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialDepth++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***initialDepth;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchedRouteRef***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***routeToDisplay.value.matched[depth.value]);
***REMOVED******REMOVED******REMOVED******REMOVED***provide(viewDepthKey,***REMOVED***computed(()***REMOVED***=>***REMOVED***depth.value***REMOVED***+***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED***provide(matchedRouteKey,***REMOVED***matchedRouteRef);
***REMOVED******REMOVED******REMOVED******REMOVED***provide(routerViewLocationKey,***REMOVED***routeToDisplay);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***viewRef***REMOVED***=***REMOVED***ref();
***REMOVED******REMOVED******REMOVED******REMOVED***watch(()***REMOVED***=>***REMOVED***[viewRef.value,***REMOVED***matchedRouteRef.value,***REMOVED***props.name],***REMOVED***([instance,***REMOVED***to,***REMOVED***name],***REMOVED***[oldInstance,***REMOVED***from,***REMOVED***oldName])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to.instances[name]***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(from***REMOVED***&&***REMOVED***from***REMOVED***!==***REMOVED***to***REMOVED***&&***REMOVED***instance***REMOVED***&&***REMOVED***instance***REMOVED***===***REMOVED***oldInstance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!to.leaveGuards.size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to.leaveGuards***REMOVED***=***REMOVED***from.leaveGuards;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!to.updateGuards.size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to.updateGuards***REMOVED***=***REMOVED***from.updateGuards;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance***REMOVED***&&***REMOVED***to***REMOVED***&&***REMOVED***//***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***instance***REMOVED***but***REMOVED***to***REMOVED***and***REMOVED***from***REMOVED***are***REMOVED***the***REMOVED***same***REMOVED***this***REMOVED***might***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***first***REMOVED***visit
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!from***REMOVED***||***REMOVED***!isSameRouteRecord(to,***REMOVED***from)***REMOVED***||***REMOVED***!oldInstance))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(to.enterCallbacks[name]***REMOVED***||***REMOVED***[]).forEach((callback)***REMOVED***=>***REMOVED***callback(instance));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{***REMOVED***flush:***REMOVED***"post"***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***route***REMOVED***=***REMOVED***routeToDisplay.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentName***REMOVED***=***REMOVED***props.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchedRoute***REMOVED***=***REMOVED***matchedRouteRef.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ViewComponent***REMOVED***=***REMOVED***matchedRoute***REMOVED***&&***REMOVED***matchedRoute.components[currentName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ViewComponent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***normalizeSlot(slots.default,***REMOVED***{***REMOVED***Component:***REMOVED***ViewComponent,***REMOVED***route***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***routePropsOption***REMOVED***=***REMOVED***matchedRoute.props[currentName];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***routeProps***REMOVED***=***REMOVED***routePropsOption***REMOVED***?***REMOVED***routePropsOption***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***route.params***REMOVED***:***REMOVED***typeof***REMOVED***routePropsOption***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***routePropsOption(route)***REMOVED***:***REMOVED***routePropsOption***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onVnodeUnmounted***REMOVED***=***REMOVED***(vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.component.isUnmounted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchedRoute.instances[currentName]***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***component***REMOVED***=***REMOVED***h(ViewComponent,***REMOVED***assign({},***REMOVED***routeProps,***REMOVED***attrs,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onVnodeUnmounted,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ref:***REMOVED***viewRef
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBrowser***REMOVED***&&***REMOVED***component.ref)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***info***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depth:***REMOVED***depth.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***matchedRoute.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***matchedRoute.path,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***matchedRoute.meta
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***internalInstances***REMOVED***=***REMOVED***isArray(component.ref)***REMOVED***?***REMOVED***component.ref.map((r)***REMOVED***=>***REMOVED***r.i)***REMOVED***:***REMOVED***[component.ref.i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***internalInstances.forEach((instance)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.__vrv_devtools***REMOVED***=***REMOVED***info;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pass***REMOVED***the***REMOVED***vnode***REMOVED***to***REMOVED***the***REMOVED***slot***REMOVED***as***REMOVED***a***REMOVED***prop.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***h***REMOVED***and***REMOVED***<component***REMOVED***:is="...">***REMOVED***both***REMOVED***accept***REMOVED***vnodes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeSlot(slots.default,***REMOVED***{***REMOVED***Component:***REMOVED***component,***REMOVED***route***REMOVED***})***REMOVED***||***REMOVED***component
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
});
function***REMOVED***normalizeSlot(slot,***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!slot)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***slotContent***REMOVED***=***REMOVED***slot(data);
***REMOVED******REMOVED***return***REMOVED***slotContent.length***REMOVED***===***REMOVED***1***REMOVED***?***REMOVED***slotContent[0]***REMOVED***:***REMOVED***slotContent;
}
var***REMOVED***RouterView***REMOVED***=***REMOVED***RouterViewImpl;
function***REMOVED***warnDeprecatedUsage()***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***getCurrentInstance();
***REMOVED******REMOVED***const***REMOVED***parentName***REMOVED***=***REMOVED***instance.parent***REMOVED***&&***REMOVED***instance.parent.type.name;
***REMOVED******REMOVED***const***REMOVED***parentSubTreeType***REMOVED***=***REMOVED***instance.parent***REMOVED***&&***REMOVED***instance.parent.subTree***REMOVED***&&***REMOVED***instance.parent.subTree.type;
***REMOVED******REMOVED***if***REMOVED***(parentName***REMOVED***&&***REMOVED***(parentName***REMOVED***===***REMOVED***"KeepAlive"***REMOVED***||***REMOVED***parentName.includes("Transition"))***REMOVED***&&***REMOVED***typeof***REMOVED***parentSubTreeType***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***parentSubTreeType.name***REMOVED***===***REMOVED***"RouterView")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comp***REMOVED***=***REMOVED***parentName***REMOVED***===***REMOVED***"KeepAlive"***REMOVED***?***REMOVED***"keep-alive"***REMOVED***:***REMOVED***"transition";
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`<router-view>***REMOVED***can***REMOVED***no***REMOVED***longer***REMOVED***be***REMOVED***used***REMOVED***directly***REMOVED***inside***REMOVED***<transition>***REMOVED***or***REMOVED***<keep-alive>.
Use***REMOVED***slot***REMOVED***props***REMOVED***instead:

<router-view***REMOVED***v-slot="{***REMOVED***Component***REMOVED***}">
***REMOVED******REMOVED***<${comp}>
***REMOVED******REMOVED******REMOVED******REMOVED***<component***REMOVED***:is="Component"***REMOVED***/>
***REMOVED******REMOVED***</${comp}>
</router-view>`);
***REMOVED******REMOVED***}
}
function***REMOVED***formatRouteLocation(routeLocation,***REMOVED***tooltip)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***copy***REMOVED***=***REMOVED***assign({},***REMOVED***routeLocation,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***remove***REMOVED***variables***REMOVED***that***REMOVED***can***REMOVED***contain***REMOVED***vue***REMOVED***instances
***REMOVED******REMOVED******REMOVED******REMOVED***matched:***REMOVED***routeLocation.matched.map((matched)***REMOVED***=>***REMOVED***omit(matched,***REMOVED***["instances",***REMOVED***"children",***REMOVED***"aliasOf"]))
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_custom:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readOnly:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***display:***REMOVED***routeLocation.fullPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***copy
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}
function***REMOVED***formatDisplay(display)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_custom:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***display
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}
var***REMOVED***routerId***REMOVED***=***REMOVED***0;
function***REMOVED***addDevtools(app,***REMOVED***router,***REMOVED***matcher)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(router.__hasDevtools)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***router.__hasDevtools***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***routerId++;
***REMOVED******REMOVED***setupDevtoolsPlugin({
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***"org.vuejs.router"***REMOVED***+***REMOVED***(id***REMOVED***?***REMOVED***"."***REMOVED***+***REMOVED***id***REMOVED***:***REMOVED***""),
***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"Vue***REMOVED***Router",
***REMOVED******REMOVED******REMOVED******REMOVED***packageName:***REMOVED***"vue-router",
***REMOVED******REMOVED******REMOVED******REMOVED***homepage:***REMOVED***"https://router.vuejs.org",
***REMOVED******REMOVED******REMOVED******REMOVED***logo:***REMOVED***"https://router.vuejs.org/logo.png",
***REMOVED******REMOVED******REMOVED******REMOVED***componentStateTypes:***REMOVED***["Routing"],
***REMOVED******REMOVED******REMOVED******REMOVED***app
***REMOVED******REMOVED***},***REMOVED***(api)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***api.now***REMOVED***!==***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.warn("[Vue***REMOVED***Router]:***REMOVED***You***REMOVED***seem***REMOVED***to***REMOVED***be***REMOVED***using***REMOVED***an***REMOVED***outdated***REMOVED***version***REMOVED***of***REMOVED***Vue***REMOVED***Devtools.***REMOVED***Are***REMOVED***you***REMOVED***still***REMOVED***using***REMOVED***the***REMOVED***Beta***REMOVED***release***REMOVED***instead***REMOVED***of***REMOVED***the***REMOVED***stable***REMOVED***one?***REMOVED***You***REMOVED***can***REMOVED***find***REMOVED***the***REMOVED***links***REMOVED***at***REMOVED***https://devtools.vuejs.org/guide/installation.html.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***api.on.inspectComponent((payload,***REMOVED***ctx)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(payload.instanceData)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***payload.instanceData.state.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"Routing",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"$route",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***formatRouteLocation(router.currentRoute.value,***REMOVED***"Current***REMOVED***Route")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***api.on.visitComponentTree(({***REMOVED***treeNode:***REMOVED***node,***REMOVED***componentInstance***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(componentInstance.__vrv_devtools)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***info***REMOVED***=***REMOVED***componentInstance.__vrv_devtools;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***(info.name***REMOVED***?***REMOVED***`${info.name.toString()}:***REMOVED***`***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***info.path,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip:***REMOVED***"This***REMOVED***component***REMOVED***is***REMOVED***rendered***REMOVED***by***REMOVED***&lt;router-view&gt;",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***PINK_500
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(componentInstance.__vrl_devtools))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***componentInstance.__devtoolsApi***REMOVED***=***REMOVED***api;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***componentInstance.__vrl_devtools.forEach((devtoolsData)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***label***REMOVED***=***REMOVED***devtoolsData.route.path;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***backgroundColor***REMOVED***=***REMOVED***ORANGE_400;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tooltip***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***textColor***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(devtoolsData.error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label***REMOVED***=***REMOVED***devtoolsData.error;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor***REMOVED***=***REMOVED***RED_100;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor***REMOVED***=***REMOVED***RED_700;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(devtoolsData.isExactActive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor***REMOVED***=***REMOVED***LIME_500;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip***REMOVED***=***REMOVED***"This***REMOVED***is***REMOVED***exactly***REMOVED***active";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(devtoolsData.isActive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor***REMOVED***=***REMOVED***BLUE_600;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip***REMOVED***=***REMOVED***"This***REMOVED***link***REMOVED***is***REMOVED***active";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***watch(router.currentRoute,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refreshRoutesView();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***api.notifyComponentUpdate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***api.sendInspectorTree(routerInspectorId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***api.sendInspectorState(routerInspectorId);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***navigationsLayerId***REMOVED***=***REMOVED***"router:navigations:"***REMOVED***+***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***api.addTimelineLayer({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***navigationsLayerId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***`Router${id***REMOVED***?***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***id***REMOVED***:***REMOVED***""}***REMOVED***Navigations`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***color:***REMOVED***4237508
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***router.onError((error,***REMOVED***to)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***api.addTimelineEvent({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***layerId:***REMOVED***navigationsLayerId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***event:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"Error***REMOVED***during***REMOVED***Navigation",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subtitle:***REMOVED***to.fullPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logType:***REMOVED***"error",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time:***REMOVED***api.now(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{***REMOVED***error***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groupId:***REMOVED***to.meta.__navigationId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***navigationId***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***router.beforeEach((to,***REMOVED***from)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guard:***REMOVED***formatDisplay("beforeEach"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***formatRouteLocation(from,***REMOVED***"Current***REMOVED***Location***REMOVED***during***REMOVED***this***REMOVED***navigation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to:***REMOVED***formatRouteLocation(to,***REMOVED***"Target***REMOVED***location")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(to.meta,***REMOVED***"__navigationId",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***navigationId++
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***api.addTimelineEvent({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***layerId:***REMOVED***navigationsLayerId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***event:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time:***REMOVED***api.now(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"Start***REMOVED***of***REMOVED***navigation",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subtitle:***REMOVED***to.fullPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groupId:***REMOVED***to.meta.__navigationId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***router.afterEach((to,***REMOVED***from,***REMOVED***failure)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guard:***REMOVED***formatDisplay("afterEach")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(failure)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.failure***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_custom:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readOnly:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***display:***REMOVED***failure***REMOVED***?***REMOVED***failure.message***REMOVED***:***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip:***REMOVED***"Navigation***REMOVED***Failure",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***failure
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.status***REMOVED***=***REMOVED***formatDisplay("❌");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.status***REMOVED***=***REMOVED***formatDisplay("✅");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.from***REMOVED***=***REMOVED***formatRouteLocation(from,***REMOVED***"Current***REMOVED***Location***REMOVED***during***REMOVED***this***REMOVED***navigation");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.to***REMOVED***=***REMOVED***formatRouteLocation(to,***REMOVED***"Target***REMOVED***location");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***api.addTimelineEvent({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***layerId:***REMOVED***navigationsLayerId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***event:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"End***REMOVED***of***REMOVED***navigation",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subtitle:***REMOVED***to.fullPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time:***REMOVED***api.now(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logType:***REMOVED***failure***REMOVED***?***REMOVED***"warning"***REMOVED***:***REMOVED***"default",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groupId:***REMOVED***to.meta.__navigationId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***routerInspectorId***REMOVED***=***REMOVED***"router-inspector:"***REMOVED***+***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***api.addInspector({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***routerInspectorId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"Routes"***REMOVED***+***REMOVED***(id***REMOVED***?***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***id***REMOVED***:***REMOVED***""),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***icon:***REMOVED***"book",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeFilterPlaceholder:***REMOVED***"Search***REMOVED***routes"
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***refreshRoutesView()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!activeRoutesPayload)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***payload***REMOVED***=***REMOVED***activeRoutesPayload;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***routes***REMOVED***=***REMOVED***matcher.getRoutes().filter((route)***REMOVED***=>***REMOVED***!route.parent***REMOVED***||***REMOVED***//***REMOVED***these***REMOVED***routes***REMOVED***have***REMOVED***a***REMOVED***parent***REMOVED***with***REMOVED***no***REMOVED***component***REMOVED***which***REMOVED***will***REMOVED***not***REMOVED***appear***REMOVED***in***REMOVED***the***REMOVED***view
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***therefore***REMOVED***we***REMOVED***still***REMOVED***need***REMOVED***to***REMOVED***include***REMOVED***them
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!route.parent.record.components);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routes.forEach(resetMatchStateOnRouteRecord);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(payload.filter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routes***REMOVED***=***REMOVED***routes.filter((route)***REMOVED***=>***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***save***REMOVED***matches***REMOVED***state***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***payload
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isRouteMatching(route,***REMOVED***payload.filter.toLowerCase())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routes.forEach((route)***REMOVED***=>***REMOVED***markRouteRecordActive(route,***REMOVED***router.currentRoute.value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***payload.rootNodes***REMOVED***=***REMOVED***routes.map(formatRouteRecordForInspector);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***activeRoutesPayload;
***REMOVED******REMOVED******REMOVED******REMOVED***api.on.getInspectorTree((payload)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeRoutesPayload***REMOVED***=***REMOVED***payload;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(payload.app***REMOVED***===***REMOVED***app***REMOVED***&&***REMOVED***payload.inspectorId***REMOVED***===***REMOVED***routerInspectorId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refreshRoutesView();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***api.on.getInspectorState((payload)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(payload.app***REMOVED***===***REMOVED***app***REMOVED***&&***REMOVED***payload.inspectorId***REMOVED***===***REMOVED***routerInspectorId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***routes***REMOVED***=***REMOVED***matcher.getRoutes();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***route***REMOVED***=***REMOVED***routes.find((route2)***REMOVED***=>***REMOVED***route2.record.__vd_id***REMOVED***===***REMOVED***payload.nodeId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(route)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***payload.state***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***formatRouteRecordMatcherForStateInspector(route)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***api.sendInspectorTree(routerInspectorId);
***REMOVED******REMOVED******REMOVED******REMOVED***api.sendInspectorState(routerInspectorId);
***REMOVED******REMOVED***});
}
function***REMOVED***modifierForKey(key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(key.optional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key.repeatable***REMOVED***?***REMOVED***"*"***REMOVED***:***REMOVED***"?";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key.repeatable***REMOVED***?***REMOVED***"+"***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED***}
}
function***REMOVED***formatRouteRecordMatcherForStateInspector(route)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***record***REMOVED***}***REMOVED***=***REMOVED***route;
***REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***editable:***REMOVED***false,***REMOVED***key:***REMOVED***"path",***REMOVED***value:***REMOVED***record.path***REMOVED***}
***REMOVED******REMOVED***];
***REMOVED******REMOVED***if***REMOVED***(record.name***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"name",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***record.name
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***fields.push({***REMOVED***editable:***REMOVED***false,***REMOVED***key:***REMOVED***"regexp",***REMOVED***value:***REMOVED***route.re***REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(route.keys.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"keys",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_custom:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readOnly:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***display:***REMOVED***route.keys.map((key)***REMOVED***=>***REMOVED***`${key.name}${modifierForKey(key)}`).join("***REMOVED***"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip:***REMOVED***"Param***REMOVED***keys",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***route.keys
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(record.redirect***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"redirect",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***record.redirect
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(route.alias.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"aliases",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***route.alias.map((alias)***REMOVED***=>***REMOVED***alias.record.path)
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(Object.keys(route.record.meta).length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"meta",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***route.record.meta
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***fields.push({
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"score",
***REMOVED******REMOVED******REMOVED******REMOVED***editable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_custom:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readOnly:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***display:***REMOVED***route.score.map((score)***REMOVED***=>***REMOVED***score.join(",***REMOVED***")).join("***REMOVED***|***REMOVED***"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tooltip:***REMOVED***"Score***REMOVED***used***REMOVED***to***REMOVED***sort***REMOVED***routes",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***route.score
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***fields;
}
var***REMOVED***PINK_500***REMOVED***=***REMOVED***15485081;
var***REMOVED***BLUE_600***REMOVED***=***REMOVED***2450411;
var***REMOVED***LIME_500***REMOVED***=***REMOVED***8702998;
var***REMOVED***CYAN_400***REMOVED***=***REMOVED***2282478;
var***REMOVED***ORANGE_400***REMOVED***=***REMOVED***16486972;
var***REMOVED***DARK***REMOVED***=***REMOVED***6710886;
var***REMOVED***RED_100***REMOVED***=***REMOVED***16704226;
var***REMOVED***RED_700***REMOVED***=***REMOVED***12131356;
function***REMOVED***formatRouteRecordForInspector(route)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***tags***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***record***REMOVED***}***REMOVED***=***REMOVED***route;
***REMOVED******REMOVED***if***REMOVED***(record.name***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***String(record.name),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***CYAN_400
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(record.aliasOf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"alias",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***ORANGE_400
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(route.__vd_match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"matches",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***PINK_500
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(route.__vd_exactActive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"exact",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***LIME_500
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(route.__vd_active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"active",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***BLUE_600
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(record.redirect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tags.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***typeof***REMOVED***record.redirect***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***`redirect:***REMOVED***${record.redirect}`***REMOVED***:***REMOVED***"redirects",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***textColor:***REMOVED***16777215,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundColor:***REMOVED***DARK
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***id***REMOVED***=***REMOVED***record.__vd_id;
***REMOVED******REMOVED***if***REMOVED***(id***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***=***REMOVED***String(routeRecordId++);
***REMOVED******REMOVED******REMOVED******REMOVED***record.__vd_id***REMOVED***=***REMOVED***id;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***record.path,
***REMOVED******REMOVED******REMOVED******REMOVED***tags,
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***route.children.map(formatRouteRecordForInspector)
***REMOVED******REMOVED***};
}
var***REMOVED***routeRecordId***REMOVED***=***REMOVED***0;
var***REMOVED***EXTRACT_REGEXP_RE***REMOVED***=***REMOVED***/^\/(.*)\/([a-z]*)$/;
function***REMOVED***markRouteRecordActive(route,***REMOVED***currentRoute)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isExactActive***REMOVED***=***REMOVED***currentRoute.matched.length***REMOVED***&&***REMOVED***isSameRouteRecord(currentRoute.matched[currentRoute.matched.length***REMOVED***-***REMOVED***1],***REMOVED***route.record);
***REMOVED******REMOVED***route.__vd_exactActive***REMOVED***=***REMOVED***route.__vd_active***REMOVED***=***REMOVED***isExactActive;
***REMOVED******REMOVED***if***REMOVED***(!isExactActive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***route.__vd_active***REMOVED***=***REMOVED***currentRoute.matched.some((match)***REMOVED***=>***REMOVED***isSameRouteRecord(match,***REMOVED***route.record));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***route.children.forEach((childRoute)***REMOVED***=>***REMOVED***markRouteRecordActive(childRoute,***REMOVED***currentRoute));
}
function***REMOVED***resetMatchStateOnRouteRecord(route)***REMOVED***{
***REMOVED******REMOVED***route.__vd_match***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***route.children.forEach(resetMatchStateOnRouteRecord);
}
function***REMOVED***isRouteMatching(route,***REMOVED***filter)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***found***REMOVED***=***REMOVED***String(route.re).match(EXTRACT_REGEXP_RE);
***REMOVED******REMOVED***route.__vd_match***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(!found***REMOVED***||***REMOVED***found.length***REMOVED***<***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***nonEndingRE***REMOVED***=***REMOVED***new***REMOVED***RegExp(found[1].replace(/\$$/,***REMOVED***""),***REMOVED***found[2]);
***REMOVED******REMOVED***if***REMOVED***(nonEndingRE.test(filter))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***route.children.forEach((child)***REMOVED***=>***REMOVED***isRouteMatching(child,***REMOVED***filter));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(route.record.path***REMOVED***!==***REMOVED***"/"***REMOVED***||***REMOVED***filter***REMOVED***===***REMOVED***"/")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***route.__vd_match***REMOVED***=***REMOVED***route.re.test(filter);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***path***REMOVED***=***REMOVED***route.record.path.toLowerCase();
***REMOVED******REMOVED***const***REMOVED***decodedPath***REMOVED***=***REMOVED***decode(path);
***REMOVED******REMOVED***if***REMOVED***(!filter.startsWith("/")***REMOVED***&&***REMOVED***(decodedPath.includes(filter)***REMOVED***||***REMOVED***path.includes(filter)))
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(decodedPath.startsWith(filter)***REMOVED***||***REMOVED***path.startsWith(filter))
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(route.record.name***REMOVED***&&***REMOVED***String(route.record.name).includes(filter))
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***return***REMOVED***route.children.some((child)***REMOVED***=>***REMOVED***isRouteMatching(child,***REMOVED***filter));
}
function***REMOVED***omit(obj,***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!keys.includes(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret[key]***REMOVED***=***REMOVED***obj[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***createRouter(options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***matcher***REMOVED***=***REMOVED***createRouterMatcher(options.routes,***REMOVED***options);
***REMOVED******REMOVED***const***REMOVED***parseQuery$1***REMOVED***=***REMOVED***options.parseQuery***REMOVED***||***REMOVED***parseQuery;
***REMOVED******REMOVED***const***REMOVED***stringifyQuery$1***REMOVED***=***REMOVED***options.stringifyQuery***REMOVED***||***REMOVED***stringifyQuery;
***REMOVED******REMOVED***const***REMOVED***routerHistory***REMOVED***=***REMOVED***options.history;
***REMOVED******REMOVED***if***REMOVED***(!routerHistory)
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Provide***REMOVED***the***REMOVED***"history"***REMOVED***option***REMOVED***when***REMOVED***calling***REMOVED***"createRouter()":***REMOVED***https://router.vuejs.org/api/interfaces/RouterOptions.html#history');
***REMOVED******REMOVED***const***REMOVED***beforeGuards***REMOVED***=***REMOVED***useCallbacks();
***REMOVED******REMOVED***const***REMOVED***beforeResolveGuards***REMOVED***=***REMOVED***useCallbacks();
***REMOVED******REMOVED***const***REMOVED***afterGuards***REMOVED***=***REMOVED***useCallbacks();
***REMOVED******REMOVED***const***REMOVED***currentRoute***REMOVED***=***REMOVED***shallowRef(START_LOCATION_NORMALIZED);
***REMOVED******REMOVED***let***REMOVED***pendingLocation***REMOVED***=***REMOVED***START_LOCATION_NORMALIZED;
***REMOVED******REMOVED***if***REMOVED***(isBrowser***REMOVED***&&***REMOVED***options.scrollBehavior***REMOVED***&&***REMOVED***"scrollRestoration"***REMOVED***in***REMOVED***history)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***history.scrollRestoration***REMOVED***=***REMOVED***"manual";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***normalizeParams***REMOVED***=***REMOVED***applyToParams.bind(null,***REMOVED***(paramValue)***REMOVED***=>***REMOVED***""***REMOVED***+***REMOVED***paramValue);
***REMOVED******REMOVED***const***REMOVED***encodeParams***REMOVED***=***REMOVED***applyToParams.bind(null,***REMOVED***encodeParam);
***REMOVED******REMOVED***const***REMOVED***decodeParams***REMOVED***=***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error:***REMOVED***intentionally***REMOVED***avoid***REMOVED***the***REMOVED***type***REMOVED***check
***REMOVED******REMOVED******REMOVED******REMOVED***applyToParams.bind(null,***REMOVED***decode)
***REMOVED******REMOVED***);
***REMOVED******REMOVED***function***REMOVED***addRoute(parentOrRoute,***REMOVED***route)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***record;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRouteName(parentOrRoute))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***matcher.getRecordMatcher(parentOrRoute);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Parent***REMOVED***route***REMOVED***"${String(parentOrRoute)}"***REMOVED***not***REMOVED***found***REMOVED***when***REMOVED***adding***REMOVED***child***REMOVED***route`,***REMOVED***route);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record***REMOVED***=***REMOVED***route;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record***REMOVED***=***REMOVED***parentOrRoute;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***matcher.addRoute(record,***REMOVED***parent);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***removeRoute(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***recordMatcher***REMOVED***=***REMOVED***matcher.getRecordMatcher(name);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(recordMatcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcher.removeRoute(recordMatcher);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Cannot***REMOVED***remove***REMOVED***non-existent***REMOVED***route***REMOVED***"${String(name)}"`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getRoutes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***matcher.getRoutes().map((routeMatcher)***REMOVED***=>***REMOVED***routeMatcher.record);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***hasRoute(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!matcher.getRecordMatcher(name);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***resolve(rawLocation,***REMOVED***currentLocation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***currentLocation***REMOVED***=***REMOVED***assign({},***REMOVED***currentLocation***REMOVED***||***REMOVED***currentRoute.value);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***rawLocation***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***locationNormalized***REMOVED***=***REMOVED***parseURL(parseQuery$1,***REMOVED***rawLocation,***REMOVED***currentLocation.path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchedRoute2***REMOVED***=***REMOVED***matcher.resolve({***REMOVED***path:***REMOVED***locationNormalized.path***REMOVED***},***REMOVED***currentLocation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***href2***REMOVED***=***REMOVED***routerHistory.createHref(locationNormalized.fullPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(href2.startsWith("//"))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Location***REMOVED***"${rawLocation}"***REMOVED***resolved***REMOVED***to***REMOVED***"${href2}".***REMOVED***A***REMOVED***resolved***REMOVED***location***REMOVED***cannot***REMOVED***start***REMOVED***with***REMOVED***multiple***REMOVED***slashes.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!matchedRoute2.matched.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`No***REMOVED***match***REMOVED***found***REMOVED***for***REMOVED***location***REMOVED***with***REMOVED***path***REMOVED***"${rawLocation}"`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assign(locationNormalized,***REMOVED***matchedRoute2,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params:***REMOVED***decodeParams(matchedRoute2.params),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***decode(locationNormalized.hash),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectedFrom:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***href:***REMOVED***href2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isRouteLocation(rawLocation))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`router.resolve()***REMOVED***was***REMOVED***passed***REMOVED***an***REMOVED***invalid***REMOVED***location.***REMOVED***This***REMOVED***will***REMOVED***fail***REMOVED***in***REMOVED***production.
-***REMOVED***Location:`,***REMOVED***rawLocation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolve({});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***matcherLocation;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawLocation.path***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("params"***REMOVED***in***REMOVED***rawLocation***REMOVED***&&***REMOVED***!("name"***REMOVED***in***REMOVED***rawLocation)***REMOVED***&&***REMOVED***//***REMOVED***@ts-expect-error:***REMOVED***the***REMOVED***type***REMOVED***is***REMOVED***never
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(rawLocation.params).length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Path***REMOVED***"${rawLocation.path}"***REMOVED***was***REMOVED***passed***REMOVED***with***REMOVED***params***REMOVED***but***REMOVED***they***REMOVED***will***REMOVED***be***REMOVED***ignored.***REMOVED***Use***REMOVED***a***REMOVED***named***REMOVED***route***REMOVED***alongside***REMOVED***params***REMOVED***instead.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherLocation***REMOVED***=***REMOVED***assign({},***REMOVED***rawLocation,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***parseURL(parseQuery$1,***REMOVED***rawLocation.path,***REMOVED***currentLocation.path).path
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetParams***REMOVED***=***REMOVED***assign({},***REMOVED***rawLocation.params);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***targetParams)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(targetParams[key]***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***targetParams[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matcherLocation***REMOVED***=***REMOVED***assign({},***REMOVED***rawLocation,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params:***REMOVED***encodeParams(targetParams)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentLocation.params***REMOVED***=***REMOVED***encodeParams(currentLocation.params);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchedRoute***REMOVED***=***REMOVED***matcher.resolve(matcherLocation,***REMOVED***currentLocation);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hash***REMOVED***=***REMOVED***rawLocation.hash***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hash***REMOVED***&&***REMOVED***!hash.startsWith("#"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`A***REMOVED***\`hash\`***REMOVED***should***REMOVED***always***REMOVED***start***REMOVED***with***REMOVED***the***REMOVED***character***REMOVED***"#".***REMOVED***Replace***REMOVED***"${hash}"***REMOVED***with***REMOVED***"#${hash}".`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***matchedRoute.params***REMOVED***=***REMOVED***normalizeParams(decodeParams(matchedRoute.params));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fullPath***REMOVED***=***REMOVED***stringifyURL(stringifyQuery$1,***REMOVED***assign({},***REMOVED***rawLocation,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***encodeHash(hash),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***matchedRoute.path
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***href***REMOVED***=***REMOVED***routerHistory.createHref(fullPath);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(href.startsWith("//"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Location***REMOVED***"${rawLocation}"***REMOVED***resolved***REMOVED***to***REMOVED***"${href}".***REMOVED***A***REMOVED***resolved***REMOVED***location***REMOVED***cannot***REMOVED***start***REMOVED***with***REMOVED***multiple***REMOVED***slashes.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!matchedRoute.matched.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`No***REMOVED***match***REMOVED***found***REMOVED***for***REMOVED***location***REMOVED***with***REMOVED***path***REMOVED***"${rawLocation.path***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***rawLocation.path***REMOVED***:***REMOVED***rawLocation}"`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fullPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***keep***REMOVED***the***REMOVED***hash***REMOVED***encoded***REMOVED***so***REMOVED***fullPath***REMOVED***is***REMOVED***effectively***REMOVED***path***REMOVED***+***REMOVED***encodedQuery***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***hash
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***query:***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***user***REMOVED***is***REMOVED***using***REMOVED***a***REMOVED***custom***REMOVED***query***REMOVED***lib***REMOVED***like***REMOVED***qs,***REMOVED***we***REMOVED***might***REMOVED***have
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***nested***REMOVED***objects,***REMOVED***so***REMOVED***we***REMOVED***keep***REMOVED***the***REMOVED***query***REMOVED***as***REMOVED***is,***REMOVED***meaning***REMOVED***it***REMOVED***can***REMOVED***contain
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***numbers***REMOVED***at***REMOVED***`$route.query`,***REMOVED***but***REMOVED***at***REMOVED***the***REMOVED***point,***REMOVED***the***REMOVED***user***REMOVED***will***REMOVED***have***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***their***REMOVED***own***REMOVED***type***REMOVED***anyway.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/vuejs/router/issues/328#issuecomment-649481567
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stringifyQuery$1***REMOVED***===***REMOVED***stringifyQuery***REMOVED***?***REMOVED***normalizeQuery(rawLocation.query)***REMOVED***:***REMOVED***rawLocation.query***REMOVED***||***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***matchedRoute,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectedFrom:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***href
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***locationAsObject(to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***to***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***parseURL(parseQuery$1,***REMOVED***to,***REMOVED***currentRoute.value.path)***REMOVED***:***REMOVED***assign({},***REMOVED***to);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***checkCanceledNavigation(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pendingLocation***REMOVED***!==***REMOVED***to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createRouterError(8,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***push(to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pushWithRedirect(to);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***replace(to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***push(assign(locationAsObject(to),***REMOVED***{***REMOVED***replace:***REMOVED***true***REMOVED***}));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***handleRedirectRecord(to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastMatched***REMOVED***=***REMOVED***to.matched[to.matched.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastMatched***REMOVED***&&***REMOVED***lastMatched.redirect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***redirect***REMOVED***}***REMOVED***=***REMOVED***lastMatched;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newTargetLocation***REMOVED***=***REMOVED***typeof***REMOVED***redirect***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***redirect(to)***REMOVED***:***REMOVED***redirect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***newTargetLocation***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newTargetLocation***REMOVED***=***REMOVED***newTargetLocation.includes("?")***REMOVED***||***REMOVED***newTargetLocation.includes("#")***REMOVED***?***REMOVED***newTargetLocation***REMOVED***=***REMOVED***locationAsObject(newTargetLocation)***REMOVED***:***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***force***REMOVED***empty***REMOVED***params
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***path:***REMOVED***newTargetLocation***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newTargetLocation.params***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newTargetLocation.path***REMOVED***==***REMOVED***null***REMOVED***&&***REMOVED***!("name"***REMOVED***in***REMOVED***newTargetLocation))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Invalid***REMOVED***redirect***REMOVED***found:
${JSON.stringify(newTargetLocation,***REMOVED***null,***REMOVED***2)}
***REMOVED***when***REMOVED***navigating***REMOVED***to***REMOVED***"${to.fullPath}".***REMOVED***A***REMOVED***redirect***REMOVED***must***REMOVED***contain***REMOVED***a***REMOVED***name***REMOVED***or***REMOVED***path.***REMOVED***This***REMOVED***will***REMOVED***break***REMOVED***in***REMOVED***production.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Invalid***REMOVED***redirect");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***query:***REMOVED***to.query,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash:***REMOVED***to.hash,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***avoid***REMOVED***transferring***REMOVED***params***REMOVED***if***REMOVED***the***REMOVED***redirect***REMOVED***has***REMOVED***a***REMOVED***path
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params:***REMOVED***newTargetLocation.path***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***{}***REMOVED***:***REMOVED***to.params
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***newTargetLocation);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***pushWithRedirect(to,***REMOVED***redirectedFrom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetLocation***REMOVED***=***REMOVED***pendingLocation***REMOVED***=***REMOVED***resolve(to);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***from***REMOVED***=***REMOVED***currentRoute.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***to.state;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***force***REMOVED***=***REMOVED***to.force;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replace2***REMOVED***=***REMOVED***to.replace***REMOVED***===***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldRedirect***REMOVED***=***REMOVED***handleRedirectRecord(targetLocation);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldRedirect)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pushWithRedirect(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assign(locationAsObject(shouldRedirect),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state:***REMOVED***typeof***REMOVED***shouldRedirect***REMOVED***===***REMOVED***"object"***REMOVED***?***REMOVED***assign({},***REMOVED***data,***REMOVED***shouldRedirect.state)***REMOVED***:***REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***force,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replace:***REMOVED***replace2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***keep***REMOVED***original***REMOVED***redirectedFrom***REMOVED***if***REMOVED***it***REMOVED***exists
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectedFrom***REMOVED***||***REMOVED***targetLocation
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toLocation***REMOVED***=***REMOVED***targetLocation;
***REMOVED******REMOVED******REMOVED******REMOVED***toLocation.redirectedFrom***REMOVED***=***REMOVED***redirectedFrom;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***failure;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!force***REMOVED***&&***REMOVED***isSameRouteLocation(stringifyQuery$1,***REMOVED***from,***REMOVED***targetLocation))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure***REMOVED***=***REMOVED***createRouterError(16,***REMOVED***{***REMOVED***to:***REMOVED***toLocation,***REMOVED***from***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleScroll(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***push,***REMOVED***the***REMOVED***only***REMOVED***way***REMOVED***for***REMOVED***it***REMOVED***to***REMOVED***be***REMOVED***triggered***REMOVED***from***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***history.listen***REMOVED***is***REMOVED***with***REMOVED***a***REMOVED***redirect,***REMOVED***which***REMOVED***makes***REMOVED***it***REMOVED***become***REMOVED***a***REMOVED***push
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***cannot***REMOVED***be***REMOVED***the***REMOVED***first***REMOVED***navigation***REMOVED***because***REMOVED***the***REMOVED***initial***REMOVED***location
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***cannot***REMOVED***be***REMOVED***manually***REMOVED***navigated***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(failure***REMOVED***?***REMOVED***Promise.resolve(failure)***REMOVED***:***REMOVED***navigate(toLocation,***REMOVED***from)).catch((error)***REMOVED***=>***REMOVED***isNavigationFailure(error)***REMOVED***?***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***navigation***REMOVED***redirects***REMOVED***still***REMOVED***mark***REMOVED***the***REMOVED***router***REMOVED***as***REMOVED***ready
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_GUARD_REDIRECT***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***?***REMOVED***error***REMOVED***:***REMOVED***markAsReady(error)
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***:***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reject***REMOVED***any***REMOVED***unknown***REMOVED***error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***triggerError(error,***REMOVED***toLocation,***REMOVED***from)
***REMOVED******REMOVED******REMOVED******REMOVED***)).then((failure2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(failure2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_GUARD_REDIRECT***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(//***REMOVED***we***REMOVED***are***REMOVED***redirecting***REMOVED***to***REMOVED***the***REMOVED***same***REMOVED***location***REMOVED***we***REMOVED***were***REMOVED***already***REMOVED***at
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isSameRouteLocation(stringifyQuery$1,***REMOVED***resolve(failure2.to),***REMOVED***toLocation)***REMOVED***&&***REMOVED***//***REMOVED***and***REMOVED***we***REMOVED***have***REMOVED***done***REMOVED***it***REMOVED***a***REMOVED***couple***REMOVED***of***REMOVED***times
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectedFrom***REMOVED***&&***REMOVED***//***REMOVED***@ts-expect-error:***REMOVED***added***REMOVED***only***REMOVED***in***REMOVED***dev
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(redirectedFrom._count***REMOVED***=***REMOVED***redirectedFrom._count***REMOVED***?***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectedFrom._count***REMOVED***+***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***:***REMOVED***1)***REMOVED***>***REMOVED***30)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Detected***REMOVED***a***REMOVED***possibly***REMOVED***infinite***REMOVED***redirection***REMOVED***in***REMOVED***a***REMOVED***navigation***REMOVED***guard***REMOVED***when***REMOVED***going***REMOVED***from***REMOVED***"${from.fullPath}"***REMOVED***to***REMOVED***"${toLocation.fullPath}".***REMOVED***Aborting***REMOVED***to***REMOVED***avoid***REMOVED***a***REMOVED***Stack***REMOVED***Overflow.
***REMOVED***Are***REMOVED***you***REMOVED***always***REMOVED***returning***REMOVED***a***REMOVED***new***REMOVED***location***REMOVED***within***REMOVED***a***REMOVED***navigation***REMOVED***guard?***REMOVED***That***REMOVED***would***REMOVED***lead***REMOVED***to***REMOVED***this***REMOVED***error.***REMOVED***Only***REMOVED***return***REMOVED***when***REMOVED***redirecting***REMOVED***or***REMOVED***aborting,***REMOVED***that***REMOVED***should***REMOVED***fix***REMOVED***this.***REMOVED***This***REMOVED***might***REMOVED***break***REMOVED***in***REMOVED***production***REMOVED***if***REMOVED***not***REMOVED***fixed.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject(new***REMOVED***Error("Infinite***REMOVED***redirect***REMOVED***in***REMOVED***navigation***REMOVED***guard"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pushWithRedirect(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***keep***REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***preserve***REMOVED***an***REMOVED***existing***REMOVED***replacement***REMOVED***but***REMOVED***allow***REMOVED***the***REMOVED***redirect***REMOVED***to***REMOVED***override***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replace:***REMOVED***replace2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***locationAsObject(failure2.to),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state:***REMOVED***typeof***REMOVED***failure2.to***REMOVED***===***REMOVED***"object"***REMOVED***?***REMOVED***assign({},***REMOVED***data,***REMOVED***failure2.to.state)***REMOVED***:***REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***force
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***preserve***REMOVED***the***REMOVED***original***REMOVED***redirectedFrom***REMOVED***if***REMOVED***any
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectedFrom***REMOVED***||***REMOVED***toLocation
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure2***REMOVED***=***REMOVED***finalizeNavigation(toLocation,***REMOVED***from,***REMOVED***true,***REMOVED***replace2,***REMOVED***data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***triggerAfterEach(toLocation,***REMOVED***from,***REMOVED***failure2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***failure2;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***checkCanceledNavigationAndReject(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***checkCanceledNavigation(to,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error***REMOVED***?***REMOVED***Promise.reject(error)***REMOVED***:***REMOVED***Promise.resolve();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***runWithContext(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***app***REMOVED***=***REMOVED***installedApps.values().next().value;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app***REMOVED***&&***REMOVED***typeof***REMOVED***app.runWithContext***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***app.runWithContext(fn)***REMOVED***:***REMOVED***fn();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***navigate(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***guards;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[leavingRecords,***REMOVED***updatingRecords,***REMOVED***enteringRecords]***REMOVED***=***REMOVED***extractChangingRecords(to,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED***guards***REMOVED***=***REMOVED***extractComponentsGuards(leavingRecords.reverse(),***REMOVED***"beforeRouteLeave",***REMOVED***to,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***record***REMOVED***of***REMOVED***leavingRecords)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.leaveGuards.forEach((guard)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***canceledNavigationCheck***REMOVED***=***REMOVED***checkCanceledNavigationAndReject.bind(null,***REMOVED***to,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED***guards.push(canceledNavigationCheck);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***runGuardQueue(guards).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***guard***REMOVED***of***REMOVED***beforeGuards.list())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(canceledNavigationCheck);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***runGuardQueue(guards);
***REMOVED******REMOVED******REMOVED******REMOVED***}).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards***REMOVED***=***REMOVED***extractComponentsGuards(updatingRecords,***REMOVED***"beforeRouteUpdate",***REMOVED***to,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***record***REMOVED***of***REMOVED***updatingRecords)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***record.updateGuards.forEach((guard)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(canceledNavigationCheck);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***runGuardQueue(guards);
***REMOVED******REMOVED******REMOVED******REMOVED***}).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***record***REMOVED***of***REMOVED***enteringRecords)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(record.beforeEnter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(record.beforeEnter))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***beforeEnter***REMOVED***of***REMOVED***record.beforeEnter)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(guardToPromiseFn(beforeEnter,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(guardToPromiseFn(record.beforeEnter,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(canceledNavigationCheck);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***runGuardQueue(guards);
***REMOVED******REMOVED******REMOVED******REMOVED***}).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to.matched.forEach((record)***REMOVED***=>***REMOVED***record.enterCallbacks***REMOVED***=***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards***REMOVED***=***REMOVED***extractComponentsGuards(enteringRecords,***REMOVED***"beforeRouteEnter",***REMOVED***to,***REMOVED***from,***REMOVED***runWithContext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(canceledNavigationCheck);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***runGuardQueue(guards);
***REMOVED******REMOVED******REMOVED******REMOVED***}).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***guard***REMOVED***of***REMOVED***beforeResolveGuards.list())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(guardToPromiseFn(guard,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***guards.push(canceledNavigationCheck);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***runGuardQueue(guards);
***REMOVED******REMOVED******REMOVED******REMOVED***}).catch((err)***REMOVED***=>***REMOVED***isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***8
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_CANCELLED***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***?***REMOVED***err***REMOVED***:***REMOVED***Promise.reject(err));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***triggerAfterEach(to,***REMOVED***from,***REMOVED***failure)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***afterGuards.list().forEach((guard)***REMOVED***=>***REMOVED***runWithContext(()***REMOVED***=>***REMOVED***guard(to,***REMOVED***from,***REMOVED***failure)));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***finalizeNavigation(toLocation,***REMOVED***from,***REMOVED***isPush,***REMOVED***replace2,***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***checkCanceledNavigation(toLocation,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isFirstNavigation***REMOVED***=***REMOVED***from***REMOVED***===***REMOVED***START_LOCATION_NORMALIZED;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***!isBrowser***REMOVED***?***REMOVED***{}***REMOVED***:***REMOVED***history.state;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPush)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(replace2***REMOVED***||***REMOVED***isFirstNavigation)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routerHistory.replace(toLocation.fullPath,***REMOVED***assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scroll:***REMOVED***isFirstNavigation***REMOVED***&&***REMOVED***state***REMOVED***&&***REMOVED***state.scroll
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***data));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routerHistory.push(toLocation.fullPath,***REMOVED***data);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***currentRoute.value***REMOVED***=***REMOVED***toLocation;
***REMOVED******REMOVED******REMOVED******REMOVED***handleScroll(toLocation,***REMOVED***from,***REMOVED***isPush,***REMOVED***isFirstNavigation);
***REMOVED******REMOVED******REMOVED******REMOVED***markAsReady();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***removeHistoryListener;
***REMOVED******REMOVED***function***REMOVED***setupListeners()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removeHistoryListener)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***removeHistoryListener***REMOVED***=***REMOVED***routerHistory.listen((to,***REMOVED***_from,***REMOVED***info)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!router.listening)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toLocation***REMOVED***=***REMOVED***resolve(to);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldRedirect***REMOVED***=***REMOVED***handleRedirectRecord(toLocation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldRedirect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushWithRedirect(assign(shouldRedirect,***REMOVED***{***REMOVED***replace:***REMOVED***true,***REMOVED***force:***REMOVED***true***REMOVED***}),***REMOVED***toLocation).catch(noop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pendingLocation***REMOVED***=***REMOVED***toLocation;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***from***REMOVED***=***REMOVED***currentRoute.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBrowser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***saveScrollPosition(getScrollKey(from.fullPath,***REMOVED***info.delta),***REMOVED***computeScrollPosition());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***navigate(toLocation,***REMOVED***from).catch((error)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***4***REMOVED***|***REMOVED***8
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_CANCELLED***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_GUARD_REDIRECT***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushWithRedirect(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assign(locationAsObject(error.to),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***force:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toLocation
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***avoid***REMOVED***an***REMOVED***uncaught***REMOVED***rejection,***REMOVED***let***REMOVED***push***REMOVED***call***REMOVED***triggerError
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***).then((failure)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***4***REMOVED***|***REMOVED***16
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_DUPLICATED***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***&&***REMOVED***!info.delta***REMOVED***&&***REMOVED***info.type***REMOVED***===***REMOVED***NavigationType.pop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routerHistory.go(-1,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).catch(noop);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(info.delta)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routerHistory.go(-info.delta,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***triggerError(error,***REMOVED***toLocation,***REMOVED***from);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).then((failure)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure***REMOVED***=***REMOVED***failure***REMOVED***||***REMOVED***finalizeNavigation(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***after***REMOVED***navigation,***REMOVED***all***REMOVED***matched***REMOVED***components***REMOVED***are***REMOVED***resolved
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toLocation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(failure)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(info.delta***REMOVED***&&***REMOVED***//***REMOVED***a***REMOVED***new***REMOVED***navigation***REMOVED***has***REMOVED***been***REMOVED***triggered,***REMOVED***so***REMOVED***we***REMOVED***do***REMOVED***not***REMOVED***want***REMOVED***to***REMOVED***revert,***REMOVED***that***REMOVED***will***REMOVED***change***REMOVED***the***REMOVED***current***REMOVED***history
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***entry***REMOVED***while***REMOVED***a***REMOVED***different***REMOVED***route***REMOVED***is***REMOVED***displayed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***8
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_CANCELLED***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routerHistory.go(-info.delta,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(info.type***REMOVED***===***REMOVED***NavigationType.pop***REMOVED***&&***REMOVED***isNavigationFailure(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***failure,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***4***REMOVED***|***REMOVED***16
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***ErrorTypes.NAVIGATION_DUPLICATED***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***routerHistory.go(-1,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***triggerAfterEach(toLocation,***REMOVED***from,***REMOVED***failure);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).catch(noop);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***readyHandlers***REMOVED***=***REMOVED***useCallbacks();
***REMOVED******REMOVED***let***REMOVED***errorListeners***REMOVED***=***REMOVED***useCallbacks();
***REMOVED******REMOVED***let***REMOVED***ready;
***REMOVED******REMOVED***function***REMOVED***triggerError(error,***REMOVED***to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***markAsReady(error);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***list***REMOVED***=***REMOVED***errorListeners.list();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(list.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***list.forEach((handler)***REMOVED***=>***REMOVED***handler(error,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn("uncaught***REMOVED***error***REMOVED***during***REMOVED***route***REMOVED***navigation:");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error(error);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject(error);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***isReady()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ready***REMOVED***&&***REMOVED***currentRoute.value***REMOVED***!==***REMOVED***START_LOCATION_NORMALIZED)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.resolve();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve2,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readyHandlers.add([resolve2,***REMOVED***reject]);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***markAsReady(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ready)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ready***REMOVED***=***REMOVED***!err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupListeners();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readyHandlers.list().forEach(([resolve2,***REMOVED***reject])***REMOVED***=>***REMOVED***err***REMOVED***?***REMOVED***reject(err)***REMOVED***:***REMOVED***resolve2());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readyHandlers.reset();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***err;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***handleScroll(to,***REMOVED***from,***REMOVED***isPush,***REMOVED***isFirstNavigation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***scrollBehavior***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isBrowser***REMOVED***||***REMOVED***!scrollBehavior)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.resolve();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scrollPosition***REMOVED***=***REMOVED***!isPush***REMOVED***&&***REMOVED***getSavedScrollPosition(getScrollKey(to.fullPath,***REMOVED***0))***REMOVED***||***REMOVED***(isFirstNavigation***REMOVED***||***REMOVED***!isPush)***REMOVED***&&***REMOVED***history.state***REMOVED***&&***REMOVED***history.state.scroll***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nextTick().then(()***REMOVED***=>***REMOVED***scrollBehavior(to,***REMOVED***from,***REMOVED***scrollPosition)).then((position)***REMOVED***=>***REMOVED***position***REMOVED***&&***REMOVED***scrollToPosition(position)).catch((err)***REMOVED***=>***REMOVED***triggerError(err,***REMOVED***to,***REMOVED***from));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***go***REMOVED***=***REMOVED***(delta)***REMOVED***=>***REMOVED***routerHistory.go(delta);
***REMOVED******REMOVED***let***REMOVED***started;
***REMOVED******REMOVED***const***REMOVED***installedApps***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED***const***REMOVED***router***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***currentRoute,
***REMOVED******REMOVED******REMOVED******REMOVED***listening:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***addRoute,
***REMOVED******REMOVED******REMOVED******REMOVED***removeRoute,
***REMOVED******REMOVED******REMOVED******REMOVED***clearRoutes:***REMOVED***matcher.clearRoutes,
***REMOVED******REMOVED******REMOVED******REMOVED***hasRoute,
***REMOVED******REMOVED******REMOVED******REMOVED***getRoutes,
***REMOVED******REMOVED******REMOVED******REMOVED***resolve,
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED***replace,
***REMOVED******REMOVED******REMOVED******REMOVED***go,
***REMOVED******REMOVED******REMOVED******REMOVED***back:***REMOVED***()***REMOVED***=>***REMOVED***go(-1),
***REMOVED******REMOVED******REMOVED******REMOVED***forward:***REMOVED***()***REMOVED***=>***REMOVED***go(1),
***REMOVED******REMOVED******REMOVED******REMOVED***beforeEach:***REMOVED***beforeGuards.add,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeResolve:***REMOVED***beforeResolveGuards.add,
***REMOVED******REMOVED******REMOVED******REMOVED***afterEach:***REMOVED***afterGuards.add,
***REMOVED******REMOVED******REMOVED******REMOVED***onError:***REMOVED***errorListeners.add,
***REMOVED******REMOVED******REMOVED******REMOVED***isReady,
***REMOVED******REMOVED******REMOVED******REMOVED***install(app)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***router2***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.component("RouterLink",***REMOVED***RouterLink);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.component("RouterView",***REMOVED***RouterView);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.config.globalProperties.$router***REMOVED***=***REMOVED***router2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(app.config.globalProperties,***REMOVED***"$route",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***unref(currentRoute)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBrowser***REMOVED***&&***REMOVED***//***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***initial***REMOVED***navigation***REMOVED***client***REMOVED***side***REMOVED***to***REMOVED***avoid***REMOVED***pushing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***multiple***REMOVED***times***REMOVED***when***REMOVED***the***REMOVED***router***REMOVED***is***REMOVED***used***REMOVED***in***REMOVED***multiple***REMOVED***apps
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!started***REMOVED***&&***REMOVED***currentRoute.value***REMOVED***===***REMOVED***START_LOCATION_NORMALIZED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***started***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(routerHistory.location).catch((err)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn("Unexpected***REMOVED***error***REMOVED***when***REMOVED***starting***REMOVED***the***REMOVED***router:",***REMOVED***err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reactiveRoute***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***START_LOCATION_NORMALIZED)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(reactiveRoute,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***currentRoute.value[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.provide(routerKey,***REMOVED***router2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.provide(routeLocationKey,***REMOVED***shallowReactive(reactiveRoute));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.provide(routerViewLocationKey,***REMOVED***currentRoute);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unmountApp***REMOVED***=***REMOVED***app.unmount;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***installedApps.add(app);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app.unmount***REMOVED***=***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***installedApps.delete(app);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(installedApps.size***REMOVED***<***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pendingLocation***REMOVED***=***REMOVED***START_LOCATION_NORMALIZED;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeHistoryListener***REMOVED***&&***REMOVED***removeHistoryListener();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeHistoryListener***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentRoute.value***REMOVED***=***REMOVED***START_LOCATION_NORMALIZED;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***started***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ready***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountApp();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBrowser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addDevtools(app,***REMOVED***router2,***REMOVED***matcher);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***function***REMOVED***runGuardQueue(guards)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***guards.reduce((promise,***REMOVED***guard)***REMOVED***=>***REMOVED***promise.then(()***REMOVED***=>***REMOVED***runWithContext(guard)),***REMOVED***Promise.resolve());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***router;
}
function***REMOVED***extractChangingRecords(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***leavingRecords***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***updatingRecords***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***enteringRecords***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***Math.max(from.matched.length,***REMOVED***to.matched.length);
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***recordFrom***REMOVED***=***REMOVED***from.matched[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(recordFrom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(to.matched.find((record)***REMOVED***=>***REMOVED***isSameRouteRecord(record,***REMOVED***recordFrom)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updatingRecords.push(recordFrom);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leavingRecords.push(recordFrom);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***recordTo***REMOVED***=***REMOVED***to.matched[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(recordTo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!from.matched.find((record)***REMOVED***=>***REMOVED***isSameRouteRecord(record,***REMOVED***recordTo)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enteringRecords.push(recordTo);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[leavingRecords,***REMOVED***updatingRecords,***REMOVED***enteringRecords];
}
function***REMOVED***useRouter()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***inject(routerKey);
}
function***REMOVED***useRoute(_name)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***inject(routeLocationKey);
}
export***REMOVED***{
***REMOVED******REMOVED***NavigationFailureType,
***REMOVED******REMOVED***RouterLink,
***REMOVED******REMOVED***RouterView,
***REMOVED******REMOVED***START_LOCATION_NORMALIZED***REMOVED***as***REMOVED***START_LOCATION,
***REMOVED******REMOVED***createMemoryHistory,
***REMOVED******REMOVED***createRouter,
***REMOVED******REMOVED***createRouterMatcher,
***REMOVED******REMOVED***createWebHashHistory,
***REMOVED******REMOVED***createWebHistory,
***REMOVED******REMOVED***isNavigationFailure,
***REMOVED******REMOVED***loadRouteLocation,
***REMOVED******REMOVED***matchedRouteKey,
***REMOVED******REMOVED***onBeforeRouteLeave,
***REMOVED******REMOVED***onBeforeRouteUpdate,
***REMOVED******REMOVED***parseQuery,
***REMOVED******REMOVED***routeLocationKey,
***REMOVED******REMOVED***routerKey,
***REMOVED******REMOVED***routerViewLocationKey,
***REMOVED******REMOVED***stringifyQuery,
***REMOVED******REMOVED***useLink,
***REMOVED******REMOVED***useRoute,
***REMOVED******REMOVED***useRouter,
***REMOVED******REMOVED***viewDepthKey
};
/*!***REMOVED***Bundled***REMOVED***license***REMOVED***information:

vue-router/dist/vue-router.mjs:
***REMOVED******REMOVED***(*!
***REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***vue-router***REMOVED***v4.5.1
***REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***(c)***REMOVED***2025***REMOVED***Eduardo***REMOVED***San***REMOVED***Martin***REMOVED***Morote
***REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@license***REMOVED***MIT
***REMOVED******REMOVED******REMOVED******REMOVED****)
*/
//#***REMOVED***sourceMappingURL=vue-router.js.map
