/*!***REMOVED********************************************************************************
Copyright***REMOVED***(c)***REMOVED***Microsoft***REMOVED***Corporation.***REMOVED***All***REMOVED***rights***REMOVED***reserved.
Licensed***REMOVED***under***REMOVED***the***REMOVED***Apache***REMOVED***License,***REMOVED***Version***REMOVED***2.0***REMOVED***(the***REMOVED***"License");***REMOVED***you***REMOVED***may***REMOVED***not***REMOVED***use
this***REMOVED***file***REMOVED***except***REMOVED***in***REMOVED***compliance***REMOVED***with***REMOVED***the***REMOVED***License.***REMOVED***You***REMOVED***may***REMOVED***obtain***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the
License***REMOVED***at***REMOVED***http://www.apache.org/licenses/LICENSE-2.0

THIS***REMOVED***CODE***REMOVED***IS***REMOVED***PROVIDED***REMOVED***ON***REMOVED***AN***REMOVED****AS***REMOVED***IS****REMOVED***BASIS,***REMOVED***WITHOUT***REMOVED***WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***ANY
KIND,***REMOVED***EITHER***REMOVED***EXPRESS***REMOVED***OR***REMOVED***IMPLIED,***REMOVED***INCLUDING***REMOVED***WITHOUT***REMOVED***LIMITATION***REMOVED***ANY***REMOVED***IMPLIED
WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***TITLE,***REMOVED***FITNESS***REMOVED***FOR***REMOVED***A***REMOVED***PARTICULAR***REMOVED***PURPOSE,
MERCHANTABLITY***REMOVED***OR***REMOVED***NON-INFRINGEMENT.

See***REMOVED***the***REMOVED***Apache***REMOVED***Version***REMOVED***2.0***REMOVED***License***REMOVED***for***REMOVED***specific***REMOVED***language***REMOVED***governing***REMOVED***permissions
and***REMOVED***limitations***REMOVED***under***REMOVED***the***REMOVED***License.
********************************************************************************REMOVED****/


///***REMOVED***<reference***REMOVED***no-default-lib="true"/>

interface***REMOVED***Map<K,***REMOVED***V>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***clear():***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***true***REMOVED***if***REMOVED***an***REMOVED***element***REMOVED***in***REMOVED***the***REMOVED***Map***REMOVED***existed***REMOVED***and***REMOVED***has***REMOVED***been***REMOVED***removed,***REMOVED***or***REMOVED***false***REMOVED***if***REMOVED***the***REMOVED***element***REMOVED***does***REMOVED***not***REMOVED***exist.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***delete(key:***REMOVED***K):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Executes***REMOVED***a***REMOVED***provided***REMOVED***function***REMOVED***once***REMOVED***per***REMOVED***each***REMOVED***key/value***REMOVED***pair***REMOVED***in***REMOVED***the***REMOVED***Map,***REMOVED***in***REMOVED***insertion***REMOVED***order.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(callbackfn:***REMOVED***(value:***REMOVED***V,***REMOVED***key:***REMOVED***K,***REMOVED***map:***REMOVED***Map<K,***REMOVED***V>)***REMOVED***=>***REMOVED***void,***REMOVED***thisArg?:***REMOVED***any):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***specified***REMOVED***element***REMOVED***from***REMOVED***the***REMOVED***Map***REMOVED***object.***REMOVED***If***REMOVED***the***REMOVED***value***REMOVED***that***REMOVED***is***REMOVED***associated***REMOVED***to***REMOVED***the***REMOVED***provided***REMOVED***key***REMOVED***is***REMOVED***an***REMOVED***object,***REMOVED***then***REMOVED***you***REMOVED***will***REMOVED***get***REMOVED***a***REMOVED***reference***REMOVED***to***REMOVED***that***REMOVED***object***REMOVED***and***REMOVED***any***REMOVED***change***REMOVED***made***REMOVED***to***REMOVED***that***REMOVED***object***REMOVED***will***REMOVED***effectively***REMOVED***modify***REMOVED***it***REMOVED***inside***REMOVED***the***REMOVED***Map.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***Returns***REMOVED***the***REMOVED***element***REMOVED***associated***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***key.***REMOVED***If***REMOVED***no***REMOVED***element***REMOVED***is***REMOVED***associated***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***key,***REMOVED***undefined***REMOVED***is***REMOVED***returned.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get(key:***REMOVED***K):***REMOVED***V***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***boolean***REMOVED***indicating***REMOVED***whether***REMOVED***an***REMOVED***element***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***key***REMOVED***exists***REMOVED***or***REMOVED***not.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***has(key:***REMOVED***K):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***new***REMOVED***element***REMOVED***with***REMOVED***a***REMOVED***specified***REMOVED***key***REMOVED***and***REMOVED***value***REMOVED***to***REMOVED***the***REMOVED***Map.***REMOVED***If***REMOVED***an***REMOVED***element***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***key***REMOVED***already***REMOVED***exists,***REMOVED***the***REMOVED***element***REMOVED***will***REMOVED***be***REMOVED***updated.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***set(key:***REMOVED***K,***REMOVED***value:***REMOVED***V):***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***elements***REMOVED***in***REMOVED***the***REMOVED***Map.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***size:***REMOVED***number;
}

interface***REMOVED***MapConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***():***REMOVED***Map<any,***REMOVED***any>;
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<K,***REMOVED***V>(entries?:***REMOVED***readonly***REMOVED***(readonly***REMOVED***[K,***REMOVED***V])[]***REMOVED***|***REMOVED***null):***REMOVED***Map<K,***REMOVED***V>;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***Map<any,***REMOVED***any>;
}
declare***REMOVED***var***REMOVED***Map:***REMOVED***MapConstructor;

interface***REMOVED***ReadonlyMap<K,***REMOVED***V>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(callbackfn:***REMOVED***(value:***REMOVED***V,***REMOVED***key:***REMOVED***K,***REMOVED***map:***REMOVED***ReadonlyMap<K,***REMOVED***V>)***REMOVED***=>***REMOVED***void,***REMOVED***thisArg?:***REMOVED***any):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***get(key:***REMOVED***K):***REMOVED***V***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***has(key:***REMOVED***K):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***size:***REMOVED***number;
}

interface***REMOVED***WeakMap<K***REMOVED***extends***REMOVED***WeakKey,***REMOVED***V>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Removes***REMOVED***the***REMOVED***specified***REMOVED***element***REMOVED***from***REMOVED***the***REMOVED***WeakMap.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***element***REMOVED***was***REMOVED***successfully***REMOVED***removed,***REMOVED***or***REMOVED***false***REMOVED***if***REMOVED***it***REMOVED***was***REMOVED***not***REMOVED***present.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***delete(key:***REMOVED***K):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***a***REMOVED***specified***REMOVED***element.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get(key:***REMOVED***K):***REMOVED***V***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***a***REMOVED***boolean***REMOVED***indicating***REMOVED***whether***REMOVED***an***REMOVED***element***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***key***REMOVED***exists***REMOVED***or***REMOVED***not.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***has(key:***REMOVED***K):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***new***REMOVED***element***REMOVED***with***REMOVED***a***REMOVED***specified***REMOVED***key***REMOVED***and***REMOVED***value.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***key***REMOVED***Must***REMOVED***be***REMOVED***an***REMOVED***object***REMOVED***or***REMOVED***symbol.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***set(key:***REMOVED***K,***REMOVED***value:***REMOVED***V):***REMOVED***this;
}

interface***REMOVED***WeakMapConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<K***REMOVED***extends***REMOVED***WeakKey***REMOVED***=***REMOVED***WeakKey,***REMOVED***V***REMOVED***=***REMOVED***any>(entries?:***REMOVED***readonly***REMOVED***(readonly***REMOVED***[K,***REMOVED***V])[]***REMOVED***|***REMOVED***null):***REMOVED***WeakMap<K,***REMOVED***V>;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***WeakMap<WeakKey,***REMOVED***any>;
}
declare***REMOVED***var***REMOVED***WeakMap:***REMOVED***WeakMapConstructor;

interface***REMOVED***Set<T>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Appends***REMOVED***a***REMOVED***new***REMOVED***element***REMOVED***with***REMOVED***a***REMOVED***specified***REMOVED***value***REMOVED***to***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***Set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***add(value:***REMOVED***T):***REMOVED***this;

***REMOVED******REMOVED******REMOVED******REMOVED***clear():***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Removes***REMOVED***a***REMOVED***specified***REMOVED***value***REMOVED***from***REMOVED***the***REMOVED***Set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***an***REMOVED***element***REMOVED***in***REMOVED***the***REMOVED***Set***REMOVED***existed***REMOVED***and***REMOVED***has***REMOVED***been***REMOVED***removed,***REMOVED***or***REMOVED***false***REMOVED***if***REMOVED***the***REMOVED***element***REMOVED***does***REMOVED***not***REMOVED***exist.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***delete(value:***REMOVED***T):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Executes***REMOVED***a***REMOVED***provided***REMOVED***function***REMOVED***once***REMOVED***per***REMOVED***each***REMOVED***value***REMOVED***in***REMOVED***the***REMOVED***Set***REMOVED***object,***REMOVED***in***REMOVED***insertion***REMOVED***order.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(callbackfn:***REMOVED***(value:***REMOVED***T,***REMOVED***value2:***REMOVED***T,***REMOVED***set:***REMOVED***Set<T>)***REMOVED***=>***REMOVED***void,***REMOVED***thisArg?:***REMOVED***any):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***a***REMOVED***boolean***REMOVED***indicating***REMOVED***whether***REMOVED***an***REMOVED***element***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***value***REMOVED***exists***REMOVED***in***REMOVED***the***REMOVED***Set***REMOVED***or***REMOVED***not.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***has(value:***REMOVED***T):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***(unique)***REMOVED***elements***REMOVED***in***REMOVED***Set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***size:***REMOVED***number;
}

interface***REMOVED***SetConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<T***REMOVED***=***REMOVED***any>(values?:***REMOVED***readonly***REMOVED***T[]***REMOVED***|***REMOVED***null):***REMOVED***Set<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***Set<any>;
}
declare***REMOVED***var***REMOVED***Set:***REMOVED***SetConstructor;

interface***REMOVED***ReadonlySet<T>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(callbackfn:***REMOVED***(value:***REMOVED***T,***REMOVED***value2:***REMOVED***T,***REMOVED***set:***REMOVED***ReadonlySet<T>)***REMOVED***=>***REMOVED***void,***REMOVED***thisArg?:***REMOVED***any):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***has(value:***REMOVED***T):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***size:***REMOVED***number;
}

interface***REMOVED***WeakSet<T***REMOVED***extends***REMOVED***WeakKey>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Appends***REMOVED***a***REMOVED***new***REMOVED***value***REMOVED***to***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***WeakSet.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***add(value:***REMOVED***T):***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Removes***REMOVED***the***REMOVED***specified***REMOVED***element***REMOVED***from***REMOVED***the***REMOVED***WeakSet.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***element***REMOVED***existed***REMOVED***and***REMOVED***has***REMOVED***been***REMOVED***removed,***REMOVED***or***REMOVED***false***REMOVED***if***REMOVED***the***REMOVED***element***REMOVED***does***REMOVED***not***REMOVED***exist.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***delete(value:***REMOVED***T):***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***a***REMOVED***boolean***REMOVED***indicating***REMOVED***whether***REMOVED***a***REMOVED***value***REMOVED***exists***REMOVED***in***REMOVED***the***REMOVED***WeakSet***REMOVED***or***REMOVED***not.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***has(value:***REMOVED***T):***REMOVED***boolean;
}

interface***REMOVED***WeakSetConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<T***REMOVED***extends***REMOVED***WeakKey***REMOVED***=***REMOVED***WeakKey>(values?:***REMOVED***readonly***REMOVED***T[]***REMOVED***|***REMOVED***null):***REMOVED***WeakSet<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***WeakSet<WeakKey>;
}
declare***REMOVED***var***REMOVED***WeakSet:***REMOVED***WeakSetConstructor;
