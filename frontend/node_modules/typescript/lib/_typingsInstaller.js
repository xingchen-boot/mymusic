/*!***REMOVED********************************************************************************
Copyright***REMOVED***(c)***REMOVED***Microsoft***REMOVED***Corporation.***REMOVED***All***REMOVED***rights***REMOVED***reserved.
Licensed***REMOVED***under***REMOVED***the***REMOVED***Apache***REMOVED***License,***REMOVED***Version***REMOVED***2.0***REMOVED***(the***REMOVED***"License");***REMOVED***you***REMOVED***may***REMOVED***not***REMOVED***use
this***REMOVED***file***REMOVED***except***REMOVED***in***REMOVED***compliance***REMOVED***with***REMOVED***the***REMOVED***License.***REMOVED***You***REMOVED***may***REMOVED***obtain***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the
License***REMOVED***at***REMOVED***http://www.apache.org/licenses/LICENSE-2.0

THIS***REMOVED***CODE***REMOVED***IS***REMOVED***PROVIDED***REMOVED***ON***REMOVED***AN***REMOVED****AS***REMOVED***IS****REMOVED***BASIS,***REMOVED***WITHOUT***REMOVED***WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***ANY
KIND,***REMOVED***EITHER***REMOVED***EXPRESS***REMOVED***OR***REMOVED***IMPLIED,***REMOVED***INCLUDING***REMOVED***WITHOUT***REMOVED***LIMITATION***REMOVED***ANY***REMOVED***IMPLIED
WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***TITLE,***REMOVED***FITNESS***REMOVED***FOR***REMOVED***A***REMOVED***PARTICULAR***REMOVED***PURPOSE,
MERCHANTABLITY***REMOVED***OR***REMOVED***NON-INFRINGEMENT.

See***REMOVED***the***REMOVED***Apache***REMOVED***Version***REMOVED***2.0***REMOVED***License***REMOVED***for***REMOVED***specific***REMOVED***language***REMOVED***governing***REMOVED***permissions
and***REMOVED***limitations***REMOVED***under***REMOVED***the***REMOVED***License.
********************************************************************************REMOVED****/


"use***REMOVED***strict";
var***REMOVED***__create***REMOVED***=***REMOVED***Object.create;
var***REMOVED***__defProp***REMOVED***=***REMOVED***Object.defineProperty;
var***REMOVED***__getOwnPropDesc***REMOVED***=***REMOVED***Object.getOwnPropertyDescriptor;
var***REMOVED***__getOwnPropNames***REMOVED***=***REMOVED***Object.getOwnPropertyNames;
var***REMOVED***__getProtoOf***REMOVED***=***REMOVED***Object.getPrototypeOf;
var***REMOVED***__hasOwnProp***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
var***REMOVED***__copyProps***REMOVED***=***REMOVED***(to,***REMOVED***from,***REMOVED***except,***REMOVED***desc)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(from***REMOVED***&&***REMOVED***typeof***REMOVED***from***REMOVED***===***REMOVED***"object"***REMOVED***||***REMOVED***typeof***REMOVED***from***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***key***REMOVED***of***REMOVED***__getOwnPropNames(from))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!__hasOwnProp.call(to,***REMOVED***key)***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***except)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__defProp(to,***REMOVED***key,***REMOVED***{***REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***from[key],***REMOVED***enumerable:***REMOVED***!(desc***REMOVED***=***REMOVED***__getOwnPropDesc(from,***REMOVED***key))***REMOVED***||***REMOVED***desc.enumerable***REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***to;
};
var***REMOVED***__reExport***REMOVED***=***REMOVED***(target,***REMOVED***mod,***REMOVED***secondTarget)***REMOVED***=>***REMOVED***(__copyProps(target,***REMOVED***mod,***REMOVED***"default"),***REMOVED***secondTarget***REMOVED***&&***REMOVED***__copyProps(secondTarget,***REMOVED***mod,***REMOVED***"default"));
var***REMOVED***__toESM***REMOVED***=***REMOVED***(mod,***REMOVED***isNodeMode,***REMOVED***target)***REMOVED***=>***REMOVED***(target***REMOVED***=***REMOVED***mod***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***__create(__getProtoOf(mod))***REMOVED***:***REMOVED***{},***REMOVED***__copyProps(
***REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***importer***REMOVED***is***REMOVED***in***REMOVED***node***REMOVED***compatibility***REMOVED***mode***REMOVED***or***REMOVED***this***REMOVED***is***REMOVED***not***REMOVED***an***REMOVED***ESM
***REMOVED******REMOVED***//***REMOVED***file***REMOVED***that***REMOVED***has***REMOVED***been***REMOVED***converted***REMOVED***to***REMOVED***a***REMOVED***CommonJS***REMOVED***file***REMOVED***using***REMOVED***a***REMOVED***Babel-
***REMOVED******REMOVED***//***REMOVED***compatible***REMOVED***transform***REMOVED***(i.e.***REMOVED***"__esModule"***REMOVED***has***REMOVED***not***REMOVED***been***REMOVED***set),***REMOVED***then***REMOVED***set
***REMOVED******REMOVED***//***REMOVED***"default"***REMOVED***to***REMOVED***the***REMOVED***CommonJS***REMOVED***"module.exports"***REMOVED***for***REMOVED***node***REMOVED***compatibility.
***REMOVED******REMOVED***isNodeMode***REMOVED***||***REMOVED***!mod***REMOVED***||***REMOVED***!mod.__esModule***REMOVED***?***REMOVED***__defProp(target,***REMOVED***"default",***REMOVED***{***REMOVED***value:***REMOVED***mod,***REMOVED***enumerable:***REMOVED***true***REMOVED***})***REMOVED***:***REMOVED***target,
***REMOVED******REMOVED***mod
));

//***REMOVED***src/typingsInstaller/nodeTypingsInstaller.ts
var***REMOVED***import_child_process***REMOVED***=***REMOVED***require("child_process");
var***REMOVED***fs***REMOVED***=***REMOVED***__toESM(require("fs"));
var***REMOVED***path***REMOVED***=***REMOVED***__toESM(require("path"));

//***REMOVED***src/typescript/typescript.ts
var***REMOVED***typescript_exports***REMOVED***=***REMOVED***{};
__reExport(typescript_exports,***REMOVED***require("./typescript.js"));

//***REMOVED***src/typingsInstaller/nodeTypingsInstaller.ts
var***REMOVED***FileLog***REMOVED***=***REMOVED***class***REMOVED***{
***REMOVED******REMOVED***constructor(logFile)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.logFile***REMOVED***=***REMOVED***logFile;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isEnabled***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***this.logFile***REMOVED***===***REMOVED***"string";
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***this.writeLine***REMOVED***=***REMOVED***(text)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.logFile***REMOVED***!==***REMOVED***"string")***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fs.appendFileSync(this.logFile,***REMOVED***`[${typescript_exports.server.nowString()}]***REMOVED***${text}${typescript_exports.sys.newLine}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.logFile***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
};
function***REMOVED***getDefaultNPMLocation(processName,***REMOVED***validateDefaultNpmLocation2,***REMOVED***host)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(path.basename(processName).indexOf("node")***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***npmPath***REMOVED***=***REMOVED***path.join(path.dirname(process.argv[0]),***REMOVED***"npm");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!validateDefaultNpmLocation2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***npmPath;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(host.fileExists(npmPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`"${npmPath}"`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***"npm";
}
function***REMOVED***loadTypesRegistryFile(typesRegistryFilePath,***REMOVED***host,***REMOVED***log2)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!host.fileExists(typesRegistryFilePath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(log2.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log2.writeLine(`Types***REMOVED***registry***REMOVED***file***REMOVED***'${typesRegistryFilePath}'***REMOVED***does***REMOVED***not***REMOVED***exist`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***content***REMOVED***=***REMOVED***JSON.parse(host.readFile(typesRegistryFilePath));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Map(Object.entries(content.entries));
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(log2.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log2.writeLine(`Error***REMOVED***when***REMOVED***loading***REMOVED***types***REMOVED***registry***REMOVED***file***REMOVED***'${typesRegistryFilePath}':***REMOVED***${e.message},***REMOVED***${e.stack}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
}
var***REMOVED***typesRegistryPackageName***REMOVED***=***REMOVED***"types-registry";
function***REMOVED***getTypesRegistryFileLocation(globalTypingsCacheLocation2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***typescript_exports.combinePaths)((0,***REMOVED***typescript_exports.normalizeSlashes)(globalTypingsCacheLocation2),***REMOVED***`node_modules/${typesRegistryPackageName}/index.json`);
}
var***REMOVED***NodeTypingsInstaller***REMOVED***=***REMOVED***class***REMOVED***extends***REMOVED***typescript_exports.server.typingsInstaller.TypingsInstaller***REMOVED***{
***REMOVED******REMOVED***constructor(globalTypingsCacheLocation2,***REMOVED***typingSafeListLocation2,***REMOVED***typesMapLocation2,***REMOVED***npmLocation2,***REMOVED***validateDefaultNpmLocation2,***REMOVED***throttleLimit,***REMOVED***log2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***libDirectory***REMOVED***=***REMOVED***(0,***REMOVED***typescript_exports.getDirectoryPath)((0,***REMOVED***typescript_exports.normalizePath)(typescript_exports.sys.getExecutingFilePath()));
***REMOVED******REMOVED******REMOVED******REMOVED***super(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typescript_exports.sys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalTypingsCacheLocation2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typingSafeListLocation2***REMOVED***?***REMOVED***(0,***REMOVED***typescript_exports.toPath)(typingSafeListLocation2,***REMOVED***"",***REMOVED***(0,***REMOVED***typescript_exports.createGetCanonicalFileName)(typescript_exports.sys.useCaseSensitiveFileNames))***REMOVED***:***REMOVED***(0,***REMOVED***typescript_exports.toPath)("typingSafeList.json",***REMOVED***libDirectory,***REMOVED***(0,***REMOVED***typescript_exports.createGetCanonicalFileName)(typescript_exports.sys.useCaseSensitiveFileNames)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typesMapLocation2***REMOVED***?***REMOVED***(0,***REMOVED***typescript_exports.toPath)(typesMapLocation2,***REMOVED***"",***REMOVED***(0,***REMOVED***typescript_exports.createGetCanonicalFileName)(typescript_exports.sys.useCaseSensitiveFileNames))***REMOVED***:***REMOVED***(0,***REMOVED***typescript_exports.toPath)("typesMap.json",***REMOVED***libDirectory,***REMOVED***(0,***REMOVED***typescript_exports.createGetCanonicalFileName)(typescript_exports.sys.useCaseSensitiveFileNames)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throttleLimit,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log2
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***this.npmPath***REMOVED***=***REMOVED***npmLocation2***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***npmLocation2***REMOVED***:***REMOVED***getDefaultNPMLocation(process.argv[0],***REMOVED***validateDefaultNpmLocation2,***REMOVED***this.installTypingHost);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.npmPath.includes("***REMOVED***")***REMOVED***&&***REMOVED***this.npmPath[0]***REMOVED***!==***REMOVED***`"`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.npmPath***REMOVED***=***REMOVED***`"${this.npmPath}"`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Process***REMOVED***id:***REMOVED***${process.pid}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`NPM***REMOVED***location:***REMOVED***${this.npmPath}***REMOVED***(explicit***REMOVED***'${typescript_exports.server.Arguments.NpmLocation}'***REMOVED***${npmLocation2***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***"not***REMOVED***"***REMOVED***:***REMOVED***""}***REMOVED***provided)`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`validateDefaultNpmLocation:***REMOVED***${validateDefaultNpmLocation2}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.ensurePackageDirectoryExists(globalTypingsCacheLocation2);
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Updating***REMOVED***${typesRegistryPackageName}***REMOVED***npm***REMOVED***package...`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.execSyncAndLog(`${this.npmPath}***REMOVED***install***REMOVED***--ignore-scripts***REMOVED***${typesRegistryPackageName}@${this.latestDistTag}`,***REMOVED***{***REMOVED***cwd:***REMOVED***globalTypingsCacheLocation2***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Updated***REMOVED***${typesRegistryPackageName}***REMOVED***npm***REMOVED***package`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Error***REMOVED***updating***REMOVED***${typesRegistryPackageName}***REMOVED***package:***REMOVED***${e.message}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delayedInitializationError***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***"event::initializationFailed",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***message:***REMOVED***e.message,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack:***REMOVED***e.stack
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.typesRegistry***REMOVED***=***REMOVED***loadTypesRegistryFile(getTypesRegistryFileLocation(globalTypingsCacheLocation2),***REMOVED***this.installTypingHost,***REMOVED***this.log);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***handleRequest(req)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.delayedInitializationError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sendResponse(this.delayedInitializationError);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delayedInitializationError***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***super.handleRequest(req);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***sendResponse(response)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Sending***REMOVED***response:${typescript_exports.server.stringifyIndented(response)}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***process.send(response);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Response***REMOVED***has***REMOVED***been***REMOVED***sent.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***installWorker(requestId,***REMOVED***packageNames,***REMOVED***cwd,***REMOVED***onRequestCompleted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`#${requestId}***REMOVED***with***REMOVED***cwd:***REMOVED***${cwd}***REMOVED***arguments:***REMOVED***${JSON.stringify(packageNames)}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***Date.now();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasError***REMOVED***=***REMOVED***typescript_exports.server.typingsInstaller.installNpmPackages(this.npmPath,***REMOVED***typescript_exports.version,***REMOVED***packageNames,***REMOVED***(command)***REMOVED***=>***REMOVED***this.execSyncAndLog(command,***REMOVED***{***REMOVED***cwd***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`npm***REMOVED***install***REMOVED***#${requestId}***REMOVED***took:***REMOVED***${Date.now()***REMOVED***-***REMOVED***start}***REMOVED***ms`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***onRequestCompleted(!hasError);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/*****REMOVED***Returns***REMOVED***'true'***REMOVED***in***REMOVED***case***REMOVED***of***REMOVED***error.***REMOVED****/
***REMOVED******REMOVED***execSyncAndLog(command,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`Exec:***REMOVED***${command}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stdout***REMOVED***=***REMOVED***(0,***REMOVED***import_child_process.execSync)(command,***REMOVED***{***REMOVED***...options,***REMOVED***encoding:***REMOVED***"utf-8"***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`***REMOVED******REMOVED******REMOVED******REMOVED***Succeeded.***REMOVED***stdout:${indent(typescript_exports.sys.newLine,***REMOVED***stdout)}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***stdout,***REMOVED***stderr***REMOVED***}***REMOVED***=***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.log.writeLine(`***REMOVED******REMOVED******REMOVED******REMOVED***Failed.***REMOVED***stdout:${indent(typescript_exports.sys.newLine,***REMOVED***stdout)}${typescript_exports.sys.newLine}***REMOVED******REMOVED******REMOVED******REMOVED***stderr:${indent(typescript_exports.sys.newLine,***REMOVED***stderr)}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
var***REMOVED***logFilePath***REMOVED***=***REMOVED***typescript_exports.server.findArgument(typescript_exports.server.Arguments.LogFile);
var***REMOVED***globalTypingsCacheLocation***REMOVED***=***REMOVED***typescript_exports.server.findArgument(typescript_exports.server.Arguments.GlobalCacheLocation);
var***REMOVED***typingSafeListLocation***REMOVED***=***REMOVED***typescript_exports.server.findArgument(typescript_exports.server.Arguments.TypingSafeListLocation);
var***REMOVED***typesMapLocation***REMOVED***=***REMOVED***typescript_exports.server.findArgument(typescript_exports.server.Arguments.TypesMapLocation);
var***REMOVED***npmLocation***REMOVED***=***REMOVED***typescript_exports.server.findArgument(typescript_exports.server.Arguments.NpmLocation);
var***REMOVED***validateDefaultNpmLocation***REMOVED***=***REMOVED***typescript_exports.server.hasArgument(typescript_exports.server.Arguments.ValidateDefaultNpmLocation);
var***REMOVED***log***REMOVED***=***REMOVED***new***REMOVED***FileLog(logFilePath);
if***REMOVED***(log.isEnabled())***REMOVED***{
***REMOVED******REMOVED***process.on("uncaughtException",***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***log.writeLine(`Unhandled***REMOVED***exception:***REMOVED***${e}***REMOVED***at***REMOVED***${e.stack}`);
***REMOVED******REMOVED***});
}
process.on("disconnect",***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(log.isEnabled())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***log.writeLine(`Parent***REMOVED***process***REMOVED***has***REMOVED***exited,***REMOVED***shutting***REMOVED***down...`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***process.exit(0);
});
var***REMOVED***installer;
process.on("message",***REMOVED***(req)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***installer***REMOVED***??***REMOVED***(installer***REMOVED***=***REMOVED***new***REMOVED***NodeTypingsInstaller(
***REMOVED******REMOVED******REMOVED******REMOVED***globalTypingsCacheLocation,
***REMOVED******REMOVED******REMOVED******REMOVED***typingSafeListLocation,
***REMOVED******REMOVED******REMOVED******REMOVED***typesMapLocation,
***REMOVED******REMOVED******REMOVED******REMOVED***npmLocation,
***REMOVED******REMOVED******REMOVED******REMOVED***validateDefaultNpmLocation,
***REMOVED******REMOVED******REMOVED******REMOVED***/*throttleLimit*/
***REMOVED******REMOVED******REMOVED******REMOVED***5,
***REMOVED******REMOVED******REMOVED******REMOVED***log
***REMOVED******REMOVED***));
***REMOVED******REMOVED***installer.handleRequest(req);
});
function***REMOVED***indent(newline,***REMOVED***str)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***str***REMOVED***&&***REMOVED***str.length***REMOVED***?***REMOVED***`${newline}***REMOVED******REMOVED******REMOVED******REMOVED***`***REMOVED***+***REMOVED***str.replace(/\r?\n/,***REMOVED***`${newline}***REMOVED******REMOVED******REMOVED******REMOVED***`)***REMOVED***:***REMOVED***"";
}
//#***REMOVED***sourceMappingURL=_typingsInstaller.js.map
