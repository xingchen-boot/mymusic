@use***REMOVED***'config';
@use***REMOVED***'sass:meta';
@use***REMOVED***'sass:string';
@use***REMOVED***'sass:math';
@use***REMOVED***'sass:color';

//***REMOVED***BEM***REMOVED***support***REMOVED***Func
@function***REMOVED***selectorToString($selector)***REMOVED***{
***REMOVED******REMOVED***$selector:***REMOVED***meta.inspect($selector);
***REMOVED******REMOVED***$selector:***REMOVED***string.slice($selector,***REMOVED***2,***REMOVED***-2);
***REMOVED******REMOVED***@return***REMOVED***$selector;
}

@function***REMOVED***containsModifier($selector)***REMOVED***{
***REMOVED******REMOVED***$selector:***REMOVED***selectorToString($selector);

***REMOVED******REMOVED***@if***REMOVED***string.index($selector,***REMOVED***config.$modifier-separator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@return***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***@else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@return***REMOVED***false;
***REMOVED******REMOVED***}
}

@function***REMOVED***containWhenFlag($selector)***REMOVED***{
***REMOVED******REMOVED***$selector:***REMOVED***selectorToString($selector);

***REMOVED******REMOVED***@if***REMOVED***string.index($selector,***REMOVED***'.'***REMOVED***+***REMOVED***config.$state-prefix)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@return***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***@else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@return***REMOVED***false;
***REMOVED******REMOVED***}
}

@function***REMOVED***containPseudoClass($selector)***REMOVED***{
***REMOVED******REMOVED***$selector:***REMOVED***selectorToString($selector);

***REMOVED******REMOVED***@if***REMOVED***string.index($selector,***REMOVED***':')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@return***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***@else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@return***REMOVED***false;
***REMOVED******REMOVED***}
}

@function***REMOVED***hitAllSpecialNestRule($selector)***REMOVED***{
***REMOVED******REMOVED***@return***REMOVED***containsModifier($selector)***REMOVED***or***REMOVED***containWhenFlag($selector)***REMOVED***or
***REMOVED******REMOVED******REMOVED******REMOVED***containPseudoClass($selector);
}

//***REMOVED***join***REMOVED***var***REMOVED***name
//***REMOVED***joinVarName(('button',***REMOVED***'text-color'))***REMOVED***=>***REMOVED***'--el-button-text-color'
@function***REMOVED***joinVarName($list)***REMOVED***{
***REMOVED******REMOVED***$name:***REMOVED***'--'***REMOVED***+***REMOVED***config.$namespace;
***REMOVED******REMOVED***@each***REMOVED***$item***REMOVED***in***REMOVED***$list***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***@if***REMOVED***$item***REMOVED***!=***REMOVED***''***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$name:***REMOVED***$name***REMOVED***+***REMOVED***'-'***REMOVED***+***REMOVED***$item;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***@return***REMOVED***$name;
}

//***REMOVED***getCssVarName('button',***REMOVED***'text-color')***REMOVED***=>***REMOVED***'--el-button-text-color'
@function***REMOVED***getCssVarName($args...)***REMOVED***{
***REMOVED******REMOVED***@return***REMOVED***joinVarName($args);
}

//***REMOVED***getCssVar('button',***REMOVED***'text-color')***REMOVED***=>***REMOVED***var(--el-button-text-color)
@function***REMOVED***getCssVar($args...)***REMOVED***{
***REMOVED******REMOVED***@return***REMOVED***var(#{joinVarName($args)});
}

//***REMOVED***getCssVarWithDefault(('button',***REMOVED***'text-color'),***REMOVED***red)***REMOVED***=>***REMOVED***var(--el-button-text-color,***REMOVED***red)
@function***REMOVED***getCssVarWithDefault($args,***REMOVED***$default)***REMOVED***{
***REMOVED******REMOVED***@return***REMOVED***var(#{joinVarName($args)},***REMOVED***#{$default});
}

//***REMOVED***bem('block',***REMOVED***'element',***REMOVED***'modifier')***REMOVED***=>***REMOVED***'el-block__element--modifier'
@function***REMOVED***bem($block,***REMOVED***$element:***REMOVED***'',***REMOVED***$modifier:***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED***$name:***REMOVED***config.$namespace***REMOVED***+***REMOVED***config.$common-separator***REMOVED***+***REMOVED***$block;

***REMOVED******REMOVED***@if***REMOVED***$element***REMOVED***!=***REMOVED***''***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***$name:***REMOVED***$name***REMOVED***+***REMOVED***config.$element-separator***REMOVED***+***REMOVED***$element;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***@if***REMOVED***$modifier***REMOVED***!=***REMOVED***''***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***$name:***REMOVED***$name***REMOVED***+***REMOVED***config.$modifier-separator***REMOVED***+***REMOVED***$modifier;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***@debug***REMOVED***$name;
***REMOVED******REMOVED***@return***REMOVED***$name;
}

@function***REMOVED***roundColor($color)***REMOVED***{
***REMOVED******REMOVED***$r:***REMOVED***math.round(color.channel($color,***REMOVED***'red'));
***REMOVED******REMOVED***$g:***REMOVED***math.round(color.channel($color,***REMOVED***'green'));
***REMOVED******REMOVED***$b:***REMOVED***math.round(color.channel($color,***REMOVED***'blue'));
***REMOVED******REMOVED***$a:***REMOVED***color.channel($color,***REMOVED***'alpha');

***REMOVED******REMOVED***@return***REMOVED***rgba($r,***REMOVED***$g,***REMOVED***$b,***REMOVED***$a);
}
