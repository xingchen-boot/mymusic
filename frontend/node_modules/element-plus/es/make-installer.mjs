import***REMOVED***{***REMOVED***version***REMOVED***}***REMOVED***from***REMOVED***'./version.mjs';
import***REMOVED***{***REMOVED***INSTALLED_KEY***REMOVED***}***REMOVED***from***REMOVED***'./constants/key.mjs';
import***REMOVED***{***REMOVED***provideGlobalConfig***REMOVED***}***REMOVED***from***REMOVED***'./components/config-provider/src/hooks/use-global-config.mjs';

const***REMOVED***makeInstaller***REMOVED***=***REMOVED***(components***REMOVED***=***REMOVED***[])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***install***REMOVED***=***REMOVED***(app,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(app[INSTALLED_KEY])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***app[INSTALLED_KEY]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***components.forEach((c)***REMOVED***=>***REMOVED***app.use(c));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***provideGlobalConfig(options,***REMOVED***app,***REMOVED***true);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***version,
***REMOVED******REMOVED******REMOVED******REMOVED***install
***REMOVED******REMOVED***};
};

export***REMOVED***{***REMOVED***makeInstaller***REMOVED***};
//#***REMOVED***sourceMappingURL=make-installer.mjs.map
