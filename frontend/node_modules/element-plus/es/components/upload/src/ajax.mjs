import***REMOVED***{***REMOVED***isNil***REMOVED***}***REMOVED***from***REMOVED***'lodash-unified';
import***REMOVED***{***REMOVED***throwError***REMOVED***}***REMOVED***from***REMOVED***'../../../utils/error.mjs';
import***REMOVED***{***REMOVED***isArray***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';

const***REMOVED***SCOPE***REMOVED***=***REMOVED***"ElUpload";
class***REMOVED***UploadAjaxError***REMOVED***extends***REMOVED***Error***REMOVED***{
***REMOVED******REMOVED***constructor(message,***REMOVED***status,***REMOVED***method,***REMOVED***url)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(message);
***REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***"UploadAjaxError";
***REMOVED******REMOVED******REMOVED******REMOVED***this.status***REMOVED***=***REMOVED***status;
***REMOVED******REMOVED******REMOVED******REMOVED***this.method***REMOVED***=***REMOVED***method;
***REMOVED******REMOVED******REMOVED******REMOVED***this.url***REMOVED***=***REMOVED***url;
***REMOVED******REMOVED***}
}
function***REMOVED***getError(action,***REMOVED***option,***REMOVED***xhr)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***msg;
***REMOVED******REMOVED***if***REMOVED***(xhr.response)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***msg***REMOVED***=***REMOVED***`${xhr.response.error***REMOVED***||***REMOVED***xhr.response}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(xhr.responseText)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***msg***REMOVED***=***REMOVED***`${xhr.responseText}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***msg***REMOVED***=***REMOVED***`fail***REMOVED***to***REMOVED***${option.method}***REMOVED***${action}***REMOVED***${xhr.status}`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***UploadAjaxError(msg,***REMOVED***xhr.status,***REMOVED***option.method,***REMOVED***action);
}
function***REMOVED***getBody(xhr)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***text***REMOVED***=***REMOVED***xhr.responseText***REMOVED***||***REMOVED***xhr.response;
***REMOVED******REMOVED***if***REMOVED***(!text)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***text;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***JSON.parse(text);
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***text;
***REMOVED******REMOVED***}
}
const***REMOVED***ajaxUpload***REMOVED***=***REMOVED***(option)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***XMLHttpRequest***REMOVED***===***REMOVED***"undefined")
***REMOVED******REMOVED******REMOVED******REMOVED***throwError(SCOPE,***REMOVED***"XMLHttpRequest***REMOVED***is***REMOVED***undefined");
***REMOVED******REMOVED***const***REMOVED***xhr***REMOVED***=***REMOVED***new***REMOVED***XMLHttpRequest();
***REMOVED******REMOVED***const***REMOVED***action***REMOVED***=***REMOVED***option.action;
***REMOVED******REMOVED***if***REMOVED***(xhr.upload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***xhr.upload.addEventListener("progress",***REMOVED***(evt)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***progressEvt***REMOVED***=***REMOVED***evt;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***progressEvt.percent***REMOVED***=***REMOVED***evt.total***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***evt.loaded***REMOVED***/***REMOVED***evt.total***REMOVED*******REMOVED***100***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***option.onProgress(progressEvt);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***formData***REMOVED***=***REMOVED***new***REMOVED***FormData();
***REMOVED******REMOVED***if***REMOVED***(option.data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***value]***REMOVED***of***REMOVED***Object.entries(option.data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(value)***REMOVED***&&***REMOVED***value.length)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formData.append(key,***REMOVED***...value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formData.append(key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***formData.append(option.filename,***REMOVED***option.file,***REMOVED***option.file.name);
***REMOVED******REMOVED***xhr.addEventListener("error",***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***option.onError(getError(action,***REMOVED***option,***REMOVED***xhr));
***REMOVED******REMOVED***});
***REMOVED******REMOVED***xhr.addEventListener("load",***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(xhr.status***REMOVED***<***REMOVED***200***REMOVED***||***REMOVED***xhr.status***REMOVED***>=***REMOVED***300)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***option.onError(getError(action,***REMOVED***option,***REMOVED***xhr));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***option.onSuccess(getBody(xhr));
***REMOVED******REMOVED***});
***REMOVED******REMOVED***xhr.open(option.method,***REMOVED***action,***REMOVED***true);
***REMOVED******REMOVED***if***REMOVED***(option.withCredentials***REMOVED***&&***REMOVED***"withCredentials"***REMOVED***in***REMOVED***xhr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***xhr.withCredentials***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***headers***REMOVED***=***REMOVED***option.headers***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***if***REMOVED***(headers***REMOVED***instanceof***REMOVED***Headers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***headers.forEach((value,***REMOVED***key)***REMOVED***=>***REMOVED***xhr.setRequestHeader(key,***REMOVED***value));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***value]***REMOVED***of***REMOVED***Object.entries(headers))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isNil(value))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***xhr.setRequestHeader(key,***REMOVED***String(value));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***xhr.send(formData);
***REMOVED******REMOVED***return***REMOVED***xhr;
};

export***REMOVED***{***REMOVED***UploadAjaxError,***REMOVED***ajaxUpload***REMOVED***};
//#***REMOVED***sourceMappingURL=ajax.mjs.map
