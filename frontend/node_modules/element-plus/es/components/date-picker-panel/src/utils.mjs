import***REMOVED***dayjs***REMOVED***from***REMOVED***'dayjs';
import***REMOVED***{***REMOVED***isArray,***REMOVED***isString***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';
import***REMOVED***{***REMOVED***rangeArr***REMOVED***}***REMOVED***from***REMOVED***'../../time-picker/src/utils.mjs';

const***REMOVED***isValidRange***REMOVED***=***REMOVED***(range)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isArray(range))
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED***return***REMOVED***dayjs.isDayjs(left)***REMOVED***&&***REMOVED***dayjs.isDayjs(right)***REMOVED***&&***REMOVED***dayjs(left).isValid()***REMOVED***&&***REMOVED***dayjs(right).isValid()***REMOVED***&&***REMOVED***left.isSameOrBefore(right);
};
const***REMOVED***getDefaultValue***REMOVED***=***REMOVED***(defaultValue,***REMOVED***{***REMOVED***lang,***REMOVED***step***REMOVED***=***REMOVED***1,***REMOVED***unit,***REMOVED***unlinkPanels***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***start;
***REMOVED******REMOVED***if***REMOVED***(isArray(defaultValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[left,***REMOVED***right]***REMOVED***=***REMOVED***defaultValue.map((d)***REMOVED***=>***REMOVED***dayjs(d).locale(lang));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!unlinkPanels)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right***REMOVED***=***REMOVED***left.add(step,***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[left,***REMOVED***right];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(defaultValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***dayjs(defaultValue);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***dayjs();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***start***REMOVED***=***REMOVED***start.locale(lang);
***REMOVED******REMOVED***return***REMOVED***[start,***REMOVED***start.add(step,***REMOVED***unit)];
};
const***REMOVED***buildPickerTable***REMOVED***=***REMOVED***(dimension,***REMOVED***rows,***REMOVED***{
***REMOVED******REMOVED***columnIndexOffset,
***REMOVED******REMOVED***startDate,
***REMOVED******REMOVED***nextEndDate,
***REMOVED******REMOVED***now,
***REMOVED******REMOVED***unit,
***REMOVED******REMOVED***relativeDateGetter,
***REMOVED******REMOVED***setCellMetadata,
***REMOVED******REMOVED***setRowMetadata
})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***rowIndex***REMOVED***=***REMOVED***0;***REMOVED***rowIndex***REMOVED***<***REMOVED***dimension.row;***REMOVED***rowIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***row***REMOVED***=***REMOVED***rows[rowIndex];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***columnIndex***REMOVED***=***REMOVED***0;***REMOVED***columnIndex***REMOVED***<***REMOVED***dimension.column;***REMOVED***columnIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cell***REMOVED***=***REMOVED***row[columnIndex***REMOVED***+***REMOVED***columnIndexOffset];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!cell)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***row:***REMOVED***rowIndex,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***columnIndex,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"normal",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inRange:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***rowIndex***REMOVED*******REMOVED***dimension.column***REMOVED***+***REMOVED***columnIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextStartDate***REMOVED***=***REMOVED***relativeDateGetter(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.dayjs***REMOVED***=***REMOVED***nextStartDate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.date***REMOVED***=***REMOVED***nextStartDate.toDate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.timestamp***REMOVED***=***REMOVED***nextStartDate.valueOf();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.type***REMOVED***=***REMOVED***"normal";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.inRange***REMOVED***=***REMOVED***!!(startDate***REMOVED***&&***REMOVED***nextStartDate.isSameOrAfter(startDate,***REMOVED***unit)***REMOVED***&&***REMOVED***nextEndDate***REMOVED***&&***REMOVED***nextStartDate.isSameOrBefore(nextEndDate,***REMOVED***unit))***REMOVED***||***REMOVED***!!(startDate***REMOVED***&&***REMOVED***nextStartDate.isSameOrBefore(startDate,***REMOVED***unit)***REMOVED***&&***REMOVED***nextEndDate***REMOVED***&&***REMOVED***nextStartDate.isSameOrAfter(nextEndDate,***REMOVED***unit));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startDate***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***startDate.isSameOrAfter(nextEndDate))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.start***REMOVED***=***REMOVED***!!nextEndDate***REMOVED***&&***REMOVED***nextStartDate.isSame(nextEndDate,***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.end***REMOVED***=***REMOVED***startDate***REMOVED***&&***REMOVED***nextStartDate.isSame(startDate,***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.start***REMOVED***=***REMOVED***!!startDate***REMOVED***&&***REMOVED***nextStartDate.isSame(startDate,***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.end***REMOVED***=***REMOVED***!!nextEndDate***REMOVED***&&***REMOVED***nextStartDate.isSame(nextEndDate,***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isToday***REMOVED***=***REMOVED***nextStartDate.isSame(now,***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isToday)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cell.type***REMOVED***=***REMOVED***"today";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCellMetadata***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***setCellMetadata(cell,***REMOVED***{***REMOVED***rowIndex,***REMOVED***columnIndex***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***row[columnIndex***REMOVED***+***REMOVED***columnIndexOffset]***REMOVED***=***REMOVED***cell;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setRowMetadata***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***setRowMetadata(row);
***REMOVED******REMOVED***}
};
const***REMOVED***datesInMonth***REMOVED***=***REMOVED***(date,***REMOVED***year,***REMOVED***month,***REMOVED***lang)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***firstDay***REMOVED***=***REMOVED***dayjs().locale(lang).startOf("month").month(month).year(year).hour(date.hour()).minute(date.minute()).second(date.second());
***REMOVED******REMOVED***const***REMOVED***numOfDays***REMOVED***=***REMOVED***firstDay.daysInMonth();
***REMOVED******REMOVED***return***REMOVED***rangeArr(numOfDays).map((n)***REMOVED***=>***REMOVED***firstDay.add(n,***REMOVED***"day").toDate());
};
const***REMOVED***getValidDateOfMonth***REMOVED***=***REMOVED***(date,***REMOVED***year,***REMOVED***month,***REMOVED***lang,***REMOVED***disabledDate)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***_value***REMOVED***=***REMOVED***dayjs().year(year).month(month).startOf("month").hour(date.hour()).minute(date.minute()).second(date.second());
***REMOVED******REMOVED***const***REMOVED***_date***REMOVED***=***REMOVED***datesInMonth(date,***REMOVED***year,***REMOVED***month,***REMOVED***lang).find((date2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!(disabledDate***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***disabledDate(date2));
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(_date)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dayjs(_date).locale(lang);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***_value.locale(lang);
};
const***REMOVED***getValidDateOfYear***REMOVED***=***REMOVED***(value,***REMOVED***lang,***REMOVED***disabledDate)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***year***REMOVED***=***REMOVED***value.year();
***REMOVED******REMOVED***if***REMOVED***(!(disabledDate***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***disabledDate(value.toDate())))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.locale(lang);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***month***REMOVED***=***REMOVED***value.month();
***REMOVED******REMOVED***if***REMOVED***(!datesInMonth(value,***REMOVED***year,***REMOVED***month,***REMOVED***lang).every(disabledDate))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getValidDateOfMonth(value,***REMOVED***year,***REMOVED***month,***REMOVED***lang,***REMOVED***disabledDate);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***12;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!datesInMonth(value,***REMOVED***year,***REMOVED***i,***REMOVED***lang).every(disabledDate))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getValidDateOfMonth(value,***REMOVED***year,***REMOVED***i,***REMOVED***lang,***REMOVED***disabledDate);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***value;
};
const***REMOVED***correctlyParseUserInput***REMOVED***=***REMOVED***(value,***REMOVED***format,***REMOVED***lang,***REMOVED***defaultFormat)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.map((v)***REMOVED***=>***REMOVED***correctlyParseUserInput(v,***REMOVED***format,***REMOVED***lang,***REMOVED***defaultFormat));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isString(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dayjsValue***REMOVED***=***REMOVED***(defaultFormat***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***defaultFormat.value)***REMOVED***?***REMOVED***dayjs(value)***REMOVED***:***REMOVED***dayjs(value,***REMOVED***format);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!dayjsValue.isValid())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dayjsValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***dayjs(value,***REMOVED***format).locale(lang);
};

export***REMOVED***{***REMOVED***buildPickerTable,***REMOVED***correctlyParseUserInput,***REMOVED***datesInMonth,***REMOVED***getDefaultValue,***REMOVED***getValidDateOfMonth,***REMOVED***getValidDateOfYear,***REMOVED***isValidRange***REMOVED***};
//#***REMOVED***sourceMappingURL=utils.mjs.map
