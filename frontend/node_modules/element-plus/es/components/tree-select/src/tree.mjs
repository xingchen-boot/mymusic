import***REMOVED***{***REMOVED***toRefs,***REMOVED***computed,***REMOVED***nextTick,***REMOVED***watch***REMOVED***}***REMOVED***from***REMOVED***'vue';
import***REMOVED***{***REMOVED***pick,***REMOVED***isEqual,***REMOVED***isNil***REMOVED***}***REMOVED***from***REMOVED***'lodash-unified';
import***REMOVED***{***REMOVED***ElTree***REMOVED***}***REMOVED***from***REMOVED***'../../tree/index.mjs';
import***REMOVED***component***REMOVED***from***REMOVED***'./tree-select-option.mjs';
import***REMOVED***{***REMOVED***treeEach,***REMOVED***toValidArray,***REMOVED***treeFind,***REMOVED***isValidValue,***REMOVED***isValidArray***REMOVED***}***REMOVED***from***REMOVED***'./utils.mjs';
import***REMOVED***{***REMOVED***escapeStringRegexp***REMOVED***}***REMOVED***from***REMOVED***'../../../utils/strings.mjs';
import***REMOVED***{***REMOVED***UPDATE_MODEL_EVENT***REMOVED***}***REMOVED***from***REMOVED***'../../../constants/event.mjs';
import***REMOVED***{***REMOVED***isFunction***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';
import***REMOVED***{***REMOVED***isEmpty***REMOVED***}***REMOVED***from***REMOVED***'../../../utils/types.mjs';

const***REMOVED***useTree***REMOVED***=***REMOVED***(props,***REMOVED***{***REMOVED***attrs,***REMOVED***slots,***REMOVED***emit***REMOVED***},***REMOVED***{
***REMOVED******REMOVED***select,
***REMOVED******REMOVED***tree,
***REMOVED******REMOVED***key
})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***watch([()***REMOVED***=>***REMOVED***props.modelValue,***REMOVED***tree],***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.showCheckbox)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextTick(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***treeInstance***REMOVED***=***REMOVED***tree.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(treeInstance***REMOVED***&&***REMOVED***!isEqual(treeInstance.getCheckedKeys(),***REMOVED***toValidArray(props.modelValue)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeInstance.setCheckedKeys(toValidArray(props.modelValue));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***immediate:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***deep:***REMOVED***true
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***propsMap***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***key.value,
***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"label",
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***"children",
***REMOVED******REMOVED******REMOVED******REMOVED***disabled:***REMOVED***"disabled",
***REMOVED******REMOVED******REMOVED******REMOVED***isLeaf:***REMOVED***"isLeaf",
***REMOVED******REMOVED******REMOVED******REMOVED***...props.props
***REMOVED******REMOVED***}));
***REMOVED******REMOVED***const***REMOVED***getNodeValByProp***REMOVED***=***REMOVED***(prop,***REMOVED***data)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propVal***REMOVED***=***REMOVED***propsMap.value[prop];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(propVal))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***propVal(data,***REMOVED***(_a***REMOVED***=***REMOVED***tree.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.getNode(getNodeValByProp("value",***REMOVED***data)));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***data[propVal];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***defaultExpandedParentKeys***REMOVED***=***REMOVED***toValidArray(props.modelValue).map((value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***treeFind(props.data***REMOVED***||***REMOVED***[],***REMOVED***(data)***REMOVED***=>***REMOVED***getNodeValByProp("value",***REMOVED***data)***REMOVED***===***REMOVED***value,***REMOVED***(data)***REMOVED***=>***REMOVED***getNodeValByProp("children",***REMOVED***data),***REMOVED***(data,***REMOVED***index,***REMOVED***array,***REMOVED***parent)***REMOVED***=>***REMOVED***parent***REMOVED***&&***REMOVED***getNodeValByProp("value",***REMOVED***parent));
***REMOVED******REMOVED***}).filter((item)***REMOVED***=>***REMOVED***isValidValue(item));
***REMOVED******REMOVED***const***REMOVED***cacheOptions***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.renderAfterExpand***REMOVED***&&***REMOVED***!props.lazy)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***treeEach(props.data.concat(props.cacheData),***REMOVED***(node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***getNodeValByProp("value",***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentLabel:***REMOVED***getNodeValByProp("label",***REMOVED***node),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isDisabled:***REMOVED***getNodeValByProp("disabled",***REMOVED***node)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***(data)***REMOVED***=>***REMOVED***getNodeValByProp("children",***REMOVED***data));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***getChildCheckedKeys***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(_a***REMOVED***=***REMOVED***tree.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.getCheckedKeys().filter((checkedKey)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***(_a2***REMOVED***=***REMOVED***tree.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a2.getNode(checkedKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isNil(node)***REMOVED***&&***REMOVED***isEmpty(node.childNodes);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...pick(toRefs(props),***REMOVED***Object.keys(ElTree.props)),
***REMOVED******REMOVED******REMOVED******REMOVED***...attrs,
***REMOVED******REMOVED******REMOVED******REMOVED***nodeKey:***REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED***expandOnClickNode:***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!props.checkStrictly***REMOVED***&&***REMOVED***props.expandOnClickNode;
***REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED***defaultExpandedKeys:***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props.defaultExpandedKeys***REMOVED***?***REMOVED***props.defaultExpandedKeys.concat(defaultExpandedParentKeys)***REMOVED***:***REMOVED***defaultExpandedParentKeys;
***REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED***renderContent:***REMOVED***(h,***REMOVED***{***REMOVED***node,***REMOVED***data,***REMOVED***store***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***h(component,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***getNodeValByProp("value",***REMOVED***data),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***getNodeValByProp("label",***REMOVED***data),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disabled:***REMOVED***getNodeValByProp("disabled",***REMOVED***data),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***visible:***REMOVED***node.visible
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***props.renderContent***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***props.renderContent(h,***REMOVED***{***REMOVED***node,***REMOVED***data,***REMOVED***store***REMOVED***})***REMOVED***:***REMOVED***slots.default***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***slots.default({***REMOVED***node,***REMOVED***data,***REMOVED***store***REMOVED***})***REMOVED***:***REMOVED***void***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***filterNodeMethod:***REMOVED***(value,***REMOVED***data,***REMOVED***node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.filterNodeMethod)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props.filterNodeMethod(value,***REMOVED***data,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!value)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***regexp***REMOVED***=***REMOVED***new***REMOVED***RegExp(escapeStringRegexp(value),***REMOVED***"i");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***regexp.test(getNodeValByProp("label",***REMOVED***data)***REMOVED***||***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***onNodeClick:***REMOVED***(data,***REMOVED***node,***REMOVED***e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b,***REMOVED***_c,***REMOVED***_d;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_a***REMOVED***=***REMOVED***attrs.onNodeClick)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.call(attrs,***REMOVED***data,***REMOVED***node,***REMOVED***e);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.showCheckbox***REMOVED***&&***REMOVED***props.checkOnClickNode)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.showCheckbox***REMOVED***&&***REMOVED***(props.checkStrictly***REMOVED***||***REMOVED***node.isLeaf))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!getNodeValByProp("disabled",***REMOVED***data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***option***REMOVED***=***REMOVED***(_b***REMOVED***=***REMOVED***select.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.states.options.get(getNodeValByProp("value",***REMOVED***data));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_c***REMOVED***=***REMOVED***select.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_c.handleOptionSelect(option);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(props.expandOnClickNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.proxy.handleExpandIconClick();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_d***REMOVED***=***REMOVED***select.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_d.focus();
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***onCheck:***REMOVED***(data,***REMOVED***params)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.showCheckbox)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dataValue***REMOVED***=***REMOVED***getNodeValByProp("value",***REMOVED***data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dataMap***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeEach([tree.value.store.root],***REMOVED***(node)***REMOVED***=>***REMOVED***dataMap[node.key]***REMOVED***=***REMOVED***node,***REMOVED***(node)***REMOVED***=>***REMOVED***node.childNodes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***uncachedCheckedKeys***REMOVED***=***REMOVED***params.checkedKeys;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cachedKeys***REMOVED***=***REMOVED***props.multiple***REMOVED***?***REMOVED***toValidArray(props.modelValue).filter((item)***REMOVED***=>***REMOVED***!(item***REMOVED***in***REMOVED***dataMap)***REMOVED***&&***REMOVED***!uncachedCheckedKeys.includes(item))***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeys***REMOVED***=***REMOVED***cachedKeys.concat(uncachedCheckedKeys);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.checkStrictly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(UPDATE_MODEL_EVENT,***REMOVED***props.multiple***REMOVED***?***REMOVED***checkedKeys***REMOVED***:***REMOVED***checkedKeys.includes(dataValue)***REMOVED***?***REMOVED***dataValue***REMOVED***:***REMOVED***void***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.multiple)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childKeys***REMOVED***=***REMOVED***getChildCheckedKeys();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(UPDATE_MODEL_EVENT,***REMOVED***cachedKeys.concat(childKeys));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstLeaf***REMOVED***=***REMOVED***treeFind([data],***REMOVED***(data2)***REMOVED***=>***REMOVED***!isValidArray(getNodeValByProp("children",***REMOVED***data2))***REMOVED***&&***REMOVED***!getNodeValByProp("disabled",***REMOVED***data2),***REMOVED***(data2)***REMOVED***=>***REMOVED***getNodeValByProp("children",***REMOVED***data2));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstLeafKey***REMOVED***=***REMOVED***firstLeaf***REMOVED***?***REMOVED***getNodeValByProp("value",***REMOVED***firstLeaf)***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasCheckedChild***REMOVED***=***REMOVED***isValidValue(props.modelValue)***REMOVED***&&***REMOVED***!!treeFind([data],***REMOVED***(data2)***REMOVED***=>***REMOVED***getNodeValByProp("value",***REMOVED***data2)***REMOVED***===***REMOVED***props.modelValue,***REMOVED***(data2)***REMOVED***=>***REMOVED***getNodeValByProp("children",***REMOVED***data2));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(UPDATE_MODEL_EVENT,***REMOVED***firstLeafKey***REMOVED***===***REMOVED***props.modelValue***REMOVED***||***REMOVED***hasCheckedChild***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***firstLeafKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextTick(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeys2***REMOVED***=***REMOVED***toValidArray(props.modelValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tree.value.setCheckedKeys(checkedKeys2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_a2***REMOVED***=***REMOVED***attrs.onCheck)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a2.call(attrs,***REMOVED***data,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys:***REMOVED***tree.value.getCheckedKeys(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes:***REMOVED***tree.value.getCheckedNodes(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys:***REMOVED***tree.value.getHalfCheckedKeys(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes:***REMOVED***tree.value.getHalfCheckedNodes()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_a***REMOVED***=***REMOVED***select.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.focus();
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***onNodeExpand:***REMOVED***(data,***REMOVED***node,***REMOVED***e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_a***REMOVED***=***REMOVED***attrs.onNodeExpand)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.call(attrs,***REMOVED***data,***REMOVED***node,***REMOVED***e);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextTick(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.checkStrictly***REMOVED***&&***REMOVED***props.lazy***REMOVED***&&***REMOVED***props.multiple***REMOVED***&&***REMOVED***node.checked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dataMap***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***uncachedCheckedKeys***REMOVED***=***REMOVED***tree.value.getCheckedKeys();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeEach([tree.value.store.root],***REMOVED***(node2)***REMOVED***=>***REMOVED***dataMap[node2.key]***REMOVED***=***REMOVED***node2,***REMOVED***(node2)***REMOVED***=>***REMOVED***node2.childNodes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cachedKeys***REMOVED***=***REMOVED***toValidArray(props.modelValue).filter((item)***REMOVED***=>***REMOVED***!(item***REMOVED***in***REMOVED***dataMap)***REMOVED***&&***REMOVED***!uncachedCheckedKeys.includes(item));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childKeys***REMOVED***=***REMOVED***getChildCheckedKeys();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(UPDATE_MODEL_EVENT,***REMOVED***cachedKeys.concat(childKeys));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***cacheOptions
***REMOVED******REMOVED***};
};

export***REMOVED***{***REMOVED***useTree***REMOVED***};
//#***REMOVED***sourceMappingURL=tree.mjs.map
