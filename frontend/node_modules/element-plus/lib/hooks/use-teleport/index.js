'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***globalNode***REMOVED***=***REMOVED***require('../../utils/vue/global-node.js');
var***REMOVED***core***REMOVED***=***REMOVED***require('@vueuse/core');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');

const***REMOVED***useTeleport***REMOVED***=***REMOVED***(contentRenderer,***REMOVED***appendToBody)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isTeleportVisible***REMOVED***=***REMOVED***vue.ref(false);
***REMOVED******REMOVED***if***REMOVED***(!core.isClient)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***showTeleport:***REMOVED***shared.NOOP,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hideTeleport:***REMOVED***shared.NOOP,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderTeleport:***REMOVED***shared.NOOP
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***$el***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***showTeleport***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible.value***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***($el***REMOVED***!==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***$el***REMOVED***=***REMOVED***globalNode.createGlobalNode();
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***hideTeleport***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible.value***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***($el***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalNode.removeGlobalNode($el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$el***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***renderTeleport***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***appendToBody.value***REMOVED***!==***REMOVED***true***REMOVED***?***REMOVED***contentRenderer()***REMOVED***:***REMOVED***isTeleportVisible.value***REMOVED***?***REMOVED***[vue.h(vue.Teleport,***REMOVED***{***REMOVED***to:***REMOVED***$el***REMOVED***},***REMOVED***contentRenderer())]***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***vue.onUnmounted(hideTeleport);
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible,
***REMOVED******REMOVED******REMOVED******REMOVED***showTeleport,
***REMOVED******REMOVED******REMOVED******REMOVED***hideTeleport,
***REMOVED******REMOVED******REMOVED******REMOVED***renderTeleport
***REMOVED******REMOVED***};
};

exports.useTeleport***REMOVED***=***REMOVED***useTeleport;
//#***REMOVED***sourceMappingURL=index.js.map
