'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***core***REMOVED***=***REMOVED***require('@vueuse/core');
var***REMOVED***easings***REMOVED***=***REMOVED***require('../easings.js');
var***REMOVED***types***REMOVED***=***REMOVED***require('../types.js');
var***REMOVED***raf***REMOVED***=***REMOVED***require('../raf.js');
var***REMOVED***style***REMOVED***=***REMOVED***require('./style.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');

const***REMOVED***isScroll***REMOVED***=***REMOVED***(el,***REMOVED***isVertical)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!core.isClient)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***undefined:***REMOVED***"overflow",
***REMOVED******REMOVED******REMOVED******REMOVED***true:***REMOVED***"overflow-y",
***REMOVED******REMOVED******REMOVED******REMOVED***false:***REMOVED***"overflow-x"
***REMOVED******REMOVED***}[String(isVertical)];
***REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***style.getStyle(el,***REMOVED***key);
***REMOVED******REMOVED***return***REMOVED***["scroll",***REMOVED***"auto",***REMOVED***"overlay"].some((s)***REMOVED***=>***REMOVED***overflow.includes(s));
};
const***REMOVED***getScrollContainer***REMOVED***=***REMOVED***(el,***REMOVED***isVertical)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!core.isClient)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***let***REMOVED***parent***REMOVED***=***REMOVED***el;
***REMOVED******REMOVED***while***REMOVED***(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***([window,***REMOVED***document,***REMOVED***document.documentElement].includes(parent))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***window;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isScroll(parent,***REMOVED***isVertical))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***parent.parentNode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***parent;
};
let***REMOVED***scrollBarWidth;
const***REMOVED***getScrollBarWidth***REMOVED***=***REMOVED***(namespace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***if***REMOVED***(!core.isClient)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(scrollBarWidth***REMOVED***!==***REMOVED***void***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scrollBarWidth;
***REMOVED******REMOVED***const***REMOVED***outer***REMOVED***=***REMOVED***document.createElement("div");
***REMOVED******REMOVED***outer.className***REMOVED***=***REMOVED***`${namespace}-scrollbar__wrap`;
***REMOVED******REMOVED***outer.style.visibility***REMOVED***=***REMOVED***"hidden";
***REMOVED******REMOVED***outer.style.width***REMOVED***=***REMOVED***"100px";
***REMOVED******REMOVED***outer.style.position***REMOVED***=***REMOVED***"absolute";
***REMOVED******REMOVED***outer.style.top***REMOVED***=***REMOVED***"-9999px";
***REMOVED******REMOVED***document.body.appendChild(outer);
***REMOVED******REMOVED***const***REMOVED***widthNoScroll***REMOVED***=***REMOVED***outer.offsetWidth;
***REMOVED******REMOVED***outer.style.overflow***REMOVED***=***REMOVED***"scroll";
***REMOVED******REMOVED***const***REMOVED***inner***REMOVED***=***REMOVED***document.createElement("div");
***REMOVED******REMOVED***inner.style.width***REMOVED***=***REMOVED***"100%";
***REMOVED******REMOVED***outer.appendChild(inner);
***REMOVED******REMOVED***const***REMOVED***widthWithScroll***REMOVED***=***REMOVED***inner.offsetWidth;
***REMOVED******REMOVED***(_a***REMOVED***=***REMOVED***outer.parentNode)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.removeChild(outer);
***REMOVED******REMOVED***scrollBarWidth***REMOVED***=***REMOVED***widthNoScroll***REMOVED***-***REMOVED***widthWithScroll;
***REMOVED******REMOVED***return***REMOVED***scrollBarWidth;
};
function***REMOVED***scrollIntoView(container,***REMOVED***selected)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!core.isClient)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(!selected)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***container.scrollTop***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***offsetParents***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***pointer***REMOVED***=***REMOVED***selected.offsetParent;
***REMOVED******REMOVED***while***REMOVED***(pointer***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***container***REMOVED***!==***REMOVED***pointer***REMOVED***&&***REMOVED***container.contains(pointer))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***offsetParents.push(pointer);
***REMOVED******REMOVED******REMOVED******REMOVED***pointer***REMOVED***=***REMOVED***pointer.offsetParent;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***top***REMOVED***=***REMOVED***selected.offsetTop***REMOVED***+***REMOVED***offsetParents.reduce((prev,***REMOVED***curr)***REMOVED***=>***REMOVED***prev***REMOVED***+***REMOVED***curr.offsetTop,***REMOVED***0);
***REMOVED******REMOVED***const***REMOVED***bottom***REMOVED***=***REMOVED***top***REMOVED***+***REMOVED***selected.offsetHeight;
***REMOVED******REMOVED***const***REMOVED***viewRectTop***REMOVED***=***REMOVED***container.scrollTop;
***REMOVED******REMOVED***const***REMOVED***viewRectBottom***REMOVED***=***REMOVED***viewRectTop***REMOVED***+***REMOVED***container.clientHeight;
***REMOVED******REMOVED***if***REMOVED***(top***REMOVED***<***REMOVED***viewRectTop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***container.scrollTop***REMOVED***=***REMOVED***top;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(bottom***REMOVED***>***REMOVED***viewRectBottom)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***container.scrollTop***REMOVED***=***REMOVED***bottom***REMOVED***-***REMOVED***container.clientHeight;
***REMOVED******REMOVED***}
}
function***REMOVED***animateScrollTo(container,***REMOVED***from,***REMOVED***to,***REMOVED***duration,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***startTime***REMOVED***=***REMOVED***Date.now();
***REMOVED******REMOVED***let***REMOVED***handle;
***REMOVED******REMOVED***const***REMOVED***scroll***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***timestamp***REMOVED***=***REMOVED***Date.now();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***time***REMOVED***=***REMOVED***timestamp***REMOVED***-***REMOVED***startTime;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextScrollTop***REMOVED***=***REMOVED***easings.easeInOutCubic(time***REMOVED***>***REMOVED***duration***REMOVED***?***REMOVED***duration***REMOVED***:***REMOVED***time,***REMOVED***from,***REMOVED***to,***REMOVED***duration);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(types.isWindow(container))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container.scrollTo(window.pageXOffset,***REMOVED***nextScrollTop);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container.scrollTop***REMOVED***=***REMOVED***nextScrollTop;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(time***REMOVED***<***REMOVED***duration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handle***REMOVED***=***REMOVED***raf.rAF(scroll);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shared.isFunction(callback))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***scroll();
***REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handle***REMOVED***&&***REMOVED***raf.cAF(handle);
***REMOVED******REMOVED***};
}
const***REMOVED***getScrollElement***REMOVED***=***REMOVED***(target,***REMOVED***container)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(types.isWindow(container))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target.ownerDocument.documentElement;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***container;
};
const***REMOVED***getScrollTop***REMOVED***=***REMOVED***(container)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(types.isWindow(container))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***window.scrollY;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***container.scrollTop;
};

exports.animateScrollTo***REMOVED***=***REMOVED***animateScrollTo;
exports.getScrollBarWidth***REMOVED***=***REMOVED***getScrollBarWidth;
exports.getScrollContainer***REMOVED***=***REMOVED***getScrollContainer;
exports.getScrollElement***REMOVED***=***REMOVED***getScrollElement;
exports.getScrollTop***REMOVED***=***REMOVED***getScrollTop;
exports.isScroll***REMOVED***=***REMOVED***isScroll;
exports.scrollIntoView***REMOVED***=***REMOVED***scrollIntoView;
//#***REMOVED***sourceMappingURL=scroll.js.map
