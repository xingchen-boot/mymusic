'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***core***REMOVED***=***REMOVED***require('@vueuse/core');
var***REMOVED***types***REMOVED***=***REMOVED***require('../../utils/types.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');

const***REMOVED***nodeList***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
if***REMOVED***(core.isClient)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***startClick;
***REMOVED******REMOVED***document.addEventListener("mousedown",***REMOVED***(e)***REMOVED***=>***REMOVED***startClick***REMOVED***=***REMOVED***e);
***REMOVED******REMOVED***document.addEventListener("mouseup",***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startClick)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***handlers***REMOVED***of***REMOVED***nodeList.values())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***documentHandler***REMOVED***}***REMOVED***of***REMOVED***handlers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***documentHandler(e,***REMOVED***startClick);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startClick***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}
function***REMOVED***createDocumentHandler(el,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***excludes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***if***REMOVED***(shared.isArray(binding.arg))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***excludes***REMOVED***=***REMOVED***binding.arg;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(types.isElement(binding.arg))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***excludes.push(binding.arg);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***function(mouseup,***REMOVED***mousedown)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***popperRef***REMOVED***=***REMOVED***binding.instance.popperRef;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mouseUpTarget***REMOVED***=***REMOVED***mouseup.target;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mouseDownTarget***REMOVED***=***REMOVED***mousedown***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***mousedown.target;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isBound***REMOVED***=***REMOVED***!binding***REMOVED***||***REMOVED***!binding.instance;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTargetExists***REMOVED***=***REMOVED***!mouseUpTarget***REMOVED***||***REMOVED***!mouseDownTarget;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isContainedByEl***REMOVED***=***REMOVED***el.contains(mouseUpTarget)***REMOVED***||***REMOVED***el.contains(mouseDownTarget);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSelf***REMOVED***=***REMOVED***el***REMOVED***===***REMOVED***mouseUpTarget;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTargetExcluded***REMOVED***=***REMOVED***excludes.length***REMOVED***&&***REMOVED***excludes.some((item)***REMOVED***=>***REMOVED***item***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***item.contains(mouseUpTarget))***REMOVED***||***REMOVED***excludes.length***REMOVED***&&***REMOVED***excludes.includes(mouseDownTarget);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isContainedByPopper***REMOVED***=***REMOVED***popperRef***REMOVED***&&***REMOVED***(popperRef.contains(mouseUpTarget)***REMOVED***||***REMOVED***popperRef.contains(mouseDownTarget));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBound***REMOVED***||***REMOVED***isTargetExists***REMOVED***||***REMOVED***isContainedByEl***REMOVED***||***REMOVED***isSelf***REMOVED***||***REMOVED***isTargetExcluded***REMOVED***||***REMOVED***isContainedByPopper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***binding.value(mouseup,***REMOVED***mousedown);
***REMOVED******REMOVED***};
}
const***REMOVED***ClickOutside***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***beforeMount(el,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nodeList.has(el))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeList.set(el,***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***nodeList.get(el).push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***documentHandler:***REMOVED***createDocumentHandler(el,***REMOVED***binding),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingFn:***REMOVED***binding.value
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***},
***REMOVED******REMOVED***updated(el,***REMOVED***binding)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nodeList.has(el))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeList.set(el,***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handlers***REMOVED***=***REMOVED***nodeList.get(el);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldHandlerIndex***REMOVED***=***REMOVED***handlers.findIndex((item)***REMOVED***=>***REMOVED***item.bindingFn***REMOVED***===***REMOVED***binding.oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newHandler***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***documentHandler:***REMOVED***createDocumentHandler(el,***REMOVED***binding),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingFn:***REMOVED***binding.value
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldHandlerIndex***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handlers.splice(oldHandlerIndex,***REMOVED***1,***REMOVED***newHandler);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handlers.push(newHandler);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***unmounted(el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nodeList.delete(el);
***REMOVED******REMOVED***}
};

exports["default"]***REMOVED***=***REMOVED***ClickOutside;
//#***REMOVED***sourceMappingURL=index.js.map
