{"version":3,"file":"utils.js","sources":["../../../../../../packages/components/tree-select/src/utils.ts"],"sourcesContent":["import***REMOVED***{***REMOVED***isArray***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/utils'\n\nimport***REMOVED***type***REMOVED***{***REMOVED***TreeNodeData***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/components/tree/src/tree.type'\n\nexport***REMOVED***function***REMOVED***isValidValue(val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***val***REMOVED***||***REMOVED***val***REMOVED***===***REMOVED***0\n}\n\nexport***REMOVED***function***REMOVED***isValidArray(val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***isArray(val)***REMOVED***&&***REMOVED***val.length\n}\n\nexport***REMOVED***function***REMOVED***toValidArray(val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***isArray(val)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***isValidValue(val)***REMOVED***?***REMOVED***[val]***REMOVED***:***REMOVED***[]\n}\n\ntype***REMOVED***TreeCallback<T***REMOVED***extends***REMOVED***TreeNodeData,***REMOVED***R>***REMOVED***=***REMOVED***(\n***REMOVED******REMOVED***data:***REMOVED***T,\n***REMOVED******REMOVED***index:***REMOVED***number,\n***REMOVED******REMOVED***array:***REMOVED***T[],\n***REMOVED******REMOVED***parent?:***REMOVED***T\n)***REMOVED***=>***REMOVED***R\n\ntype***REMOVED***TreeFindCallback<T***REMOVED***extends***REMOVED***TreeNodeData>***REMOVED***=***REMOVED***TreeCallback<T,***REMOVED***boolean>\n\nexport***REMOVED***function***REMOVED***treeFind<T***REMOVED***extends***REMOVED***TreeNodeData>(\n***REMOVED******REMOVED***treeData:***REMOVED***T[],\n***REMOVED******REMOVED***findCallback:***REMOVED***TreeFindCallback<T>,\n***REMOVED******REMOVED***getChildren:***REMOVED***(data:***REMOVED***T)***REMOVED***=>***REMOVED***T[]\n):***REMOVED***T***REMOVED***|***REMOVED***undefined\nexport***REMOVED***function***REMOVED***treeFind<T***REMOVED***extends***REMOVED***TreeNodeData,***REMOVED***R>(\n***REMOVED******REMOVED***treeData:***REMOVED***T[],\n***REMOVED******REMOVED***findCallback:***REMOVED***TreeFindCallback<T>,\n***REMOVED******REMOVED***getChildren:***REMOVED***(data:***REMOVED***T)***REMOVED***=>***REMOVED***T[],\n***REMOVED******REMOVED***resultCallback?:***REMOVED***TreeCallback<T,***REMOVED***R>,\n***REMOVED******REMOVED***parent?:***REMOVED***T\n):***REMOVED***R***REMOVED***|***REMOVED***undefined\nexport***REMOVED***function***REMOVED***treeFind<T***REMOVED***extends***REMOVED***TreeNodeData,***REMOVED***R>(\n***REMOVED******REMOVED***treeData:***REMOVED***T[],\n***REMOVED******REMOVED***findCallback:***REMOVED***TreeFindCallback<T>,\n***REMOVED******REMOVED***getChildren:***REMOVED***(data:***REMOVED***T)***REMOVED***=>***REMOVED***T[],\n***REMOVED******REMOVED***resultCallback?:***REMOVED***TreeCallback<T,***REMOVED***R>,\n***REMOVED******REMOVED***parent?:***REMOVED***T\n):***REMOVED***T***REMOVED***|***REMOVED***R***REMOVED***|***REMOVED***undefined***REMOVED***{\n***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***treeData.length;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***treeData[i]\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(findCallback(data,***REMOVED***i,***REMOVED***treeData,***REMOVED***parent))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resultCallback***REMOVED***?***REMOVED***resultCallback(data,***REMOVED***i,***REMOVED***treeData,***REMOVED***parent)***REMOVED***:***REMOVED***data\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***getChildren(data)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isValidArray(children))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***find***REMOVED***=***REMOVED***treeFind(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***findCallback,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getChildren,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resultCallback,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(find)***REMOVED***return***REMOVED***find\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n}\n\nexport***REMOVED***function***REMOVED***treeEach<T***REMOVED***extends***REMOVED***TreeNodeData>(\n***REMOVED******REMOVED***treeData:***REMOVED***T[],\n***REMOVED******REMOVED***callback:***REMOVED***TreeCallback<T,***REMOVED***void>,\n***REMOVED******REMOVED***getChildren:***REMOVED***(data:***REMOVED***T)***REMOVED***=>***REMOVED***T[],\n***REMOVED******REMOVED***parent?:***REMOVED***T\n)***REMOVED***{\n***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***treeData.length;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***treeData[i]\n***REMOVED******REMOVED******REMOVED******REMOVED***callback(data,***REMOVED***i,***REMOVED***treeData,***REMOVED***parent)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***getChildren(data)\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isValidArray(children))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***treeEach(children,***REMOVED***callback,***REMOVED***getChildren,***REMOVED***data)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n}\n"],"names":["isArray"],"mappings":";;;;;;AACO,SAAS,YAAY,CAAC,GAAG,EAAE;AAClC,EAAE,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;AAC1B,CAAC;AACM,SAAS,YAAY,CAAC,GAAG,EAAE;AAClC,EAAE,OAAOA,cAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC;AACpC,CAAC;AACM,SAAS,YAAY,CAAC,GAAG,EAAE;AAClC,EAAE,OAAOA,cAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC7D,CAAC;AACM,SAAS,QAAQ,CAAC,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,EAAE;AACtF,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,IAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7B,IAAI,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE;AACjD,MAAM,OAAO,cAAc,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC/E,KAAK,MAAM;AACX,MAAM,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AACzC,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;AAClC,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;AACzF,QAAQ,IAAI,IAAI;AAChB,UAAU,OAAO,IAAI,CAAC;AACtB,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;AACM,SAAS,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE;AAClE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,IAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7B,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AACxC,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AACvC,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;AAChC,MAAM,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;AACtD,KAAK;AACL,GAAG;AACH;;;;;;;;"}