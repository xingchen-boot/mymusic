'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***lodashUnified***REMOVED***=***REMOVED***require('lodash-unified');
var***REMOVED***index***REMOVED***=***REMOVED***require('../../tooltip/index.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');
var***REMOVED***error***REMOVED***=***REMOVED***require('../../../utils/error.js');
var***REMOVED***types***REMOVED***=***REMOVED***require('../../../utils/types.js');
var***REMOVED***objects***REMOVED***=***REMOVED***require('../../../utils/objects.js');

const***REMOVED***getCell***REMOVED***=***REMOVED***function(event)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***return***REMOVED***(_a***REMOVED***=***REMOVED***event.target)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.closest("td");
};
const***REMOVED***orderBy***REMOVED***=***REMOVED***function(array,***REMOVED***sortKey,***REMOVED***reverse,***REMOVED***sortMethod,***REMOVED***sortBy)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!sortKey***REMOVED***&&***REMOVED***!sortMethod***REMOVED***&&***REMOVED***(!sortBy***REMOVED***||***REMOVED***shared.isArray(sortBy)***REMOVED***&&***REMOVED***!sortBy.length))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***array;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(shared.isString(reverse))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***reverse***REMOVED***=***REMOVED***reverse***REMOVED***===***REMOVED***"descending"***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***reverse***REMOVED***=***REMOVED***reverse***REMOVED***&&***REMOVED***reverse***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***getKey***REMOVED***=***REMOVED***sortMethod***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***function(value,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sortBy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lodashUnified.flatMap(lodashUnified.castArray(sortBy),***REMOVED***(by)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isString(by))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lodashUnified.get(value,***REMOVED***by);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***by(value,***REMOVED***index,***REMOVED***array);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sortKey***REMOVED***!==***REMOVED***"$key")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isObject(value)***REMOVED***&&***REMOVED***"$value"***REMOVED***in***REMOVED***value)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value.$value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shared.isObject(value)***REMOVED***?***REMOVED***sortKey***REMOVED***?***REMOVED***lodashUnified.get(value,***REMOVED***sortKey)***REMOVED***:***REMOVED***null***REMOVED***:***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***compare***REMOVED***=***REMOVED***function(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b,***REMOVED***_c,***REMOVED***_d,***REMOVED***_e,***REMOVED***_f;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sortMethod)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sortMethod(a.value,***REMOVED***b.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***(_b***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***a.key)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.length)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_b***REMOVED***:***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(((_c***REMOVED***=***REMOVED***a.key)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_c[i])***REMOVED***<***REMOVED***((_d***REMOVED***=***REMOVED***b.key)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_d[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(((_e***REMOVED***=***REMOVED***a.key)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_e[i])***REMOVED***>***REMOVED***((_f***REMOVED***=***REMOVED***b.key)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_f[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***array.map((value,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***getKey***REMOVED***?***REMOVED***getKey(value,***REMOVED***index)***REMOVED***:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}).sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***order***REMOVED***=***REMOVED***compare(a,***REMOVED***b);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!order)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***order***REMOVED***=***REMOVED***a.index***REMOVED***-***REMOVED***b.index;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***order***REMOVED*******REMOVED***+reverse;
***REMOVED******REMOVED***}).map((item)***REMOVED***=>***REMOVED***item.value);
};
const***REMOVED***getColumnById***REMOVED***=***REMOVED***function(table,***REMOVED***columnId)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***column***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***table.columns.forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(item.id***REMOVED***===***REMOVED***columnId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column***REMOVED***=***REMOVED***item;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***column;
};
const***REMOVED***getColumnByKey***REMOVED***=***REMOVED***function(table,***REMOVED***columnKey)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***column***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***table.columns.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***item***REMOVED***=***REMOVED***table.columns[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(item.columnKey***REMOVED***===***REMOVED***columnKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column***REMOVED***=***REMOVED***item;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!column)
***REMOVED******REMOVED******REMOVED******REMOVED***error.throwError("ElTable",***REMOVED***`No***REMOVED***column***REMOVED***matching***REMOVED***with***REMOVED***column-key:***REMOVED***${columnKey}`);
***REMOVED******REMOVED***return***REMOVED***column;
};
const***REMOVED***getColumnByCell***REMOVED***=***REMOVED***function(table,***REMOVED***cell,***REMOVED***namespace)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***(cell.className***REMOVED***||***REMOVED***"").match(new***REMOVED***RegExp(`${namespace}-table_[^\\s]+`,***REMOVED***"gm"));
***REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getColumnById(table,***REMOVED***matches[0]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***null;
};
const***REMOVED***getRowIdentity***REMOVED***=***REMOVED***(row,***REMOVED***rowKey)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!row)
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Row***REMOVED***is***REMOVED***required***REMOVED***when***REMOVED***get***REMOVED***row***REMOVED***identity");
***REMOVED******REMOVED***if***REMOVED***(shared.isString(rowKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rowKey.includes("."))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${row[rowKey]}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***rowKey.split(".");
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***current***REMOVED***=***REMOVED***row;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current[element];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${current}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shared.isFunction(rowKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rowKey.call(null,***REMOVED***row);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***"";
};
const***REMOVED***getKeysMap***REMOVED***=***REMOVED***function(array,***REMOVED***rowKey,***REMOVED***flatten***REMOVED***=***REMOVED***false,***REMOVED***childrenKey***REMOVED***=***REMOVED***"children")***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***array***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***arrayMap***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***data.forEach((row,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***arrayMap[getRowIdentity(row,***REMOVED***rowKey)]***REMOVED***=***REMOVED***{***REMOVED***row,***REMOVED***index***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flatten)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***row[childrenKey];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isArray(children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(arrayMap,***REMOVED***getKeysMap(children,***REMOVED***rowKey,***REMOVED***true,***REMOVED***childrenKey));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***arrayMap;
};
function***REMOVED***mergeOptions(defaults,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***let***REMOVED***key;
***REMOVED******REMOVED***for***REMOVED***(key***REMOVED***in***REMOVED***defaults)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options[key]***REMOVED***=***REMOVED***defaults[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(key***REMOVED***in***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.hasOwn(config,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***config[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!types.isUndefined(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***options;
}
function***REMOVED***parseWidth(width)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(width***REMOVED***===***REMOVED***"")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***width;
***REMOVED******REMOVED***if***REMOVED***(!types.isUndefined(width))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***width***REMOVED***=***REMOVED***Number.parseInt(width,***REMOVED***10);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Number.isNaN(width))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***width***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***width;
}
function***REMOVED***parseMinWidth(minWidth)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(minWidth***REMOVED***===***REMOVED***"")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***minWidth;
***REMOVED******REMOVED***if***REMOVED***(!types.isUndefined(minWidth))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***minWidth***REMOVED***=***REMOVED***parseWidth(minWidth);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Number.isNaN(minWidth))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***minWidth***REMOVED***=***REMOVED***80;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***minWidth;
}
function***REMOVED***parseHeight(height)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(types.isNumber(height))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***height;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(shared.isString(height))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/^\d+(?:px)?$/.test(height))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Number.parseInt(height,***REMOVED***10);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***height;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***null;
}
function***REMOVED***compose(...funcs)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(funcs.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(arg)***REMOVED***=>***REMOVED***arg;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(funcs.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***funcs[0];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***funcs.reduce((a,***REMOVED***b)***REMOVED***=>***REMOVED***(...args)***REMOVED***=>***REMOVED***a(b(...args)));
}
function***REMOVED***toggleRowStatus(statusArr,***REMOVED***row,***REMOVED***newVal,***REMOVED***tableTreeProps,***REMOVED***selectable,***REMOVED***rowIndex,***REMOVED***rowKey)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***_rowIndex***REMOVED***=***REMOVED***rowIndex***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***rowIndex***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***changed***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***getIndex***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rowKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***statusArr.indexOf(row);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***getRowIdentity(row,***REMOVED***rowKey);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***statusArr.findIndex((item)***REMOVED***=>***REMOVED***getRowIdentity(item,***REMOVED***rowKey)***REMOVED***===***REMOVED***id);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***getIndex();
***REMOVED******REMOVED***const***REMOVED***included***REMOVED***=***REMOVED***index***REMOVED***!==***REMOVED***-1;
***REMOVED******REMOVED***const***REMOVED***isRowSelectable***REMOVED***=***REMOVED***selectable***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***selectable.call(null,***REMOVED***row,***REMOVED***_rowIndex);
***REMOVED******REMOVED***const***REMOVED***toggleStatus***REMOVED***=***REMOVED***(type)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"add")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statusArr.push(row);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statusArr.splice(index,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***changed***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***getChildrenCount***REMOVED***=***REMOVED***(row2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***count***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***(tableTreeProps***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tableTreeProps.children)***REMOVED***&&***REMOVED***row2[tableTreeProps.children];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(children***REMOVED***&&***REMOVED***shared.isArray(children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***children.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***getChildrenCount(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(!selectable***REMOVED***||***REMOVED***isRowSelectable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(types.isBoolean(newVal))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newVal***REMOVED***&&***REMOVED***!included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleStatus("add");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!newVal***REMOVED***&&***REMOVED***included)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleStatus("remove");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***included***REMOVED***?***REMOVED***toggleStatus("remove")***REMOVED***:***REMOVED***toggleStatus("add");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!(tableTreeProps***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tableTreeProps.checkStrictly)***REMOVED***&&***REMOVED***(tableTreeProps***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tableTreeProps.children)***REMOVED***&&***REMOVED***shared.isArray(row[tableTreeProps.children]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***row[tableTreeProps.children].forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childChanged***REMOVED***=***REMOVED***toggleRowStatus(statusArr,***REMOVED***item,***REMOVED***newVal***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***newVal***REMOVED***:***REMOVED***!included,***REMOVED***tableTreeProps,***REMOVED***selectable,***REMOVED***_rowIndex***REMOVED***+***REMOVED***1,***REMOVED***rowKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rowIndex***REMOVED***+=***REMOVED***getChildrenCount(item)***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(childChanged)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***changed***REMOVED***=***REMOVED***childChanged;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***changed;
}
function***REMOVED***walkTreeNode(root,***REMOVED***cb,***REMOVED***childrenKey***REMOVED***=***REMOVED***"children",***REMOVED***lazyKey***REMOVED***=***REMOVED***"hasChildren",***REMOVED***lazy***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isNil***REMOVED***=***REMOVED***(array)***REMOVED***=>***REMOVED***!(shared.isArray(array)***REMOVED***&&***REMOVED***array.length);
***REMOVED******REMOVED***function***REMOVED***_walker(parent,***REMOVED***children,***REMOVED***level)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cb(parent,***REMOVED***children,***REMOVED***level);
***REMOVED******REMOVED******REMOVED******REMOVED***children.forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(item[lazyKey]***REMOVED***&&***REMOVED***lazy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(item,***REMOVED***null,***REMOVED***level***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children2***REMOVED***=***REMOVED***item[childrenKey];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isNil(children2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_walker(item,***REMOVED***children2,***REMOVED***level***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***root.forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(item[lazyKey]***REMOVED***&&***REMOVED***lazy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(item,***REMOVED***null,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***item[childrenKey];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isNil(children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_walker(item,***REMOVED***children,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}
const***REMOVED***getTableOverflowTooltipProps***REMOVED***=***REMOVED***(props,***REMOVED***innerText,***REMOVED***row,***REMOVED***column)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***popperOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***strategy:***REMOVED***"fixed",
***REMOVED******REMOVED******REMOVED******REMOVED***...props.popperOptions
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***tooltipFormatterContent***REMOVED***=***REMOVED***shared.isFunction(column***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***column.tooltipFormatter)***REMOVED***?***REMOVED***column.tooltipFormatter({
***REMOVED******REMOVED******REMOVED******REMOVED***row,
***REMOVED******REMOVED******REMOVED******REMOVED***column,
***REMOVED******REMOVED******REMOVED******REMOVED***cellValue:***REMOVED***objects.getProp(row,***REMOVED***column.property).value
***REMOVED******REMOVED***})***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(vue.isVNode(tooltipFormatterContent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotContent:***REMOVED***tooltipFormatterContent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***popperOptions
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***slotContent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***tooltipFormatterContent***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***tooltipFormatterContent***REMOVED***:***REMOVED***innerText,
***REMOVED******REMOVED******REMOVED******REMOVED***...props,
***REMOVED******REMOVED******REMOVED******REMOVED***popperOptions
***REMOVED******REMOVED***};
};
exports.removePopper***REMOVED***=***REMOVED***null;
function***REMOVED***createTablePopper(props,***REMOVED***popperContent,***REMOVED***row,***REMOVED***column,***REMOVED***trigger,***REMOVED***table)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***const***REMOVED***tableOverflowTooltipProps***REMOVED***=***REMOVED***getTableOverflowTooltipProps(props,***REMOVED***popperContent,***REMOVED***row,***REMOVED***column);
***REMOVED******REMOVED***const***REMOVED***mergedProps***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...tableOverflowTooltipProps,
***REMOVED******REMOVED******REMOVED******REMOVED***slotContent:***REMOVED***void***REMOVED***0
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***((exports.removePopper***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***exports.removePopper.trigger)***REMOVED***===***REMOVED***trigger)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comp***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***exports.removePopper.vm)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.component;
***REMOVED******REMOVED******REMOVED******REMOVED***lodashUnified.merge(comp***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***comp.props,***REMOVED***mergedProps);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comp***REMOVED***&&***REMOVED***tableOverflowTooltipProps.slotContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comp.slots.content***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***[tableOverflowTooltipProps.slotContent];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***exports.removePopper***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***exports.removePopper();
***REMOVED******REMOVED***const***REMOVED***parentNode***REMOVED***=***REMOVED***table***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***table.refs.tableWrapper;
***REMOVED******REMOVED***const***REMOVED***ns***REMOVED***=***REMOVED***parentNode***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***parentNode.dataset.prefix;
***REMOVED******REMOVED***const***REMOVED***vm***REMOVED***=***REMOVED***vue.createVNode(index.ElTooltip,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***virtualTriggering:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***virtualRef:***REMOVED***trigger,
***REMOVED******REMOVED******REMOVED******REMOVED***appendTo:***REMOVED***parentNode,
***REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***"top",
***REMOVED******REMOVED******REMOVED******REMOVED***transition:***REMOVED***"none",
***REMOVED******REMOVED******REMOVED******REMOVED***offset:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***hideAfter:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***...mergedProps
***REMOVED******REMOVED***},***REMOVED***tableOverflowTooltipProps.slotContent***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***()***REMOVED***=>***REMOVED***tableOverflowTooltipProps.slotContent
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***void***REMOVED***0);
***REMOVED******REMOVED***vm.appContext***REMOVED***=***REMOVED***{***REMOVED***...table.appContext,***REMOVED***...table***REMOVED***};
***REMOVED******REMOVED***const***REMOVED***container***REMOVED***=***REMOVED***document.createElement("div");
***REMOVED******REMOVED***vue.render(vm,***REMOVED***container);
***REMOVED******REMOVED***vm.component.exposed.onOpen();
***REMOVED******REMOVED***const***REMOVED***scrollContainer***REMOVED***=***REMOVED***parentNode***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***parentNode.querySelector(`.${ns}-scrollbar__wrap`);
***REMOVED******REMOVED***exports.removePopper***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a2,***REMOVED***_b;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_b***REMOVED***=***REMOVED***(_a2***REMOVED***=***REMOVED***vm.component)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a2.exposed)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.onClose)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vm.component.exposed.onClose();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***vue.render(null,***REMOVED***container);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentRemovePopper***REMOVED***=***REMOVED***exports.removePopper;
***REMOVED******REMOVED******REMOVED******REMOVED***scrollContainer***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***scrollContainer.removeEventListener("scroll",***REMOVED***currentRemovePopper);
***REMOVED******REMOVED******REMOVED******REMOVED***currentRemovePopper.trigger***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***currentRemovePopper.vm***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***exports.removePopper***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***exports.removePopper.trigger***REMOVED***=***REMOVED***trigger***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***trigger***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***exports.removePopper.vm***REMOVED***=***REMOVED***vm;
***REMOVED******REMOVED***scrollContainer***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***scrollContainer.addEventListener("scroll",***REMOVED***exports.removePopper);
}
function***REMOVED***getCurrentColumns(column)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(column.children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lodashUnified.flatMap(column.children,***REMOVED***getCurrentColumns);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[column];
***REMOVED******REMOVED***}
}
function***REMOVED***getColSpan(colSpan,***REMOVED***column)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***colSpan***REMOVED***+***REMOVED***column.colSpan;
}
const***REMOVED***isFixedColumn***REMOVED***=***REMOVED***(index,***REMOVED***fixed,***REMOVED***store,***REMOVED***realColumns)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***after***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED***const***REMOVED***columns***REMOVED***=***REMOVED***store.states.columns.value;
***REMOVED******REMOVED***if***REMOVED***(realColumns)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***curColumns***REMOVED***=***REMOVED***getCurrentColumns(realColumns[index]);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***preColumns***REMOVED***=***REMOVED***columns.slice(0,***REMOVED***columns.indexOf(curColumns[0]));
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***preColumns.reduce(getColSpan,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***after***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***curColumns.reduce(getColSpan,***REMOVED***0)***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***fixedLayout;
***REMOVED******REMOVED***switch***REMOVED***(fixed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"left":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(after***REMOVED***<***REMOVED***store.states.fixedLeafColumnsLength.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fixedLayout***REMOVED***=***REMOVED***"left";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"right":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***>=***REMOVED***columns.length***REMOVED***-***REMOVED***store.states.rightFixedLeafColumnsLength.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fixedLayout***REMOVED***=***REMOVED***"right";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(after***REMOVED***<***REMOVED***store.states.fixedLeafColumnsLength.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fixedLayout***REMOVED***=***REMOVED***"left";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(start***REMOVED***>=***REMOVED***columns.length***REMOVED***-***REMOVED***store.states.rightFixedLeafColumnsLength.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fixedLayout***REMOVED***=***REMOVED***"right";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***fixedLayout***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***direction:***REMOVED***fixedLayout,
***REMOVED******REMOVED******REMOVED******REMOVED***start,
***REMOVED******REMOVED******REMOVED******REMOVED***after
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***{};
};
const***REMOVED***getFixedColumnsClass***REMOVED***=***REMOVED***(namespace,***REMOVED***index,***REMOVED***fixed,***REMOVED***store,***REMOVED***realColumns,***REMOVED***offset***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***classes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***direction,***REMOVED***start,***REMOVED***after***REMOVED***}***REMOVED***=***REMOVED***isFixedColumn(index,***REMOVED***fixed,***REMOVED***store,***REMOVED***realColumns);
***REMOVED******REMOVED***if***REMOVED***(direction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isLeft***REMOVED***=***REMOVED***direction***REMOVED***===***REMOVED***"left";
***REMOVED******REMOVED******REMOVED******REMOVED***classes.push(`${namespace}-fixed-column--${direction}`);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLeft***REMOVED***&&***REMOVED***after***REMOVED***+***REMOVED***offset***REMOVED***===***REMOVED***store.states.fixedLeafColumnsLength.value***REMOVED***-***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classes.push("is-last-column");
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isLeft***REMOVED***&&***REMOVED***start***REMOVED***-***REMOVED***offset***REMOVED***===***REMOVED***store.states.columns.value.length***REMOVED***-***REMOVED***store.states.rightFixedLeafColumnsLength.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classes.push("is-first-column");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***classes;
};
function***REMOVED***getOffset(offset,***REMOVED***column)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***offset***REMOVED***+***REMOVED***(lodashUnified.isNull(column.realWidth)***REMOVED***||***REMOVED***Number.isNaN(column.realWidth)***REMOVED***?***REMOVED***Number(column.width)***REMOVED***:***REMOVED***column.realWidth);
}
const***REMOVED***getFixedColumnOffset***REMOVED***=***REMOVED***(index,***REMOVED***fixed,***REMOVED***store,***REMOVED***realColumns)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***direction,
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***after***REMOVED***=***REMOVED***0
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***isFixedColumn(index,***REMOVED***fixed,***REMOVED***store,***REMOVED***realColumns);
***REMOVED******REMOVED***if***REMOVED***(!direction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***styles***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***isLeft***REMOVED***=***REMOVED***direction***REMOVED***===***REMOVED***"left";
***REMOVED******REMOVED***const***REMOVED***columns***REMOVED***=***REMOVED***store.states.columns.value;
***REMOVED******REMOVED***if***REMOVED***(isLeft)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***styles.left***REMOVED***=***REMOVED***columns.slice(0,***REMOVED***start).reduce(getOffset,***REMOVED***0);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***styles.right***REMOVED***=***REMOVED***columns.slice(after***REMOVED***+***REMOVED***1).reverse().reduce(getOffset,***REMOVED***0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***styles;
};
const***REMOVED***ensurePosition***REMOVED***=***REMOVED***(style,***REMOVED***key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!style)
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(!Number.isNaN(style[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***style[key]***REMOVED***=***REMOVED***`${style[key]}px`;
***REMOVED******REMOVED***}
};

exports.compose***REMOVED***=***REMOVED***compose;
exports.createTablePopper***REMOVED***=***REMOVED***createTablePopper;
exports.ensurePosition***REMOVED***=***REMOVED***ensurePosition;
exports.getCell***REMOVED***=***REMOVED***getCell;
exports.getColumnByCell***REMOVED***=***REMOVED***getColumnByCell;
exports.getColumnById***REMOVED***=***REMOVED***getColumnById;
exports.getColumnByKey***REMOVED***=***REMOVED***getColumnByKey;
exports.getFixedColumnOffset***REMOVED***=***REMOVED***getFixedColumnOffset;
exports.getFixedColumnsClass***REMOVED***=***REMOVED***getFixedColumnsClass;
exports.getKeysMap***REMOVED***=***REMOVED***getKeysMap;
exports.getRowIdentity***REMOVED***=***REMOVED***getRowIdentity;
exports.isFixedColumn***REMOVED***=***REMOVED***isFixedColumn;
exports.mergeOptions***REMOVED***=***REMOVED***mergeOptions;
exports.orderBy***REMOVED***=***REMOVED***orderBy;
exports.parseHeight***REMOVED***=***REMOVED***parseHeight;
exports.parseMinWidth***REMOVED***=***REMOVED***parseMinWidth;
exports.parseWidth***REMOVED***=***REMOVED***parseWidth;
exports.toggleRowStatus***REMOVED***=***REMOVED***toggleRowStatus;
exports.walkTreeNode***REMOVED***=***REMOVED***walkTreeNode;
//#***REMOVED***sourceMappingURL=util.js.map
