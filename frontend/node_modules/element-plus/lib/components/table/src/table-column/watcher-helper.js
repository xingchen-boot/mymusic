'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***util***REMOVED***=***REMOVED***require('../util.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');

function***REMOVED***getAllAliases(props,***REMOVED***aliases)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***props.reduce((prev,***REMOVED***cur)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prev[cur]***REMOVED***=***REMOVED***cur;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***prev;
***REMOVED******REMOVED***},***REMOVED***aliases);
}
function***REMOVED***useWatcher(owner,***REMOVED***props_)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***vue.getCurrentInstance();
***REMOVED******REMOVED***const***REMOVED***registerComplexWatchers***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***["fixed"];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aliases***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***realWidth:***REMOVED***"width",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***realMinWidth:***REMOVED***"minWidth"
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allAliases***REMOVED***=***REMOVED***getAllAliases(props,***REMOVED***aliases);
***REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(allAliases).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***columnKey***REMOVED***=***REMOVED***aliases[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.hasOwn(props_,***REMOVED***columnKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props_[columnKey],***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(columnKey***REMOVED***===***REMOVED***"width"***REMOVED***&&***REMOVED***key***REMOVED***===***REMOVED***"realWidth")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***util.parseWidth(newVal);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(columnKey***REMOVED***===***REMOVED***"minWidth"***REMOVED***&&***REMOVED***key***REMOVED***===***REMOVED***"realMinWidth")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***util.parseMinWidth(newVal);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.columnConfig.value[columnKey]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.columnConfig.value[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***updateColumns***REMOVED***=***REMOVED***columnKey***REMOVED***===***REMOVED***"fixed";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***owner.value.store.scheduleLayout(updateColumns);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***registerNormalWatchers***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"label",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"filters",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"filterMultiple",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"filteredValue",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"sortable",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"index",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"formatter",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"className",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"labelClassName",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"filterClassName",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"showOverflowTooltip",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"tooltipFormatter"
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentProps***REMOVED***=***REMOVED***["showOverflowTooltip"];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aliases***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***"prop",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***align:***REMOVED***"realAlign",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headerAlign:***REMOVED***"realHeaderAlign"
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allAliases***REMOVED***=***REMOVED***getAllAliases(props,***REMOVED***aliases);
***REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(allAliases).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***columnKey***REMOVED***=***REMOVED***aliases[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.hasOwn(props_,***REMOVED***columnKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props_[columnKey],***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.columnConfig.value[key]***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***parentProps.forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.hasOwn(owner.value.props,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***owner.value.props[key],***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.columnConfig.value[key]***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***registerComplexWatchers,
***REMOVED******REMOVED******REMOVED******REMOVED***registerNormalWatchers
***REMOVED******REMOVED***};
}

exports["default"]***REMOVED***=***REMOVED***useWatcher;
//#***REMOVED***sourceMappingURL=watcher-helper.js.map
