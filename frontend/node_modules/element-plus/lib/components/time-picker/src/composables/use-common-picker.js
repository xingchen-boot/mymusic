'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***lodashUnified***REMOVED***=***REMOVED***require('lodash-unified');
var***REMOVED***index***REMOVED***=***REMOVED***require('../../../../hooks/use-locale/index.js');
var***REMOVED***utils***REMOVED***=***REMOVED***require('../utils.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');
var***REMOVED***event***REMOVED***=***REMOVED***require('../../../../constants/event.js');

const***REMOVED***useCommonPicker***REMOVED***=***REMOVED***(props,***REMOVED***emit)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***lang***REMOVED***}***REMOVED***=***REMOVED***index.useLocale();
***REMOVED******REMOVED***const***REMOVED***pickerVisible***REMOVED***=***REMOVED***vue.ref(false);
***REMOVED******REMOVED***const***REMOVED***pickerActualVisible***REMOVED***=***REMOVED***vue.ref(false);
***REMOVED******REMOVED***const***REMOVED***userInput***REMOVED***=***REMOVED***vue.ref(null);
***REMOVED******REMOVED***const***REMOVED***valueIsEmpty***REMOVED***=***REMOVED***vue.computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***modelValue***REMOVED***}***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!modelValue***REMOVED***||***REMOVED***shared.isArray(modelValue)***REMOVED***&&***REMOVED***!modelValue.filter(Boolean).length;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***emitInput***REMOVED***=***REMOVED***(input)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!utils.valueEquals(props.modelValue,***REMOVED***input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***formatted;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isArray(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formatted***REMOVED***=***REMOVED***input.map((item)***REMOVED***=>***REMOVED***utils.formatter(item,***REMOVED***props.valueFormat,***REMOVED***lang.value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(input)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formatted***REMOVED***=***REMOVED***utils.formatter(input,***REMOVED***props.valueFormat,***REMOVED***lang.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***emitVal***REMOVED***=***REMOVED***input***REMOVED***?***REMOVED***formatted***REMOVED***:***REMOVED***input;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(event.UPDATE_MODEL_EVENT,***REMOVED***emitVal,***REMOVED***lang.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***parsedValue***REMOVED***=***REMOVED***vue.computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dayOrDays;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valueIsEmpty.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pickerOptions.value.getDefaultValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dayOrDays***REMOVED***=***REMOVED***pickerOptions.value.getDefaultValue();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isArray(props.modelValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dayOrDays***REMOVED***=***REMOVED***props.modelValue.map((d)***REMOVED***=>***REMOVED***utils.parseDate(d,***REMOVED***props.valueFormat,***REMOVED***lang.value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dayOrDays***REMOVED***=***REMOVED***utils.parseDate((_a***REMOVED***=***REMOVED***props.modelValue)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_a***REMOVED***:***REMOVED***"",***REMOVED***props.valueFormat,***REMOVED***lang.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pickerOptions.value.getRangeAvailableTime)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***availableResult***REMOVED***=***REMOVED***pickerOptions.value.getRangeAvailableTime(dayOrDays);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!lodashUnified.isEqual(availableResult,***REMOVED***dayOrDays))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dayOrDays***REMOVED***=***REMOVED***availableResult;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!valueIsEmpty.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitInput(utils.dayOrDaysToDate(dayOrDays));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isArray(dayOrDays)***REMOVED***&&***REMOVED***dayOrDays.some((day)***REMOVED***=>***REMOVED***!day))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dayOrDays***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dayOrDays;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***pickerOptions***REMOVED***=***REMOVED***vue.ref({});
***REMOVED******REMOVED***const***REMOVED***onSetPickerOption***REMOVED***=***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pickerOptions.value[e[0]]***REMOVED***=***REMOVED***e[1];
***REMOVED******REMOVED******REMOVED******REMOVED***pickerOptions.value.panelReady***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***onCalendarChange***REMOVED***=***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emit("calendar-change",***REMOVED***e);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***onPanelChange***REMOVED***=***REMOVED***(value,***REMOVED***mode,***REMOVED***view)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emit("panel-change",***REMOVED***value,***REMOVED***mode,***REMOVED***view);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***onPick***REMOVED***=***REMOVED***(date***REMOVED***=***REMOVED***"",***REMOVED***visible***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pickerVisible.value***REMOVED***=***REMOVED***visible;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isArray(date))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***date.map((_)***REMOVED***=>***REMOVED***_.toDate());
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***date***REMOVED***?***REMOVED***date.toDate()***REMOVED***:***REMOVED***date;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***userInput.value***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***emitInput(result);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parsedValue,
***REMOVED******REMOVED******REMOVED******REMOVED***pickerActualVisible,
***REMOVED******REMOVED******REMOVED******REMOVED***pickerOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***pickerVisible,
***REMOVED******REMOVED******REMOVED******REMOVED***userInput,
***REMOVED******REMOVED******REMOVED******REMOVED***valueIsEmpty,
***REMOVED******REMOVED******REMOVED******REMOVED***emitInput,
***REMOVED******REMOVED******REMOVED******REMOVED***onCalendarChange,
***REMOVED******REMOVED******REMOVED******REMOVED***onPanelChange,
***REMOVED******REMOVED******REMOVED******REMOVED***onPick,
***REMOVED******REMOVED******REMOVED******REMOVED***onSetPickerOption
***REMOVED******REMOVED***};
};

exports.useCommonPicker***REMOVED***=***REMOVED***useCommonPicker;
//#***REMOVED***sourceMappingURL=use-common-picker.js.map
