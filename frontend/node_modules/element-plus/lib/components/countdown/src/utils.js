'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***types***REMOVED***=***REMOVED***require('../../../utils/types.js');

const***REMOVED***timeUnits***REMOVED***=***REMOVED***[
***REMOVED******REMOVED***["Y",***REMOVED***1e3***REMOVED*******REMOVED***60***REMOVED*******REMOVED***60***REMOVED*******REMOVED***24***REMOVED*******REMOVED***365],
***REMOVED******REMOVED***["M",***REMOVED***1e3***REMOVED*******REMOVED***60***REMOVED*******REMOVED***60***REMOVED*******REMOVED***24***REMOVED*******REMOVED***30],
***REMOVED******REMOVED***["D",***REMOVED***1e3***REMOVED*******REMOVED***60***REMOVED*******REMOVED***60***REMOVED*******REMOVED***24],
***REMOVED******REMOVED***["H",***REMOVED***1e3***REMOVED*******REMOVED***60***REMOVED*******REMOVED***60],
***REMOVED******REMOVED***["m",***REMOVED***1e3***REMOVED*******REMOVED***60],
***REMOVED******REMOVED***["s",***REMOVED***1e3],
***REMOVED******REMOVED***["S",***REMOVED***1]
];
const***REMOVED***getTime***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***types.isNumber(value)***REMOVED***?***REMOVED***new***REMOVED***Date(value).getTime()***REMOVED***:***REMOVED***value.valueOf();
};
const***REMOVED***formatTime***REMOVED***=***REMOVED***(timestamp,***REMOVED***format)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***timeLeft***REMOVED***=***REMOVED***timestamp;
***REMOVED******REMOVED***const***REMOVED***escapeRegex***REMOVED***=***REMOVED***/\[([^\]]*)]/g;
***REMOVED******REMOVED***const***REMOVED***replacedText***REMOVED***=***REMOVED***timeUnits.reduce((current,***REMOVED***[name,***REMOVED***unit])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replaceRegex***REMOVED***=***REMOVED***new***REMOVED***RegExp(`${name}+(?![^\\[\\]]*\\])`,***REMOVED***"g");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(replaceRegex.test(current))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***Math.floor(timeLeft***REMOVED***/***REMOVED***unit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timeLeft***REMOVED***-=***REMOVED***value***REMOVED*******REMOVED***unit;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***current.replace(replaceRegex,***REMOVED***(match)***REMOVED***=>***REMOVED***String(value).padStart(match.length,***REMOVED***"0"));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***current;
***REMOVED******REMOVED***},***REMOVED***format);
***REMOVED******REMOVED***return***REMOVED***replacedText.replace(escapeRegex,***REMOVED***"$1");
};

exports.formatTime***REMOVED***=***REMOVED***formatTime;
exports.getTime***REMOVED***=***REMOVED***getTime;
//#***REMOVED***sourceMappingURL=utils.js.map
