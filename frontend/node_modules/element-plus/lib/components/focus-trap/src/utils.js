'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***tokens***REMOVED***=***REMOVED***require('./tokens.js');
var***REMOVED***aria***REMOVED***=***REMOVED***require('../../../utils/dom/aria.js');

const***REMOVED***focusReason***REMOVED***=***REMOVED***vue.ref();
const***REMOVED***lastUserFocusTimestamp***REMOVED***=***REMOVED***vue.ref(0);
const***REMOVED***lastAutomatedFocusTimestamp***REMOVED***=***REMOVED***vue.ref(0);
let***REMOVED***focusReasonUserCount***REMOVED***=***REMOVED***0;
const***REMOVED***obtainAllFocusableElements***REMOVED***=***REMOVED***(element)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***walker***REMOVED***=***REMOVED***document.createTreeWalker(element,***REMOVED***NodeFilter.SHOW_ELEMENT,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***acceptNode:***REMOVED***(node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isHiddenInput***REMOVED***=***REMOVED***node.tagName***REMOVED***===***REMOVED***"INPUT"***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***"hidden";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.disabled***REMOVED***||***REMOVED***node.hidden***REMOVED***||***REMOVED***isHiddenInput)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***NodeFilter.FILTER_SKIP;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.tabIndex***REMOVED***>=***REMOVED***0***REMOVED***||***REMOVED***node***REMOVED***===***REMOVED***document.activeElement***REMOVED***?***REMOVED***NodeFilter.FILTER_ACCEPT***REMOVED***:***REMOVED***NodeFilter.FILTER_SKIP;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***while***REMOVED***(walker.nextNode())
***REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(walker.currentNode);
***REMOVED******REMOVED***return***REMOVED***nodes;
};
const***REMOVED***getVisibleElement***REMOVED***=***REMOVED***(elements,***REMOVED***container)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isHidden(element,***REMOVED***container))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***element;
***REMOVED******REMOVED***}
};
const***REMOVED***isHidden***REMOVED***=***REMOVED***(element,***REMOVED***container)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(getComputedStyle(element).visibility***REMOVED***===***REMOVED***"hidden")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***while***REMOVED***(element)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(container***REMOVED***&&***REMOVED***element***REMOVED***===***REMOVED***container)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getComputedStyle(element).display***REMOVED***===***REMOVED***"none")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***element***REMOVED***=***REMOVED***element.parentElement;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
};
const***REMOVED***getEdges***REMOVED***=***REMOVED***(container)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***focusable***REMOVED***=***REMOVED***obtainAllFocusableElements(container);
***REMOVED******REMOVED***const***REMOVED***first***REMOVED***=***REMOVED***getVisibleElement(focusable,***REMOVED***container);
***REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***getVisibleElement(focusable.reverse(),***REMOVED***container);
***REMOVED******REMOVED***return***REMOVED***[first,***REMOVED***last];
};
const***REMOVED***isSelectable***REMOVED***=***REMOVED***(element)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***element***REMOVED***instanceof***REMOVED***HTMLInputElement***REMOVED***&&***REMOVED***"select"***REMOVED***in***REMOVED***element;
};
const***REMOVED***tryFocus***REMOVED***=***REMOVED***(element,***REMOVED***shouldSelect)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(element)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevFocusedElement***REMOVED***=***REMOVED***document.activeElement;
***REMOVED******REMOVED******REMOVED******REMOVED***aria.focusElement(element,***REMOVED***{***REMOVED***preventScroll:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***lastAutomatedFocusTimestamp.value***REMOVED***=***REMOVED***window.performance.now();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***!==***REMOVED***prevFocusedElement***REMOVED***&&***REMOVED***isSelectable(element)***REMOVED***&&***REMOVED***shouldSelect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element.select();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
function***REMOVED***removeFromStack(list,***REMOVED***item)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***copy***REMOVED***=***REMOVED***[...list];
***REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***list.indexOf(item);
***REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***copy.splice(idx,***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***copy;
}
const***REMOVED***createFocusableStack***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***stack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***push***REMOVED***=***REMOVED***(layer)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentLayer***REMOVED***=***REMOVED***stack[0];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentLayer***REMOVED***&&***REMOVED***layer***REMOVED***!==***REMOVED***currentLayer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentLayer.pause();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***stack***REMOVED***=***REMOVED***removeFromStack(stack,***REMOVED***layer);
***REMOVED******REMOVED******REMOVED******REMOVED***stack.unshift(layer);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***remove***REMOVED***=***REMOVED***(layer)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED******REMOVED******REMOVED***stack***REMOVED***=***REMOVED***removeFromStack(stack,***REMOVED***layer);
***REMOVED******REMOVED******REMOVED******REMOVED***(_b***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***stack[0])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.resume)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.call(_a);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED***remove
***REMOVED******REMOVED***};
};
const***REMOVED***focusFirstDescendant***REMOVED***=***REMOVED***(elements,***REMOVED***shouldSelect***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***prevFocusedElement***REMOVED***=***REMOVED***document.activeElement;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tryFocus(element,***REMOVED***shouldSelect);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(document.activeElement***REMOVED***!==***REMOVED***prevFocusedElement)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
};
const***REMOVED***focusableStack***REMOVED***=***REMOVED***createFocusableStack();
const***REMOVED***isFocusCausedByUserEvent***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***lastUserFocusTimestamp.value***REMOVED***>***REMOVED***lastAutomatedFocusTimestamp.value;
};
const***REMOVED***notifyFocusReasonPointer***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***focusReason.value***REMOVED***=***REMOVED***"pointer";
***REMOVED******REMOVED***lastUserFocusTimestamp.value***REMOVED***=***REMOVED***window.performance.now();
};
const***REMOVED***notifyFocusReasonKeydown***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***focusReason.value***REMOVED***=***REMOVED***"keyboard";
***REMOVED******REMOVED***lastUserFocusTimestamp.value***REMOVED***=***REMOVED***window.performance.now();
};
const***REMOVED***useFocusReason***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***vue.onMounted(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(focusReasonUserCount***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.addEventListener("mousedown",***REMOVED***notifyFocusReasonPointer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.addEventListener("touchstart",***REMOVED***notifyFocusReasonPointer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.addEventListener("keydown",***REMOVED***notifyFocusReasonKeydown);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***focusReasonUserCount++;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***vue.onBeforeUnmount(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***focusReasonUserCount--;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(focusReasonUserCount***REMOVED***<=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.removeEventListener("mousedown",***REMOVED***notifyFocusReasonPointer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.removeEventListener("touchstart",***REMOVED***notifyFocusReasonPointer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.removeEventListener("keydown",***REMOVED***notifyFocusReasonKeydown);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***focusReason,
***REMOVED******REMOVED******REMOVED******REMOVED***lastUserFocusTimestamp,
***REMOVED******REMOVED******REMOVED******REMOVED***lastAutomatedFocusTimestamp
***REMOVED******REMOVED***};
};
const***REMOVED***createFocusOutPreventedEvent***REMOVED***=***REMOVED***(detail)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***CustomEvent(tokens.FOCUSOUT_PREVENTED,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...tokens.FOCUSOUT_PREVENTED_OPTS,
***REMOVED******REMOVED******REMOVED******REMOVED***detail
***REMOVED******REMOVED***});
};

exports.createFocusOutPreventedEvent***REMOVED***=***REMOVED***createFocusOutPreventedEvent;
exports.focusFirstDescendant***REMOVED***=***REMOVED***focusFirstDescendant;
exports.focusableStack***REMOVED***=***REMOVED***focusableStack;
exports.getEdges***REMOVED***=***REMOVED***getEdges;
exports.getVisibleElement***REMOVED***=***REMOVED***getVisibleElement;
exports.isFocusCausedByUserEvent***REMOVED***=***REMOVED***isFocusCausedByUserEvent;
exports.isHidden***REMOVED***=***REMOVED***isHidden;
exports.obtainAllFocusableElements***REMOVED***=***REMOVED***obtainAllFocusableElements;
exports.tryFocus***REMOVED***=***REMOVED***tryFocus;
exports.useFocusReason***REMOVED***=***REMOVED***useFocusReason;
//#***REMOVED***sourceMappingURL=utils.js.map
