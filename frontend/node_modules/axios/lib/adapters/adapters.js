import***REMOVED***utils***REMOVED***from***REMOVED***'../utils.js';
import***REMOVED***httpAdapter***REMOVED***from***REMOVED***'./http.js';
import***REMOVED***xhrAdapter***REMOVED***from***REMOVED***'./xhr.js';
import***REMOVED*******REMOVED***as***REMOVED***fetchAdapter***REMOVED***from***REMOVED***'./fetch.js';
import***REMOVED***AxiosError***REMOVED***from***REMOVED***"../core/AxiosError.js";

const***REMOVED***knownAdapters***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***http:***REMOVED***httpAdapter,
***REMOVED******REMOVED***xhr:***REMOVED***xhrAdapter,
***REMOVED******REMOVED***fetch:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***fetchAdapter.getFetch,
***REMOVED******REMOVED***}
}

utils.forEach(knownAdapters,***REMOVED***(fn,***REMOVED***value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(fn,***REMOVED***'name',***REMOVED***{value});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-empty
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(fn,***REMOVED***'adapterName',***REMOVED***{value});
***REMOVED******REMOVED***}
});

const***REMOVED***renderReason***REMOVED***=***REMOVED***(reason)***REMOVED***=>***REMOVED***`-***REMOVED***${reason}`;

const***REMOVED***isResolvedHandle***REMOVED***=***REMOVED***(adapter)***REMOVED***=>***REMOVED***utils.isFunction(adapter)***REMOVED***||***REMOVED***adapter***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***adapter***REMOVED***===***REMOVED***false;

export***REMOVED***default***REMOVED***{
***REMOVED******REMOVED***getAdapter:***REMOVED***(adapters,***REMOVED***config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***adapters***REMOVED***=***REMOVED***utils.isArray(adapters)***REMOVED***?***REMOVED***adapters***REMOVED***:***REMOVED***[adapters];

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{length}***REMOVED***=***REMOVED***adapters;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***nameOrAdapter;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***adapter;

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rejectedReasons***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nameOrAdapter***REMOVED***=***REMOVED***adapters[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***id;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adapter***REMOVED***=***REMOVED***nameOrAdapter;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isResolvedHandle(nameOrAdapter))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***adapter***REMOVED***=***REMOVED***knownAdapters[(id***REMOVED***=***REMOVED***String(nameOrAdapter)).toLowerCase()];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(adapter***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError(`Unknown***REMOVED***adapter***REMOVED***'${id}'`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(adapter***REMOVED***&&***REMOVED***(utils.isFunction(adapter)***REMOVED***||***REMOVED***(adapter***REMOVED***=***REMOVED***adapter.get(config))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rejectedReasons[id***REMOVED***||***REMOVED***'#'***REMOVED***+***REMOVED***i]***REMOVED***=***REMOVED***adapter;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!adapter)***REMOVED***{

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reasons***REMOVED***=***REMOVED***Object.entries(rejectedReasons)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(([id,***REMOVED***state])***REMOVED***=>***REMOVED***`adapter***REMOVED***${id}***REMOVED***`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(state***REMOVED***===***REMOVED***false***REMOVED***?***REMOVED***'is***REMOVED***not***REMOVED***supported***REMOVED***by***REMOVED***the***REMOVED***environment'***REMOVED***:***REMOVED***'is***REMOVED***not***REMOVED***available***REMOVED***in***REMOVED***the***REMOVED***build')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***s***REMOVED***=***REMOVED***length***REMOVED***?
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(reasons.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***'since***REMOVED***:\n'***REMOVED***+***REMOVED***reasons.map(renderReason).join('\n')***REMOVED***:***REMOVED***'***REMOVED***'***REMOVED***+***REMOVED***renderReason(reasons[0]))***REMOVED***:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'as***REMOVED***no***REMOVED***adapter***REMOVED***specified';

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`There***REMOVED***is***REMOVED***no***REMOVED***suitable***REMOVED***adapter***REMOVED***to***REMOVED***dispatch***REMOVED***the***REMOVED***request***REMOVED***`***REMOVED***+***REMOVED***s,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'ERR_NOT_SUPPORT'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***adapter;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***adapters:***REMOVED***knownAdapters
}
