'use***REMOVED***strict';

import***REMOVED***utils***REMOVED***from***REMOVED***'./../utils.js';
import***REMOVED***buildURL***REMOVED***from***REMOVED***'../helpers/buildURL.js';
import***REMOVED***InterceptorManager***REMOVED***from***REMOVED***'./InterceptorManager.js';
import***REMOVED***dispatchRequest***REMOVED***from***REMOVED***'./dispatchRequest.js';
import***REMOVED***mergeConfig***REMOVED***from***REMOVED***'./mergeConfig.js';
import***REMOVED***buildFullPath***REMOVED***from***REMOVED***'./buildFullPath.js';
import***REMOVED***validator***REMOVED***from***REMOVED***'../helpers/validator.js';
import***REMOVED***AxiosHeaders***REMOVED***from***REMOVED***'./AxiosHeaders.js';

const***REMOVED***validators***REMOVED***=***REMOVED***validator.validators;

/**
***REMOVED*******REMOVED***Create***REMOVED***a***REMOVED***new***REMOVED***instance***REMOVED***of***REMOVED***Axios
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***instanceConfig***REMOVED***The***REMOVED***default***REMOVED***config***REMOVED***for***REMOVED***the***REMOVED***instance
***REMOVED****
***REMOVED*******REMOVED***@return***REMOVED***{Axios}***REMOVED***A***REMOVED***new***REMOVED***instance***REMOVED***of***REMOVED***Axios
***REMOVED****/
class***REMOVED***Axios***REMOVED***{
***REMOVED******REMOVED***constructor(instanceConfig)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.defaults***REMOVED***=***REMOVED***instanceConfig***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.interceptors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***request:***REMOVED***new***REMOVED***InterceptorManager(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***response:***REMOVED***new***REMOVED***InterceptorManager()
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Dispatch***REMOVED***a***REMOVED***request
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{String|Object}***REMOVED***configOrUrl***REMOVED***The***REMOVED***config***REMOVED***specific***REMOVED***for***REMOVED***this***REMOVED***request***REMOVED***(merged***REMOVED***with***REMOVED***this.defaults)
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{?Object}***REMOVED***config
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise}***REMOVED***The***REMOVED***Promise***REMOVED***to***REMOVED***be***REMOVED***fulfilled
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***async***REMOVED***request(configOrUrl,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***await***REMOVED***this._request(configOrUrl,***REMOVED***config);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dummy***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Error.captureStackTrace***REMOVED***?***REMOVED***Error.captureStackTrace(dummy)***REMOVED***:***REMOVED***(dummy***REMOVED***=***REMOVED***new***REMOVED***Error());

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***slice***REMOVED***off***REMOVED***the***REMOVED***Error:***REMOVED***...***REMOVED***line
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stack***REMOVED***=***REMOVED***dummy.stack***REMOVED***?***REMOVED***dummy.stack.replace(/^.+\n/,***REMOVED***'')***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!err.stack)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.stack***REMOVED***=***REMOVED***stack;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***match***REMOVED***without***REMOVED***the***REMOVED***2***REMOVED***top***REMOVED***stack***REMOVED***lines
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stack***REMOVED***&&***REMOVED***!String(err.stack).endsWith(stack.replace(/^.+\n.+\n/,***REMOVED***'')))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.stack***REMOVED***+=***REMOVED***'\n'***REMOVED***+***REMOVED***stack
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ignore***REMOVED***the***REMOVED***case***REMOVED***where***REMOVED***"stack"***REMOVED***is***REMOVED***an***REMOVED***un-writable***REMOVED***property
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***_request(configOrUrl,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/*eslint***REMOVED***no-param-reassign:0*/
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Allow***REMOVED***for***REMOVED***axios('example/url'[,***REMOVED***config])***REMOVED***a***REMOVED***la***REMOVED***fetch***REMOVED***API
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***configOrUrl***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config***REMOVED***=***REMOVED***config***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config.url***REMOVED***=***REMOVED***configOrUrl;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config***REMOVED***=***REMOVED***configOrUrl***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***config***REMOVED***=***REMOVED***mergeConfig(this.defaults,***REMOVED***config);

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{transitional,***REMOVED***paramsSerializer,***REMOVED***headers}***REMOVED***=***REMOVED***config;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transitional***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator.assertOptions(transitional,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***silentJSONParsing:***REMOVED***validators.transitional(validators.boolean),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forcedJSONParsing:***REMOVED***validators.transitional(validators.boolean),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clarifyTimeoutError:***REMOVED***validators.transitional(validators.boolean)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(paramsSerializer***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.isFunction(paramsSerializer))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config.paramsSerializer***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***serialize:***REMOVED***paramsSerializer
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator.assertOptions(paramsSerializer,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***encode:***REMOVED***validators.function,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***serialize:***REMOVED***validators.function
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Set***REMOVED***config.allowAbsoluteUrls
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(config.allowAbsoluteUrls***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***do***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.defaults.allowAbsoluteUrls***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config.allowAbsoluteUrls***REMOVED***=***REMOVED***this.defaults.allowAbsoluteUrls;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config.allowAbsoluteUrls***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***validator.assertOptions(config,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseUrl:***REMOVED***validators.spelling('baseURL'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withXsrfToken:***REMOVED***validators.spelling('withXSRFToken')
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***true);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Set***REMOVED***config.method
***REMOVED******REMOVED******REMOVED******REMOVED***config.method***REMOVED***=***REMOVED***(config.method***REMOVED***||***REMOVED***this.defaults.method***REMOVED***||***REMOVED***'get').toLowerCase();

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Flatten***REMOVED***headers
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***contextHeaders***REMOVED***=***REMOVED***headers***REMOVED***&&***REMOVED***utils.merge(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers.common,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers[config.method]
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***headers***REMOVED***&&***REMOVED***utils.forEach(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***['delete',***REMOVED***'get',***REMOVED***'head',***REMOVED***'post',***REMOVED***'put',***REMOVED***'patch',***REMOVED***'common'],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(method)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***headers[method];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***config.headers***REMOVED***=***REMOVED***AxiosHeaders.concat(contextHeaders,***REMOVED***headers);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***filter***REMOVED***out***REMOVED***skipped***REMOVED***interceptors
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***requestInterceptorChain***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***synchronousRequestInterceptors***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this.interceptors.request.forEach(function***REMOVED***unshiftRequestInterceptors(interceptor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***interceptor.runWhen***REMOVED***===***REMOVED***'function'***REMOVED***&&***REMOVED***interceptor.runWhen(config)***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***synchronousRequestInterceptors***REMOVED***=***REMOVED***synchronousRequestInterceptors***REMOVED***&&***REMOVED***interceptor.synchronous;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requestInterceptorChain.unshift(interceptor.fulfilled,***REMOVED***interceptor.rejected);
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***responseInterceptorChain***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.interceptors.response.forEach(function***REMOVED***pushResponseInterceptors(interceptor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***responseInterceptorChain.push(interceptor.fulfilled,***REMOVED***interceptor.rejected);
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***promise;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***len;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!synchronousRequestInterceptors)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***chain***REMOVED***=***REMOVED***[dispatchRequest.bind(this),***REMOVED***undefined];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chain.unshift(...requestInterceptorChain);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chain.push(...responseInterceptorChain);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***len***REMOVED***=***REMOVED***chain.length;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promise***REMOVED***=***REMOVED***Promise.resolve(config);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***len)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promise***REMOVED***=***REMOVED***promise.then(chain[i++],***REMOVED***chain[i++]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promise;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***len***REMOVED***=***REMOVED***requestInterceptorChain.length;

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newConfig***REMOVED***=***REMOVED***config;

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***len)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onFulfilled***REMOVED***=***REMOVED***requestInterceptorChain[i++];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onRejected***REMOVED***=***REMOVED***requestInterceptorChain[i++];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newConfig***REMOVED***=***REMOVED***onFulfilled(newConfig);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onRejected.call(this,***REMOVED***error);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promise***REMOVED***=***REMOVED***dispatchRequest.call(this,***REMOVED***newConfig);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject(error);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***len***REMOVED***=***REMOVED***responseInterceptorChain.length;

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***len)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***promise***REMOVED***=***REMOVED***promise.then(responseInterceptorChain[i++],***REMOVED***responseInterceptorChain[i++]);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promise;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***getUri(config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***config***REMOVED***=***REMOVED***mergeConfig(this.defaults,***REMOVED***config);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fullPath***REMOVED***=***REMOVED***buildFullPath(config.baseURL,***REMOVED***config.url,***REMOVED***config.allowAbsoluteUrls);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***buildURL(fullPath,***REMOVED***config.params,***REMOVED***config.paramsSerializer);
***REMOVED******REMOVED***}
}

//***REMOVED***Provide***REMOVED***aliases***REMOVED***for***REMOVED***supported***REMOVED***request***REMOVED***methods
utils.forEach(['delete',***REMOVED***'get',***REMOVED***'head',***REMOVED***'options'],***REMOVED***function***REMOVED***forEachMethodNoData(method)***REMOVED***{
***REMOVED******REMOVED***/*eslint***REMOVED***func-names:0*/
***REMOVED******REMOVED***Axios.prototype[method]***REMOVED***=***REMOVED***function(url,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.request(mergeConfig(config***REMOVED***||***REMOVED***{},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***(config***REMOVED***||***REMOVED***{}).data
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED***};
});

utils.forEach(['post',***REMOVED***'put',***REMOVED***'patch'],***REMOVED***function***REMOVED***forEachMethodWithData(method)***REMOVED***{
***REMOVED******REMOVED***/*eslint***REMOVED***func-names:0*/

***REMOVED******REMOVED***function***REMOVED***generateHTTPMethod(isForm)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***httpMethod(url,***REMOVED***data,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.request(mergeConfig(config***REMOVED***||***REMOVED***{},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers:***REMOVED***isForm***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Content-Type':***REMOVED***'multipart/form-data'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***Axios.prototype[method]***REMOVED***=***REMOVED***generateHTTPMethod();

***REMOVED******REMOVED***Axios.prototype[method***REMOVED***+***REMOVED***'Form']***REMOVED***=***REMOVED***generateHTTPMethod(true);
});

export***REMOVED***default***REMOVED***Axios;
