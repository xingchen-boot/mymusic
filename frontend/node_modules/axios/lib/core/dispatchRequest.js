'use***REMOVED***strict';

import***REMOVED***transformData***REMOVED***from***REMOVED***'./transformData.js';
import***REMOVED***isCancel***REMOVED***from***REMOVED***'../cancel/isCancel.js';
import***REMOVED***defaults***REMOVED***from***REMOVED***'../defaults/index.js';
import***REMOVED***CanceledError***REMOVED***from***REMOVED***'../cancel/CanceledError.js';
import***REMOVED***AxiosHeaders***REMOVED***from***REMOVED***'../core/AxiosHeaders.js';
import***REMOVED***adapters***REMOVED***from***REMOVED***"../adapters/adapters.js";

/**
***REMOVED*******REMOVED***Throws***REMOVED***a***REMOVED***`CanceledError`***REMOVED***if***REMOVED***cancellation***REMOVED***has***REMOVED***been***REMOVED***requested.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***config***REMOVED***The***REMOVED***config***REMOVED***that***REMOVED***is***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***request
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{void}
***REMOVED****/
function***REMOVED***throwIfCancellationRequested(config)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(config.cancelToken)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***config.cancelToken.throwIfRequested();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(config.signal***REMOVED***&&***REMOVED***config.signal.aborted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***CanceledError(null,***REMOVED***config);
***REMOVED******REMOVED***}
}

/**
***REMOVED*******REMOVED***Dispatch***REMOVED***a***REMOVED***request***REMOVED***to***REMOVED***the***REMOVED***server***REMOVED***using***REMOVED***the***REMOVED***configured***REMOVED***adapter.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{object}***REMOVED***config***REMOVED***The***REMOVED***config***REMOVED***that***REMOVED***is***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***request
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{Promise}***REMOVED***The***REMOVED***Promise***REMOVED***to***REMOVED***be***REMOVED***fulfilled
***REMOVED****/
export***REMOVED***default***REMOVED***function***REMOVED***dispatchRequest(config)***REMOVED***{
***REMOVED******REMOVED***throwIfCancellationRequested(config);

***REMOVED******REMOVED***config.headers***REMOVED***=***REMOVED***AxiosHeaders.from(config.headers);

***REMOVED******REMOVED***//***REMOVED***Transform***REMOVED***request***REMOVED***data
***REMOVED******REMOVED***config.data***REMOVED***=***REMOVED***transformData.call(
***REMOVED******REMOVED******REMOVED******REMOVED***config,
***REMOVED******REMOVED******REMOVED******REMOVED***config.transformRequest
***REMOVED******REMOVED***);

***REMOVED******REMOVED***if***REMOVED***(['post',***REMOVED***'put',***REMOVED***'patch'].indexOf(config.method)***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***config.headers.setContentType('application/x-www-form-urlencoded',***REMOVED***false);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***adapter***REMOVED***=***REMOVED***adapters.getAdapter(config.adapter***REMOVED***||***REMOVED***defaults.adapter,***REMOVED***config);

***REMOVED******REMOVED***return***REMOVED***adapter(config).then(function***REMOVED***onAdapterResolution(response)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throwIfCancellationRequested(config);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Transform***REMOVED***response***REMOVED***data
***REMOVED******REMOVED******REMOVED******REMOVED***response.data***REMOVED***=***REMOVED***transformData.call(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config.transformResponse,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***response
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***response.headers***REMOVED***=***REMOVED***AxiosHeaders.from(response.headers);

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***response;
***REMOVED******REMOVED***},***REMOVED***function***REMOVED***onAdapterRejection(reason)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isCancel(reason))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throwIfCancellationRequested(config);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Transform***REMOVED***response***REMOVED***data
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reason***REMOVED***&&***REMOVED***reason.response)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reason.response.data***REMOVED***=***REMOVED***transformData.call(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***config.transformResponse,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reason.response
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reason.response.headers***REMOVED***=***REMOVED***AxiosHeaders.from(reason.response.headers);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.reject(reason);
***REMOVED******REMOVED***});
}
