'use***REMOVED***strict';

import***REMOVED***utils***REMOVED***from***REMOVED***'../utils.js';
import***REMOVED***AxiosError***REMOVED***from***REMOVED***'../core/AxiosError.js';
//***REMOVED***temporary***REMOVED***hotfix***REMOVED***to***REMOVED***avoid***REMOVED***circular***REMOVED***references***REMOVED***until***REMOVED***AxiosURLSearchParams***REMOVED***is***REMOVED***refactored
import***REMOVED***PlatformFormData***REMOVED***from***REMOVED***'../platform/node/classes/FormData.js';

/**
***REMOVED*******REMOVED***Determines***REMOVED***if***REMOVED***the***REMOVED***given***REMOVED***thing***REMOVED***is***REMOVED***a***REMOVED***array***REMOVED***or***REMOVED***js***REMOVED***object.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***thing***REMOVED***-***REMOVED***The***REMOVED***object***REMOVED***or***REMOVED***array***REMOVED***to***REMOVED***be***REMOVED***visited.
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}
***REMOVED****/
function***REMOVED***isVisitable(thing)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***utils.isPlainObject(thing)***REMOVED***||***REMOVED***utils.isArray(thing);
}

/**
***REMOVED*******REMOVED***It***REMOVED***removes***REMOVED***the***REMOVED***brackets***REMOVED***from***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***string
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***key***REMOVED***-***REMOVED***The***REMOVED***key***REMOVED***of***REMOVED***the***REMOVED***parameter.
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***key***REMOVED***without***REMOVED***the***REMOVED***brackets.
***REMOVED****/
function***REMOVED***removeBrackets(key)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***utils.endsWith(key,***REMOVED***'[]')***REMOVED***?***REMOVED***key.slice(0,***REMOVED***-2)***REMOVED***:***REMOVED***key;
}

/**
***REMOVED*******REMOVED***It***REMOVED***takes***REMOVED***a***REMOVED***path,***REMOVED***a***REMOVED***key,***REMOVED***and***REMOVED***a***REMOVED***boolean,***REMOVED***and***REMOVED***returns***REMOVED***a***REMOVED***string
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***path***REMOVED***-***REMOVED***The***REMOVED***path***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***key.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***key***REMOVED***-***REMOVED***The***REMOVED***key***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***object***REMOVED***being***REMOVED***iterated***REMOVED***over.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***dots***REMOVED***-***REMOVED***If***REMOVED***true,***REMOVED***the***REMOVED***key***REMOVED***will***REMOVED***be***REMOVED***rendered***REMOVED***with***REMOVED***dots***REMOVED***instead***REMOVED***of***REMOVED***brackets.
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***The***REMOVED***path***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***key.
***REMOVED****/
function***REMOVED***renderKey(path,***REMOVED***key,***REMOVED***dots)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!path)***REMOVED***return***REMOVED***key;
***REMOVED******REMOVED***return***REMOVED***path.concat(key).map(function***REMOVED***each(token,***REMOVED***i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***removeBrackets(token);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!dots***REMOVED***&&***REMOVED***i***REMOVED***?***REMOVED***'['***REMOVED***+***REMOVED***token***REMOVED***+***REMOVED***']'***REMOVED***:***REMOVED***token;
***REMOVED******REMOVED***}).join(dots***REMOVED***?***REMOVED***'.'***REMOVED***:***REMOVED***'');
}

/**
***REMOVED*******REMOVED***If***REMOVED***the***REMOVED***array***REMOVED***is***REMOVED***an***REMOVED***array***REMOVED***and***REMOVED***none***REMOVED***of***REMOVED***its***REMOVED***elements***REMOVED***are***REMOVED***visitable,***REMOVED***then***REMOVED***it's***REMOVED***a***REMOVED***flat***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Array<any>}***REMOVED***arr***REMOVED***-***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***check
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}
***REMOVED****/
function***REMOVED***isFlatArray(arr)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***utils.isArray(arr)***REMOVED***&&***REMOVED***!arr.some(isVisitable);
}

const***REMOVED***predicates***REMOVED***=***REMOVED***utils.toFlatObject(utils,***REMOVED***{},***REMOVED***null,***REMOVED***function***REMOVED***filter(prop)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***/^is[A-Z]/.test(prop);
});

/**
***REMOVED*******REMOVED***Convert***REMOVED***a***REMOVED***data***REMOVED***object***REMOVED***to***REMOVED***FormData
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***obj
***REMOVED*******REMOVED***@param***REMOVED***{?Object}***REMOVED***[formData]
***REMOVED*******REMOVED***@param***REMOVED***{?Object}***REMOVED***[options]
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[options.visitor]
***REMOVED*******REMOVED***@param***REMOVED***{Boolean}***REMOVED***[options.metaTokens***REMOVED***=***REMOVED***true]
***REMOVED*******REMOVED***@param***REMOVED***{Boolean}***REMOVED***[options.dots***REMOVED***=***REMOVED***false]
***REMOVED*******REMOVED***@param***REMOVED***{?Boolean}***REMOVED***[options.indexes***REMOVED***=***REMOVED***false]
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{Object}
***REMOVED*****/

/**
***REMOVED*******REMOVED***It***REMOVED***converts***REMOVED***an***REMOVED***object***REMOVED***into***REMOVED***a***REMOVED***FormData***REMOVED***object
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object<any,***REMOVED***any>}***REMOVED***obj***REMOVED***-***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***convert***REMOVED***to***REMOVED***form***REMOVED***data.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***formData***REMOVED***-***REMOVED***The***REMOVED***FormData***REMOVED***object***REMOVED***to***REMOVED***append***REMOVED***to.
***REMOVED*******REMOVED***@param***REMOVED***{Object<string,***REMOVED***any>}***REMOVED***options
***REMOVED****
***REMOVED*******REMOVED***@returns
***REMOVED****/
function***REMOVED***toFormData(obj,***REMOVED***formData,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!utils.isObject(obj))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('target***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***object');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED***formData***REMOVED***=***REMOVED***formData***REMOVED***||***REMOVED***new***REMOVED***(PlatformFormData***REMOVED***||***REMOVED***FormData)();

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED***options***REMOVED***=***REMOVED***utils.toFlatObject(options,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***metaTokens:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***dots:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***indexes:***REMOVED***false
***REMOVED******REMOVED***},***REMOVED***false,***REMOVED***function***REMOVED***defined(option,***REMOVED***source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-eq-null,eqeqeq
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!utils.isUndefined(source[option]);
***REMOVED******REMOVED***});

***REMOVED******REMOVED***const***REMOVED***metaTokens***REMOVED***=***REMOVED***options.metaTokens;
***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-use-before-define
***REMOVED******REMOVED***const***REMOVED***visitor***REMOVED***=***REMOVED***options.visitor***REMOVED***||***REMOVED***defaultVisitor;
***REMOVED******REMOVED***const***REMOVED***dots***REMOVED***=***REMOVED***options.dots;
***REMOVED******REMOVED***const***REMOVED***indexes***REMOVED***=***REMOVED***options.indexes;
***REMOVED******REMOVED***const***REMOVED***_Blob***REMOVED***=***REMOVED***options.Blob***REMOVED***||***REMOVED***typeof***REMOVED***Blob***REMOVED***!==***REMOVED***'undefined'***REMOVED***&&***REMOVED***Blob;
***REMOVED******REMOVED***const***REMOVED***useBlob***REMOVED***=***REMOVED***_Blob***REMOVED***&&***REMOVED***utils.isSpecCompliantForm(formData);

***REMOVED******REMOVED***if***REMOVED***(!utils.isFunction(visitor))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('visitor***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***function');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***function***REMOVED***convertValue(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)***REMOVED***return***REMOVED***'';

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.isDate(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.toISOString();
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.isBoolean(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.toString();
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!useBlob***REMOVED***&&***REMOVED***utils.isBlob(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('Blob***REMOVED***is***REMOVED***not***REMOVED***supported.***REMOVED***Use***REMOVED***a***REMOVED***Buffer***REMOVED***instead.');
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.isArrayBuffer(value)***REMOVED***||***REMOVED***utils.isTypedArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***useBlob***REMOVED***&&***REMOVED***typeof***REMOVED***Blob***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***new***REMOVED***Blob([value])***REMOVED***:***REMOVED***Buffer.from(value);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Default***REMOVED***visitor.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{String|Number}***REMOVED***key
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Array<String|Number>}***REMOVED***path
***REMOVED******REMOVED******REMOVED*******REMOVED***@this***REMOVED***{FormData}
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***return***REMOVED***true***REMOVED***to***REMOVED***visit***REMOVED***the***REMOVED***each***REMOVED***prop***REMOVED***of***REMOVED***the***REMOVED***value***REMOVED***recursively
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***defaultVisitor(value,***REMOVED***key,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***arr***REMOVED***=***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***&&***REMOVED***!path***REMOVED***&&***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.endsWith(key,***REMOVED***'{}'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***metaTokens***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***key.slice(0,***REMOVED***-2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***JSON.stringify(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(utils.isArray(value)***REMOVED***&&***REMOVED***isFlatArray(value))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***((utils.isFileList(value)***REMOVED***||***REMOVED***utils.endsWith(key,***REMOVED***'[]'))***REMOVED***&&***REMOVED***(arr***REMOVED***=***REMOVED***utils.toArray(value))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***removeBrackets(key);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arr.forEach(function***REMOVED***each(el,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(utils.isUndefined(el)***REMOVED***||***REMOVED***el***REMOVED***===***REMOVED***null)***REMOVED***&&***REMOVED***formData.append(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-nested-ternary
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indexes***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***renderKey([key],***REMOVED***index,***REMOVED***dots)***REMOVED***:***REMOVED***(indexes***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***key***REMOVED***+***REMOVED***'[]'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***convertValue(el)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isVisitable(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***formData.append(renderKey(path,***REMOVED***key,***REMOVED***dots),***REMOVED***convertValue(value));

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***stack***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***const***REMOVED***exposedHelpers***REMOVED***=***REMOVED***Object.assign(predicates,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***defaultVisitor,
***REMOVED******REMOVED******REMOVED******REMOVED***convertValue,
***REMOVED******REMOVED******REMOVED******REMOVED***isVisitable
***REMOVED******REMOVED***});

***REMOVED******REMOVED***function***REMOVED***build(value,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.isUndefined(value))***REMOVED***return;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stack.indexOf(value)***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***Error('Circular***REMOVED***reference***REMOVED***detected***REMOVED***in***REMOVED***'***REMOVED***+***REMOVED***path.join('.'));
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***stack.push(value);

***REMOVED******REMOVED******REMOVED******REMOVED***utils.forEach(value,***REMOVED***function***REMOVED***each(el,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***!(utils.isUndefined(el)***REMOVED***||***REMOVED***el***REMOVED***===***REMOVED***null)***REMOVED***&&***REMOVED***visitor.call(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formData,***REMOVED***el,***REMOVED***utils.isString(key)***REMOVED***?***REMOVED***key.trim()***REMOVED***:***REMOVED***key,***REMOVED***path,***REMOVED***exposedHelpers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***build(el,***REMOVED***path***REMOVED***?***REMOVED***path.concat(key)***REMOVED***:***REMOVED***[key]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***stack.pop();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(!utils.isObject(obj))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('data***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***object');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***build(obj);

***REMOVED******REMOVED***return***REMOVED***formData;
}

export***REMOVED***default***REMOVED***toFormData;
