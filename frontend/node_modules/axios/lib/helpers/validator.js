'use***REMOVED***strict';

import***REMOVED***{VERSION}***REMOVED***from***REMOVED***'../env/data.js';
import***REMOVED***AxiosError***REMOVED***from***REMOVED***'../core/AxiosError.js';

const***REMOVED***validators***REMOVED***=***REMOVED***{};

//***REMOVED***eslint-disable-next-line***REMOVED***func-names
['object',***REMOVED***'boolean',***REMOVED***'number',***REMOVED***'function',***REMOVED***'string',***REMOVED***'symbol'].forEach((type,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***validators[type]***REMOVED***=***REMOVED***function***REMOVED***validator(thing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***thing***REMOVED***===***REMOVED***type***REMOVED***||***REMOVED***'a'***REMOVED***+***REMOVED***(i***REMOVED***<***REMOVED***1***REMOVED***?***REMOVED***'n***REMOVED***'***REMOVED***:***REMOVED***'***REMOVED***')***REMOVED***+***REMOVED***type;
***REMOVED******REMOVED***};
});

const***REMOVED***deprecatedWarnings***REMOVED***=***REMOVED***{};

/**
***REMOVED*******REMOVED***Transitional***REMOVED***option***REMOVED***validator
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{function|boolean?}***REMOVED***validator***REMOVED***-***REMOVED***set***REMOVED***to***REMOVED***false***REMOVED***if***REMOVED***the***REMOVED***transitional***REMOVED***option***REMOVED***has***REMOVED***been***REMOVED***removed
***REMOVED*******REMOVED***@param***REMOVED***{string?}***REMOVED***version***REMOVED***-***REMOVED***deprecated***REMOVED***version***REMOVED***/***REMOVED***removed***REMOVED***since***REMOVED***version
***REMOVED*******REMOVED***@param***REMOVED***{string?}***REMOVED***message***REMOVED***-***REMOVED***some***REMOVED***message***REMOVED***with***REMOVED***additional***REMOVED***info
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{function}
***REMOVED****/
validators.transitional***REMOVED***=***REMOVED***function***REMOVED***transitional(validator,***REMOVED***version,***REMOVED***message)***REMOVED***{
***REMOVED******REMOVED***function***REMOVED***formatMessage(opt,***REMOVED***desc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'[Axios***REMOVED***v'***REMOVED***+***REMOVED***VERSION***REMOVED***+***REMOVED***']***REMOVED***Transitional***REMOVED***option***REMOVED***\''***REMOVED***+***REMOVED***opt***REMOVED***+***REMOVED***'\''***REMOVED***+***REMOVED***desc***REMOVED***+***REMOVED***(message***REMOVED***?***REMOVED***'.***REMOVED***'***REMOVED***+***REMOVED***message***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***func-names
***REMOVED******REMOVED***return***REMOVED***(value,***REMOVED***opt,***REMOVED***opts)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validator***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formatMessage(opt,***REMOVED***'***REMOVED***has***REMOVED***been***REMOVED***removed'***REMOVED***+***REMOVED***(version***REMOVED***?***REMOVED***'***REMOVED***in***REMOVED***'***REMOVED***+***REMOVED***version***REMOVED***:***REMOVED***'')),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***AxiosError.ERR_DEPRECATED
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(version***REMOVED***&&***REMOVED***!deprecatedWarnings[opt])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deprecatedWarnings[opt]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-console
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***formatMessage(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opt,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'***REMOVED***has***REMOVED***been***REMOVED***deprecated***REMOVED***since***REMOVED***v'***REMOVED***+***REMOVED***version***REMOVED***+***REMOVED***'***REMOVED***and***REMOVED***will***REMOVED***be***REMOVED***removed***REMOVED***in***REMOVED***the***REMOVED***near***REMOVED***future'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator***REMOVED***?***REMOVED***validator(value,***REMOVED***opt,***REMOVED***opts)***REMOVED***:***REMOVED***true;
***REMOVED******REMOVED***};
};

validators.spelling***REMOVED***=***REMOVED***function***REMOVED***spelling(correctSpelling)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(value,***REMOVED***opt)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-console
***REMOVED******REMOVED******REMOVED******REMOVED***console.warn(`${opt}***REMOVED***is***REMOVED***likely***REMOVED***a***REMOVED***misspelling***REMOVED***of***REMOVED***${correctSpelling}`);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
};

/**
***REMOVED*******REMOVED***Assert***REMOVED***object's***REMOVED***properties***REMOVED***type
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{object}***REMOVED***options
***REMOVED*******REMOVED***@param***REMOVED***{object}***REMOVED***schema
***REMOVED*******REMOVED***@param***REMOVED***{boolean?}***REMOVED***allowUnknown
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{object}
***REMOVED****/

function***REMOVED***assertOptions(options,***REMOVED***schema,***REMOVED***allowUnknown)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***options***REMOVED***!==***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('options***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***object',***REMOVED***AxiosError.ERR_BAD_OPTION_VALUE);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(options);
***REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***keys.length;
***REMOVED******REMOVED***while***REMOVED***(i--***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***opt***REMOVED***=***REMOVED***keys[i];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***schema[opt];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***options[opt];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***value***REMOVED***===***REMOVED***undefined***REMOVED***||***REMOVED***validator(value,***REMOVED***opt,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('option***REMOVED***'***REMOVED***+***REMOVED***opt***REMOVED***+***REMOVED***'***REMOVED***must***REMOVED***be***REMOVED***'***REMOVED***+***REMOVED***result,***REMOVED***AxiosError.ERR_BAD_OPTION_VALUE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowUnknown***REMOVED***!==***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('Unknown***REMOVED***option***REMOVED***'***REMOVED***+***REMOVED***opt,***REMOVED***AxiosError.ERR_BAD_OPTION);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

export***REMOVED***default***REMOVED***{
***REMOVED******REMOVED***assertOptions,
***REMOVED******REMOVED***validators
};
