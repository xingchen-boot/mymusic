'use***REMOVED***strict';

import***REMOVED***AxiosError***REMOVED***from***REMOVED***'../core/AxiosError.js';
import***REMOVED***parseProtocol***REMOVED***from***REMOVED***'./parseProtocol.js';
import***REMOVED***platform***REMOVED***from***REMOVED***'../platform/index.js';

const***REMOVED***DATA_URL_PATTERN***REMOVED***=***REMOVED***/^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;

/**
***REMOVED*******REMOVED***Parse***REMOVED***data***REMOVED***uri***REMOVED***to***REMOVED***a***REMOVED***Buffer***REMOVED***or***REMOVED***Blob
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***uri
***REMOVED*******REMOVED***@param***REMOVED***{?Boolean}***REMOVED***asBlob
***REMOVED*******REMOVED***@param***REMOVED***{?Object}***REMOVED***options
***REMOVED*******REMOVED***@param***REMOVED***{?Function}***REMOVED***options.Blob
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{Buffer|Blob}
***REMOVED****/
export***REMOVED***default***REMOVED***function***REMOVED***fromDataURI(uri,***REMOVED***asBlob,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***_Blob***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.Blob***REMOVED***||***REMOVED***platform.classes.Blob;
***REMOVED******REMOVED***const***REMOVED***protocol***REMOVED***=***REMOVED***parseProtocol(uri);

***REMOVED******REMOVED***if***REMOVED***(asBlob***REMOVED***===***REMOVED***undefined***REMOVED***&&***REMOVED***_Blob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***asBlob***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(protocol***REMOVED***===***REMOVED***'data')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***uri***REMOVED***=***REMOVED***protocol.length***REMOVED***?***REMOVED***uri.slice(protocol.length***REMOVED***+***REMOVED***1)***REMOVED***:***REMOVED***uri;

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***DATA_URL_PATTERN.exec(uri);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('Invalid***REMOVED***URL',***REMOVED***AxiosError.ERR_INVALID_URL);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mime***REMOVED***=***REMOVED***match[1];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isBase64***REMOVED***=***REMOVED***match[2];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***match[3];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***buffer***REMOVED***=***REMOVED***Buffer.from(decodeURIComponent(body),***REMOVED***isBase64***REMOVED***?***REMOVED***'base64'***REMOVED***:***REMOVED***'utf8');

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(asBlob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_Blob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('Blob***REMOVED***is***REMOVED***not***REMOVED***supported',***REMOVED***AxiosError.ERR_NOT_SUPPORT);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***_Blob([buffer],***REMOVED***{type:***REMOVED***mime});
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***buffer;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***AxiosError('Unsupported***REMOVED***protocol***REMOVED***'***REMOVED***+***REMOVED***protocol,***REMOVED***AxiosError.ERR_NOT_SUPPORT);
}
